{"version":3,"sources":["constants.ts","utils/validate.ts","components/Button/BackButton/styles.ts","components/Button/BackButton/index.tsx","../node_modules/@material-ui/icons/MoreVert.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/icons/DoneAllTwoTone.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js","../node_modules/@material-ui/icons/Close.js","components/DeveloperGuide/styles.ts","components/DeveloperGuide/index.tsx","components/GitHubComponents/GithubInputFields/styles.ts","components/GitHubComponents/GithubInputFields/GithubInputFields.tsx","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","pages/ChaosHub/styles.ts","pages/ChaosHub/customMyHubCard.tsx","components/GitHubComponents/GitHubToggleButtons/styles.ts","components/GitHubComponents/GitHubToggleButtons/GitHubToggleButton.tsx","pages/ChaosHub/MyHubConnectDrawer/styles.ts","pages/ChaosHub/MyHubConnectDrawer/index.tsx","pages/ChaosHub/index.tsx"],"names":["constants","FeedbackForm","recurringEveryHour","recurringEveryDay","recurringEveryWeek","recurringEveryMonth","deployment","statefulset","daemonset","deploymentconfig","rollout","deployments","statefulsets","daemonsets","deploymentconfigs","rollouts","apps","v1","openshift","argoproj","v1alpha1","appns","appKind","appLabel","jobCleanUp","nodeselector","pods","services","nodes","replicasets","error","success","adminMode","chaosHub","workflow","dockerio","docker","litmus","public","private","validateTextEmpty","value","trim","validateStartEmptySpacing","charAt","validateEmail","length","match","validateSubject","validateWorkflowName","validateProbeName","allProbe","probeName","filter","probe","name","toLowerCase","validateConfirmPassword","password","confirmPassword","isValidWebUrl","validateTimeInSeconds","useStyles","makeStyles","theme","btn","display","textTransform","background","text","fontSize","margin","spacing","color","palette","hint","BackButton","onClick","classes","t","useTranslation","IconButton","size","className","history","goBack","src","alt","Typography","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","MenuItem","props","ref","tabIndex","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","disabled","undefined","ListItem","_extends","button","dense","clsx","root","gutters","withStyles","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","FormGroup","_props$row","row","flexDirection","flexWrap","RadioGroup","actions","children","nameProp","valueProp","onChange","rootRef","_useControlled","useControlled","controlled","defaultValue","_useControlled2","_slicedToArray","setValue","focus","input","current","querySelector","handleRef","useForkRef","useId","RadioGroupContext","Provider","event","target","backgroundColor","disabledBackground","borderRadius","borderLeft","primary","main","marginBottom","rootContainer","mainDiv","padding","mainText","fontWeight","common","black","textDesc","guideLink","paddingLeft","closeIcon","imgDiv","iconDiv","marginLeft","DeveloperGuide","expAvailable","header","description","setDisplay","href","aria-label","inputField","inputFieldBranch","marginRight","GithubInputFields","gitURL","gitBranch","setGitBranch","setGitURL","data-cy","label","helperText","variant","required","CardContent","Component","CardHeader","action","avatar","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","type","content","alignItems","flex","alignSelf","marginTop","justifyContent","noGithubAccount","height","noGitHubText","textAlign","githubConfirmed","chartsGroup","mainCardDiv","cardDiv","maxWidth","border","cardDivChart","light","cursor","connected","secondary","dark","connectHub","connectNewHub","noHub","iconButton","hubImage","maxHeight","cardMenu","editImg","disconnectImg","disconnectText","disconnectHeader","disconnectConfirm","modalDiv","disconnectBtns","cardOption","opacity","refreshImg","cardHeader","statusText","cardContent","hubName","totalExp","syncText","lastSyncDiv","lastSyncText","CustomMyHubCard","hub","keyValue","refreshLoader","handleDelete","handleRefresh","handleEditHub","useTheme","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","projectID","getProjectID","userRole","getProjectRole","borderColor","key","id","IsAvailable","Center","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","onClose","HubName","push","pathname","search","align","RepoBranch","gutterBottom","parseInt","TotalExp","Loader","date","updated","Date","toString","resDate","moment","format","formatDate","LastSyncedAt","toggleActive","toggleInactive","toggleFont","GitHubToggleButton","isToggled","setIsToggled","setFilledButtonState","buttonName","Button","isPublicToggled","isPrivateToggled","setButtonOutlinedState","setIsToggleValues","detailsDiv","flexGrow","inputDiv","hubNameInput","backBtnDiv","rowDiv","copyBtnImg","paddingRight","done","mainPrivateRepo","privateRepoDiv","paper","inputFieldDiv","privateRepoDetails","formControl","sshDiv","cards","alertText","sshAlert","sshDataDiv","sshText","wordBreak","copyBtn","privateToggleDiv","sshRadioBtn","radio","checked","drawer","flexShrink","drawerPaper","btnDiv","cancelBtn","MyHubConnectDrawer","drawerState","handleDrawerClose","refetchQuery","setAlertState","setAlertResult","GitURL","GitBranch","gitHub","setGitHub","privateHub","setPrivateHub","accessToken","setAccessToken","privateKey","publicKey","sshKey","setSshKey","data","useQuery","GET_HUB_STATUS","variables","fetchPolicy","hubData","getHubStatus","hubs","saveChanges","setSaveChanges","useMutation","ADD_MY_HUB","onCompleted","message","onError","addMyHub","loading","SAVE_MY_HUB","saveMyHub","UPDATE_MY_HUB","updateMyHub","updateHubLoader","GENERATE_SSH","generaterSSHKey","generateSSHKey","sshLoading","handleGitURL","handleGitBranch","copying","setCopying","useEffect","RepoURL","IsPrivate","AuthType","MyHubType","token","Token","ssh","SSHPrivateKey","SSHPublicKey","Drawer","anchor","ModalProps","autoComplete","onSubmit","preventDefault","MyHubDetails","basic","UserName","Password","e","FormControl","FormControlLabel","control","Radio","navigator","clipboard","writeText","catch","err","console","setTimeout","style","MyHub","displayResult","setDisplayResult","cloneResult","setCloneResult","refetch","setDrawerState","setHubName","openHubDrawer","myHubName","handleAlertClose","setKey","SYNC_REPO","refetchQueries","query","refreshRepo","refreshLoading","DELETE_HUB","deleteRepo","totalHubs","deleteHubModal","hubID","deleteHub","setDeleteHub","hubId","Scaffold","map","modalActions","hub_id","alert","alertResult","Snackbar","autoHideDuration","Alert","severity"],"mappings":"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","file":"static/js/26.14be7659.chunk.js","sourcesContent":["export const constants = {\n  // Litmus HomePage [Component Used in -> LocalQuickActionCard]\n  FeedbackForm: 'https://forms.gle/KQp5qj8MUneMSxLp9',\n\n  /**\n   * Schedule & Edit Schedule [Component Used in -> views/ScheduleWorkflow,\n   * pages/EditSchedule/Schedule]\n   * */\n  recurringEveryHour: 'everyHr',\n  recurringEveryDay: 'everyDay',\n  recurringEveryWeek: 'everyWeek',\n  recurringEveryMonth: 'everyMonth',\n\n  /**\n   * GVR and AppKind Constants [Component Used in -> TuneWorkflow/TargetApplication]\n   */\n  deployment: 'deployment',\n  statefulset: 'statefulset',\n  daemonset: 'daemonset',\n  deploymentconfig: 'deploymentconfig',\n  rollout: 'rollout',\n  deployments: 'deployments',\n  statefulsets: 'statefulsets',\n  daemonsets: 'daemonsets',\n  deploymentconfigs: 'deploymentconfigs',\n  rollouts: 'rollouts',\n  apps: 'apps',\n  v1: 'v1',\n  openshift: 'apps.openshift.io',\n  argoproj: 'argoproj.io',\n  v1alpha1: 'v1alpha1',\n  appns: 'appns',\n  appKind: 'appkind',\n  appLabel: 'applabel',\n  jobCleanUp: 'jobCleanUpPolicy',\n  nodeselector: 'nodeselector',\n  pods: 'pods',\n  services: 'services',\n  nodes: 'nodes',\n  replicasets: 'replicasets',\n  /**\n   * Template Saved Constants [Component Used in -> Save Template Modal]\n   */\n  error: 'error',\n  success: 'success',\n\n  /**\n   * Tuneworkflow index\n   */\n  adminMode: 'adminModeNamespace',\n  chaosHub: 'Chaos Hub',\n  workflow: 'Workflow',\n\n  /**\n   * Image Registry constants\n   */\n  dockerio: 'docker.io',\n  docker: 'Docker Hub',\n  litmus: 'litmuschaos',\n  public: 'Public',\n  private: 'Private',\n};\n","/* eslint-disable no-useless-escape */\n\nexport const validateTextEmpty = (value: string) => {\n  if (value.trim() === '') return true;\n  return false;\n};\n\nexport const validateStartEmptySpacing = (value: string) => {\n  if (value?.charAt(0) === ' ') return true;\n  return false;\n};\n\nexport const validateEmail = (value: string) => {\n  const emailValid =\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (value?.length > 0) {\n    if (value.match(emailValid)) return false;\n    return true;\n  }\n  return false;\n};\n\nexport const validateSubject = (value: string) => {\n  const subjectValid = /(^[a-z0-9A-Z-._]{0,63}$)/;\n  if (value?.length > 0) {\n    if (value.match(subjectValid)) return false;\n    return true;\n  }\n  return false;\n};\n\nexport const validateWorkflowName = (value: string) => {\n  /**\n   * Workflow name is 54 chars max + generated timestamp is 10 chars\n   * => Total 54 + 10 = 64 chars maximum\n   * */\n  const workflowValid = /(^[a-z0-9-]{0,54}$)/;\n  if (value.length > 0) {\n    if (value.match(workflowValid)) return false;\n    return true;\n  }\n  return false;\n};\n\nexport const validateProbeName = (allProbe: any, probeName: string) => {\n  if (allProbe.length) {\n    const filteredProbes = allProbe.filter(\n      (probe: any) => probe.name.toLowerCase() === probeName\n    );\n    if (filteredProbes.length) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const validatePassword = (value: string) => {\n  const passValid = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n  if (value.length > 0) {\n    if (value.match(passValid)) return false;\n    return true;\n  }\n  return false;\n};\n\nexport const validateConfirmPassword = (\n  password: string,\n  confirmPassword: string\n) => {\n  if (password.length > 0 && confirmPassword.length > 0) {\n    if (confirmPassword === password) return false;\n    return true;\n  }\n  return false;\n};\n\nexport const validateOnlyAlphabet = (value: string) => {\n  const onlyAplhaValid = /^[a-zA-Z]+$/;\n  if (value.match(onlyAplhaValid)) return false;\n  return true;\n};\n\nexport const validateLength = (value: string) => {\n  if (value.length > 0) return false;\n  return true;\n};\n\nexport const isValidWebUrl = (value: string) => {\n  const regEx =\n    /^(http|https):\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/gm;\n  const regExLocal = /^http:\\/\\/localhost:([0-9]){1,4}$/g;\n  const regExIpv4 =\n    /^http:\\/\\/(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]):([0-9]){1,4}$/g;\n  const regExIpv6 =\n    /^http:\\/\\/((([0-9a-fA-F]){1,4})\\\\:){7}([0-9a-fA-F]){1,4}:([0-9]){1,4}$/g;\n  const sshRegEx =\n    /^([A-Za-z0-9]+@|http(|s)\\:\\/\\/)([-a-zA-Z0-9@:%._\\+~#=]+(:\\d+)?)(?::|\\/)([\\d\\/\\w.-]+?)(\\.git)?$/i;\n  if (\n    value.match(regEx) ||\n    value.match(regExLocal) ||\n    value.match(regExIpv4) ||\n    value.match(regExIpv6) ||\n    value.match(sshRegEx)\n  )\n    return true;\n  return false;\n};\n\nexport const validateTimeInSeconds = (value: string) => {\n  const timeInSecondsValid = /^[0-9]+s$/g;\n  if (value.length > 1) {\n    if (value.match(timeInSecondsValid)) return true;\n    return false;\n  }\n  return false;\n};\n\nexport const validateWorkflowParameter = (value: string) => {\n  const workflowParameterValid = /^{[a-zA-Z0-9]+}$/g;\n  if (value.length > 0) {\n    if (value.match(workflowParameterValid)) return false;\n    return true;\n  }\n  return false;\n};\n","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  btn: {\n    display: 'flex',\n    textTransform: 'none',\n    '&:hover': {\n      background: 'none',\n    },\n  },\n  text: {\n    fontSize: '1rem',\n    margin: theme.spacing(0, 1),\n    color: theme.palette.text.hint,\n  },\n}));\n\nexport default useStyles;\n","import { IconButton, IconButtonProps, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { history } from '../../../redux/configureStore';\nimport useStyles from './styles';\n\nconst BackButton: React.FC<IconButtonProps> = ({ onClick }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <IconButton\n      size=\"medium\"\n      className={classes.btn}\n      onClick={onClick ?? (() => history.goBack())}\n    >\n      <img src=\"/icons/back.svg\" alt=\"back\" />\n      <Typography className={classes.text}>{t('button.backButton')}</Typography>\n    </IconButton>\n  );\n};\n\nexport default BackButton;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z\"\n}), 'DoneAllTwoTone');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/unstable_useId';\nvar RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      nameProp = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: props.defaultValue,\n    name: 'RadioGroup'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  var handleRef = useForkRef(ref, rootRef);\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var name = useId(nameProp);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name: name,\n      onChange: handleChange,\n      value: value\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.disabledBackground,\n    borderRadius: '0.1875rem',\n    borderLeft: `6px solid ${theme.palette.primary.main} `,\n    marginBottom: theme.spacing(2.25),\n  },\n  rootContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  mainDiv: {\n    padding: theme.spacing(2.5, 0, 2.5, 2.5),\n  },\n  mainText: {\n    fontWeight: 'bold',\n    fontSize: '1.25rem',\n    width: '40.625rem',\n    color: theme.palette.common.black,\n  },\n  textDesc: {\n    fontSize: '1rem',\n    paddingTop: theme.spacing(1.25),\n    color: theme.palette.common.black,\n  },\n  guideLink: {\n    color: theme.palette.common.black,\n    paddingLeft: theme.spacing(1.5),\n    paddingTop: theme.spacing(-1.25),\n  },\n  closeIcon: {\n    color: theme.palette.common.black,\n  },\n  imgDiv: {\n    display: 'block',\n  },\n  iconDiv: {\n    marginLeft: 'auto',\n  },\n}));\n\nexport default useStyles;\n","import { Typography, IconButton } from '@material-ui/core';\nimport * as React from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport useStyles from './styles';\n\ninterface DeveloperGuideProps {\n  expAvailable: boolean;\n  header: string;\n  description: string;\n}\n\nconst DeveloperGuide: React.FC<DeveloperGuideProps> = ({\n  expAvailable,\n  header,\n  description,\n}) => {\n  const [display, setDisplay] = React.useState(true);\n\n  const handleClose = () => {\n    setDisplay(false);\n  };\n  const docs = 'https://docs.litmuschaos.io/docs/getstarted/';\n\n  const classes = useStyles();\n  return (\n    <>\n      {display ? (\n        <div className={classes.root}>\n          <div className={classes.rootContainer}>\n            <div className={classes.mainDiv}>\n              <Typography className={classes.mainText}>{header}</Typography>\n              <Typography className={classes.textDesc}>\n                {description}\n              </Typography>\n              {expAvailable ? (\n                <div className={classes.imgDiv}>\n                  <img src=\"/icons/guide.svg\" alt=\"dev_guide\" />\n                  <a href={docs} className={classes.guideLink} target=\"_\">\n                    Developer&#39;s guide\n                  </a>\n                </div>\n              ) : (\n                <></>\n              )}\n            </div>\n            <div className={classes.iconDiv}>\n              <IconButton\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={handleClose}\n                className={classes.closeIcon}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\nexport default DeveloperGuide;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  inputField: {\n    marginLeft: theme.spacing(2),\n    marginBottom: theme.spacing(2.5),\n    width: '20rem',\n  },\n  inputFieldBranch: {\n    marginBottom: theme.spacing(2.5),\n    marginRight: theme.spacing(2.5),\n    marginLeft: theme.spacing(2.5),\n    width: '10rem',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from 'litmus-ui';\nimport useStyles from './styles';\nimport {\n  isValidWebUrl,\n  validateStartEmptySpacing,\n} from '../../../utils/validate';\n\ninterface MyHubInputProps {\n  gitURL: string;\n  setGitURL: (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n  gitBranch: string;\n  setGitBranch: (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n}\n\nconst GithubInputFields: React.FC<MyHubInputProps> = ({\n  gitURL,\n  gitBranch,\n  setGitBranch,\n  setGitURL,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  return (\n    <>\n      <div data-cy=\"githubURLInput\">\n        <InputField\n          label=\"Git URL\"\n          value={gitURL}\n          helperText={!isValidWebUrl(gitURL) ? t('myhub.validURL') : ''}\n          variant={!isValidWebUrl(gitURL) ? 'error' : 'primary'}\n          required\n          onChange={setGitURL}\n          className={classes.inputField}\n        />\n      </div>\n      <div data-cy=\"githubBranchInput\">\n        <InputField\n          label=\"Branch\"\n          value={gitBranch}\n          helperText={\n            validateStartEmptySpacing(gitBranch)\n              ? t('myhub.validationEmptySpace')\n              : ''\n          }\n          variant={validateStartEmptySpacing(gitBranch) ? 'error' : 'primary'}\n          required\n          onChange={setGitBranch}\n          className={classes.inputFieldBranch}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default GithubInputFields;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  mainDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  header: {\n    width: '100%',\n    color: theme.palette.text.primary,\n    margin: theme.spacing(1, 1.5, 2.5, 2.8),\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  noGithubAccount: {\n    margin: 'auto',\n    height: '100%',\n    width: '25rem',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  noGitHubText: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(2.5),\n    paddingBottom: theme.spacing(2.5),\n  },\n  githubConfirmed: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginLeft: 12,\n  },\n  chartsGroup: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  mainCardDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  cardDiv: {\n    maxWidth: '12.5rem',\n    border: `1px dashed ${theme.palette.border.main}`,\n    borderRadius: '0.25rem',\n    height: '100%',\n    margin: theme.spacing(2),\n  },\n  cardDivChart: {\n    '&:hover': {\n      border: `1.1px solid ${theme.palette.primary.light}`,\n      cursor: 'pointer',\n    },\n    borderRadius: theme.spacing(0.375),\n    margin: theme.spacing(2),\n  },\n  connected: {\n    height: '1.625rem',\n    width: '5.5rem',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n    fontSize: '0.625rem',\n    borderRadius: theme.spacing(0.375),\n  },\n  error: {\n    padding: theme.spacing(0.375, 1.25, 0.375, 1.25),\n    backgroundColor: theme.palette.error.dark,\n    color: theme.palette.text.secondary,\n    fontSize: '0.625rem',\n    borderRadius: theme.spacing(0.375),\n    marginBottom: theme.spacing(1),\n  },\n  connectHub: {\n    fontSize: '1.125rem',\n    marginLeft: theme.spacing(2),\n  },\n  connectNewHub: {\n    marginRight: theme.spacing(5),\n  },\n  noHub: {\n    marginTop: theme.spacing(2.5),\n  },\n  iconButton: {\n    marginTop: theme.spacing(-0.75),\n    marginLeft: theme.spacing(8.125),\n  },\n  hubImage: {\n    maxHeight: '70px',\n    maxWidth: '70px',\n  },\n  cardMenu: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  editImg: {\n    marginRight: theme.spacing(1.25),\n  },\n  disconnectImg: {\n    marginRight: theme.spacing(1.25),\n    width: '0.9375rem',\n    height: '0.9375rem',\n    marginTop: theme.spacing(0.375),\n  },\n  disconnectText: {\n    color: theme.palette.error.dark,\n  },\n  disconnectHeader: {\n    fontSize: '2.125rem',\n    fontWeight: 400,\n    marginBottom: theme.spacing(2.5),\n    marginTop: theme.spacing(2.5),\n    width: '31.25rem',\n  },\n  disconnectConfirm: {\n    fontSize: '1.25rem',\n    marginBottom: theme.spacing(5),\n    width: '31.25rem',\n  },\n  modalDiv: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '25rem',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  disconnectBtns: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '16rem',\n  },\n  cardOption: {\n    color: theme.palette.text.primary,\n    opacity: 0.6,\n  },\n  refreshImg: {\n    width: '0.9375rem',\n    height: '0.9375rem',\n    marginRight: theme.spacing(1.25),\n    marginTop: theme.spacing(0.375),\n  },\n  cardHeader: {\n    margin: 'auto',\n    display: 'block',\n  },\n  statusText: {\n    fontSize: '0.75rem',\n    textAlign: 'center',\n  },\n  cardContent: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hubName: {\n    fontSize: '0.9375rem',\n    marginTop: theme.spacing(1.25),\n  },\n  totalExp: {\n    fontSize: '0.8125rem',\n    marginTop: theme.spacing(0.625),\n    color: theme.palette.text.hint,\n  },\n  syncText: {\n    textAlign: 'center',\n    fontSize: '0.813rem',\n    marginTop: theme.spacing(0.625),\n  },\n  lastSyncDiv: {\n    marginTop: theme.spacing(3.75),\n  },\n  lastSyncText: {\n    fontSize: '0.75rem',\n    color: theme.palette.text.hint,\n  },\n}));\n\nexport default useStyles;\n","import {\n  CardContent,\n  CardHeader,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { LitmusCard } from 'litmus-ui';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport Center from '../../containers/layouts/Center';\nimport { HubDetails } from '../../models/redux/myhub';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface customMyHubCardProp {\n  hub: HubDetails;\n  keyValue: string;\n  handleDelete: (hubId: string) => void;\n  handleRefresh: (hubId: string) => void;\n  refreshLoader: boolean;\n  handleEditHub: (hubName: string) => void;\n}\n\nconst CustomMyHubCard: React.FC<customMyHubCardProp> = ({\n  hub,\n  keyValue,\n  refreshLoader,\n  handleDelete,\n  handleRefresh,\n  handleEditHub,\n}) => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n  // States for PopOver to display Experiment Weights\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const userRole = getProjectRole();\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM YYYY hh:mm A');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  return (\n    <LitmusCard\n      width=\"220px\"\n      height=\"320px\"\n      borderColor={palette.border.main}\n      key={hub.id}\n      className={classes.cardDivChart}\n      data-cy=\"myhubCard\"\n    >\n      {/* Card Header for Status and Menu Option */}\n      <CardHeader\n        className={classes.cardHeader}\n        action={\n          <div className={classes.mainCardDiv}>\n            <div\n              className={hub.IsAvailable ? classes.connected : classes.error}\n            >\n              <Center>\n                <Typography className={classes.statusText}>\n                  {hub.IsAvailable ? 'Connected' : 'Error'}\n                </Typography>\n              </Center>\n            </div>\n\n            {userRole !== 'Viewer' && (\n              <>\n                <IconButton\n                  aria-label=\"more\"\n                  aria-controls=\"long-menu\"\n                  aria-haspopup=\"true\"\n                  onClick={handleClick}\n                  data-cy=\"myHubCardOption\"\n                  className={classes.iconButton}\n                >\n                  <MoreVertIcon className={classes.cardOption} />\n                </IconButton>\n                <Menu\n                  id=\"long-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={open}\n                  onClose={handleClose}\n                >\n                  <MenuItem\n                    data-cy=\"myHubRefresh\"\n                    value=\"Refresh\"\n                    onClick={() => {\n                      handleRefresh(hub.id);\n                    }}\n                  >\n                    <div className={classes.cardMenu}>\n                      <img\n                        src=\"./icons/refresh.svg\"\n                        alt=\"Refresh\"\n                        className={classes.refreshImg}\n                      />\n                      <Typography data-cy=\"viewHub\">\n                        {t('myhub.refresh')}\n                      </Typography>\n                    </div>\n                  </MenuItem>\n                  <MenuItem\n                    data-cy=\"myHubEdit\"\n                    value=\"View\"\n                    onClick={() => {\n                      handleEditHub(hub.HubName);\n                      handleClose();\n                    }}\n                  >\n                    <div className={classes.cardMenu}>\n                      <img\n                        src=\"./icons/Edit.svg\"\n                        alt=\"Edit\"\n                        className={classes.editImg}\n                      />\n                      <Typography data-cy=\"viewHub\">\n                        {t('myhub.edit')}\n                      </Typography>\n                    </div>\n                  </MenuItem>\n\n                  <MenuItem\n                    data-cy=\"myHubDelete\"\n                    value=\"Delete\"\n                    onClick={() => {\n                      handleDelete(hub.id);\n                    }}\n                  >\n                    <div className={classes.cardMenu}>\n                      <img\n                        src=\"./icons/bin-red.svg\"\n                        alt=\"disconnect\"\n                        className={classes.disconnectImg}\n                      />\n                      <Typography\n                        className={classes.disconnectText}\n                        data-cy=\"viewHub\"\n                      >\n                        {t('myhub.disconnect')}\n                      </Typography>\n                    </div>\n                  </MenuItem>\n                </Menu>\n              </>\n            )}\n          </div>\n        }\n      />\n      {/* Card Content */}\n      <CardContent\n        onClick={() => {\n          history.push({\n            pathname: `/myhub/${hub.HubName}`,\n            search: `?projectID=${projectID}&projectRole=${userRole}`,\n          });\n        }}\n      >\n        <div className={classes.cardContent}>\n          <img\n            src={`./icons/${\n              hub.HubName === 'Chaos Hub'\n                ? 'myhub-litmus.svg'\n                : 'my-hub-charts.svg'\n            }`}\n            alt=\"add-hub\"\n          />\n          <Typography variant=\"h6\" align=\"center\" className={classes.hubName}>\n            <strong>{hub.HubName}</strong>/{hub.RepoBranch}\n          </Typography>\n          <Typography className={classes.totalExp} gutterBottom>\n            {parseInt(hub.TotalExp, 10) > 0\n              ? `${hub.TotalExp} experiments`\n              : t('myhub.error')}\n          </Typography>\n        </div>\n        {keyValue === hub.id && refreshLoader ? (\n          <div>\n            <Loader />\n            <Typography className={classes.syncText}>\n              {t('myhub.mainPage.sync')}\n            </Typography>\n          </div>\n        ) : (\n          <div className={classes.lastSyncDiv}>\n            <Typography className={classes.lastSyncText}>\n              {t('myhub.lastSync')}\n            </Typography>\n            <Typography className={classes.lastSyncText}>\n              {formatDate(hub.LastSyncedAt)}\n            </Typography>\n          </div>\n        )}\n      </CardContent>\n    </LitmusCard>\n  );\n};\n\nexport default CustomMyHubCard;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  toggleActive: {\n    height: '2.25rem',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n    width: '6.25rem',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  toggleInactive: {\n    height: '2.25rem',\n    backgroundColor: theme.palette.disabledBackground,\n    color: theme.palette.text.hint,\n    width: '6.25rem',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: theme.palette.disabledBackground,\n    },\n  },\n  toggleFont: {\n    fontSize: '0.875rem',\n  },\n}));\n\nexport default useStyles;\n","import { Button, Typography } from '@material-ui/core';\nimport React from 'react';\nimport useStyles from './styles';\n\ninterface MyHubToggleProps {\n  isPublicToggled: boolean;\n  isPrivateToggled: boolean;\n}\n\ninterface Props {\n  isToggled: MyHubToggleProps;\n  setIsToggled: React.Dispatch<React.SetStateAction<MyHubToggleProps>>;\n}\n\nconst GitHubToggleButton: React.FC<Props> = ({ isToggled, setIsToggled }) => {\n  const classes = useStyles();\n  const setFilledButtonState = (buttonName: string) => {\n    return (\n      <Button\n        className={classes.toggleActive}\n        onClick={() =>\n          isToggled.isPublicToggled\n            ? setIsToggled({\n                isPublicToggled: true,\n                isPrivateToggled: false,\n              })\n            : isToggled.isPrivateToggled\n            ? setIsToggled({\n                isPublicToggled: false,\n                isPrivateToggled: true,\n              })\n            : setIsToggled({\n                isPublicToggled: false,\n                isPrivateToggled: false,\n              })\n        }\n      >\n        <Typography className={classes.toggleFont}>{buttonName}</Typography>\n      </Button>\n    );\n  };\n\n  const setButtonOutlinedState = (\n    buttonName: string,\n    setIsToggleValues: MyHubToggleProps\n  ) => {\n    return (\n      <Button\n        className={classes.toggleInactive}\n        onClick={() => setIsToggled(setIsToggleValues)}\n      >\n        <Typography className={classes.toggleFont}>{buttonName}</Typography>\n      </Button>\n    );\n  };\n\n  const PublicButton = () =>\n    isToggled.isPublicToggled\n      ? setFilledButtonState('Public')\n      : setButtonOutlinedState('Public', {\n          isPublicToggled: true,\n          isPrivateToggled: false,\n        });\n\n  const PrivateButton = () =>\n    isToggled.isPrivateToggled\n      ? setFilledButtonState('Private')\n      : setButtonOutlinedState('Private', {\n          isPublicToggled: false,\n          isPrivateToggled: true,\n        });\n\n  return (\n    <div>\n      <div>\n        {PublicButton()}\n        {PrivateButton()}\n      </div>\n    </div>\n  );\n};\n\nexport default GitHubToggleButton;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: theme.palette.text.primary,\n    marginLeft: theme.spacing(5),\n    marginTop: theme.spacing(4),\n  },\n  detailsDiv: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(2.5),\n    marginLeft: theme.spacing(2),\n  },\n  inputDiv: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: theme.spacing(2.5),\n    marginLeft: theme.spacing(-1.25),\n  },\n  hubNameInput: {\n    marginBottom: theme.spacing(2.5),\n    marginLeft: theme.spacing(2),\n  },\n  backBtnDiv: {\n    marginLeft: theme.spacing(-1),\n    marginBottom: theme.spacing(2.5),\n  },\n  rowDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n\n  copyBtnImg: {\n    paddingRight: '0.625rem',\n  },\n  done: {\n    color: theme.palette.primary.main,\n    paddingRight: theme.spacing(0.625),\n  },\n  mainPrivateRepo: {\n    border: `1px solid ${theme.palette.border.main}`,\n    padding: theme.spacing(2.5),\n    margin: theme.spacing(2.5, 3.75, 2.5, 2),\n    borderRadius: 4,\n    width: 'fit-content',\n  },\n  privateRepoDiv: {\n    width: 'fit-content',\n    marginTop: theme.spacing(-6.25),\n    padding: theme.spacing(1.25),\n    backgroundColor: theme.palette.background.paper,\n  },\n  inputFieldDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: theme.spacing(2.5),\n  },\n  privateRepoDetails: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: theme.spacing(2.5),\n  },\n  formControl: {\n    marginLeft: theme.spacing(3.125),\n  },\n  sshDiv: {\n    backgroundColor: theme.palette.cards.header,\n    padding: theme.spacing(2.5),\n    maxWidth: '34.375rem',\n  },\n  alertText: {\n    marginBottom: theme.spacing(2.5),\n    fontSize: '0.75rem',\n    color: theme.palette.common.black,\n    opacity: 0.4,\n  },\n  sshAlert: {\n    color: theme.palette.error.main,\n    fontSize: '0.75rem',\n  },\n  sshDataDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    backgroundColor: theme.palette.cards.background,\n    padding: theme.spacing(2.5),\n    borderRadius: 4,\n  },\n  sshText: {\n    wordBreak: 'break-all',\n    fontSize: '0.875rem',\n  },\n  copyBtn: {\n    margin: 'auto',\n    marginLeft: theme.spacing(2.5),\n    borderLeft: `1px solid ${theme.palette.primary.main}`,\n    paddingLeft: theme.spacing(2.5),\n  },\n  privateToggleDiv: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  sshRadioBtn: {\n    marginTop: theme.spacing(1.25),\n  },\n\n  radio: {\n    color: theme.palette.primary.main,\n    '&$checked': {\n      color: theme.palette.primary.main,\n    },\n  },\n  checked: {},\n  drawer: {\n    width: 'fit-content',\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 'fit-content',\n  },\n  btnDiv: {\n    marginLeft: 'auto',\n    marginRight: theme.spacing(3.75),\n    marginTop: theme.spacing(2.5),\n  },\n  cancelBtn: {\n    marginRight: theme.spacing(2.5),\n  },\n}));\n\nexport default useStyles;\n","import { useMutation, useQuery } from '@apollo/client';\nimport {\n  Drawer,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@material-ui/core';\nimport Done from '@material-ui/icons/DoneAllTwoTone';\nimport { ButtonFilled, ButtonOutlined, InputField } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport BackButton from '../../../components/Button/BackButton';\nimport GithubInputFields from '../../../components/GitHubComponents/GithubInputFields/GithubInputFields';\nimport GitHubToggleButton from '../../../components/GitHubComponents/GitHubToggleButtons/GitHubToggleButton';\nimport Loader from '../../../components/Loader';\nimport {\n  ADD_MY_HUB,\n  GENERATE_SSH,\n  SAVE_MY_HUB,\n  UPDATE_MY_HUB,\n} from '../../../graphql/mutations';\nimport {\n  CreateMyHub,\n  MyHubData,\n  MyHubType,\n  SSHKey,\n  SSHKeys,\n} from '../../../models/graphql/user';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport {\n  isValidWebUrl,\n  validateStartEmptySpacing,\n} from '../../../utils/validate';\nimport useStyles from './styles';\nimport { constants } from '../../../constants';\nimport { HubStatus } from '../../../models/redux/myhub';\nimport { GET_HUB_STATUS } from '../../../graphql/queries';\n\ninterface GitHub {\n  HubName: string;\n  GitURL: string;\n  GitBranch: string;\n}\n\ninterface MyHubToggleProps {\n  isPublicToggled: boolean;\n  isPrivateToggled: boolean;\n}\n\ninterface CloneResult {\n  type: string;\n  message: string;\n}\n\ninterface MyHubConnectDrawerProps {\n  hubName?: string;\n  drawerState: boolean;\n  handleDrawerClose: () => void;\n  refetchQuery: () => void;\n  setAlertState: (alertState: boolean) => void;\n  setAlertResult: (alertResult: CloneResult) => void;\n}\n\nconst MyHubConnectDrawer: React.FC<MyHubConnectDrawerProps> = ({\n  hubName,\n  drawerState,\n  handleDrawerClose,\n  refetchQuery,\n  setAlertState,\n  setAlertResult,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const [gitHub, setGitHub] = useState<GitHub>({\n    HubName: '',\n    GitURL: '',\n    GitBranch: '',\n  });\n  const [isToggled, setIsToggled] = React.useState<MyHubToggleProps>({\n    isPublicToggled: true,\n    isPrivateToggled: false,\n  });\n  const [privateHub, setPrivateHub] = useState('token');\n  const [accessToken, setAccessToken] = useState('');\n  const [sshKey, setSshKey] = useState<SSHKey>({\n    privateKey: '',\n    publicKey: '',\n  });\n\n  const { data } = useQuery<HubStatus>(GET_HUB_STATUS, {\n    variables: { data: projectID },\n    fetchPolicy: 'network-only',\n  });\n  const hubData = data?.getHubStatus.filter(\n    (hubs) => hubs.HubName === hubName\n  )[0];\n\n  const [saveChanges, setSaveChanges] = useState(false);\n\n  /**\n   * Add MyHub mutation to create a new hub\n   */\n  const [addMyHub, { loading }] = useMutation<MyHubData, CreateMyHub>(\n    ADD_MY_HUB,\n    {\n      onCompleted: () => {\n        setAlertState(true);\n        setAlertResult({\n          type: constants.success,\n          message: 'My Hub was successfully created',\n        });\n        refetchQuery();\n      },\n      onError: (error) => {\n        setAlertState(true);\n        setAlertResult({\n          type: constants.error,\n          message: `Error: ${error.message}. \n                    You can still save the Hub configuration.`,\n        });\n        setSaveChanges(true);\n      },\n    }\n  );\n\n  /**\n   * Save My Hub mutation to save a hub details for later\n   */\n  const [saveMyHub] = useMutation<MyHubData, CreateMyHub>(SAVE_MY_HUB, {\n    onCompleted: () => {\n      setAlertState(true);\n      setAlertResult({\n        type: constants.success,\n        message: 'My Hub was successfully saved',\n      });\n      setSaveChanges(false);\n      refetchQuery();\n    },\n    onError: () => {\n      setAlertState(true);\n      setAlertResult({\n        type: constants.error,\n        message: 'Error while adding My Hub',\n      });\n    },\n  });\n\n  /**\n   * Update MyHub mutation to edit the myhub configuration\n   */\n  const [updateMyHub, { loading: updateHubLoader }] = useMutation<\n    MyHubData,\n    CreateMyHub\n  >(UPDATE_MY_HUB, {\n    onCompleted: () => {\n      setAlertState(true);\n      setAlertResult({\n        type: constants.success,\n        message: 'My Hub configurations successfully updated',\n      });\n      refetchQuery();\n    },\n    onError: (error) => {\n      setAlertState(true);\n      setAlertResult({\n        type: constants.error,\n        message: `Error:${error.message}`,\n      });\n    },\n  });\n\n  /**\n   * Mutation to generate SSH key\n   */\n  const [generateSSHKey, { loading: sshLoading }] = useMutation<SSHKeys>(\n    GENERATE_SSH,\n    {\n      onCompleted: (data) => {\n        setSshKey({\n          privateKey: data.generaterSSHKey.privateKey,\n          publicKey: data.generaterSSHKey.publicKey,\n        });\n      },\n    }\n  );\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    /**\n     * If hubName is present, edit myhub mutation will be called\n     */\n    if (hubName?.length) {\n      updateMyHub({\n        variables: {\n          MyHubDetails: {\n            id: hubData?.id,\n            HubName: gitHub.HubName.trim(),\n            RepoURL: gitHub.GitURL,\n            RepoBranch: gitHub.GitBranch,\n            IsPrivate: isToggled.isPublicToggled\n              ? false\n              : !!isToggled.isPrivateToggled,\n            AuthType: isToggled.isPublicToggled\n              ? MyHubType.basic\n              : privateHub === 'token'\n              ? MyHubType.token\n              : privateHub === 'ssh'\n              ? MyHubType.ssh\n              : MyHubType.basic,\n            Token: accessToken,\n            UserName: 'user',\n            Password: 'user',\n            SSHPrivateKey: sshKey.privateKey,\n            SSHPublicKey: sshKey.publicKey,\n          },\n          projectID,\n        },\n      });\n    } else if (saveChanges) {\n      /**\n       * Save changes is enabled if add myhub mutation fails.\n       * This will call the save myhub mutation\n       */\n      saveMyHub({\n        variables: {\n          MyHubDetails: {\n            HubName: gitHub.HubName.trim(),\n            RepoURL: gitHub.GitURL,\n            RepoBranch: gitHub.GitBranch,\n            IsPrivate: isToggled.isPublicToggled\n              ? false\n              : !!isToggled.isPrivateToggled,\n            AuthType: isToggled.isPublicToggled\n              ? MyHubType.basic\n              : privateHub === 'token'\n              ? MyHubType.token\n              : privateHub === 'ssh'\n              ? MyHubType.ssh\n              : MyHubType.basic,\n            Token: accessToken,\n            UserName: 'user',\n            Password: 'user',\n            SSHPrivateKey: sshKey.privateKey,\n            SSHPublicKey: sshKey.publicKey,\n          },\n          projectID,\n        },\n      });\n    } else\n    /**\n     * This will call the add myhub mutation\n     */\n      addMyHub({\n        variables: {\n          MyHubDetails: {\n            HubName: gitHub.HubName.trim(),\n            RepoURL: gitHub.GitURL,\n            RepoBranch: gitHub.GitBranch,\n            IsPrivate: isToggled.isPublicToggled\n              ? false\n              : !!isToggled.isPrivateToggled,\n            AuthType: isToggled.isPublicToggled\n              ? MyHubType.basic\n              : privateHub === 'token'\n              ? MyHubType.token\n              : privateHub === 'ssh'\n              ? MyHubType.ssh\n              : MyHubType.basic,\n            Token: accessToken,\n            UserName: 'user',\n            Password: 'user',\n            SSHPrivateKey: sshKey.privateKey,\n            SSHPublicKey: sshKey.publicKey,\n          },\n          projectID,\n        },\n      });\n  };\n\n  const handleGitURL = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setGitHub({\n      HubName: gitHub.HubName,\n      GitURL: event.target.value,\n      GitBranch: gitHub.GitBranch,\n    });\n  };\n\n  const handleGitBranch = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setGitHub({\n      HubName: gitHub.HubName,\n      GitURL: gitHub.GitURL,\n      GitBranch: event.target.value,\n    });\n  };\n\n  const [copying, setCopying] = useState(false);\n\n  // Function to copy the SSH key\n  const copyTextToClipboard = (text: string) => {\n    if (!navigator.clipboard) {\n      console.error('Oops Could not copy text: ');\n      return;\n    }\n    setCopying(true);\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n    setTimeout(() => setCopying(false), 3000);\n  };\n\n  useEffect(() => {\n    /**\n     * If hubName is present, this fetches the myhub configuration\n     * and sets in the inputfields (for edit Myhub)\n     */\n    if (hubName?.length) {\n      if (hubData !== undefined) {\n        setGitHub({\n          HubName: hubData.HubName,\n          GitURL: hubData.RepoURL,\n          GitBranch: hubData.RepoBranch,\n        });\n        if (hubData.IsPrivate) {\n          setIsToggled({\n            isPublicToggled: false,\n            isPrivateToggled: true,\n          });\n        } else {\n          setIsToggled({\n            isPublicToggled: true,\n            isPrivateToggled: false,\n          });\n        }\n        if (hubData.AuthType === MyHubType.token) {\n          setPrivateHub('token');\n          setAccessToken(hubData.Token);\n        } else if (hubData.AuthType === MyHubType.ssh) {\n          setPrivateHub('ssh');\n          setSshKey({\n            privateKey: hubData.SSHPrivateKey,\n            publicKey: hubData.SSHPublicKey,\n          });\n        } else {\n          setPrivateHub('token');\n        }\n      }\n    } else {\n      /**\n       * Whenever the drawer is opened, if it is not for edit MyHub,\n       * the default values in the input field will be empty string\n       */\n      setGitHub({\n        HubName: '',\n        GitURL: '',\n        GitBranch: '',\n      });\n      setSaveChanges(false);\n      setSshKey({\n        publicKey: '',\n        privateKey: '',\n      });\n      setPrivateHub('token');\n    }\n  }, [drawerState, hubName]);\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"persistent\"\n      anchor=\"right\"\n      open={drawerState}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      ModalProps={{\n        keepMounted: true,\n      }}\n    >\n      <>\n        <div className={classes.header}>\n          <div className={classes.backBtnDiv}>\n            <BackButton onClick={() => handleDrawerClose()} />\n          </div>\n          <Typography variant=\"h4\" gutterBottom>\n            {hubName?.length\n              ? t('myhub.connectHubPage.editHub')\n              : t('myhub.connectHubPage.connectHub')}\n          </Typography>\n        </div>\n        <div className={classes.detailsDiv}>\n          <form id=\"login-form\" autoComplete=\"on\" onSubmit={handleSubmit}>\n            <div className={classes.inputDiv}>\n              <div className={classes.hubNameInput}>\n                <InputField\n                  data-cy=\"hubName\"\n                  label=\"Hub Name\"\n                  value={gitHub.HubName}\n                  helperText={\n                    validateStartEmptySpacing(gitHub.HubName)\n                      ? t('myhub.validationEmptySpace')\n                      : ''\n                  }\n                  variant={\n                    validateStartEmptySpacing(gitHub.HubName)\n                      ? 'error'\n                      : 'primary'\n                  }\n                  required\n                  onChange={(e) =>\n                    setGitHub({\n                      HubName: e.target.value,\n                      GitURL: gitHub.GitURL,\n                      GitBranch: gitHub.GitBranch,\n                    })\n                  }\n                />\n              </div>\n              <div>\n                <div className={classes.mainPrivateRepo}>\n                  <div className={classes.privateRepoDiv}>\n                    <GitHubToggleButton\n                      isToggled={isToggled}\n                      setIsToggled={setIsToggled}\n                    />\n                  </div>\n                  {/* If Public Repo is clicked */}\n                  {isToggled.isPublicToggled ? (\n                    <div className={classes.inputFieldDiv}>\n                      <GithubInputFields\n                        gitURL={gitHub.GitURL}\n                        gitBranch={gitHub.GitBranch}\n                        setGitURL={handleGitURL}\n                        setGitBranch={handleGitBranch}\n                      />\n                    </div>\n                  ) : null}\n                  {/* If Private Repo is Clicked */}\n                  {isToggled.isPrivateToggled ? (\n                    <div className={classes.privateToggleDiv}>\n                      <div className={classes.privateRepoDetails}>\n                        <GithubInputFields\n                          gitURL={gitHub.GitURL}\n                          gitBranch={gitHub.GitBranch}\n                          setGitURL={handleGitURL}\n                          setGitBranch={handleGitBranch}\n                        />\n                      </div>\n                      <FormControl\n                        component=\"fieldset\"\n                        className={classes.formControl}\n                      >\n                        <RadioGroup\n                          aria-label=\"privateHub\"\n                          name=\"privateHub\"\n                          value={privateHub}\n                          onChange={(e) => {\n                            if (e.target.value === 'ssh') {\n                              generateSSHKey();\n                            }\n                            if (e.target.value === 'token') {\n                              setSshKey({\n                                privateKey: '',\n                                publicKey: '',\n                              });\n                            }\n                            setPrivateHub(e.target.value);\n                          }}\n                        >\n                          <FormControlLabel\n                            value=\"token\"\n                            control={\n                              <Radio\n                                classes={{\n                                  root: classes.radio,\n                                  checked: classes.checked,\n                                }}\n                              />\n                            }\n                            label={\n                              <Typography>\n                                {t('myhub.connectHubPage.accessToken')}\n                              </Typography>\n                            }\n                          />\n                          {privateHub === 'token' ? (\n                            <InputField\n                              data-cy=\"token\"\n                              label=\"Access Token\"\n                              value={accessToken}\n                              helperText={\n                                validateStartEmptySpacing(accessToken)\n                                  ? t('myhub.validationEmptySpace')\n                                  : ''\n                              }\n                              variant={\n                                validateStartEmptySpacing(accessToken)\n                                  ? 'error'\n                                  : 'primary'\n                              }\n                              required\n                              onChange={(e) => setAccessToken(e.target.value)}\n                            />\n                          ) : null}\n                          <FormControlLabel\n                            className={classes.sshRadioBtn}\n                            value=\"ssh\"\n                            control={\n                              <Radio\n                                classes={{\n                                  root: classes.radio,\n                                  checked: classes.checked,\n                                }}\n                              />\n                            }\n                            label={\n                              <Typography>\n                                {t('myhub.connectHubPage.ssh')}\n                              </Typography>\n                            }\n                          />\n                          {privateHub === 'ssh' ? (\n                            <div className={classes.sshDiv}>\n                              <Typography className={classes.sshAlert}>\n                                {t('myhub.connectHubPage.sshAlert')}\n                              </Typography>\n                              <Typography className={classes.alertText}>\n                                {t('myhub.connectHubPage.sshText')}\n                              </Typography>\n                              <div className={classes.sshDataDiv}>\n                                {sshLoading ? (\n                                  <Loader />\n                                ) : (\n                                  <>\n                                    <Typography className={classes.sshText}>\n                                      {sshKey.publicKey}\n                                    </Typography>\n                                    <div className={classes.copyBtn}>\n                                      <ButtonOutlined\n                                        onClick={() =>\n                                          copyTextToClipboard(sshKey.publicKey)\n                                        }\n                                      >\n                                        {!copying ? (\n                                          <div className={classes.rowDiv}>\n                                            <img\n                                              src=\"/icons/copy.svg\"\n                                              className={classes.copyBtnImg}\n                                              alt=\"copy\"\n                                            />\n                                            <Typography>\n                                              {t('myhub.installChaos.copy')}\n                                            </Typography>\n                                          </div>\n                                        ) : (\n                                          <div className={classes.rowDiv}>\n                                            <Done className={classes.done} />\n                                            <Typography>\n                                              {t('myhub.installChaos.copied')}\n                                            </Typography>\n                                          </div>\n                                        )}\n                                      </ButtonOutlined>\n                                    </div>\n                                  </>\n                                )}\n                              </div>\n                            </div>\n                          ) : null}\n                        </RadioGroup>\n                      </FormControl>\n                    </div>\n                  ) : null}\n                </div>\n              </div>\n              <div className={classes.btnDiv}>\n                <ButtonOutlined\n                  data-cy=\"cancel\"\n                  onClick={() => handleDrawerClose()}\n                  className={classes.cancelBtn}\n                >\n                  {t('myhub.connectHubPage.cancel')}\n                </ButtonOutlined>\n                <ButtonFilled\n                  style={{ width: 140 }}\n                  variant=\"success\"\n                  data-cy=\"MyHubSubmit\"\n                  type=\"submit\"\n                  disabled={\n                    !isValidWebUrl(gitHub.GitURL) ||\n                    validateStartEmptySpacing(gitHub.GitBranch) ||\n                    loading ||\n                    updateHubLoader\n                  }\n                >\n                  {loading || updateHubLoader ? (\n                    <Loader size={20} />\n                  ) : saveChanges ? (\n                    'Save Changes'\n                  ) : (\n                    t('myhub.connectHubPage.submitBtn')\n                  )}\n                </ButtonFilled>\n              </div>\n            </div>\n          </form>\n        </div>\n      </>\n    </Drawer>\n  );\n};\n\nexport default MyHubConnectDrawer;\n","import { useMutation, useQuery } from '@apollo/client';\nimport { Snackbar, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, Modal } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Alert } from '@material-ui/lab';\nimport DeveloperGuide from '../../components/DeveloperGuide';\nimport Loader from '../../components/Loader';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { DELETE_HUB, GET_HUB_STATUS, SYNC_REPO } from '../../graphql';\nimport { HubDetails, HubStatus } from '../../models/redux/myhub';\nimport { getProjectID } from '../../utils/getSearchParams';\nimport CustomMyHubCard from './customMyHubCard';\nimport useStyles from './styles';\nimport MyHubConnectDrawer from './MyHubConnectDrawer';\nimport { constants } from '../../constants';\n\ninterface DeleteHub {\n  deleteHubModal: boolean;\n  hubID: string;\n}\n\ninterface CloneResult {\n  type: string;\n  message: string;\n}\n\nconst MyHub: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  // Get selected projectID from the URL\n  const projectID = getProjectID();\n\n  const [displayResult, setDisplayResult] = useState<boolean>(false);\n  const [cloneResult, setCloneResult] = useState<CloneResult>({\n    type: '',\n    message: '',\n  });\n\n  // Get MyHubs with Status\n  const { data, loading, refetch } = useQuery<HubStatus>(GET_HUB_STATUS, {\n    variables: { data: projectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const [drawerState, setDrawerState] = useState(false);\n\n  /**\n   * State Variables for Edit MyHub\n   */\n  const [hubName, setHubName] = useState(''); // To distinguish between create or edit MyHub\n\n  const openHubDrawer = (myHubName: string) => {\n    setHubName(myHubName);\n    setDrawerState(true);\n  };\n\n  const handleDrawerClose = () => {\n    if (hubName.length) {\n      setHubName('');\n    }\n    setDrawerState(false);\n  };\n\n  const handleDrawerCloseWithRefetch = () => {\n    setDrawerState(false);\n    if (hubName.length) {\n      setHubName('');\n    }\n    refetch();\n  };\n\n  const handleAlertClose = () => {\n    setDisplayResult(false);\n  };\n\n  const [key, setKey] = useState('');\n\n  // Mutation to refresh a repo\n  const [refreshRepo, { loading: refreshLoading }] = useMutation(SYNC_REPO, {\n    refetchQueries: [\n      {\n        query: GET_HUB_STATUS,\n        variables: { data: projectID },\n      },\n    ],\n    onError: () => {\n      refetch();\n    },\n  });\n\n  // Mutation to delete a repo\n  const [deleteRepo] = useMutation(DELETE_HUB, {\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  const totalHubs = data && data.getHubStatus;\n\n  const [deleteHub, setDeleteHub] = useState<DeleteHub>({\n    deleteHubModal: false,\n    hubID: '',\n  });\n\n  const handleHubDelete = () => {\n    deleteRepo({\n      variables: {\n        hub_id: deleteHub.hubID,\n      },\n    });\n    setDeleteHub({\n      deleteHubModal: false,\n      hubID: '',\n    });\n  };\n\n  const handleDelete = (hubId: string) => {\n    setDeleteHub({\n      deleteHubModal: true,\n      hubID: hubId,\n    });\n  };\n\n  const handleClose = () => {\n    setDeleteHub({\n      deleteHubModal: false,\n      hubID: '',\n    });\n  };\n\n  const handleRefresh = (hubId: string) => {\n    setKey(hubId);\n    refreshRepo({\n      variables: {\n        id: hubId,\n      },\n    });\n  };\n\n  return (\n    <Scaffold>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {/* Header Div */}\n          <div className={classes.header}>\n            <Typography variant=\"h3\">{t('myhub.mainPage.header')}</Typography>\n            <ButtonFilled\n              onClick={() => setDrawerState(true)}\n              className={classes.connectNewHub}\n            >\n              {t('myhub.mainPage.connect')}\n            </ButtonFilled>\n          </div>\n          {/* Charts Div */}\n          <div className={classes.mainDiv}>\n            <div className={classes.githubConfirmed}>\n              <Typography className={classes.connectHub}>\n                {t('myhub.mainPage.switchHub')}\n              </Typography>\n              <div className={classes.noHub}>\n                {totalHubs && totalHubs.length === 0 ? (\n                  <DeveloperGuide\n                    header={t('myhub.mainPage.devGuideHeader')}\n                    description={t('myhub.mainPage.devGuideDescription')}\n                    expAvailable={false}\n                  />\n                ) : (\n                  <></>\n                )}\n                <div className={classes.chartsGroup}>\n                  {totalHubs &&\n                    totalHubs.map((hub: HubDetails) => (\n                      <CustomMyHubCard\n                        key={hub.id}\n                        hub={hub}\n                        keyValue={key}\n                        handleDelete={handleDelete}\n                        handleRefresh={handleRefresh}\n                        refreshLoader={refreshLoading}\n                        handleEditHub={openHubDrawer}\n                      />\n                    ))}\n                </div>\n              </div>\n            </div>\n            {deleteHub.deleteHubModal ? (\n              <Modal\n                open={deleteHub.deleteHubModal}\n                onClose={handleClose}\n                modalActions={\n                  <ButtonOutlined onClick={handleClose}>\n                    &#x2715;\n                  </ButtonOutlined>\n                }\n              >\n                <div className={classes.modalDiv}>\n                  <img src=\"/icons/red-cross.svg\" alt=\"disconnect\" />\n                  <Typography className={classes.disconnectHeader}>\n                    {t('myhub.mainPage.disconnectHeader')}\n                  </Typography>\n                  <Typography className={classes.disconnectConfirm}>\n                    {t('myhub.mainPage.disconnectDesc')}\n                  </Typography>\n                  <div className={classes.disconnectBtns}>\n                    <ButtonOutlined onClick={handleClose}>\n                      {t('myhub.mainPage.cancel')}\n                    </ButtonOutlined>\n                    <ButtonFilled variant=\"error\" onClick={handleHubDelete}>\n                      {t('myhub.mainPage.deleteHub')}\n                    </ButtonFilled>\n                  </div>\n                </div>\n              </Modal>\n            ) : null}\n          </div>\n        </>\n      )}\n\n      {/* Add/Edit MyHub Drawer */}\n      <MyHubConnectDrawer\n        hubName={hubName}\n        drawerState={drawerState}\n        handleDrawerClose={handleDrawerClose}\n        refetchQuery={handleDrawerCloseWithRefetch}\n        setAlertState={(alert) => setDisplayResult(alert)}\n        setAlertResult={(alertResult) => setCloneResult(alertResult)}\n      />\n      {/* SnackBar to display success/failure alerts */}\n      <Snackbar\n        open={displayResult}\n        autoHideDuration={6000}\n        onClose={() => {\n          if (cloneResult.type === constants.error) {\n            setDisplayResult(false);\n          } else {\n            handleAlertClose();\n          }\n        }}\n      >\n        <Alert\n          onClose={() => {\n            if (cloneResult.type === constants.error) {\n              setDisplayResult(false);\n            } else {\n              handleAlertClose();\n            }\n          }}\n          severity={cloneResult.type === constants.error ? 'error' : 'success'}\n        >\n          {cloneResult.message}\n        </Alert>\n      </Snackbar>\n    </Scaffold>\n  );\n};\n\nexport default MyHub;\n"],"sourceRoot":""}