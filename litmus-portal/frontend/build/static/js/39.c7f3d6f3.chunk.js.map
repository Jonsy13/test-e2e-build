{"version":3,"sources":["utils/validate.ts","pages/LoginPage/styles.ts","pages/LoginPage/index.tsx"],"names":["validateTextEmpty","value","trim","validateStartEmptySpacing","charAt","validateEmail","length","match","validateSubject","validateWorkflowName","validateProbeName","allProbe","probeName","filter","probe","name","toLowerCase","validateConfirmPassword","password","confirmPassword","isValidWebUrl","validateTimeInSeconds","useStyles","makeStyles","theme","rootContainer","position","width","height","background","palette","loginBackground","rootDiv","display","alignItems","padding","spacing","maxWidth","HeaderText","fontWeight","fontSize","color","text","secondary","margin","litmusText","inputDiv","inputValue","marginBottom","borderRadius","paper","hint","primary","main","marginTop","loginButton","light","backgroundColor","buttonGroup","justifyContent","tooltip","forgetPwdText","textDecoration","LoginPage","classes","t","useTranslation","useState","isError","setIsError","isLoading","setIsLoading","username","authData","setAuthData","className","Center","src","alt","Typography","id","autoComplete","onSubmit","event","preventDefault","fetch","config","auth","url","method","headers","body","JSON","stringify","then","response","status","json","data","console","error","setUserDetails","access_token","window","location","assign","catch","err","data-cy","label","helperText","filled","onChange","e","target","type","required","disabled","Loader","size","Tooltip","disableFocusListener","placement","title"],"mappings":"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","file":"static/js/39.c7f3d6f3.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\n\nexport const validateTextEmpty = (value: string) => {\n  if (value.trim() === '') return true;\n  return false;\n};\n\nexport const validateStartEmptySpacing = (value: string) => {\n  if (value?.charAt(0) === ' ') return true;\n  return false;\n};\n\nexport const validateEmail = (value: string) => {\n  const emailValid =\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (value?.length > 0) {\n    if (value.match(emailValid)) return false;\n    return true;\n  }\n  return false;\n};\n\nexport const validateSubject = (value: string) => {\n  const subjectValid = /(^[a-z0-9A-Z-._]{0,63}$)/;\n  if (value?.length > 0) {\n    if (value.match(subjectValid)) return false;\n    return true;\n  }\n  return false;\n};\n\nexport const validateWorkflowName = (value: string) => {\n  /**\n   * Workflow name is 54 chars max + generated timestamp is 10 chars\n   * => Total 54 + 10 = 64 chars maximum\n   * */\n  const workflowValid = /(^[a-z0-9-]{0,54}$)/;\n  if (value.length > 0) {\n    if (value.match(workflowValid)) return false;\n    return true;\n  }\n  return false;\n};\n\nexport const validateProbeName = (allProbe: any, probeName: string) => {\n  if (allProbe.length) {\n    const filteredProbes = allProbe.filter(\n      (probe: any) => probe.name.toLowerCase() === probeName\n    );\n    if (filteredProbes.length) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const validatePassword = (value: string) => {\n  const passValid = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n  if (value.length > 0) {\n    if (value.match(passValid)) return false;\n    return true;\n  }\n  return false;\n};\n\nexport const validateConfirmPassword = (\n  password: string,\n  confirmPassword: string\n) => {\n  if (password.length > 0 && confirmPassword.length > 0) {\n    if (confirmPassword === password) return false;\n    return true;\n  }\n  return false;\n};\n\nexport const validateOnlyAlphabet = (value: string) => {\n  const onlyAplhaValid = /^[a-zA-Z]+$/;\n  if (value.match(onlyAplhaValid)) return false;\n  return true;\n};\n\nexport const validateLength = (value: string) => {\n  if (value.length > 0) return false;\n  return true;\n};\n\nexport const isValidWebUrl = (value: string) => {\n  const regEx =\n    /^(http|https):\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/gm;\n  const regExLocal = /^http:\\/\\/localhost:([0-9]){1,4}$/g;\n  const regExIpv4 =\n    /^http:\\/\\/(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]):([0-9]){1,4}$/g;\n  const regExIpv6 =\n    /^http:\\/\\/((([0-9a-fA-F]){1,4})\\\\:){7}([0-9a-fA-F]){1,4}:([0-9]){1,4}$/g;\n  const sshRegEx =\n    /^([A-Za-z0-9]+@|http(|s)\\:\\/\\/)([-a-zA-Z0-9@:%._\\+~#=]+(:\\d+)?)(?::|\\/)([\\d\\/\\w.-]+?)(\\.git)?$/i;\n  if (\n    value.match(regEx) ||\n    value.match(regExLocal) ||\n    value.match(regExIpv4) ||\n    value.match(regExIpv6) ||\n    value.match(sshRegEx)\n  )\n    return true;\n  return false;\n};\n\nexport const validateTimeInSeconds = (value: string) => {\n  const timeInSecondsValid = /^[0-9]+s$/g;\n  if (value.length > 1) {\n    if (value.match(timeInSecondsValid)) return true;\n    return false;\n  }\n  return false;\n};\n\nexport const validateWorkflowParameter = (value: string) => {\n  const workflowParameterValid = /^{[a-zA-Z0-9]+}$/g;\n  if (value.length > 0) {\n    if (value.match(workflowParameterValid)) return false;\n    return true;\n  }\n  return false;\n};\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  rootContainer: {\n    position: 'fixed',\n    width: '100%',\n    height: '100%',\n    background: theme.palette.loginBackground,\n  },\n  rootDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n    maxWidth: '49rem',\n  },\n  HeaderText: {\n    maxWidth: '23.56rem',\n    fontWeight: 500,\n    fontSize: '2rem',\n    color: theme.palette.text.secondary,\n    margin: theme.spacing(1.5, 0, 2.5, 0),\n  },\n  litmusText: {\n    maxWidth: '23.56rem',\n    fontSize: '1rem',\n    color: theme.palette.text.secondary,\n  },\n  inputDiv: {\n    maxWidth: '23.75rem',\n    margin: theme.spacing(6, 0, 0, 7.5),\n  },\n  inputValue: {\n    marginBottom: theme.spacing(1.75),\n    width: '100%',\n    borderRadius: '0.25rem',\n    background: theme.palette.background.paper,\n    '& .MuiInputLabel-filled': {\n      color: theme.palette.text.hint,\n    },\n    '& .MuiFilledInput-input': {\n      background: theme.palette.background.paper,\n    },\n    '& .MuiFormHelperText-root': {\n      background: theme.palette.primary.main,\n      marginTop: 0,\n    },\n    '& .MuiFormHelperText-contained': {\n      margin: 0,\n    },\n  },\n  loginButton: {\n    marginTop: theme.spacing(1.875),\n    background: theme.palette.primary.light,\n    color: theme.palette.text.secondary,\n    maxWidth: '8rem',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n    '&:disabled': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  buttonGroup: {\n    width: '100%',\n    color: theme.palette.text.secondary,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  tooltip: {\n    padding: theme.spacing(3.75, 1.875),\n    maxWidth: '12.5rem',\n    color: theme.palette.text.primary,\n    background: theme.palette.background.paper,\n  },\n  forgetPwdText: {\n    textDecoration: 'underline',\n  },\n}));\nexport default useStyles;\n","import { Tooltip, Typography } from '@material-ui/core';\nimport { ButtonFilled, InputField } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport config from '../../config';\nimport Center from '../../containers/layouts/Center';\nimport { setUserDetails } from '../../utils/auth';\nimport { validateStartEmptySpacing } from '../../utils/validate';\nimport useStyles from './styles';\n\ninterface authData {\n  username: string;\n  password: string;\n}\n\nconst LoginPage: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [authData, setAuthData] = useState<authData>({\n    username: '',\n    password: '',\n  });\n\n  const responseCode = 200;\n  const loaderSize = 20;\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    fetch(`${config.auth.url}/login`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(authData),\n    })\n      .then((response) => {\n        if (response.status !== responseCode) {\n          setIsError(true);\n          setIsLoading(false);\n        } else {\n          setIsError(false);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        if ('error' in data) {\n          console.error(data);\n        } else {\n          setUserDetails(data.access_token);\n          setIsLoading(false);\n          window.location.assign('/getStarted');\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <div className={classes.rootContainer}>\n      <Center>\n        <div className={classes.rootDiv}>\n          <div>\n            <img src=\"icons/LitmusLogoLight.svg\" alt=\"litmus logo\" />\n            <Typography className={classes.HeaderText}>\n              {t('login.heading')}\n            </Typography>\n            <Typography className={classes.litmusText}>\n              {t('login.subHeading1')}\n            </Typography>\n          </div>\n          <form\n            id=\"login-form\"\n            autoComplete=\"on\"\n            onSubmit={handleSubmit}\n            className={classes.inputDiv}\n          >\n            <div>\n              <InputField\n                data-cy=\"inputName\"\n                className={classes.inputValue}\n                label=\"Username\"\n                value={authData.username}\n                helperText={\n                  validateStartEmptySpacing(authData.username)\n                    ? t(\n                        'settings.userManagementTab.createUser.userDetails.validationEmptySpace'\n                      )\n                    : ''\n                }\n                filled\n                onChange={(e) =>\n                  setAuthData({\n                    username: e.target.value,\n                    password: authData.password,\n                  })\n                }\n              />\n              <InputField\n                data-cy=\"inputPassword\"\n                className={classes.inputValue}\n                label=\"Password\"\n                type=\"password\"\n                required\n                value={authData.password}\n                helperText={isError ? t('login.wrongCredentials') : ''}\n                filled\n                onChange={(e) =>\n                  setAuthData({\n                    username: authData.username,\n                    password: e.target.value,\n                  })\n                }\n              />\n            </div>\n            <div className={classes.buttonGroup}>\n              <ButtonFilled\n                className={classes.loginButton}\n                type=\"submit\"\n                disabled={isLoading}\n              >\n                <div data-cy=\"loginButton\">\n                  {isLoading ? <Loader size={loaderSize} /> : 'Login'}\n                </div>\n              </ButtonFilled>\n              <Tooltip\n                classes={{\n                  tooltip: classes.tooltip,\n                }}\n                disableFocusListener\n                placement=\"bottom\"\n                title={<Typography>{t('login.tooltipText')}</Typography>}\n              >\n                <Typography className={classes.forgetPwdText}>\n                  {t('login.forgetPassword')}\n                </Typography>\n              </Tooltip>\n            </div>\n          </form>\n        </div>\n      </Center>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"sourceRoot":""}