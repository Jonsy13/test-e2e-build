{"version":3,"sources":["utils/datesModifier.ts","redux/actions/nodeSelection.ts","../node_modules/@material-ui/icons/ArrowUpward.js","components/AgentDeployModal/styles.ts","components/AgentDeployModal/index.tsx","components/MainInfoContainer/styles.ts","components/MainInfoContainer/index.tsx","views/WorkflowDetails/workflowConstants.ts","components/UnconfiguredAgent/index.tsx","components/OverviewContainer/styles.ts","components/OverviewContainer/index.tsx","components/RecentOverviewContainer/styles.ts","components/RecentOverviewContainer/index.tsx","../node_modules/@material-ui/core/esm/Link/Link.js","views/Home/ProjectInfoContainer/styles.ts","views/Home/ProjectInfoContainer/index.tsx","views/Home/AgentConfiguredHome/styles.ts","views/Home/AgentConfiguredHome/WorkflowRunCard/styles.ts","views/Home/AgentConfiguredHome/WorkflowRunCard/index.tsx","views/Home/AgentConfiguredHome/index.tsx","views/Home/LandingHome/index.tsx","pages/HomePage/styles.ts","pages/HomePage/index.tsx"],"names":["timeDifferenceForDate","date","current","previous","elapsed","milliSecondsPerMinute","Math","round","milliSecondsPerHour","milliSecondsPerDay","timeDifference","Date","getTime","selectNode","node","type","NodeSelectionActions","SELECT_NODE","payload","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","modalContainer","height","padding","spacing","textAlign","heading","display","marginRight","fontSize","fontWeight","instructionSection","marginTop","marginBottom","color","palette","text","hint","textDecoration","primary","main","marginLeft","copyCommandSection","commandRect","border","backgroundColor","background","flexGrow","copyButton","doneButton","flexDirection","AgentDeployModal","handleClose","classes","t","useTranslation","useState","copying","setCopying","copyTextToClipboard","navigator","clipboard","writeText","catch","err","console","error","setTimeout","window","prompt","fallbackCopyTextToClipboard","className","src","alt","Typography","href","target","rel","onClick","mainContainer","breakpoints","down","containerDesc","maxWidth","buttonGroup","alignItems","cursor","MainInfoContainer","description","button","link","Paper","id","FAILED","RUNNING","PENDING","SUCCEEDED","OMITTED","SKIPPED","ERROR","UnconfiguredAgent","modalOpen","setModalOpen","width","open","onClose","modalActions","agentInfoContainer","agentInfoBlock","agentInfoData","justifyContent","minWidth","count","light","desicription","infoContainerButton","margin","OverviewContainer","countUnit","style","workflowRunContainer","containerHeading","buttonText","RecentOverviewContainer","buttonLink","buttonImgSrc","buttonImgAlt","children","projectID","getProjectID","projectRole","getProjectRole","history","push","pathname","search","Link","props","ref","_props$color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","_extends","clsx","root","concat","capitalize","event","withStyles","underlineNone","underlineHover","underlineAlways","position","WebkitTapHighlightColor","outline","borderRadius","userSelect","verticalAlign","borderStyle","name","projectInfoContainer","projectInfoBlock","projectInfoData","highlight","viewProjectButton","ProjectInfoContainer","tabs","useActions","TabActions","userID","getUserId","projectOwnerCount","setProjectOwnerCount","projectOtherCount","setProjectOtherCount","invitationsCount","setInvitationCount","projects","setProjects","dataProject","useQuery","LIST_PROJECTS","onCompleted","listProjects","fetchPolicy","data","useEffect","projectOwner","projectInvitation","projectOther","forEach","project","members","member","user_id","role","Role","owner","invitation","InvitationStatus","ACCEPTED","projectCount","changeSettingsTabs","linkPointer","animatedContainer","willChange","transition","transform","boxShadow","workflowDataContainer","r","cx","cy","statusDiv","testName","overflow","textOverflow","lastRunTime","listContainer","listItem","cards","noWrapProvider","whiteSpace","succeeded","fill","success","running","failed","pending","lowScore","mediumScore","warning","highScore","WorkflowRunCard","score","nodeSelection","pod_name","workflow_run_id","title","viewBox","getPhaseVariant","phase","workflow_name","cluster_name","resiliency_score","undefined","last_updated","AgentConfiguredHome","agentCount","WORKFLOW_DETAILS","variables","workflowRunsInput","project_id","pagination","page","limit","loading","workflowRunCount","getWorkflowRuns","total_no_of_workflow_runs","Center","Loader","changeWorkflowsTabs","workflow_runs","map","workflow","key","workflow_id","LandingHome","userName","HomePage","GET_CLUSTER_LENGTH","agentList","getCluster","length","Scaffold","getUsername"],"mappings":"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","file":"static/js/28.dcbb8bb8.chunk.js","sourcesContent":["function timeDifference(current: number, previous: number) {\n  const milliSecondsPerMinute = 60 * 1000;\n  const milliSecondsPerHour = milliSecondsPerMinute * 60;\n  const milliSecondsPerDay = milliSecondsPerHour * 24;\n  const milliSecondsPerMonth = milliSecondsPerDay * 30;\n  const milliSecondsPerYear = milliSecondsPerDay * 365;\n\n  const elapsed = current - previous;\n\n  if (elapsed < milliSecondsPerMinute / 3) {\n    return 'Just now';\n  }\n\n  if (elapsed < milliSecondsPerMinute) {\n    return 'less than 1 min ago';\n  }\n  if (elapsed < milliSecondsPerHour) {\n    return `${Math.round(elapsed / milliSecondsPerMinute)} mins ago`;\n  }\n  if (elapsed < milliSecondsPerDay) {\n    return `${Math.round(elapsed / milliSecondsPerHour)} hours ago`;\n  }\n  if (elapsed < milliSecondsPerMonth) {\n    return `${Math.round(elapsed / milliSecondsPerDay)} days ago`;\n  }\n  if (elapsed < milliSecondsPerYear) {\n    return `${Math.round(elapsed / milliSecondsPerMonth)} months ago`;\n  }\n  return `${Math.round(elapsed / milliSecondsPerYear)} years ago`;\n}\n\nconst timeDifferenceForDate = (date: any) => {\n  const now = new Date().getTime();\n  const updated = date * 1000;\n  return timeDifference(now, updated);\n};\n\nexport default timeDifferenceForDate;\n","/* eslint-disable import/prefer-default-export */\nimport {\n  NodeSelectionAction,\n  NodeSelectionActions,\n  SelectedNode,\n} from '../../models/redux/nodeSelection';\n\nexport function selectNode(node: SelectedNode): NodeSelectionAction {\n  return {\n    type: NodeSelectionActions.SELECT_NODE,\n    payload: node,\n  };\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\n\nexports.default = _default;","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  modalContainer: {\n    height: '100%',\n    padding: theme.spacing(6.5, 6),\n    textAlign: 'left',\n  },\n  heading: {\n    display: 'flex',\n\n    '& img': {\n      marginRight: theme.spacing(1.875),\n    },\n\n    '& p': {\n      fontSize: '1.5rem',\n      fontWeight: 500,\n    },\n  },\n  instructionSection: {\n    marginTop: theme.spacing(4.25),\n\n    '& p': {\n      marginBottom: theme.spacing(4.25),\n      color: theme.palette.text.hint,\n      fontSize: '1rem',\n    },\n\n    '& a': {\n      textDecoration: 'none',\n      color: theme.palette.primary.main,\n      marginLeft: theme.spacing(0.5),\n    },\n  },\n  copyCommandSection: {\n    display: 'flex',\n  },\n  commandRect: {\n    border: `1px solid ${theme.palette.border.main}`,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1.75, 2.125),\n    flexGrow: 1,\n  },\n  copyButton: {\n    marginLeft: theme.spacing(3.125),\n\n    '& img': {\n      marginRight: theme.spacing(1.375),\n    },\n  },\n  doneButton: {\n    marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'row-reverse',\n  },\n}));\n\nexport default useStyles;\n","import { Typography } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { ButtonFilled, ButtonOutlined } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\ninterface AgentDeployModalProps {\n  handleClose: () => void;\n}\n\nconst AgentDeployModal: React.FC<AgentDeployModalProps> = ({ handleClose }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [copying, setCopying] = useState<boolean>(false);\n\n  function fallbackCopyTextToClipboard(text: string) {\n    // eslint-disable-next-line no-alert\n    window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n  }\n\n  function copyTextToClipboard(text: string) {\n    if (!navigator.clipboard) {\n      fallbackCopyTextToClipboard(text);\n      return;\n    }\n    setCopying(true);\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n\n    setTimeout(() => setCopying(false), 3000);\n  }\n\n  return (\n    <div className={classes.modalContainer}>\n      <div className={classes.heading}>\n        <img src=\"./icons/agentDeployModal.svg\" alt=\"Target Connect\" />\n        <Typography>\n          {t('homeViews.landingHome.agentDeployModal.heading')}\n        </Typography>\n      </div>\n      <div className={classes.instructionSection}>\n        <Typography>\n          {t('homeViews.landingHome.agentDeployModal.firstStep')}\n        </Typography>\n        <Typography>\n          {t('homeViews.landingHome.agentDeployModal.secondStep')}\n          <a\n            href=\"https://github.com/litmuschaos/litmusctl\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            {t('homeViews.landingHome.agentDeployModal.litmusctl')}\n          </a>\n        </Typography>\n        <Typography>\n          {t('homeViews.landingHome.agentDeployModal.thirdStep')}\n        </Typography>\n      </div>\n      <div className={classes.copyCommandSection}>\n        <div className={classes.commandRect}>\n          <Typography>\n            {t('homeViews.landingHome.agentDeployModal.agentRegister')}\n          </Typography>\n        </div>\n        <ButtonOutlined\n          className={classes.copyButton}\n          onClick={() => copyTextToClipboard(`litmusctl agent connect`)}\n        >\n          {copying ? (\n            <DoneIcon />\n          ) : (\n            <>\n              <img src=\"./icons/copy.svg\" alt=\"copy\" />\n              <Typography>\n                {t('homeViews.landingHome.agentDeployModal.copy')}\n              </Typography>\n            </>\n          )}\n        </ButtonOutlined>\n      </div>\n      <div className={classes.doneButton}>\n        <ButtonFilled onClick={handleClose}>\n          <Typography>\n            {t('homeViews.landingHome.agentDeployModal.done')}\n          </Typography>\n        </ButtonFilled>\n      </div>\n    </div>\n  );\n};\n\nexport { AgentDeployModal };\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    marginTop: theme.spacing(3.125),\n    padding: theme.spacing(6.5, 11.875),\n    display: 'flex',\n\n    '& img': {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n    },\n\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(2),\n    },\n  },\n  containerDesc: {\n    marginLeft: theme.spacing(12.5),\n\n    '& #Heading': {\n      marginBottom: theme.spacing(3.5),\n      fontSize: '1.5rem',\n      fontWeight: 500,\n    },\n\n    '& #desc': {\n      maxWidth: '37.375rem',\n    },\n\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(3),\n    },\n  },\n  buttonGroup: {\n    marginTop: theme.spacing(5.25),\n    display: 'flex',\n\n    '& svg': {\n      marginRight: theme.spacing(1.5),\n    },\n\n    '& a': {\n      textDecoration: 'none',\n      marginLeft: theme.spacing(1.875),\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      '& p': {\n        fontWeight: 500,\n        fontSize: '1rem',\n      },\n    },\n  },\n}));\n\nexport default useStyles;\n","import { Paper, Typography } from '@material-ui/core';\nimport React from 'react';\nimport useStyles from './styles';\n\ninterface MainInfoContainerProps {\n  src: string;\n  alt: string;\n  heading: string;\n  description: string;\n  button: React.ReactNode;\n  link?: React.ReactNode;\n}\n\nconst MainInfoContainer: React.FC<MainInfoContainerProps> = ({\n  src,\n  alt,\n  heading,\n  description,\n  button,\n  link,\n}) => {\n  const classes = useStyles();\n  return (\n    <div>\n      {/* First Agent Deployment Container */}\n      <Paper className={classes.mainContainer}>\n        <img src={src} alt={alt} />\n        <div className={classes.containerDesc}>\n          <Typography id=\"Heading\">{heading}</Typography>\n          <Typography id=\"desc\">{description}</Typography>\n          <div className={classes.buttonGroup}>\n            {button}\n            {link}\n          </div>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport { MainInfoContainer };\n","export const FAILED: string = 'Failed';\nexport const RUNNING: string = 'Running';\nexport const PENDING: string = 'Pending';\nexport const SUCCEEDED: string = 'Succeeded';\nexport const OMITTED: string = 'Omitted';\nexport const SKIPPED: string = 'Skipped';\nexport const ERROR: string = 'Error';\n","import { Typography } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { ButtonFilled, ButtonOutlined, Modal } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { AgentDeployModal } from '../AgentDeployModal';\nimport { MainInfoContainer } from '../MainInfoContainer';\n\nconst UnconfiguredAgent: React.FC = () => {\n  const { t } = useTranslation();\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\n\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n\n  return (\n    <div>\n      {/* First Agent Deployment Container */}\n      <MainInfoContainer\n        src=\"./icons/agentDeploy.svg\"\n        alt=\"Deploy Agent\"\n        heading={t('homeViews.landingHome.heading')}\n        description={t('homeViews.landingHome.description')}\n        button={\n          <ButtonFilled onClick={handleOpen}>\n            <ArrowUpwardIcon />\n            <Typography>{t('homeViews.landingHome.deploy')}</Typography>\n          </ButtonFilled>\n        }\n      />\n      <Modal\n        height=\"50%\"\n        width=\"50%\"\n        open={modalOpen}\n        onClose={handleClose}\n        modalActions={\n          <ButtonOutlined onClick={handleClose}>&#x2715;</ButtonOutlined>\n        }\n      >\n        <AgentDeployModal handleClose={handleClose} />\n      </Modal>\n    </div>\n  );\n};\n\nexport { UnconfiguredAgent };\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  agentInfoContainer: {\n    marginTop: theme.spacing(3.25),\n    padding: theme.spacing(3.125, 6.5),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  agentInfoBlock: {\n    flexGrow: 1,\n  },\n  agentInfoData: {\n    display: 'flex',\n    padding: theme.spacing(1),\n    height: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n\n    '& div': {\n      display: 'flex',\n      alignItems: 'baseline',\n\n      '& p:nth-child(2)': {\n        fontSize: '1.125rem',\n        fontWeight: 500,\n        marginLeft: theme.spacing(1),\n        minWidth: 'fit-content',\n      },\n    },\n  },\n  count: {\n    color: theme.palette.primary.light,\n    fontSize: '3.875rem',\n  },\n  desicription: {\n    color: theme.palette.text.hint,\n    marginLeft: theme.spacing(10.625),\n  },\n  infoContainerButton: {\n    '& svg': {\n      margin: theme.spacing(0, 1, -0.625, 0),\n    },\n    '& p': {\n      fontWeight: 500,\n    },\n  },\n}));\n\nexport default useStyles;\n","import { Paper, Typography } from '@material-ui/core';\nimport React from 'react';\nimport useStyles from './styles';\n\ninterface OverviewContainerProps {\n  count: number;\n  countUnit: string;\n  description: string;\n  maxWidth: string;\n  button: React.ReactNode;\n}\n\nconst OverviewContainer: React.FC<OverviewContainerProps> = ({\n  count,\n  countUnit,\n  description,\n  maxWidth,\n  button,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      {/* Agent info container */}\n      <Paper className={classes.agentInfoContainer}>\n        <div className={classes.agentInfoBlock}>\n          <div\n            style={{ maxWidth: `${maxWidth}` }}\n            className={classes.agentInfoData}\n          >\n            <div>\n              <Typography className={classes.count}>{count}</Typography>\n              {count === 1 ? (\n                <Typography>{countUnit}</Typography>\n              ) : (\n                <Typography>{countUnit}s</Typography>\n              )}\n            </div>\n            <div>\n              <Typography className={classes.desicription}>\n                {description}\n              </Typography>\n            </div>\n          </div>\n        </div>\n        {button}\n      </Paper>\n    </div>\n  );\n};\n\nexport { OverviewContainer };\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  workflowRunContainer: {\n    marginTop: theme.spacing(3.125),\n    padding: theme.spacing(4.75, 6.25),\n  },\n  containerHeading: {\n    display: 'flex',\n    alignItems: 'center',\n\n    '& a': {\n      textDecoration: 'none',\n      color: theme.palette.primary.main,\n      marginRight: theme.spacing(4.5),\n    },\n  },\n  heading: {\n    flexGrow: 1,\n    fontSize: '1.5rem',\n    fontWeight: 500,\n  },\n  buttonText: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import { Paper, Typography } from '@material-ui/core';\nimport { ButtonFilled } from 'litmus-ui';\nimport React from 'react';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface RecentOverviewContainerProps {\n  heading: string;\n  link?: React.ReactNode;\n  buttonLink: string;\n  buttonImgSrc: string;\n  buttonImgAlt: string;\n  buttonText: string;\n}\n\nconst RecentOverviewContainer: React.FC<RecentOverviewContainerProps> = ({\n  heading,\n  link,\n  buttonLink,\n  buttonImgSrc,\n  buttonImgAlt,\n  buttonText,\n  children,\n}) => {\n  const classes = useStyles();\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n\n  return (\n    <Paper className={classes.workflowRunContainer}>\n      {/* Heading section of the container */}\n      <div className={classes.containerHeading}>\n        <Typography className={classes.heading}>{heading}</Typography>\n        {link}\n        <ButtonFilled\n          onClick={() => {\n            history.push({\n              pathname: `${buttonLink}`,\n              search: `?projectID=${projectID}&projectRole=${projectRole}`,\n            });\n          }}\n        >\n          <img src={buttonImgSrc} alt={buttonImgAlt} />\n          <Typography className={classes.buttonText}>{buttonText}</Typography>\n        </ButtonFilled>\n      </div>\n\n      {/* Data Cards */}\n      {children}\n    </Paper>\n  );\n};\n\nexport { RecentOverviewContainer };\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  projectInfoContainer: {\n    marginTop: theme.spacing(3.25),\n    padding: theme.spacing(3.125, 6.5),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  projectInfoBlock: {\n    flexGrow: 1,\n  },\n  projectInfoData: {\n    display: 'flex',\n    padding: theme.spacing(1),\n    maxWidth: '20.5625rem',\n    height: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n\n    '& div': {\n      display: 'flex',\n      alignItems: 'baseline',\n\n      '& p:first-child': {\n        fontSize: '3.875rem',\n      },\n\n      '& #projectCount': {\n        color: theme.palette.highlight,\n      },\n\n      '& #invitationCount': {\n        color: theme.palette.primary.light,\n      },\n\n      '& p:last-child': {\n        fontSize: '1.125rem',\n        fontWeight: 500,\n        marginLeft: theme.spacing(1),\n      },\n    },\n  },\n  viewProjectButton: {\n    '& img': {\n      margin: theme.spacing(0, 1, -0.25, 0),\n    },\n    '& p': {\n      fontWeight: 500,\n    },\n  },\n}));\n\nexport default useStyles;\n","import { useQuery } from '@apollo/client';\nimport { Paper, Typography } from '@material-ui/core';\nimport { ButtonOutlined } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LIST_PROJECTS } from '../../../graphql';\nimport {\n  InvitationStatus,\n  Member,\n  Project,\n  Projects,\n  Role,\n} from '../../../models/graphql/user';\nimport useActions from '../../../redux/actions';\nimport * as TabActions from '../../../redux/actions/tabs';\nimport { history } from '../../../redux/configureStore';\nimport { getUserId } from '../../../utils/auth';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport useStyles from './styles';\n\nconst ProjectInfoContainer: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const tabs = useActions(TabActions);\n\n  const userID = getUserId();\n\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n\n  const [projectOwnerCount, setProjectOwnerCount] = useState<number>(0);\n  const [projectOtherCount, setProjectOtherCount] = useState<number>(0);\n  const [invitationsCount, setInvitationCount] = useState<number>(0);\n  const [projects, setProjects] = useState<Project[]>([]);\n\n  const { data: dataProject } = useQuery<Projects>(LIST_PROJECTS, {\n    onCompleted: () => {\n      if (dataProject?.listProjects) {\n        setProjects(dataProject?.listProjects);\n      }\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  useEffect(() => {\n    let projectOwner = 0;\n    let projectInvitation = 0;\n    let projectOther = 0;\n    projects.forEach((project) => {\n      project.members.forEach((member: Member) => {\n        if (member.user_id === userID && member.role === Role.owner) {\n          projectOwner++;\n        } else if (\n          member.user_id === userID &&\n          member.invitation === InvitationStatus.PENDING\n        ) {\n          projectInvitation++;\n        } else if (\n          member.user_id === userID &&\n          member.role !== Role.owner &&\n          member.invitation === InvitationStatus.ACCEPTED\n        ) {\n          projectOther++;\n        }\n      });\n    });\n    setProjectOwnerCount(projectOwner);\n    setInvitationCount(projectInvitation);\n    setProjectOtherCount(projectOther);\n  }, [projects, dataProject]);\n\n  const projectCount = projectOwnerCount + projectOtherCount;\n\n  return (\n    <div>\n      {/* Project Level info container */}\n      <Paper className={classes.projectInfoContainer}>\n        <div className={classes.projectInfoBlock}>\n          <div className={classes.projectInfoData}>\n            <div>\n              <Typography id=\"projectCount\">{projectCount}</Typography>\n              {projectCount === 1 ? (\n                <Typography>\n                  {t('homeViews.projectInfoContainer.project')}\n                </Typography>\n              ) : (\n                <Typography>\n                  {t('homeViews.projectInfoContainer.projects')}\n                </Typography>\n              )}\n            </div>\n            <div>\n              <Typography id=\"invitationCount\">{invitationsCount}</Typography>\n              {invitationsCount === 1 ? (\n                <Typography>\n                  {t('homeViews.projectInfoContainer.invitation')}\n                </Typography>\n              ) : (\n                <Typography>\n                  {t('homeViews.projectInfoContainer.invitations')}\n                </Typography>\n              )}\n            </div>\n          </div>\n        </div>\n        {projectRole === Role.owner && (\n          <ButtonOutlined\n            onClick={() => {\n              tabs.changeSettingsTabs(1);\n              history.push({\n                pathname: '/settings',\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              });\n            }}\n            className={classes.viewProjectButton}\n          >\n            <Typography>\n              <img src=\"./icons/viewProjects.svg\" alt=\"View projects\" />\n              {t('homeViews.projectInfoContainer.viewProjects')}\n            </Typography>\n          </ButtonOutlined>\n        )}\n      </Paper>\n    </div>\n  );\n};\n\nexport { ProjectInfoContainer };\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  linkPointer: {\n    cursor: 'pointer',\n  },\n  infoContainerButton: {\n    '& svg': {\n      margin: theme.spacing(0, 1, -0.625, 0),\n    },\n    '& p': {\n      fontWeight: 500,\n    },\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  animatedContainer: {\n    marginTop: theme.spacing(3.125),\n    padding: theme.spacing(2.5, 0),\n    willChange: `transform`,\n    transition: `transform 250ms`,\n    cursor: 'pointer',\n\n    '&:hover': {\n      transform: `translateY(-10px)`,\n      boxShadow: `0px 1.2px 3.6px rgba(0, 0, 0, 0.1), 0px 6.4px 14.4px rgba(0, 0, 0, 0.13)`,\n      borderRadius: '0.1875rem',\n    },\n  },\n  workflowDataContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '75%',\n\n    '& svg': {\n      width: '3.75rem',\n    },\n\n    '& circle': {\n      r: '1',\n      cx: '5',\n      cy: '5',\n    },\n  },\n  statusDiv: {\n    display: 'flex',\n  },\n\n  testName: {\n    fontWeight: 500,\n    fontSize: '1.125rem',\n    width: '15rem',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n\n  hint: {\n    fontSize: '1rem',\n    color: theme.palette.text.hint,\n  },\n\n  lastRunTime: {\n    width: '4.8125rem',\n  },\n  listContainer: {\n    '& img': {\n      width: '1rem',\n      marginLeft: theme.spacing(2.25),\n    },\n    '& span': {\n      marginRight: theme.spacing(1.25),\n    },\n  },\n  listItem: {\n    '&:hover': {\n      background: theme.palette.cards.highlight,\n    },\n  },\n  noWrapProvider: {\n    whiteSpace: 'nowrap',\n  },\n  // Phase states indicating the present run status\n  succeeded: {\n    fill: theme.palette.success.main,\n  },\n  running: {\n    fill: theme.palette.primary.main,\n  },\n  failed: {\n    fill: theme.palette.error.main,\n  },\n  pending: {\n    fill: theme.palette.primary.main,\n  },\n  // Resiliency Score indicators\n  lowScore: {\n    color: theme.palette.error.main,\n  },\n  mediumScore: {\n    color: theme.palette.warning.main,\n  },\n  highScore: {\n    color: theme.palette.success.main,\n  },\n}));\n\nexport default useStyles;\n","import { Link, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { WorkflowRun } from '../../../../models/graphql/workflowData';\nimport useActions from '../../../../redux/actions';\nimport * as NodeSelectionActions from '../../../../redux/actions/nodeSelection';\nimport { history } from '../../../../redux/configureStore';\nimport timeDifferenceForDate from '../../../../utils/datesModifier';\nimport {\n  getProjectID,\n  getProjectRole,\n} from '../../../../utils/getSearchParams';\nimport {\n  FAILED,\n  PENDING,\n  RUNNING,\n  SUCCEEDED,\n} from '../../../WorkflowDetails/workflowConstants';\nimport useStyles from './styles';\n\ninterface WorkflowRunCardProps {\n  data: Partial<WorkflowRun>;\n}\n\nconst WorkflowRunCard: React.FC<WorkflowRunCardProps> = ({ data }) => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n\n  const nodeSelection = useActions(NodeSelectionActions);\n\n  function getPhaseVariant(variant: string | undefined): string {\n    switch (variant) {\n      case SUCCEEDED:\n        return classes.succeeded;\n      case RUNNING:\n        return classes.running;\n      case FAILED:\n        return classes.failed;\n      case PENDING:\n        return classes.pending;\n      default:\n        return classes.pending;\n    }\n  }\n\n  function getResiliencyScoreVariant(score: number) {\n    if (score <= 40) {\n      return classes.lowScore;\n    }\n    if (score > 40 && score < 79) {\n      return classes.mediumScore;\n    }\n    return classes.highScore;\n  }\n\n  return (\n    <Link\n      underline=\"none\"\n      color=\"initial\"\n      onClick={() => {\n        nodeSelection.selectNode({\n          pod_name: '',\n        });\n        history.push({\n          pathname: `/workflows/${data.workflow_run_id}`,\n          search: `?projectID=${projectID}&projectRole=${projectRole}`,\n        });\n      }}\n      title={t(\n        'homeViews.agentConfiguredHome.recentWorkflowRuns.workflowRunCard.cardTitle'\n      )}\n    >\n      <div className={classes.animatedContainer}>\n        <div className={classes.workflowDataContainer}>\n          <div>\n            <div className={classes.statusDiv}>\n              <svg viewBox=\"0 0 10 10\">\n                <circle className={getPhaseVariant(data.phase)} />\n              </svg>\n              <div>\n                <Typography\n                  className={`${classes.testName} ${classes.noWrapProvider}`}\n                >\n                  {data.workflow_name}\n                </Typography>\n                <Typography className={classes.hint}>\n                  {data.cluster_name}\n                </Typography>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <Typography className={classes.hint}>\n              {t(\n                'homeViews.agentConfiguredHome.recentWorkflowRuns.workflowRunCard.resilienceRate'\n              )}\n            </Typography>\n            <Typography\n              className={getResiliencyScoreVariant(data.resiliency_score ?? 0)}\n            >\n              {data.resiliency_score === undefined ||\n              data.resiliency_score === null\n                ? 'NA'\n                : `${data.resiliency_score}%`}\n            </Typography>\n          </div>\n\n          <div>\n            <Typography className={classes.hint}>\n              {t(\n                'homeViews.agentConfiguredHome.recentWorkflowRuns.workflowRunCard.lastRun'\n              )}\n            </Typography>\n            <Typography\n              className={`${classes.noWrapProvider} ${classes.lastRunTime}`}\n            >\n              {timeDifferenceForDate(data.last_updated)}\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport { WorkflowRunCard };\n","import { useQuery } from '@apollo/client';\nimport { Link, Typography } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { ButtonFilled, ButtonOutlined, Modal } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { AgentDeployModal } from '../../../components/AgentDeployModal';\nimport Loader from '../../../components/Loader';\nimport { MainInfoContainer } from '../../../components/MainInfoContainer';\nimport { OverviewContainer } from '../../../components/OverviewContainer';\nimport { RecentOverviewContainer } from '../../../components/RecentOverviewContainer';\nimport Center from '../../../containers/layouts/Center';\nimport { WORKFLOW_DETAILS } from '../../../graphql';\nimport { Role } from '../../../models/graphql/user';\nimport {\n  Workflow,\n  WorkflowDataVars,\n} from '../../../models/graphql/workflowData';\nimport useActions from '../../../redux/actions';\nimport * as TabActions from '../../../redux/actions/tabs';\nimport { history } from '../../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport { ProjectInfoContainer } from '../ProjectInfoContainer';\nimport useStyles from './styles';\nimport { WorkflowRunCard } from './WorkflowRunCard';\n\ninterface AgentConfiguredHomeProps {\n  agentCount: number;\n}\n\nconst AgentConfiguredHome: React.FC<AgentConfiguredHomeProps> = ({\n  agentCount,\n}) => {\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n  const tabs = useActions(TabActions);\n  const classes = useStyles();\n\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\n\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n\n  const { data, loading, error } = useQuery<Workflow, WorkflowDataVars>(\n    WORKFLOW_DETAILS,\n    {\n      variables: {\n        workflowRunsInput: {\n          project_id: projectID,\n          pagination: {\n            page: 0,\n            limit: 3,\n          },\n        },\n      },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  const workflowRunCount = data?.getWorkflowRuns.total_no_of_workflow_runs ?? 0;\n\n  if (error) {\n    console.error('Error fetching Workflow Data');\n    return (\n      <Center>\n        <Typography>{t('homeViews.agentConfiguredHome.error')}</Typography>\n      </Center>\n    );\n  }\n\n  return (\n    <div>\n      {loading ? (\n        <Center>\n          <Loader />\n        </Center>\n      ) : workflowRunCount > 0 ? (\n        <RecentOverviewContainer\n          heading={t(\n            'homeViews.agentConfiguredHome.recentWorkflowRuns.heading'\n          )}\n          link={\n            <Link\n              underline=\"none\"\n              color=\"primary\"\n              onClick={() => {\n                tabs.changeWorkflowsTabs(0);\n                history.push({\n                  pathname: '/workflows',\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n              }}\n            >\n              <Typography className={classes.linkPointer}>\n                {t('homeViews.agentConfiguredHome.recentWorkflowRuns.viewAll')}\n              </Typography>\n            </Link>\n          }\n          buttonLink=\"/create-workflow\"\n          buttonImgSrc=\"./icons/calendarBlank.svg\"\n          buttonImgAlt=\"calendar\"\n          buttonText={t(\n            'homeViews.agentConfiguredHome.recentWorkflowRuns.schedule'\n          )}\n        >\n          {data?.getWorkflowRuns.workflow_runs.map((workflow) => {\n            return (\n              <WorkflowRunCard key={workflow.workflow_id} data={workflow} />\n            );\n          })}\n        </RecentOverviewContainer>\n      ) : (\n        <MainInfoContainer\n          src=\"./icons/workflowScheduleHome.svg\"\n          alt=\"Schedule a workflow\"\n          heading={t('homeViews.agentConfiguredHome.noWorkflow.heading')}\n          description={t(\n            'homeViews.agentConfiguredHome.noWorkflow.description'\n          )}\n          button={\n            <ButtonFilled\n              onClick={() => {\n                history.push({\n                  pathname: '/create-workflow',\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n              }}\n            >\n              <Typography>\n                {t('homeViews.agentConfiguredHome.noWorkflow.schedule')}\n              </Typography>\n            </ButtonFilled>\n          }\n          link={\n            <Link\n              underline=\"none\"\n              color=\"primary\"\n              onClick={() => {\n                tabs.changeWorkflowsTabs(2);\n                history.push({\n                  pathname: '/workflows',\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n              }}\n            >\n              <Typography>\n                {t('homeViews.agentConfiguredHome.noWorkflow.explore')}\n              </Typography>\n            </Link>\n          }\n        />\n      )}\n\n      {/* Agent info container */}\n      <OverviewContainer\n        count={agentCount}\n        countUnit={t('homeViews.agentConfiguredHome.agentInfoContainer.agent')}\n        description={t(\n          'homeViews.agentConfiguredHome.agentInfoContainer.description'\n        )}\n        maxWidth=\"25.5625rem\"\n        button={\n          <>\n            <ButtonOutlined\n              onClick={handleOpen}\n              className={classes.infoContainerButton}\n            >\n              <Typography>\n                <ArrowUpwardIcon />\n                {t('homeViews.agentConfiguredHome.agentInfoContainer.deploy')}\n              </Typography>\n            </ButtonOutlined>\n\n            <Modal\n              height=\"50%\"\n              width=\"50%\"\n              open={modalOpen}\n              onClose={handleClose}\n              modalActions={\n                <ButtonOutlined onClick={handleClose}>&#x2715;</ButtonOutlined>\n              }\n            >\n              <AgentDeployModal handleClose={handleClose} />\n            </Modal>\n          </>\n        }\n      />\n\n      {/* Project Level info container */}\n      {projectRole === Role.owner && <ProjectInfoContainer />}\n    </div>\n  );\n};\n\nexport { AgentConfiguredHome };\n","import React from 'react';\nimport { UnconfiguredAgent } from '../../../components/UnconfiguredAgent';\nimport { Role } from '../../../models/graphql/user';\nimport { getProjectRole } from '../../../utils/getSearchParams';\nimport { ProjectInfoContainer } from '../ProjectInfoContainer';\n\nconst LandingHome: React.FC = () => {\n  const projectRole = getProjectRole();\n\n  return (\n    <div>\n      {/* Agent Deployment Container */}\n      <UnconfiguredAgent />\n      {/* Project Level info container */}\n      {projectRole === Role.owner && <ProjectInfoContainer />}\n    </div>\n  );\n};\n\nexport { LandingHome };\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  userName: {\n    fontSize: '2.5rem',\n    marginTop: theme.spacing(1.25),\n  },\n}));\n\nexport default useStyles;\n","import { useQuery } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { GET_CLUSTER_LENGTH } from '../../graphql';\nimport { Clusters, ClusterVars } from '../../models/graphql/clusterData';\nimport { getUsername } from '../../utils/auth';\nimport { getProjectID } from '../../utils/getSearchParams';\nimport { AgentConfiguredHome } from '../../views/Home/AgentConfiguredHome';\nimport { LandingHome } from '../../views/Home/LandingHome';\nimport useStyles from './styles';\n\nconst HomePage: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const { data: agentList, loading } = useQuery<Clusters, ClusterVars>(\n    GET_CLUSTER_LENGTH,\n    {\n      variables: { project_id: getProjectID() },\n      fetchPolicy: 'network-only',\n    }\n  );\n\n  let agentCount = 0;\n\n  if (agentList !== undefined) {\n    agentCount = agentList.getCluster.length;\n  }\n\n  return (\n    <Scaffold>\n      <Typography variant=\"h3\" className={classes.userName}>\n        {t('home.heading')} {getUsername()}\n      </Typography>\n      {loading ? (\n        <div style={{ height: '100vh' }}>\n          <Loader />\n        </div>\n      ) : agentList && agentCount > 0 ? (\n        <AgentConfiguredHome agentCount={agentCount} />\n      ) : (\n        <LandingHome />\n      )}\n    </Scaffold>\n  );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}