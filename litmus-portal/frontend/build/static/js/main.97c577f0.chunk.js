(this["webpackJsonplitmus-portal"]=this["webpackJsonplitmus-portal"]||[]).push([[10],{130:function(n,e,t){"use strict";t.d(e,"b",(function(){return nn}));var r={};t.r(r),t.d(r,"alert",(function(){return I})),t.d(r,"default",(function(){return S}));var a={};t.r(a),t.d(a,"communityData",(function(){return $})),t.d(a,"default",(function(){return C}));var o={};t.r(o),t.d(o,"selectDashboard",(function(){return k})),t.d(o,"default",(function(){return v}));var c={};t.r(c),t.d(c,"selectDataSource",(function(){return q})),t.d(c,"default",(function(){return R}));var u={};t.r(u),t.d(u,"hubDetails",(function(){return N})),t.d(u,"default",(function(){return x}));var i={};t.r(i),t.d(i,"selectedNode",(function(){return M})),t.d(i,"default",(function(){return H}));var l={};t.r(l),t.d(l,"tabNumber",(function(){return U})),t.d(l,"default",(function(){return G}));var s={};t.r(s),t.d(s,"selectTemplate",(function(){return K})),t.d(s,"default",(function(){return Y}));var d={};t.r(d),t.d(d,"workflowData",(function(){return z})),t.d(d,"workflowManifest",(function(){return V}));var p={};t.r(p),t.d(p,"selectedImageRegistry",(function(){return J})),t.d(p,"default",(function(){return X}));var m=t(114),f=t(459),_=t(79),b=(t(666),t(447)),j=t(667),O=t(13),g=t(26),y=t(490);function h(n,e){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n,r=arguments.length>1?arguments[1]:void 0;return e.hasOwnProperty(r.type)?e[r.type](t,r):t}}var w,E,I=h({isAlertOpen:!1},Object(g.a)({},y.a.SET_ALERT_STATE,(function(n,e){return Object(O.a)(Object(O.a)({},n),{},{isAlertOpen:e.payload})}))),S=I,D=t(147),$=h({communityData:{github:{stars:"",experimentsCount:""},google:{totalRuns:"",operatorInstalls:"",geoCity:[],geoCountry:[],dailyExperimentData:[],dailyOperatorData:[],monthlyExperimentData:[],monthlyOperatorData:[]}},loading:!1,error:!1},(w={},Object(g.a)(w,D.a.COMMUNITY_ANALYTICS_SUCCESS,(function(n,e){var t=e.payload,r=[];t.google.geoCity.forEach((function(n){r.push({name:n[0],latitude:n[1],longitude:n[2],count:n[3]})}));var a=t.google.geoCountry,o=[];t.google.dailyExperimentData.forEach((function(n){o.push({date:n[0],count:n[1]})}));var c=[];t.google.dailyOperatorData.forEach((function(n){c.push({date:n[0],count:n[1]})}));var u=[];t.google.monthlyExperimentData.forEach((function(n){u.push({date:n[0],count:n[1]})}));var i=[];return t.google.monthlyOperatorData.forEach((function(n){i.push({date:n[0],count:n[1]})})),Object(O.a)(Object(O.a)({},n),{},{communityData:{github:t.github,google:{totalRuns:t.google.totalRuns,operatorInstalls:t.google.operatorInstalls,geoCountry:a,geoCity:r,dailyExperimentData:o,dailyOperatorData:c,monthlyExperimentData:u,monthlyOperatorData:i}},loading:!1,error:!1})})),Object(g.a)(w,D.a.COMMUNITY_ANALYTICS_LOADING,(function(n,e){return Object(O.a)(Object(O.a)({},n),{},{loading:e.payload})})),Object(g.a)(w,D.a.COMMUNITY_ANALYTICS_ERROR,(function(n,e){return Object(O.a)(Object(O.a)({},n),{},{loading:!1,error:e.payload})})),w)),C=$,T=t(482),k=h({selectedDashboardID:"",activePanelID:"",refreshRate:0,range:{startDate:"",endDate:""},forceUpdate:!1,dashboardJSON:{}},Object(g.a)({},T.a.SELECT_DASHBOARD,(function(n,e){return Object(O.a)(Object(O.a)({},n),e.payload)}))),v=k,A=t(483),q=h({selectedDataSourceID:"",selectedDataSourceName:"",selectedDataSourceURL:""},Object(g.a)({},A.a.SELECT_DATASOURCE,(function(n,e){return Object(O.a)(Object(O.a)({},n),e.payload)}))),R=q;!function(n){n.SET_MYHUB="SET_MYHUBS"}(E||(E={}));var L,N=h({id:"",HubName:"",RepoURL:"",RepoBranch:"",TotalExp:"",IsAvailable:!0,IsPrivate:!1,Token:"",UserName:"",Password:"",SSHPrivateKey:"",SSHPublicKey:"",LastSyncedAt:""},Object(g.a)({},E.SET_MYHUB,(function(n,e){return Object(O.a)(Object(O.a)({},n),e.payload)}))),x=N,P=t(484),M=h({children:null,finishedAt:"",message:"",name:"",pod_name:"",phase:"",startedAt:"",type:""},Object(g.a)({},P.a.SELECT_NODE,(function(n,e){return Object(O.a)(Object(O.a)({},n),e.payload)}))),H=M,W=t(178),U=h({workflows:0,settings:0,node:0,analytics:0,overviewDashboard:0},(L={},Object(g.a)(L,W.a.CHANGE_WORKFLOWS_TAB,(function(n,e){return Object(O.a)(Object(O.a)({},n),{},{workflows:e.payload})})),Object(g.a)(L,W.a.CHANGE_SETTINGS_TAB,(function(n,e){return Object(O.a)(Object(O.a)({},n),{},{settings:e.payload})})),Object(g.a)(L,W.a.CHANGE_WORKFLOW_DETAILS_TAB,(function(n,e){return Object(O.a)(Object(O.a)({},n),{},{node:e.payload})})),Object(g.a)(L,W.a.CHANGE_ANALYTICS_DASHBOARD_TAB,(function(n,e){return Object(O.a)(Object(O.a)({},n),{},{analytics:e.payload})})),Object(g.a)(L,W.a.CHANGE_OVERVIEW_DASHBOARD_TAB,(function(n,e){return Object(O.a)(Object(O.a)({},n),{},{overviewDashboard:e.payload})})),L)),G=U,B=t(475),K=h({selectedTemplateID:0,isDisable:!0},Object(g.a)({},B.a.SELECT_TEMPLATE,(function(n,e){return Object(O.a)(Object(O.a)({},n),e.payload)}))),Y=K,F=t(369),z=h({chaosEngineChanged:!1,namespace:"",clusterid:"",cronSyntax:"",scheduleType:{scheduleOnce:"now",recurringSchedule:""},scheduleInput:{hour_interval:0,day:1,weekday:"Monday",time:new Date,date:new Date},clustername:""},Object(g.a)({},F.a.SET_WORKFLOW_DETAILS,(function(n,e){return Object(O.a)(Object(O.a)({},n),e.payload)}))),V=h({manifest:"",engineYAML:"",isCustomWorkflow:!1},Object(g.a)({},F.a.SET_WORKFLOW_MANIFEST,(function(n,e){return Object(O.a)(Object(O.a)({},n),e.payload)}))),Q=t(572),J=h({image_registry_name:"",image_repo_name:"",image_registry_type:"",secret_name:"",secret_namespace:"",enable_registry:!0},Object(g.a)({},Q.a.SELECT_IMAGE_REGISTRY,(function(n,e){return Object(O.a)(Object(O.a)({},n),e.payload)}))),X=J,Z={key:"root",version:1,storage:f,blacklist:[]},nn=Object(m.a)(),en=Object(_.applyMiddleware)(j.a);var tn=Object(b.a)(Z,Object(_.combineReducers)(Object(O.a)(Object(O.a)(Object(O.a)(Object(O.a)(Object(O.a)(Object(O.a)(Object(O.a)(Object(O.a)(Object(O.a)(Object(O.a)({},a),d),i),l),r),s),u),c),o),p)));e.a=function(){var n=Object(_.createStore)(tn,{},en);return{store:n,persistor:Object(b.b)(n)}}},147:function(n,e,t){"use strict";var r;t.d(e,"a",(function(){return r})),function(n){n.COMMUNITY_ANALYTICS_SUCCESS="LOAD_COMMUNITY_ANALYTICS",n.COMMUNITY_ANALYTICS_LOADING="COMMUNITY_ANALYTICS_LOADING",n.COMMUNITY_ANALYTICS_ERROR="COMMUNITY_ANALYTICS_ERROR"}(r||(r={}))},149:function(n,e,t){"use strict";t.d(e,"g",(function(){return i})),t.d(e,"a",(function(){return l})),t.d(e,"h",(function(){return s})),t.d(e,"f",(function(){return p})),t.d(e,"d",(function(){return m})),t.d(e,"e",(function(){return f})),t.d(e,"b",(function(){return _})),t.d(e,"c",(function(){return b}));var r=t(350),a=t.n(r),o=t(130),c=function(n){var e=n.name,t=n.value,r=n.exhours,a=n.path,o=new Date;o.setTime(o.getTime()+36e5*r);var c="expires=".concat(o.toUTCString());document.cookie="".concat(e,"=").concat(t,";").concat(c,";path=").concat(null!==a&&void 0!==a?a:"/")};function u(n){var e=function(n){for(var e="".concat(n,"="),t=decodeURIComponent(document.cookie).split(";"),r=0;r<t.length;r++){for(var a=t[r];" "===a.charAt(0);)a=a.substring(1);if(0===a.indexOf(e))return a.substring(e.length,a.length)}return""}(n);return e||""}function i(){c({name:"token",value:"",exhours:1}),window.location.reload()}function l(){var n=u("token");return""===n&&o.b.push("/login"),n}function s(n){!function(n){var e=n.token,t=n.cookieName,r=n.path,o=n.errorMessage;try{if(void 0===e||null===e)throw new Error("Token is undefined or null!");var u=a.a.decode(e),i=(u.exp-u.iat)/3600;c({name:t,value:e,exhours:i,path:r})}catch(l){console.error(null!==o&&void 0!==o?o:"ERROR IN SETTING COOKIE: ",l)}}({token:n,cookieName:"token",errorMessage:"ERROR IN SETTING USER DETAILS: "})}function d(){var n=l();return a.a.decode(n)}function p(){return l()?d().username:""}function m(){return l()?d().uid:""}function f(){return l()?d().role:""}function _(){var n;return l()&&null!==(n=d().email)&&void 0!==n?n:""}function b(){var n;return l()&&null!==(n=d().name)&&void 0!==n?n:""}},178:function(n,e,t){"use strict";var r;t.d(e,"a",(function(){return r})),function(n){n.CHANGE_WORKFLOWS_TAB="CHANGE_WORKFLOWS_TAB",n.CHANGE_SETTINGS_TAB="CHANGE_SETTINGS_TAB",n.CHANGE_WORKFLOW_DETAILS_TAB="CHANGE_WORKFLOW_DETAILS_TAB",n.CHANGE_ANALYTICS_DASHBOARD_TAB="CHANGE_ANALYTICS_DASHBOARD_TAB",n.CHANGE_OVERVIEW_DASHBOARD_TAB="CHANGE_OVERVIEW_DASHBOARD_TAB"}(r||(r={}))},228:function(n,e,t){"use strict";function r(n){var e;return null!==(e=new URL(window.location.href).searchParams.get(n))&&void 0!==e?e:""}function a(){return r("projectID")}function o(){return r("projectRole")}t.d(e,"a",(function(){return a})),t.d(e,"b",(function(){return o}))},229:function(n,e,t){"use strict";var r=t(678),a=t(973),o=t(449),c=t(0),u=t.n(c),i=t(464),l=Object(r.a)((function(n){return{spinner:{color:n.palette.primary.main}}}));e.a=function(n){var e=n.size,t=n.message,r=l();return u.a.createElement(u.a.Fragment,null,u.a.createElement(i.a,null,u.a.createElement(a.a,{className:r.spinner,size:e||40})),u.a.createElement(o.a,null,t))}},232:function(n,e,t){"use strict";var r,a,o,c=window.location;r="https:"===c.protocol?"wss:":"ws:","development"==="production".trim()||"test"==="production".trim()?(a="".concat(window.location.protocol,"//").concat(window.location.hostname,":3000"),o="".concat(window.location.protocol,"//").concat(window.location.hostname,":8080"),r+="//".concat(window.location.hostname,":8080")):(a="/auth",o="/api",r+="//".concat(c.host,"/ws")),e.a={environment:"production",analytics:{url:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).ANALYTICS_API||"https://hub.litmuschaos.io/api/community"},auth:{url:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).AUTH_API||a},grahqlEndpoint:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).GQL_API||o,grahqlEndpointSubscription:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).GQL_API||r}},366:function(n,e,t){"use strict";t.d(e,"h",(function(){return u.i})),t.d(e,"c",(function(){return u.d})),t.d(e,"n",(function(){return u.p})),t.d(e,"g",(function(){return u.h})),t.d(e,"f",(function(){return u.g})),t.d(e,"V",(function(){return u.G})),t.d(e,"P",(function(){return u.x})),t.d(e,"O",(function(){return u.u})),t.d(e,"a",(function(){return u.a})),t.d(e,"i",(function(){return u.j})),t.d(e,"W",(function(){return u.H})),t.d(e,"T",(function(){return u.C})),t.d(e,"Q",(function(){return u.y})),t.d(e,"l",(function(){return u.n})),t.d(e,"j",(function(){return u.k})),t.d(e,"D",(function(){return u.t})),t.d(e,"k",(function(){return u.m})),t.d(e,"e",(function(){return u.e})),t.d(e,"S",(function(){return u.A})),t.d(e,"b",(function(){return u.b})),t.d(e,"U",(function(){return u.E})),t.d(e,"R",(function(){return u.z})),t.d(e,"m",(function(){return u.o})),t.d(e,"Y",(function(){return i.F})),t.d(e,"X",(function(){return i.E})),t.d(e,"db",(function(){return i.H})),t.d(e,"bb",(function(){return i.G})),t.d(e,"z",(function(){return i.r})),t.d(e,"A",(function(){return i.s})),t.d(e,"p",(function(){return i.c})),t.d(e,"q",(function(){return i.d})),t.d(e,"r",(function(){return i.e})),t.d(e,"d",(function(){return i.a})),t.d(e,"o",(function(){return i.b})),t.d(e,"s",(function(){return i.g})),t.d(e,"u",(function(){return i.k})),t.d(e,"J",(function(){return i.z})),t.d(e,"K",(function(){return i.A})),t.d(e,"x",(function(){return i.o})),t.d(e,"y",(function(){return i.p})),t.d(e,"G",(function(){return i.w})),t.d(e,"H",(function(){return i.x})),t.d(e,"E",(function(){return i.u})),t.d(e,"F",(function(){return i.v})),t.d(e,"M",(function(){return i.C})),t.d(e,"L",(function(){return i.B})),t.d(e,"N",(function(){return i.D})),t.d(e,"w",(function(){return i.n})),t.d(e,"I",(function(){return i.y})),t.d(e,"v",(function(){return i.l})),t.d(e,"t",(function(){return i.j})),t.d(e,"B",(function(){return i.t})),t.d(e,"ab",(function(){return d})),t.d(e,"Z",(function(){return p})),t.d(e,"cb",(function(){return m})),t.d(e,"C",(function(){return f}));var r,a,o,c,u=t(467),i=t(465),l=t(10),s=t(7),d=Object(s.gql)(r||(r=Object(l.a)(["\n  subscription workflowEvents($projectID: String!) {\n    workflowEventListener(project_id: $projectID) {\n      workflow_id\n      workflow_name\n      workflow_run_id\n      cluster_name\n      last_updated\n      cluster_id\n      phase\n      execution_data\n      resiliency_score\n    }\n  }\n"]))),p=Object(s.gql)(a||(a=Object(l.a)(["\n  subscription workflowEvents($projectID: String!) {\n    workflowEventListener(project_id: $projectID) {\n      workflow_id\n      workflow_name\n      workflow_run_id\n      cluster_name\n      last_updated\n      phase\n      resiliency_score\n      experiments_passed\n      total_experiments\n    }\n  }\n"]))),m=Object(s.gql)(o||(o=Object(l.a)(["\n  subscription podLog($podDetails: PodLogRequest!) {\n    getPodLog(podDetails: $podDetails) {\n      log\n    }\n  }\n"]))),f=Object(s.gql)(c||(c=Object(l.a)(["\n  subscription getKubeObject($data: KubeObjectRequest!) {\n    getKubeObject(kubeObjectRequest: $data) {\n      cluster_id\n      kube_obj\n    }\n  }\n"])))},369:function(n,e,t){"use strict";var r;t.d(e,"a",(function(){return r})),function(n){n.SET_WORKFLOW_DETAILS="SET_WORKFLOW_DETAILS",n.SET_CUSTOM_WORKFLOW="SET_CUSTOM_WORKFLOW",n.SET_WORKFLOW_MANIFEST="SET_WORKFLOW_MANIFEST"}(r||(r={}))},454:function(n,e,t){"use strict";var r=t(119),a=t(0),o=t(263),c=t(79);e.a=function(n,e){var t=Object(o.c)();return Object(a.useMemo)((function(){return Array.isArray(n)?n.map((function(n){return Object(c.bindActionCreators)(n,t)})):Object(c.bindActionCreators)(n,t)}),e?[t].concat(Object(r.a)(e)):e)}},457:function(n,e,t){"use strict";var r,a,o,c;t.d(e,"b",(function(){return r})),t.d(e,"c",(function(){return a})),t.d(e,"d",(function(){return o})),t.d(e,"a",(function(){return c})),function(n){n.basic="basic",n.token="token",n.ssh="ssh",n.none="none"}(r||(r={})),function(n){n.viewer="Viewer",n.editor="Editor",n.owner="Owner"}(a||(a={})),function(n){n.admin="admin",n.user="user"}(o||(o={})),function(n){n.PENDING="Pending",n.ACCEPTED="Accepted"}(c||(c={}))},464:function(n,e,t){"use strict";var r=t(678),a=t(0),o=t.n(a),c=Object(r.a)({center:{width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"}});e.a=function(n){var e=n.children,t=n.className,r=c();return o.a.createElement("div",{className:"".concat(r.center," ").concat(t)},e)}},465:function(n,e,t){"use strict";t.d(e,"F",(function(){return W})),t.d(e,"E",(function(){return U})),t.d(e,"H",(function(){return G})),t.d(e,"G",(function(){return B})),t.d(e,"r",(function(){return K})),t.d(e,"s",(function(){return Y})),t.d(e,"c",(function(){return F})),t.d(e,"d",(function(){return z})),t.d(e,"e",(function(){return V})),t.d(e,"a",(function(){return Q})),t.d(e,"b",(function(){return X})),t.d(e,"g",(function(){return Z})),t.d(e,"k",(function(){return nn})),t.d(e,"f",(function(){return en})),t.d(e,"h",(function(){return tn})),t.d(e,"i",(function(){return rn})),t.d(e,"z",(function(){return an})),t.d(e,"A",(function(){return on})),t.d(e,"o",(function(){return cn})),t.d(e,"p",(function(){return un})),t.d(e,"w",(function(){return ln})),t.d(e,"x",(function(){return sn})),t.d(e,"u",(function(){return dn})),t.d(e,"v",(function(){return pn})),t.d(e,"C",(function(){return mn})),t.d(e,"B",(function(){return fn})),t.d(e,"D",(function(){return _n})),t.d(e,"q",(function(){return bn})),t.d(e,"n",(function(){return jn})),t.d(e,"m",(function(){return On})),t.d(e,"y",(function(){return gn})),t.d(e,"l",(function(){return yn})),t.d(e,"j",(function(){return hn})),t.d(e,"t",(function(){return wn}));var r,a,o,c,u,i,l,s,d,p,m,f,_,b,j,O,g,y,h,w,E,I,S,D,$,C,T,k,v,A,q,R,L,N,x,P,M=t(10),H=t(7),W=Object(H.gql)(r||(r=Object(M.a)(["\n  query workflowDetails($workflowRunsInput: GetWorkflowRunsInput!) {\n    getWorkflowRuns(workflowRunsInput: $workflowRunsInput) {\n      total_no_of_workflow_runs\n      workflow_runs {\n        workflow_id\n        workflow_name\n        workflow_run_id\n        cluster_name\n        last_updated\n        cluster_id\n        phase\n        execution_data\n        resiliency_score\n        isRemoved\n      }\n    }\n  }\n"]))),U=Object(H.gql)(a||(a=Object(M.a)(["\n  query workflowDetails($workflowRunsInput: GetWorkflowRunsInput!) {\n    getWorkflowRuns(workflowRunsInput: $workflowRunsInput) {\n      total_no_of_workflow_runs\n      workflow_runs {\n        workflow_id\n        workflow_name\n        workflow_run_id\n        cluster_name\n        last_updated\n        phase\n        resiliency_score\n        experiments_passed\n        total_experiments\n        isRemoved\n      }\n    }\n  }\n"]))),G=Object(H.gql)(o||(o=Object(M.a)(["\n  query getScheduledWorkflowStats(\n    $filter: TimeFrequency!\n    $project_id: ID!\n    $show_workflow_runs: Boolean!\n  ) {\n    getScheduledWorkflowStats(\n      filter: $filter\n      project_id: $project_id\n      show_workflow_runs: $show_workflow_runs\n    ) {\n      date\n      value\n    }\n  }\n"]))),B=Object(H.gql)(c||(c=Object(M.a)(["\n  query workflowListDetails($workflowInput: ListWorkflowsInput!) {\n    ListWorkflow(workflowInput: $workflowInput) {\n      total_no_of_workflows\n      workflows {\n        workflow_id\n        workflow_manifest\n        cronSyntax\n        cluster_name\n        workflow_name\n        workflow_description\n        weightages {\n          experiment_name\n          weightage\n        }\n        isCustomWorkflow\n        updated_at\n        created_at\n        project_id\n        cluster_id\n        cluster_type\n        isRemoved\n        workflow_runs {\n          execution_data\n          workflow_run_id\n          last_updated\n        }\n      }\n    }\n  }\n"]))),K=(Object(H.gql)(u||(u=Object(M.a)(["\n  query workflowListDetails($projectID: String!, $workflowIDs: [ID]) {\n    ListWorkflow(project_id: $projectID, workflow_ids: $workflowIDs) {\n      workflow_id\n      workflow_manifest\n      workflow_name\n    }\n  }\n"]))),Object(H.gql)(i||(i=Object(M.a)(["\n  query getUser($username: String!) {\n    getUser(username: $username) {\n      username\n      email\n      id\n      name\n      projects {\n        members {\n          user_id\n          user_name\n          role\n          invitation\n          name\n          email\n          joined_at\n        }\n        name\n        id\n      }\n      company_name\n      updated_at\n      created_at\n      removed_at\n      is_email_verified\n      state\n      role\n    }\n  }\n"])))),Y=Object(H.gql)(l||(l=Object(M.a)(["\n  query getUser($username: String!) {\n    getUser(username: $username) {\n      username\n      email\n      id\n      name\n    }\n  }\n"]))),F=Object(H.gql)(s||(s=Object(M.a)(["\n  query getClusters($project_id: String!, $cluster_type: String) {\n    getCluster(project_id: $project_id, cluster_type: $cluster_type) {\n      cluster_id\n      cluster_name\n      description\n      is_active\n      is_registered\n      is_cluster_confirmed\n      updated_at\n      created_at\n      cluster_type\n      no_of_schedules\n      no_of_workflows\n      token\n      last_workflow_timestamp\n      agent_namespace\n    }\n  }\n"]))),z=Object(H.gql)(d||(d=Object(M.a)(["\n  query getClusters($project_id: String!) {\n    getCluster(project_id: $project_id) {\n      cluster_id\n    }\n  }\n"]))),V=Object(H.gql)(p||(p=Object(M.a)(["\n  query getClusters($project_id: String!) {\n    getCluster(project_id: $project_id) {\n      cluster_name\n    }\n  }\n"]))),Q=Object(H.gql)(m||(m=Object(M.a)(["\n  query allUsers {\n    users {\n      id\n      name\n      username\n      email\n    }\n  }\n"]))),J=Object(H.gql)(f||(f=Object(M.a)(["\n  fragment CoreChartFields on Chart {\n    ApiVersion\n    Kind\n    Metadata {\n      Name\n      Version\n      Annotations {\n        Categories\n        Vendor\n        CreatedAt\n        Repository\n        Support\n        ChartDescription\n      }\n    }\n    Spec {\n      DisplayName\n      CategoryDescription\n      Keywords\n      Maturity\n      Experiments\n      Maintainers {\n        Name\n        Email\n      }\n      MinKubeVersion\n      Provider\n      Links {\n        Name\n        Url\n      }\n      ChaosExpCRDLink\n      Platforms\n      ChaosType\n    }\n    PackageInfo {\n      PackageName\n      Experiments {\n        Name\n        CSV\n        Desc\n      }\n    }\n  }\n"]))),X=Object(H.gql)(_||(_=Object(M.a)(["\n  ","\n  query getCharts($HubName: String!, $projectID: String!) {\n    getCharts(HubName: $HubName, projectID: $projectID) {\n      ...CoreChartFields\n    }\n  }\n"])),J),Z=Object(H.gql)(b||(b=Object(M.a)(["\n  ","\n  query getExperiment($data: ExperimentInput!) {\n    getHubExperiment(experimentInput: $data) {\n      ...CoreChartFields\n    }\n  }\n"])),J),nn=Object(H.gql)(j||(j=Object(M.a)(["\n  query getHubStatus($data: String!) {\n    getHubStatus(projectID: $data) {\n      id\n      HubName\n      RepoBranch\n      RepoURL\n      TotalExp\n      IsAvailable\n      AuthType\n      IsPrivate\n      Token\n      UserName\n      Password\n      SSHPrivateKey\n      SSHPublicKey\n      LastSyncedAt\n    }\n  }\n"]))),en=Object(H.gql)(O||(O=Object(M.a)(["\n  query getEngineData($experimentInput: ExperimentInput!) {\n    getYAMLData(experimentInput: $experimentInput)\n  }\n"]))),tn=Object(H.gql)(g||(g=Object(M.a)(["\n  query getExperimentData($experimentInput: ExperimentInput!) {\n    getYAMLData(experimentInput: $experimentInput)\n  }\n"]))),rn=Object(H.gql)(y||(y=Object(M.a)(["\n  query gitOPsData($data: String!) {\n    getGitOpsDetails(project_id: $data) {\n      Enabled\n      ProjectID\n      Branch\n      RepoURL\n      AuthType\n      Token\n      UserName\n      Password\n      SSHPrivateKey\n    }\n  }\n"]))),an=Object(H.gql)(h||(h=Object(M.a)(["\n  query ListManifestTemplate($data: String!) {\n    ListManifestTemplate(project_id: $data) {\n      template_id\n      manifest\n      project_name\n      template_description\n      template_name\n      isCustomWorkflow\n    }\n  }\n"]))),on=Object(H.gql)(w||(w=Object(M.a)(["\n  query listProjects {\n    listProjects {\n      id\n      name\n      members {\n        user_name\n        user_id\n        role\n        invitation\n        joined_at\n      }\n      state\n      created_at\n      updated_at\n      removed_at\n    }\n  }\n"]))),cn=Object(H.gql)(E||(E=Object(M.a)(["\n  query getProject($projectID: String!) {\n    getProject(projectID: $projectID) {\n      id\n      name\n      members {\n        user_id\n        user_name\n        role\n        invitation\n        joined_at\n      }\n      state\n      created_at\n      updated_at\n      removed_at\n    }\n  }\n"]))),un=Object(H.gql)(I||(I=Object(M.a)(["\n  query getProject($projectID: String!) {\n    getProject(projectID: $projectID) {\n      name\n    }\n  }\n"]))),ln=Object(H.gql)(S||(S=Object(M.a)(["\n  query listDataSource($projectID: String!) {\n    ListDataSource(project_id: $projectID) {\n      ds_id\n      ds_name\n      ds_type\n      ds_url\n      access_type\n      auth_type\n      basic_auth_username\n      basic_auth_password\n      scrape_interval\n      query_timeout\n      http_method\n      project_id\n      created_at\n      updated_at\n      health_status\n    }\n  }\n"]))),sn=Object(H.gql)(D||(D=Object(M.a)(["\n  query listDataSource($projectID: String!) {\n    ListDataSource(project_id: $projectID) {\n      ds_id\n    }\n  }\n"]))),dn=Object(H.gql)($||($=Object(M.a)(["\n  query listDashboard($projectID: String!) {\n    ListDashboard(project_id: $projectID) {\n      db_id\n      ds_id\n      db_name\n      cluster_name\n      ds_name\n      ds_type\n      db_type_id\n      db_type_name\n      db_information\n      chaos_event_query_template\n      chaos_verdict_query_template\n      application_metadata_map {\n        namespace\n        applications {\n          kind\n          names\n        }\n      }\n      panel_groups {\n        panels {\n          panel_id\n          created_at\n          prom_queries {\n            queryid\n            prom_query_name\n            legend\n            resolution\n            minstep\n            line\n            close_area\n          }\n          panel_options {\n            points\n            grids\n            left_axis\n          }\n          panel_name\n          y_axis_left\n          y_axis_right\n          x_axis_down\n          unit\n        }\n        panel_group_name\n        panel_group_id\n      }\n      end_time\n      start_time\n      refresh_rate\n      project_id\n      cluster_id\n      created_at\n      updated_at\n    }\n  }\n"]))),pn=Object(H.gql)(C||(C=Object(M.a)(["\n  query listDashboard($projectID: String!) {\n    ListDashboard(project_id: $projectID) {\n      db_id\n      db_name\n      db_type_id\n      db_type_name\n      cluster_name\n      cluster_id\n      updated_at\n      db_information\n      chaos_event_query_template\n      chaos_verdict_query_template\n      application_metadata_map {\n        namespace\n        applications {\n          kind\n          names\n        }\n      }\n      panel_groups {\n        panels {\n          panel_id\n          created_at\n          prom_queries {\n            queryid\n            prom_query_name\n            legend\n            resolution\n            minstep\n            line\n            close_area\n          }\n          panel_options {\n            points\n            grids\n            left_axis\n          }\n          panel_name\n          y_axis_left\n          y_axis_right\n          x_axis_down\n          unit\n        }\n        panel_group_name\n        panel_group_id\n      }\n    }\n  }\n"]))),mn=Object(H.gql)(T||(T=Object(M.a)(["\n  query PrometheusQuery($prometheusInput: promInput) {\n    GetPromQuery(query: $prometheusInput) {\n      metricsResponse {\n        queryid\n        legends\n        tsvs {\n          date\n          value\n        }\n      }\n      annotationsResponse {\n        queryid\n        legends\n        tsvs {\n          date\n          value\n        }\n      }\n    }\n  }\n"]))),fn=Object(H.gql)(k||(k=Object(M.a)(["\n  query PrometheusLabelValues($prometheusInput: promSeriesInput) {\n    GetPromLabelNamesAndValues(series: $prometheusInput) {\n      series\n      labelValues {\n        label\n        values {\n          name\n        }\n      }\n    }\n  }\n"]))),_n=Object(H.gql)(v||(v=Object(M.a)(["\n  query PrometheusSeriesList($prometheusDSInput: dsDetails) {\n    GetPromSeriesList(ds_details: $prometheusDSInput) {\n      seriesList\n    }\n  }\n"]))),bn=Object(H.gql)(A||(A=Object(M.a)(["\n  query GetManifestTemplate($data: String!) {\n    GetTemplateManifestByID(template_id: $data) {\n      template_id\n      manifest\n    }\n  }\n"]))),jn=Object(H.gql)(q||(q=Object(M.a)(["\n  query GetPredefinedWorkflowList($hubname: String!, $projectid: String!) {\n    GetPredefinedWorkflowList(HubName: $hubname, projectID: $projectid)\n  }\n"]))),On=Object(H.gql)(R||(R=Object(M.a)(["\n  query GetPredefinedExperimentYAML($experimentInput: ExperimentInput!) {\n    GetPredefinedExperimentYAML(experimentInput: $experimentInput)\n  }\n"]))),gn=Object(H.gql)(L||(L=Object(M.a)(["\n  query ListImageRegistry($data: String!) {\n    ListImageRegistry(project_id: $data) {\n      image_registry_info {\n        enable_registry\n      }\n      image_registry_id\n    }\n  }\n"]))),yn=Object(H.gql)(N||(N=Object(M.a)(["\n  query GetImageRegistry($registryid: String!, $projectid: String!) {\n    GetImageRegistry(image_registry_id: $registryid, project_id: $projectid) {\n      image_registry_info {\n        enable_registry\n        secret_name\n        secret_namespace\n        image_registry_name\n        image_repo_name\n        image_registry_type\n      }\n      image_registry_id\n    }\n  }\n"]))),hn=Object(H.gql)(x||(x=Object(M.a)(["\n  query getGlobalStats($query: UsageQuery!) {\n    UsageQuery(query: $query) {\n      TotalCount {\n        Workflows {\n          Runs\n          ExpRuns\n          Schedules\n        }\n        Agents {\n          Ns\n          Cluster\n          Total\n        }\n        Projects\n        Users\n      }\n    }\n  }\n"]))),wn=Object(H.gql)(P||(P=Object(M.a)(["\n  query getStats($query: UsageQuery!) {\n    UsageQuery(query: $query) {\n      Projects {\n        Name\n        Workflows {\n          Schedules\n          ExpRuns\n          Runs\n        }\n        Agents {\n          Total\n          Ns\n          Cluster\n        }\n        Members {\n          Owner {\n            Name\n            Username\n          }\n          Total\n        }\n      }\n    }\n  }\n"])))},467:function(n,e,t){"use strict";t.d(e,"i",(function(){return W})),t.d(e,"d",(function(){return U})),t.d(e,"p",(function(){return G})),t.d(e,"h",(function(){return B})),t.d(e,"g",(function(){return K})),t.d(e,"G",(function(){return Y})),t.d(e,"x",(function(){return F})),t.d(e,"u",(function(){return z})),t.d(e,"a",(function(){return V})),t.d(e,"j",(function(){return Q})),t.d(e,"H",(function(){return J})),t.d(e,"C",(function(){return X})),t.d(e,"c",(function(){return Z})),t.d(e,"w",(function(){return nn})),t.d(e,"F",(function(){return en})),t.d(e,"y",(function(){return tn})),t.d(e,"n",(function(){return rn})),t.d(e,"s",(function(){return an})),t.d(e,"k",(function(){return on})),t.d(e,"r",(function(){return cn})),t.d(e,"D",(function(){return un})),t.d(e,"q",(function(){return ln})),t.d(e,"v",(function(){return sn})),t.d(e,"t",(function(){return dn})),t.d(e,"f",(function(){return pn})),t.d(e,"B",(function(){return mn})),t.d(e,"m",(function(){return fn})),t.d(e,"e",(function(){return _n})),t.d(e,"A",(function(){return bn})),t.d(e,"l",(function(){return jn})),t.d(e,"b",(function(){return On})),t.d(e,"E",(function(){return gn})),t.d(e,"z",(function(){return yn})),t.d(e,"o",(function(){return hn}));var r,a,o,c,u,i,l,s,d,p,m,f,_,b,j,O,g,y,h,w,E,I,S,D,$,C,T,k,v,A,q,R,L,N,x,P,M=t(10),H=t(7),W=Object(H.gql)(r||(r=Object(M.a)(["\n  mutation createChaosWorkFlow($ChaosWorkFlowInput: ChaosWorkFlowInput!) {\n    createChaosWorkFlow(input: $ChaosWorkFlowInput) {\n      workflow_id\n      cronSyntax\n      workflow_name\n      workflow_description\n      isCustomWorkflow\n    }\n  }\n"]))),U=Object(H.gql)(a||(a=Object(M.a)(["\n  mutation addWorkflowTemplate($data: TemplateInput!) {\n    createManifestTemplate(templateInput: $data) {\n      template_name\n      template_id\n    }\n  }\n"]))),G=Object(H.gql)(o||(o=Object(M.a)(["\n  mutation deleteManifestTemplate($data: String!) {\n    deleteManifestTemplate(template_id: $data)\n  }\n"]))),B=Object(H.gql)(c||(c=Object(M.a)(["\n  mutation CreateUser($user: CreateUserInput!) {\n    createUser(user: $user) {\n      username\n      created_at\n      updated_at\n      removed_at\n    }\n  }\n"]))),K=Object(H.gql)(u||(u=Object(M.a)(["\n  mutation createProject($projectName: String!) {\n    createProject(projectName: $projectName) {\n      members {\n        user_id\n        role\n        user_name\n        invitation\n        joined_at\n      }\n      name\n      id\n    }\n  }\n"]))),Y=Object(H.gql)(i||(i=Object(M.a)(["\n  mutation updateProjectName($projectID: String!, $projectName: String!) {\n    updateProjectName(projectID: $projectID, projectName: $projectName)\n  }\n"]))),F=Object(H.gql)(l||(l=Object(M.a)(["\n  mutation sendInvite($member: MemberInput!) {\n    sendInvitation(member: $member) {\n      user_id\n      user_name\n      role\n      invitation\n    }\n  }\n"]))),z=Object(H.gql)(s||(s=Object(M.a)(["\n  mutation RemoveInvitation($data: MemberInput!) {\n    removeInvitation(member: $data)\n  }\n"]))),V=Object(H.gql)(d||(d=Object(M.a)(["\n  mutation accept($member: MemberInput!) {\n    acceptInvitation(member: $member)\n  }\n"]))),Q=Object(H.gql)(p||(p=Object(M.a)(["\n  mutation decline($member: MemberInput!) {\n    declineInvitation(member: $member)\n  }\n"]))),J=Object(H.gql)(m||(m=Object(M.a)(["\n  mutation updateChaos($ChaosWorkFlowInput: ChaosWorkFlowInput!) {\n    updateChaosWorkflow(input: $ChaosWorkFlowInput) {\n      workflow_id\n      workflow_name\n      workflow_description\n      isCustomWorkflow\n      cronSyntax\n    }\n  }\n"]))),X=Object(H.gql)(f||(f=Object(M.a)(["\n  mutation updateUser($user: UpdateUserInput!) {\n    updateUser(user: $user)\n  }\n"]))),Z=(Object(H.gql)(_||(_=Object(M.a)(["\n  mutation userCluster($ClusterInput: ClusterInput!) {\n    userClusterReg(clusterInput: $ClusterInput) {\n      token\n      cluster_id\n      cluster_name\n    }\n  }\n"]))),Object(H.gql)(b||(b=Object(M.a)(["\n  mutation addMyHub($MyHubDetails: CreateMyHub!, $projectID: String!) {\n    addMyHub(myhubInput: $MyHubDetails, projectID: $projectID) {\n      HubName\n      RepoURL\n      RepoBranch\n    }\n  }\n"])))),nn=Object(H.gql)(j||(j=Object(M.a)(["\n  mutation saveMyHub($MyHubDetails: CreateMyHub!, $projectID: String!) {\n    saveMyHub(myhubInput: $MyHubDetails, projectID: $projectID) {\n      HubName\n      RepoURL\n      RepoBranch\n    }\n  }\n"]))),en=Object(H.gql)(O||(O=Object(M.a)(["\n  mutation updateMyHub($MyHubDetails: UpdateMyHub!, $projectID: String!) {\n    updateMyHub(myhubInput: $MyHubDetails, projectID: $projectID) {\n      HubName\n      RepoURL\n      RepoBranch\n    }\n  }\n"]))),tn=Object(H.gql)(g||(g=Object(M.a)(["\n  mutation syncHub($id: ID!) {\n    syncHub(id: $id) {\n      id\n      RepoURL\n      RepoBranch\n      IsAvailable\n      TotalExp\n      HubName\n    }\n  }\n"]))),rn=Object(H.gql)(y||(y=Object(M.a)(["\n  mutation deleteMyHub($hub_id: String!) {\n    deleteMyHub(hub_id: $hub_id)\n  }\n"]))),an=Object(H.gql)(h||(h=Object(M.a)(["\n  mutation generateSSHKey {\n    generaterSSHKey {\n      privateKey\n      publicKey\n    }\n  }\n"]))),on=Object(H.gql)(w||(w=Object(M.a)(["\n  mutation deleteCluster($cluster_id: String!) {\n    deleteClusterReg(cluster_id: $cluster_id)\n  }\n"]))),cn=Object(H.gql)(E||(E=Object(M.a)(["\n  mutation enableGitOps($gitConfig: GitConfig!) {\n    enableGitOps(config: $gitConfig)\n  }\n"]))),un=Object(H.gql)(I||(I=Object(M.a)(["\n  mutation updateGitOps($gitConfig: GitConfig!) {\n    updateGitOps(config: $gitConfig)\n  }\n"]))),ln=Object(H.gql)(S||(S=Object(M.a)(["\n  mutation disableGitOPs($data: String!) {\n    disableGitOps(project_id: $data)\n  }\n"]))),sn=Object(H.gql)(D||(D=Object(M.a)(["\n  mutation rerunChaosWorkflow($data: String!) {\n    reRunChaosWorkFlow(workflowID: $data)\n  }\n"]))),dn=Object(H.gql)($||($=Object(M.a)(["\n  mutation LeaveProject($data: MemberInput!) {\n    leaveProject(member: $data)\n  }\n"]))),pn=Object(H.gql)(C||(C=Object(M.a)(["\n  mutation createDataSource($DSInput: DSInput) {\n    createDataSource(datasource: $DSInput) {\n      ds_id\n      ds_name\n      ds_type\n      ds_url\n      access_type\n      auth_type\n      basic_auth_username\n      basic_auth_password\n      scrape_interval\n      query_timeout\n      http_method\n      project_id\n      health_status\n    }\n  }\n"]))),mn=Object(H.gql)(T||(T=Object(M.a)(["\n  mutation updateDataSource($DSInput: DSInput!) {\n    updateDataSource(datasource: $DSInput) {\n      ds_id\n      ds_name\n      ds_type\n      ds_url\n      access_type\n      auth_type\n      basic_auth_username\n      basic_auth_password\n      scrape_interval\n      query_timeout\n      http_method\n      project_id\n    }\n  }\n"]))),fn=Object(H.gql)(k||(k=Object(M.a)(["\n  mutation deleteDataSource($deleteDSInput: deleteDSInput!) {\n    deleteDataSource(input: $deleteDSInput)\n  }\n"]))),_n=Object(H.gql)(v||(v=Object(M.a)(["\n  mutation createDashBoard($createDBInput: createDBInput) {\n    createDashBoard(dashboard: $createDBInput) {\n      db_id\n    }\n  }\n"]))),bn=Object(H.gql)(A||(A=Object(M.a)(["\n  mutation updateDashboard($updateDBInput: updateDBInput) {\n    updateDashboard(dashboard: $updateDBInput)\n  }\n"]))),jn=Object(H.gql)(q||(q=Object(M.a)(["\n  mutation deleteDashboard($dbID: String) {\n    deleteDashboard(db_id: $dbID)\n  }\n"]))),On=(Object(H.gql)(R||(R=Object(M.a)(["\n  mutation updatePanel($panelInput: [panel]) {\n    updatePanel(panelInput: $panelInput)\n  }\n"]))),Object(H.gql)(L||(L=Object(M.a)(["\n  mutation createImageRegistry(\n    $projectID: String!\n    $imageRegistryInfo: imageRegistryInput!\n  ) {\n    createImageRegistry(\n      project_id: $projectID\n      imageRegistryInfo: $imageRegistryInfo\n    ) {\n      image_registry_info {\n        image_repo_name\n        image_registry_name\n        image_registry_type\n      }\n    }\n  }\n"])))),gn=Object(H.gql)(N||(N=Object(M.a)(["\n  mutation updateImageRegistry(\n    $imageRegistryID: String!\n    $projectID: String!\n    $imageRegistryInfo: imageRegistryInput!\n  ) {\n    updateImageRegistry(\n      image_registry_id: $imageRegistryID\n      project_id: $projectID\n      imageRegistryInfo: $imageRegistryInfo\n    ) {\n      image_registry_info {\n        image_repo_name\n        image_registry_name\n        image_registry_type\n      }\n    }\n  }\n"]))),yn=Object(H.gql)(x||(x=Object(M.a)(["\n  mutation syncWorkflow($workflowid: String!, $workflow_run_id: String!) {\n    syncWorkflow(workflowid: $workflowid, workflow_run_id: $workflow_run_id)\n  }\n"]))),hn=Object(H.gql)(P||(P=Object(M.a)(["\n  mutation deleteWorkflow($workflowid: String!, $workflow_run_id: String!) {\n    deleteChaosWorkflow(\n      workflowid: $workflowid\n      workflow_run_id: $workflow_run_id\n    )\n  }\n"])))},475:function(n,e,t){"use strict";var r;t.d(e,"a",(function(){return r})),function(n){n.SELECT_TEMPLATE="SELECT_TEMPLATE"}(r||(r={}))},482:function(n,e,t){"use strict";var r;t.d(e,"a",(function(){return r})),function(n){n.SELECT_DASHBOARD="SELECT_DASHBOARD"}(r||(r={}))},483:function(n,e,t){"use strict";var r;t.d(e,"a",(function(){return r})),function(n){n.SELECT_DATASOURCE="SELECT_DATASOURCE"}(r||(r={}))},484:function(n,e,t){"use strict";var r;t.d(e,"a",(function(){return r})),function(n){n.SELECT_NODE="SELECT_NODE"}(r||(r={}))},490:function(n,e,t){"use strict";var r;t.d(e,"a",(function(){return r})),function(n){n.SET_ALERT_STATE="SET_ALERT_STATE"}(r||(r={}))},572:function(n,e,t){"use strict";var r;t.d(e,"a",(function(){return r})),function(n){n.SELECT_IMAGE_REGISTRY="SELECT_IMAGE_REGISTRY"}(r||(r={}))},738:function(n,e,t){n.exports=t(963)},822:function(n,e){},824:function(n,e){},838:function(n,e){},840:function(n,e){},868:function(n,e){},869:function(n,e){},874:function(n,e){},876:function(n,e){},883:function(n,e){},902:function(n,e){},963:function(n,e,t){"use strict";t.r(e);var r={};t.r(r),t.d(r,"loadCommunityAnalytics",(function(){return g}));var a=t(0),o=t.n(a),c=t(30),u=t(7),i=t(263),l=t(643),s=t(232),d=t(41),p=t(453),m=t(982),f=t(229),_=t(366),b=t(457),j=t(454),O=t(147),g=function(){return function(n){n({type:O.a.COMMUNITY_ANALYTICS_LOADING,payload:!0}),fetch("".concat(s.a.analytics.url)).then((function(n){return n.json()})).then((function(e){n({type:O.a.COMMUNITY_ANALYTICS_SUCCESS,payload:e})})).catch((function(){n({type:O.a.COMMUNITY_ANALYTICS_ERROR,payload:!0})}))}},y=t(130),h=t(149),w=t(228),E=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(1),t.e(40)]).then(t.bind(null,3476))})),I=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(2),t.e(3),t.e(4),t.e(17)]).then(t.bind(null,3465))})),S=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(2),t.e(5),t.e(6),t.e(14)]).then(t.bind(null,3457))})),D=Object(a.lazy)((function(){return Promise.all([t.e(31),t.e(39)]).then(t.bind(null,3477))})),$=Object(a.lazy)((function(){return t.e(30).then(t.bind(null,3478))})),C=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(3),t.e(4),t.e(5),t.e(16)]).then(t.bind(null,3462))})),T=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(1),t.e(28)]).then(t.bind(null,3467))})),k=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(7),t.e(20),t.e(1),t.e(38)]).then(t.bind(null,3464))})),v=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(3),t.e(4),t.e(27),t.e(29)]).then(t.bind(null,3458))})),A=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(1),t.e(33)]).then(t.bind(null,3469))})),q=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(2),t.e(9),t.e(1),t.e(35)]).then(t.bind(null,3470))})),R=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(5),t.e(8),t.e(25),t.e(24)]).then(t.bind(null,3479))})),L=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(2),t.e(5),t.e(22),t.e(23)]).then(t.bind(null,3456))})),N=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(1),t.e(37)]).then(t.bind(null,3472))})),x=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(2),t.e(7),t.e(9),t.e(21)]).then(t.bind(null,3463))})),P=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(2),t.e(3),t.e(4),t.e(12)]).then(t.bind(null,3460))})),M=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(1),t.e(34)]).then(t.bind(null,3473))})),H=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(4),t.e(6),t.e(8),t.e(19)]).then(t.bind(null,3459))})),W=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(2),t.e(3),t.e(6),t.e(18)]).then(t.bind(null,3461))})),U=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(6),t.e(1),t.e(26)]).then(t.bind(null,3468))})),G=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(3),t.e(4),t.e(1),t.e(32)]).then(t.bind(null,3474))})),B=Object(a.lazy)((function(){return Promise.all([t.e(0),t.e(1),t.e(36)]).then(t.bind(null,3466))})),K=function(){var n=window.location.pathname.split("/")[1],e=Object(w.a)(),t=Object(w.b)(),r=Object(h.e)(),c=Object(a.useState)(e),i=Object(d.a)(c,2),l=i[0],s=i[1],p=Object(a.useState)(t),j=Object(d.a)(p,2),O=j[0],g=j[1],K=Object(a.useState)(!1),Y=Object(d.a)(K,2),F=Y[0],z=Y[1],V=Object(h.d)(),Q=Object(u.useQuery)(_.K,{skip:""!==l&&void 0!==l,onCompleted:function(e){e.listProjects&&e.listProjects.forEach((function(e){e.members.forEach((function(t){t.user_id===V&&"Owner"===t.role&&(s(e.id),g(t.role),y.b.push({pathname:"/".concat(n),search:"?projectID=".concat(e.id,"&projectRole=").concat(t.role)}))}))}))},fetchPolicy:"cache-and-network"}).loading;y.b.listen((function(n){"/login"!==n.pathname&&(s(Object(w.a)()),g(Object(w.b)()))}));var J=Object(u.useQuery)(_.x,{variables:{projectID:l},onCompleted:function(n){(null===n||void 0===n?void 0:n.getProject)&&(n.getProject.members.forEach((function(e){e.user_id===V&&(z(!0),s(n.getProject.id),g(e.role))})),F||(s(""),g("")))},onError:function(){F||(s(""),g(""))}}).loading;return""===Object(h.a)()?o.a.createElement(o.a.Fragment,null,Q?o.a.createElement(f.a,null):o.a.createElement(m.d,null,o.a.createElement(m.b,{exact:!0,path:"/login",component:D}),o.a.createElement(m.a,{exact:!0,path:"/api-doc",to:"/api-doc/index.html"}),o.a.createElement(m.a,{to:"/login"}))):l?o.a.createElement(o.a.Fragment,null,J&&Q?o.a.createElement(f.a,null):o.a.createElement(m.d,null,o.a.createElement(m.b,{exact:!0,path:"/home",component:T}),o.a.createElement(m.a,{exact:!0,path:"/",to:"/home"}),o.a.createElement(m.b,{exact:!0,path:"/workflows",component:I}),o.a.createElement(m.b,{exact:!0,path:"/analytics",component:P}),o.a.createElement(m.b,{exact:!0,path:"/analytics/datasource/create",component:function(){return o.a.createElement(M,{configure:!1})}}),o.a.createElement(m.b,{exact:!0,path:"/analytics/datasource/configure",component:function(){return o.a.createElement(M,{configure:!0})}}),o.a.createElement(m.b,{exact:!0,path:"/analytics/dashboard/create",component:function(){return o.a.createElement(H,{configure:!1})}}),o.a.createElement(m.b,{exact:!0,path:"/analytics/dashboard/configure",component:function(){return o.a.createElement(H,{configure:!0})}}),o.a.createElement(m.b,{exact:!0,path:"/analytics/application-dashboard",component:function(){return o.a.createElement(W,null)}}),o.a.createElement(m.b,{exact:!0,path:"/create-workflow",component:S}),o.a.createElement(m.b,{exact:!0,path:"/workflows/:workflowRunId",component:C}),o.a.createElement(m.b,{exact:!0,path:"/workflows/schedule/:scheduleProjectID/:workflowName",component:R}),o.a.createElement(m.b,{exact:!0,path:"/workflows/schedule/:scheduleProjectID/:workflowName/set",component:L}),o.a.createElement(m.b,{exact:!0,path:"/workflows/analytics/:workflowRunId",component:x}),o.a.createElement(m.b,{exact:!0,path:"/community",component:k}),o.a.createElement(m.b,{exact:!0,path:"/targets",component:q}),o.a.createElement(m.b,{exact:!0,path:"/target-connect",component:N}),o.a.createElement(m.b,{exact:!0,path:"/myhub",component:U}),o.a.createElement(m.b,{exact:!0,path:"/myhub/:hubname",component:G}),o.a.createElement(m.b,{exact:!0,path:"/myhub/:hubname/:chart/:experiment",component:B}),"Owner"===O?o.a.createElement(m.b,{path:"/settings",component:v}):o.a.createElement(m.a,{to:{pathname:"/home",search:"?projectID=".concat(l,"&projectRole=").concat(O)}}),r===b.d.admin?o.a.createElement(m.b,{path:"/usage",component:A}):o.a.createElement(m.a,{to:{pathname:"/home",search:"?projectID=".concat(l,"&projectRole=").concat(O)}}),o.a.createElement(m.b,{exact:!0,path:"/404",component:E}),o.a.createElement(m.a,{exact:!0,path:"/getStarted",to:"/home"}),o.a.createElement(m.a,{exact:!0,path:"/workflows/schedule",to:"/workflows"}),o.a.createElement(m.a,{exact:!0,path:"/workflows/template",to:"/workflows"}),o.a.createElement(m.a,{exact:!0,path:"/analytics/overview",to:"/analytics"}),o.a.createElement(m.a,{exact:!0,path:"/analytics/litmusdashboard",to:"/analytics"}),o.a.createElement(m.a,{exact:!0,path:"/analytics/kubernetesdashborad",to:"/analytics"}),o.a.createElement(m.a,{exact:!0,path:"/analytics/datasource",to:"/analytics"}),o.a.createElement(m.a,{exact:!0,path:"/api-doc",to:"/api-doc/index.html"}),o.a.createElement(m.a,{to:"/404"}))):o.a.createElement(o.a.Fragment,null,Q?o.a.createElement(f.a,null):o.a.createElement(m.d,null,o.a.createElement(m.b,{exact:!0,path:"/getStarted",component:$}),o.a.createElement(m.a,{exact:!0,path:"/api-doc",to:"/api-doc/index.html"})))};var Y=function(){var n=Object(j.a)(r),e=Object(h.a)();return Object(a.useEffect)((function(){""!==e&&n.loadCommunityAnalytics()}),[e]),o.a.createElement(p.i,null,o.a.createElement(a.Suspense,{fallback:o.a.createElement("div",{style:{height:"100vh"}},o.a.createElement(f.a,null))},o.a.createElement(m.c,{history:y.b},o.a.createElement(K,null))))},F=t(13),z=t(668),V=t(669),Q=t(148);var J=function(n,e){var t=new u.HttpLink({uri:n}),r=Object(z.a)((function(n,e){var t=e.headers,r=Object(h.a)();return{headers:Object(F.a)(Object(F.a)({},t),{},{authorization:r})}})),a=new V.a({uri:e,options:{reconnect:!0,lazy:!0}}),o=Object(u.split)((function(n){var e=n.query,t=Object(Q.e)(e);return"OperationDefinition"===t.kind&&"subscription"===t.operation}),r.concat(a),r.concat(t));return new u.ApolloClient({link:o,cache:new u.InMemoryCache})},X=Object(y.a)(),Z=X.persistor,nn=X.store,en=J("".concat(s.a.grahqlEndpoint,"/query"),"".concat(s.a.grahqlEndpointSubscription,"/query")),tn=function(){return a.createElement(u.ApolloProvider,{client:en},a.createElement(i.a,{store:nn},a.createElement(l.a,{persistor:Z},a.createElement(Y,null))))},rn=t(448),an=t(671),on=t(673),cn=t(1002),un=t(485),ln=t.n(un);rn.a.use(an.a).use(on.a).use(cn.e).init({fallbackLng:"en",debug:!0,backend:{loadPath:"/locales/{{lng}}/{{ns}}.yaml",parse:function(n){return ln.a.load(n)}},interpolation:{escapeValue:!1}});rn.a;var sn=document.getElementById("root");c.render(a.createElement(tn,null),sn)}},[[738,11,13]]]);
//# sourceMappingURL=main.97c577f0.chunk.js.map