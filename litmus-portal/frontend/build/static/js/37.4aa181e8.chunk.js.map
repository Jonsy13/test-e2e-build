{"version":3,"sources":["components/Button/BackButton/styles.ts","components/Button/BackButton/index.tsx","../node_modules/@material-ui/icons/DoneAllTwoTone.js","views/Targets/TargetCopy/styles.ts","views/Targets/TargetCopy/index.tsx","pages/ConnectTarget/styles.ts","pages/ConnectTarget/index.tsx"],"names":["useStyles","makeStyles","theme","btn","display","textTransform","background","text","fontSize","margin","spacing","color","palette","hint","BackButton","onClick","classes","t","useTranslation","IconButton","size","className","history","goBack","src","alt","Typography","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","root","border","main","borderRadius","marginTop","commandContainer","flexDirection","justifyContent","padding","copiedDiv","textAlign","secondary","backgroundColor","dark","command","wordWrap","whiteSpace","letterSpacing","fontWeight","copyIcon","paddingRight","TargetCopy","useState","copying","setCopying","copyTextToClipboard","navigator","clipboard","writeText","catch","err","console","error","setTimeout","window","prompt","fallbackCopyTextToClipboard","startIcon","container","content","connectTarget","loader","textalign","linkTargetImg","paddingTop","ConnectTarget","Scaffold","variant","Paper","href","target","rel"],"mappings":"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","file":"static/js/37.4aa181e8.chunk.js","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  btn: {\n    display: 'flex',\n    textTransform: 'none',\n    '&:hover': {\n      background: 'none',\n    },\n  },\n  text: {\n    fontSize: '1rem',\n    margin: theme.spacing(0, 1),\n    color: theme.palette.text.hint,\n  },\n}));\n\nexport default useStyles;\n","import { IconButton, IconButtonProps, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { history } from '../../../redux/configureStore';\nimport useStyles from './styles';\n\nconst BackButton: React.FC<IconButtonProps> = ({ onClick }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <IconButton\n      size=\"medium\"\n      className={classes.btn}\n      onClick={onClick ?? (() => history.goBack())}\n    >\n      <img src=\"/icons/back.svg\" alt=\"back\" />\n      <Typography className={classes.text}>{t('button.backButton')}</Typography>\n    </IconButton>\n  );\n};\n\nexport default BackButton;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z\"\n}), 'DoneAllTwoTone');\n\nexports.default = _default;","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: `1px solid ${theme.palette.border.main}`,\n    borderRadius: '0.1875rem',\n    marginTop: theme.spacing(4),\n  },\n  commandContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: theme.spacing(2),\n  },\n  copiedDiv: {\n    textAlign: 'center',\n    borderRadius: '0.1875rem',\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.secondary.dark,\n    padding: theme.spacing(1, 0),\n  },\n  command: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    wordWrap: 'break-word',\n    whiteSpace: 'pre-wrap',\n    color: theme.palette.text.hint,\n    letterSpacing: 1,\n    fontWeight: 500,\n  },\n  copyIcon: {\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import { Typography } from '@material-ui/core';\nimport Done from '@material-ui/icons/DoneAllTwoTone';\nimport { ButtonOutlined } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\nconst TargetCopy: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [copying, setCopying] = useState(false);\n\n  function fallbackCopyTextToClipboard(text: string) {\n    // eslint-disable-next-line no-alert\n    window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n  }\n\n  function copyTextToClipboard(text: string) {\n    if (!navigator.clipboard) {\n      fallbackCopyTextToClipboard(text);\n      return;\n    }\n    setCopying(true);\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n\n    setTimeout(() => setCopying(false), 3000);\n  }\n\n  const command = 'litmusctl agent connect';\n\n  return (\n    <div className={classes.root}>\n      {copying && (\n        <Typography className={classes.copiedDiv}>\n          {t('targets.copy.copying')}\n        </Typography>\n      )}\n      <div className={classes.commandContainer}>\n        <Typography className={classes.command}>$ {command}</Typography>\n        <ButtonOutlined\n          startIcon={\n            !copying ? (\n              <img\n                className={classes.copyIcon}\n                src=\"/icons/copy.svg\"\n                alt=\"copy\"\n              />\n            ) : (\n              <Done className={classes.copyIcon} />\n            )\n          }\n          onClick={() => copyTextToClipboard(command)}\n        >\n          {copying ? (\n            <Typography>{t('targets.copy.copied')}</Typography>\n          ) : (\n            <Typography>{t('targets.copy.copy')}</Typography>\n          )}\n        </ButtonOutlined>\n      </div>\n    </div>\n  );\n};\n\nexport default TargetCopy;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(5),\n  },\n  container: {\n    margin: theme.spacing(2.5, 1.5, 0, 1.5),\n  },\n  content: {\n    borderRadius: '0.1875rem',\n    padding: theme.spacing(4),\n    marginTop: theme.spacing(4),\n  },\n  connectTarget: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  loader: {\n    display: 'flex',\n    margin: theme.spacing(6, 0, 0, 10),\n    textalign: 'center',\n  },\n  linkTargetImg: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import { Paper, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport BackButton from '../../components/Button/BackButton';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport TargetCopy from '../../views/Targets/TargetCopy';\nimport useStyles from './styles';\n\nconst ConnectTarget: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Scaffold>\n      <section className={classes.root}>\n        <BackButton />\n        <div className={classes.container}>\n          <Typography variant=\"h3\">\n            {t('targets.connectHome.connectText')}\n          </Typography>\n          <Paper className={classes.content}>\n            <div className={classes.connectTarget}>\n              <div>\n                <Typography variant=\"h5\">\n                  {t('targets.newTarget.head')}\n                </Typography>\n                <br />\n                <Typography>1. {t('targets.newTarget.head1')}</Typography>\n                <Typography>\n                  2.{' '}\n                  <a\n                    href=\"https://github.com/litmuschaos/litmusctl/blob/master/README.md\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {t('targets.newTarget.head2')}\n                  </a>\n                </Typography>\n                <Typography>3. {t('targets.newTarget.head3')}</Typography>\n              </div>\n              <img\n                className={classes.linkTargetImg}\n                src=\"icons/connectTarget.svg\"\n                alt=\"link target\"\n              />\n            </div>\n\n            <TargetCopy />\n          </Paper>\n        </div>\n      </section>\n    </Scaffold>\n  );\n};\nexport default ConnectTarget;\n"],"sourceRoot":""}