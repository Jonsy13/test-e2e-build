{"version":3,"sources":["utils/datesModifier.ts","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","utils/sort.ts","views/Targets/BrowseCluster/styles.ts","views/Targets/BrowseCluster/HeaderSection.tsx","views/Targets/BrowseCluster/TableData.tsx","views/Targets/BrowseCluster/index.tsx","pages/Targets/styles.ts","pages/Targets/index.tsx"],"names":["timeDifferenceForDate","date","current","previous","elapsed","milliSecondsPerMinute","Math","round","milliSecondsPerHour","milliSecondsPerDay","timeDifference","Date","getTime","createSvgIcon","React","d","sortAlphaAsc","a","b","sortAlphaDesc","sortNumAsc","sortNumDesc","useStyles","makeStyles","theme","headerSection","width","height","display","flexDirection","alignContent","alignItems","justifyContent","border","borderColor","palette","main","backgroundColor","common","white","popOver","marginTop","spacing","search","fontSize","marginRight","borderBottom","marginLeft","formControl","margin","minWidth","selectText","padding","selectDate","borderRadius","secondary","textTransform","displayDate","root","background","paper","tableMain","webkitBoxShadow","black","dark","tableRows","color","text","primary","dataRow","headerStatus","paddingLeft","workflowName","borderRight","targetsIcon","headData","tableDataStatus","progressBar","steps","workflowNameData","maxWidth","targetCluster","clusterName","reliabiltyData","stepsData","stepsDataTime","stepsDataschedule","optionBtn","timeDiv","success","iconButton","tableCell","expDiv","cursor","btnImg","btnText","datePickerColor","statusFont","body","marginBottom","typo","textSecond","disconnectForever","buttonGroup","gap","dateBtn","w7","delDiv","error","bin","otherTC","deleteCluster","boxShadow","customTooltip","light","HeaderSection","searchValue","statusValue","clusterValue","isOpen","popAnchorEl","changeSearch","changeStatus","changeCluster","popOverClick","popOverClose","classes","useTheme","useState","startDate","endDate","key","state","setState","t","useTranslation","className","InputBase","id","placeholder","value","onChange","startAdornment","InputAdornment","position","FormControl","variant","focused","InputLabel","Select","label","MenuItem","disabled","onClick","Typography","IconButton","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","item","selection","showSelectionPreview","moveRangeOnFirstSelection","months","ranges","direction","editableDateInputs","rangeColors","showMonthAndYearPickers","TableData","data","deleteRow","userRole","getProjectRole","setOpen","TableCell","is_cluster_confirmed","is_active","cluster_name","updated","parseInt","toString","resDate","moment","format","formatDate","updated_at","no_of_workflows","no_of_schedules","last_workflow_timestamp","Tooltip","tooltip","disableFocusListener","disableHoverListener","placement","title","alt","src","modalActions","align","cluster_id","BrowseCluster","projectID","getProjectID","status","cluster","filters","setFilters","useQuery","GET_CLUSTER","variables","project_id","fetchPolicy","pollInterval","loading","useMutation","DELETE_CLUSTER","dateValue","fromDate","toDate","setHours","dateRange","setDateRange","name","sort","ascending","lastRun","sortData","setSortData","filteredData","getCluster","filter","toLowerCase","includes","cluster_type","undefined","x","y","created_at","pageNo","rowsPerPage","paginationData","setPaginationData","setPopAnchorEl","Boolean","clid","event","target","currentTarget","isDateOpen","selectFromDate","selectToDate","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","size","TableBody","colSpan","Loader","data-cy","slice","map","TablePagination","rowsPerPageOptions","component","count","length","page","onChangePage","_","onChangeRowsPerPage","appBar","header","scheduleBtn","Targets","Scaffold","history","push","pathname"],"mappings":"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","file":"static/js/35.5ca25c15.chunk.js","sourcesContent":["function timeDifference(current: number, previous: number) {\n  const milliSecondsPerMinute = 60 * 1000;\n  const milliSecondsPerHour = milliSecondsPerMinute * 60;\n  const milliSecondsPerDay = milliSecondsPerHour * 24;\n  const milliSecondsPerMonth = milliSecondsPerDay * 30;\n  const milliSecondsPerYear = milliSecondsPerDay * 365;\n\n  const elapsed = current - previous;\n\n  if (elapsed < milliSecondsPerMinute / 3) {\n    return 'Just now';\n  }\n\n  if (elapsed < milliSecondsPerMinute) {\n    return 'less than 1 min ago';\n  }\n  if (elapsed < milliSecondsPerHour) {\n    return `${Math.round(elapsed / milliSecondsPerMinute)} mins ago`;\n  }\n  if (elapsed < milliSecondsPerDay) {\n    return `${Math.round(elapsed / milliSecondsPerHour)} hours ago`;\n  }\n  if (elapsed < milliSecondsPerMonth) {\n    return `${Math.round(elapsed / milliSecondsPerDay)} days ago`;\n  }\n  if (elapsed < milliSecondsPerYear) {\n    return `${Math.round(elapsed / milliSecondsPerMonth)} months ago`;\n  }\n  return `${Math.round(elapsed / milliSecondsPerYear)} years ago`;\n}\n\nconst timeDifferenceForDate = (date: any) => {\n  const now = new Date().getTime();\n  const updated = date * 1000;\n  return timeDifference(now, updated);\n};\n\nexport default timeDifferenceForDate;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","const sortAlphaAsc = (a: string, b: string): number =>\n  a === b ? 0 : a < b ? -1 : 1;\n\nconst sortAlphaDesc = (a: string, b: string): number =>\n  a === b ? 0 : a > b ? -1 : 1;\n\nconst sortNumAsc = (a: number, b: number): number =>\n  a === b ? 0 : a < b ? -1 : 1;\n\nconst sortNumDesc = (a: number, b: number): number =>\n  a === b ? 0 : a > b ? -1 : 1;\n\nexport { sortAlphaAsc, sortAlphaDesc, sortNumAsc, sortNumDesc };\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  // Header Section Properties\n  headerSection: {\n    width: '100%',\n    height: '5.625rem',\n    display: 'flex',\n    flexDirection: 'row',\n    alignContent: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '0.0625rem solid',\n    borderColor: theme.palette.border.main,\n    backgroundColor: theme.palette.common.white,\n  },\n  popOver: {\n    marginTop: theme.spacing(5),\n  },\n  search: {\n    fontSize: '1rem',\n    marginRight: 'auto',\n    borderBottom: `1px solid ${theme.palette.border.main}`,\n    marginLeft: theme.spacing(6.25),\n  },\n  // Form Select Properties\n  formControl: {\n    margin: theme.spacing(0.5),\n    marginRight: theme.spacing(2.5),\n    height: '2.5rem',\n    minWidth: '9rem',\n  },\n  selectText: {\n    height: '2.5rem',\n    padding: theme.spacing(0.5),\n  },\n  selectDate: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: '2.5rem',\n    minWidth: '9rem',\n    border: '1.7px solid',\n    borderRadius: '2rem',\n    borderColor: theme.palette.secondary.main,\n    marginRight: theme.spacing(3.75),\n    textTransform: 'none',\n  },\n  displayDate: {\n    marginLeft: theme.spacing(1),\n    width: '100%',\n  },\n  // Table and Table Data Properties\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  tableMain: {\n    marginTop: theme.spacing(4.25),\n    border: `1px solid ${theme.palette.border.main}`,\n    backgroundColor: theme.palette.common.white,\n    height: '28.219rem',\n    '&::-webkit-scrollbar': {\n      width: '0.2em',\n    },\n    '&::-webkit-scrollbar-track': {\n      webkitBoxShadow: `inset 0 0 6px ${theme.palette.common.black}`,\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: theme.palette.secondary.dark,\n    },\n  },\n  tableRows: {\n    padding: theme.spacing(4),\n    color: theme.palette.text.primary,\n    height: '4.6875rem',\n  },\n  dataRow: {\n    height: '4.6875rem',\n  },\n  headerStatus: {\n    paddingLeft: theme.spacing(7),\n    color: theme.palette.text.primary,\n  },\n  workflowName: {\n    borderRight: `1px solid ${theme.palette.border.main}`,\n    color: theme.palette.text.primary,\n  },\n  targetsIcon: {\n    paddingLeft: theme.spacing(1.5),\n  },\n  headData: {\n    color: theme.palette.text.primary,\n  },\n  tableDataStatus: {\n    paddingLeft: theme.spacing(5),\n  },\n  progressBar: {\n    width: '6.5rem',\n  },\n  steps: {\n    marginLeft: theme.spacing(5.625),\n  },\n  workflowNameData: {\n    maxWidth: '15.625rem',\n    borderRight: `1px solid ${theme.palette.border.main}`,\n    paddingLeft: theme.spacing(4),\n  },\n  targetCluster: {\n    paddingLeft: theme.spacing(3.75),\n    color: theme.palette.text.primary,\n  },\n  clusterName: {\n    marginLeft: theme.spacing(4),\n  },\n  reliabiltyData: {\n    width: '8.125rem',\n  },\n  stepsData: {\n    paddingLeft: theme.spacing(5),\n  },\n  stepsDataTime: {\n    paddingLeft: theme.spacing(7),\n  },\n  stepsDataschedule: {\n    paddingLeft: theme.spacing(8),\n  },\n  optionBtn: {\n    marginLeft: 'auto',\n  },\n  timeDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  success: {\n    color: theme.palette.primary.dark,\n  },\n  iconButton: {\n    width: '2rem',\n    height: '2rem',\n  },\n  tableCell: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  // Menu option with icon\n  expDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    cursor: 'pointer',\n  },\n  btnImg: {\n    width: '0.8125rem',\n    height: '0.8125rem',\n    marginTop: theme.spacing(0.375),\n  },\n  btnText: {\n    paddingLeft: theme.spacing(1.625),\n  },\n  // date picker\n  datePickerColor: {\n    color: theme.palette.secondary.dark,\n  },\n  // Table status\n  statusFont: {\n    fontSize: '0.725rem',\n  },\n  // Delete Cluster Modal\n  body: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: theme.spacing(7.5),\n  },\n  // styles for text\n  text: {\n    width: '31.93rem',\n    height: '5.875rem',\n    marginTop: theme.spacing(3.75),\n    marginBottom: theme.spacing(3.75),\n  },\n  typo: {\n    fontSize: '2rem',\n  },\n  textSecond: {\n    width: '29.06rem',\n    height: '1.6875rem',\n    marginTop: theme.spacing(1.875),\n    marginBottom: theme.spacing(3.75),\n  },\n  disconnectForever: {\n    fontSize: '1rem',\n    marginTop: theme.spacing(2),\n  },\n  // for yes or no buttons\n  buttonGroup: {\n    display: 'flex',\n    marginTop: theme.spacing(2.5),\n    justifyContent: 'space-between',\n    gap: '1rem',\n  },\n  dateBtn: {\n    marginRight: theme.spacing(2.5),\n  },\n  w7: { width: '7rem' },\n  // delete user\n  delDiv: {\n    maxWidth: '8.56rem',\n    display: 'flex',\n    marginTop: theme.spacing(3),\n    color: theme.palette.error.dark,\n  },\n  bin: {\n    marginRight: theme.spacing(1.485),\n  },\n  otherTC: {\n    maxWidth: '15.375rem',\n  },\n  deleteCluster: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  error: {\n    borderColor: theme.palette.error.main,\n    '&:hover': {\n      borderColor: theme.palette.error.main,\n      boxShadow: '',\n    },\n    '&$focused': {\n      backgroundColor: theme.palette.common.white,\n      borderColor: theme.palette.error.main,\n      color: theme.palette.error.main,\n    },\n  },\n  customTooltip: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.text.primary,\n    fontSize: '0.775rem',\n  },\n}));\n\nexport default useStyles;\n","import {\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Popover,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { ButtonOutlined } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport { useTranslation } from 'react-i18next';\nimport { useTheme } from '@material-ui/core/styles';\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport useStyles from './styles';\n\ninterface HeaderSectionProps {\n  searchValue: string;\n  statusValue: string;\n  clusterValue: string;\n  isOpen: boolean;\n  isDateOpen: boolean;\n  popAnchorEl: HTMLElement | null;\n  displayDate: string;\n  changeSearch: (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n  changeStatus: (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>,\n    child: React.ReactNode\n  ) => void;\n  changeCluster: (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>,\n    child: React.ReactNode\n  ) => void;\n  popOverClick: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  popOverClose: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  selectDate: (selectFromDate: string, selectToDate: string) => void;\n}\n\nconst HeaderSection: React.FC<HeaderSectionProps> = ({\n  searchValue,\n  statusValue,\n  clusterValue,\n  isOpen,\n  popAnchorEl,\n  displayDate,\n  changeSearch,\n  changeStatus,\n  changeCluster,\n  popOverClick,\n  popOverClose,\n  selectDate,\n}) => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n  const [state, setState] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection',\n    },\n  ]);\n  const { t } = useTranslation();\n  return (\n    <div>\n      <div className={classes.headerSection}>\n        {/* Search Field */}\n        <InputBase\n          id=\"input-with-icon-adornment\"\n          placeholder=\"Search\"\n          className={classes.search}\n          value={searchValue}\n          onChange={changeSearch}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          }\n        />\n\n        {/* Select Workflow */}\n        <FormControl\n          variant=\"outlined\"\n          className={classes.formControl}\n          color=\"primary\"\n          focused\n        >\n          <InputLabel className={classes.selectText}>\n            {t('workflowCluster.header.status')}\n          </InputLabel>\n          <Select\n            value={statusValue}\n            onChange={changeStatus}\n            label=\"Cluster Status\"\n            className={classes.selectText}\n          >\n            <MenuItem value=\"All\">\n              {t('workflowCluster.header.formControl.menu')}\n            </MenuItem>\n            <MenuItem value=\"true\">\n              {t('workflowCluster.header.formControl.menu1')}\n            </MenuItem>\n            <MenuItem value=\"false\">\n              {t('workflowCluster.header.formControl.menu2')}\n            </MenuItem>\n            <MenuItem value=\"pending\">\n              {t('workflowCluster.header.formControl.menu6')}\n            </MenuItem>\n          </Select>\n        </FormControl>\n\n        {/* Select Cluster */}\n        <FormControl\n          variant=\"outlined\"\n          className={classes.formControl}\n          color=\"primary\"\n          focused\n        >\n          <InputLabel className={classes.selectText}>\n            {t('workflowCluster.header.target')}\n          </InputLabel>\n          <Select\n            value={clusterValue}\n            onChange={changeCluster}\n            label=\"Target Agent\"\n            className={classes.selectText}\n          >\n            <MenuItem value=\"All\">\n              {t('workflowCluster.header.formControl.menu')}\n            </MenuItem>\n            <MenuItem value=\"Internal\">\n              {t('workflowCluster.header.formControl.menu4')}\n            </MenuItem>\n            <MenuItem value=\"External\">\n              {t('workflowCluster.header.formControl.menu5')}\n            </MenuItem>\n          </Select>\n        </FormControl>\n        <div className={classes.dateBtn}>\n          <ButtonOutlined disabled={false} onClick={popOverClick}>\n            <Typography className={classes.displayDate}>\n              {displayDate}\n              <IconButton className={classes.iconButton}>\n                {isOpen ? <KeyboardArrowDownIcon /> : <ChevronRightIcon />}\n              </IconButton>\n            </Typography>\n          </ButtonOutlined>\n        </div>\n        <Popover\n          open={isOpen}\n          anchorEl={popAnchorEl}\n          onClose={popOverClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          className={classes.popOver}\n        >\n          <DateRangePicker\n            onChange={(item) => {\n              setState([(item as any).selection]);\n              selectDate(\n                `${(item as any).selection.startDate}`,\n                `${(item as any).selection.endDate}`\n              );\n            }}\n            showSelectionPreview\n            moveRangeOnFirstSelection={false}\n            months={1}\n            ranges={state}\n            direction=\"vertical\"\n            editableDateInputs\n            rangeColors={[palette.secondary.dark]}\n            showMonthAndYearPickers\n          />\n        </Popover>\n      </div>\n    </div>\n  );\n};\nexport default HeaderSection;\n","import { IconButton, TableCell, Tooltip, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, LightPills, Modal } from 'litmus-ui';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Cluster } from '../../../models/graphql/clusterData';\nimport timeDifferenceForDate from '../../../utils/datesModifier';\nimport { getProjectRole } from '../../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface TableDataProps {\n  data: Cluster;\n  deleteRow: (clid: string) => void;\n}\n\nconst TableData: React.FC<TableDataProps> = ({ data, deleteRow }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM YYYY');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  const userRole = getProjectRole();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    deleteRow(data.cluster_id);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <TableCell className={classes.tableDataStatus}>\n        {data.is_cluster_confirmed === false ? (\n          <LightPills\n            variant=\"warning\"\n            label={t('workflowCluster.header.formControl.menu6')}\n          />\n        ) : data.is_cluster_confirmed === true && data.is_active ? (\n          <LightPills\n            variant=\"success\"\n            label={t('workflowCluster.header.formControl.menu1')}\n          />\n        ) : (\n          <LightPills\n            variant=\"danger\"\n            label={t('workflowCluster.header.formControl.menu2')}\n          />\n        )}\n      </TableCell>\n      <TableCell className={classes.workflowNameData}>\n        <Typography>{data.cluster_name}</Typography>\n      </TableCell>\n      <TableCell className={classes.stepsDataTime}>\n        {formatDate(data.updated_at)}\n      </TableCell>\n      <TableCell>\n        <Typography className={classes.stepsData}>\n          {data.no_of_workflows}\n        </Typography>\n      </TableCell>\n      <TableCell className={classes.stepsDataschedule}>\n        <Typography>{data.no_of_schedules}</Typography>\n      </TableCell>\n      <TableCell className={classes.stepsData}>\n        {data.last_workflow_timestamp === '0' ? (\n          <Typography>Not Yet</Typography>\n        ) : (\n          timeDifferenceForDate(data.last_workflow_timestamp)\n        )}\n      </TableCell>\n      <TableCell>\n        <Tooltip\n          classes={{\n            tooltip: classes.customTooltip,\n          }}\n          disableFocusListener\n          disableHoverListener={userRole !== 'Viewer'}\n          placement=\"bottom\"\n          title=\"Insufficient Permissions\"\n        >\n          <div className={classes.deleteCluster}>\n            <div className={classes.targetsIcon}>\n              <IconButton\n                disabled={userRole === 'Viewer'}\n                onClick={handleClick}\n              >\n                <img alt=\"delete\" src=\"./icons/ClusterDisconnect.svg\" />\n              </IconButton>\n            </div>\n            <div>\n              <Typography>{t('targets.modalDelete.disconnect')}</Typography>\n            </div>\n          </div>\n        </Tooltip>\n        <div>\n          {open && (\n            <div>\n              <Modal\n                open={open}\n                onClose={() => {\n                  setOpen(false);\n                }}\n                width=\"60%\"\n                modalActions={\n                  <ButtonOutlined\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    &#x2715;\n                  </ButtonOutlined>\n                }\n              >\n                <div className={classes.body}>\n                  <img src=\"/icons/DisconnectIcon.svg\" alt=\"disconnect\" />\n                  <div className={classes.text}>\n                    <Typography className={classes.typo} align=\"center\">\n                      {t('targets.modalDelete.head1')} <br />\n                      {t('targets.modalDelete.head2')}\n                      <br />\n                      <strong>\n                        {data.cluster_name} {t('targets.modalDelete.head4')}\n                      </strong>\n                    </Typography>\n                  </div>\n                  <div className={classes.textSecond}>\n                    <Typography\n                      className={classes.disconnectForever}\n                      align=\"center\"\n                    >\n                      {t('targets.modalDelete.head3')}\n                    </Typography>\n                  </div>\n                  <div className={classes.buttonGroup}>\n                    <ButtonOutlined\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <> {t('targets.modalDelete.no')}</>\n                    </ButtonOutlined>\n\n                    <ButtonFilled\n                      disabled={userRole === 'Viewer'}\n                      variant=\"error\"\n                      onClick={handleClose}\n                      className={classes.w7}\n                    >\n                      <>{t('targets.modalDelete.yes')}</>\n                    </ButtonFilled>\n                  </div>\n                </div>\n              </Modal>\n            </div>\n          )}\n        </div>\n      </TableCell>\n    </>\n  );\n};\nexport default TableData;\n","import { useMutation, useQuery } from '@apollo/client';\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../components/Loader';\nimport { DELETE_CLUSTER, GET_CLUSTER } from '../../../graphql';\nimport {\n  Cluster,\n  Clusters,\n  ClusterVars,\n  DeleteCluster,\n} from '../../../models/graphql/clusterData';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport {\n  sortAlphaAsc,\n  sortAlphaDesc,\n  sortNumAsc,\n  sortNumDesc,\n} from '../../../utils/sort';\nimport HeaderSection from './HeaderSection';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\ninterface FilterOptions {\n  search: string;\n  status: string;\n  cluster: string;\n}\n\ninterface SortData {\n  name: { sort: boolean; ascending: boolean };\n  lastRun: { sort: boolean; ascending: boolean };\n}\n\ninterface DateData {\n  dateValue: string;\n  fromDate: string;\n  toDate: string;\n}\n\ninterface PaginationData {\n  pageNo: number;\n  rowsPerPage: number;\n}\n\nconst BrowseCluster: React.FC = () => {\n  const classes = useStyles();\n  const projectID = getProjectID();\n\n  const [filters, setFilters] = useState<FilterOptions>({\n    search: '',\n    status: 'All',\n    cluster: 'All',\n  });\n\n  const { data, loading, error } = useQuery<Clusters, ClusterVars>(\n    GET_CLUSTER,\n    {\n      variables: {\n        project_id: projectID,\n      },\n      fetchPolicy: 'cache-and-network',\n      pollInterval: 3000,\n    }\n  );\n\n  // Apollo mutation to delete the selected Target Cluster\n  const [deleteCluster] = useMutation<DeleteCluster>(DELETE_CLUSTER);\n\n  const [dateRange, setDateRange] = React.useState<DateData>({\n    dateValue: 'Select a period',\n    fromDate: new Date(0).toString(),\n    toDate: new Date(new Date().setHours(23, 59, 59)).toString(),\n  });\n\n  const [sortData, setSortData] = useState<SortData>({\n    name: { sort: false, ascending: true },\n    lastRun: { sort: true, ascending: true },\n  });\n\n  const filteredData = data?.getCluster\n    .filter((dataRow) =>\n      dataRow.cluster_name.toLowerCase().includes(filters.search.toLowerCase())\n    )\n    .filter((dataRow) => {\n      if (filters.status === 'All') {\n        return true;\n      }\n      if (!dataRow.is_cluster_confirmed) {\n        const p = 'pending';\n        return p.includes(filters.status.toLowerCase());\n      }\n      return dataRow.is_active\n        .toString()\n        .toLowerCase()\n        .includes(filters.status.toLowerCase());\n    })\n    .filter((dataRow) =>\n      filters.cluster === 'All'\n        ? true\n        : dataRow.cluster_type\n            .toLowerCase()\n            .includes(filters.cluster.toLowerCase())\n    )\n    .filter((dataRow) => {\n      return dateRange.fromDate && dateRange.toDate === undefined\n        ? true\n        : parseInt(dataRow.updated_at, 10) * 1000 >=\n            new Date(moment(dateRange.fromDate).format()).getTime() &&\n            parseInt(dataRow.updated_at, 10) * 1000 <=\n              new Date(moment(dateRange.toDate).format()).getTime();\n    })\n    .sort((a: Cluster, b: Cluster) => {\n      // Sorting based on unique fields\n      if (sortData.name.sort) {\n        const x = a.cluster_name;\n        const y = b.cluster_name;\n\n        return sortData.name.ascending\n          ? sortAlphaAsc(x, y)\n          : sortAlphaDesc(x, y);\n      }\n\n      if (sortData.lastRun.sort) {\n        const x = parseInt(a.created_at, 10);\n        const y = parseInt(b.created_at, 10);\n\n        return sortData.lastRun.ascending\n          ? sortNumAsc(y, x)\n          : sortNumDesc(y, x);\n      }\n\n      return 0;\n    });\n\n  const [paginationData, setPaginationData] = useState<PaginationData>({\n    pageNo: 0,\n    rowsPerPage: 5,\n  });\n\n  const [popAnchorEl, setPopAnchorEl] = React.useState<null | HTMLElement>(\n    null\n  );\n  const isOpen = Boolean(popAnchorEl);\n\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const handlePopOverClose = () => {\n    setPopAnchorEl(null);\n    setOpen(false);\n  };\n  const handlePopOverClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPopAnchorEl(event.currentTarget);\n    setOpen(true);\n  };\n\n  // Functions passed as props in the headerSeaction\n  const changeSearch = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setFilters({ ...filters, search: event.target.value as string });\n  };\n\n  const changeStatus = (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setFilters({ ...filters, status: event.target.value as string });\n  };\n\n  const changeCluster = (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setFilters({ ...filters, cluster: event.target.value as string });\n  };\n\n  const dateChange = (selectFromDate: string, selectToDate: string) => {\n    setDateRange({\n      dateValue: `${moment(selectFromDate)\n        .format('DD.MM.YYYY')\n        .toString()}-${moment(selectToDate).format('DD.MM.YYYY').toString()}`,\n      fromDate: new Date(new Date(selectFromDate).setHours(0, 0, 0)).toString(),\n      toDate: new Date(new Date(selectToDate).setHours(23, 59, 59)).toString(),\n    });\n  };\n  const { t } = useTranslation();\n\n  const deleteRow = (clid: string) => {\n    deleteCluster({\n      variables: { cluster_id: clid },\n    });\n  };\n\n  return (\n    <div>\n      <section className=\"Heading section\">\n        {/* Header Section */}\n        <HeaderSection\n          searchValue={filters.search}\n          changeSearch={changeSearch}\n          statusValue={filters.status}\n          changeStatus={changeStatus}\n          clusterValue={filters.cluster}\n          changeCluster={changeCluster}\n          popOverClick={handlePopOverClick}\n          popOverClose={handlePopOverClose}\n          isOpen={isOpen}\n          popAnchorEl={popAnchorEl}\n          isDateOpen={open}\n          displayDate={dateRange.dateValue}\n          selectDate={dateChange}\n        />\n      </section>\n      <Paper className={classes.root}>\n        <TableContainer className={classes.tableMain}>\n          <Table stickyHeader aria-label=\"simple table\">\n            <TableHead>\n              <TableRow className={classes.tableRows}>\n                {/* Status */}\n                <TableCell className={classes.headerStatus}>\n                  <div className={classes.tableCell}>\n                    <Typography>\n                      {t('workflowCluster.header.formControl.tableStatus')}\n                    </Typography>\n                    <IconButton\n                      aria-label=\"sort in descending order\"\n                      size=\"small\"\n                      onClick={() =>\n                        setSortData({\n                          ...sortData,\n                          lastRun: { sort: true, ascending: false },\n                        })\n                      }\n                    >\n                      <div className={classes.targetsIcon}>\n                        <img\n                          src=\"/icons/arrow_downward.svg\"\n                          alt=\"ConnectTarget icon\"\n                        />\n                      </div>\n                    </IconButton>\n                  </div>\n                </TableCell>\n                {/* Workflow Name */}\n                <TableCell className={classes.workflowName}>\n                  <div className={classes.tableCell}>\n                    <Typography>\n                      {t('workflowCluster.header.formControl.tableCluster')}\n                    </Typography>\n                    <IconButton\n                      aria-label=\"sort in descending\"\n                      size=\"small\"\n                      onClick={() =>\n                        setSortData({\n                          ...sortData,\n                          name: { sort: true, ascending: false },\n                        })\n                      }\n                    >\n                      <div className={classes.targetsIcon}>\n                        <img\n                          src=\"/icons/arrow_downward.svg\"\n                          alt=\"ConnectTarget icon\"\n                        />\n                      </div>\n                    </IconButton>\n                  </div>\n                </TableCell>\n                {/* Target Cluster */}\n                <TableCell>\n                  <Typography className={classes.targetCluster}>\n                    {t('workflowCluster.header.formControl.connectionDate')}\n                  </Typography>\n                </TableCell>\n\n                {/* No of Workflows */}\n                <TableCell className={classes.headData}>\n                  <Typography>\n                    {t('workflowCluster.header.formControl.noWorkflows')}\n                  </Typography>\n                </TableCell>\n\n                {/* No of Schedules */}\n                <TableCell className={classes.headData}>\n                  <div className={classes.tableCell}>\n                    <Typography>\n                      {t('workflowCluster.header.formControl.noSchedules')}\n                    </Typography>\n                  </div>\n                </TableCell>\n\n                {/* Last Run */}\n                <TableCell className={classes.headData}>\n                  <div className={classes.tableCell}>\n                    <Typography>\n                      {t('workflowCluster.header.formControl.run')}\n                    </Typography>\n                  </div>\n                </TableCell>\n\n                {/* Delete Cluster */}\n                <TableCell className={classes.headData}>\n                  <div className={classes.tableCell}>\n                    <Typography>\n                      {t('workflowCluster.header.formControl.disconnect')}\n                    </Typography>\n                  </div>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n\n            {/* Body */}\n            <TableBody>\n              {loading ? (\n                <TableRow>\n                  <TableCell colSpan={7}>\n                    <Loader />\n                  </TableCell>\n                </TableRow>\n              ) : error ? (\n                <TableRow>\n                  <TableCell data-cy=\"browseClusterError\" colSpan={7}>\n                    <Typography align=\"center\">\n                      {t('workflowCluster.header.formControl.fetchingError')}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ) : filteredData ? (\n                filteredData\n                  .slice(\n                    paginationData.pageNo * paginationData.rowsPerPage,\n                    paginationData.pageNo * paginationData.rowsPerPage +\n                      paginationData.rowsPerPage\n                  )\n                  .map((data: Cluster) => (\n                    <TableRow\n                      data-cy=\"browseClusterData\"\n                      key={data.cluster_id}\n                      className={classes.dataRow}\n                    >\n                      <TableData data={data} deleteRow={deleteRow} />\n                    </TableRow>\n                  ))\n              ) : (\n                <TableRow>\n                  <TableCell data-cy=\"browseClusterNoData\" colSpan={0}>\n                    <Typography align=\"center\">\n                      {t('workflowCluster.header.formControl.recordAvailable')}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        {/* Pagination Section */}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={filteredData?.length ?? 0}\n          rowsPerPage={paginationData.rowsPerPage}\n          page={paginationData.pageNo}\n          onChangePage={(_, page) =>\n            setPaginationData({ ...paginationData, pageNo: page })\n          }\n          onChangeRowsPerPage={(event) => {\n            setPaginationData({\n              ...paginationData,\n              pageNo: 0,\n              rowsPerPage: parseInt(event.target.value, 10),\n            });\n          }}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default BrowseCluster;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    background: 'transparent',\n    boxShadow: 'none',\n  },\n  header: {\n    width: '100%',\n    display: 'flex',\n    margin: theme.spacing(1, 0, 2.5, 0),\n  },\n  scheduleBtn: {\n    marginLeft: 'auto',\n  },\n  customTooltip: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.text.primary,\n    fontSize: '0.775rem',\n  },\n}));\n\nexport default useStyles;\n","import { Tooltip, Typography } from '@material-ui/core';\nimport { ButtonFilled } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport BrowseCluster from '../../views/Targets/BrowseCluster';\nimport useStyles from './styles';\n\nconst Targets: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const userRole = getProjectRole();\n\n  const handleCluster = () => {\n    history.push({\n      pathname: '/target-connect',\n      search: `?projectID=${projectID}&projectRole=${userRole}`,\n    });\n  };\n\n  return (\n    <Scaffold>\n      <section className=\"Header section\">\n        <div className={classes.header}>\n          <Typography variant=\"h3\">{t('targets.connectHome.head')}</Typography>\n          <Tooltip\n            classes={{\n              tooltip: classes.customTooltip,\n            }}\n            disableFocusListener\n            disableHoverListener={userRole !== 'Viewer'}\n            placement=\"bottom\"\n            title=\"Insufficient Permissions\"\n          >\n            <div className={classes.scheduleBtn}>\n              <ButtonFilled\n                variant=\"success\"\n                onClick={handleCluster}\n                disabled={userRole === 'Viewer'}\n              >\n                <div>{t('targets.connectHome.connectText')}</div>\n              </ButtonFilled>\n            </div>\n          </Tooltip>\n        </div>\n      </section>\n      <BrowseCluster />\n    </Scaffold>\n  );\n};\nexport default Targets;\n"],"sourceRoot":""}