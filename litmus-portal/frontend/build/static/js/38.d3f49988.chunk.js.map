{"version":3,"sources":["constants.ts","utils/formatCount.ts","components/InfoFilled/styles.ts","components/InfoFilled/index.tsx","components/LocalQuickActionCard/index.tsx","views/Community/CommunityTimeSeriesPlot/styles.ts","views/Community/CommunityTimeSeriesPlot/index.tsx","components/Button/BinarySwitch/index.tsx","views/Community/GeoMap/styles.ts","views/Community/GeoMap/CityMap.tsx","views/Community/GeoMap/CountryMap.tsx","views/Community/GeoMap/index.tsx","pages/Community/styles.ts","pages/Community/index.tsx"],"names":["constants","FeedbackForm","recurringEveryHour","recurringEveryDay","recurringEveryWeek","recurringEveryMonth","deployment","statefulset","daemonset","deploymentconfig","rollout","deployments","statefulsets","daemonsets","deploymentconfigs","rollouts","apps","v1","openshift","argoproj","v1alpha1","appns","appKind","appLabel","jobCleanUp","nodeselector","pods","services","nodes","replicasets","error","success","adminMode","chaosHub","workflow","dockerio","docker","litmus","public","private","formatCount","count","Math","floor","toFixed","useStyles","makeStyles","theme","infoFilledDiv","display","flexDirection","flexGrow","width","spacing","height","marginRight","borderRadius","breakpoints","down","infoFilledWrap","errorMessage","marginLeft","horizontalRule","opacity","value","textAlign","paddingTop","fontFamily","letterSpacing","fontWeight","fontSize","color","palette","common","white","plusBtn","statType","paddingLeft","paddingRight","horizontalLine","InfoFilledWrap","classes","t","useTranslation","useTheme","useSelector","state","communityData","loading","cardArray","warning","main","parseInt","github","experimentsCount","secondary","google","operatorInstalls","plus","primary","totalRuns","stars","map","individualCard","key","style","backgroundColor","className","Typography","Loader","Center","variant","LocalQuickActionCard","tabs","useActions","TabActions","projectID","getProjectID","userRole","getProjectRole","homePage","returningHome","analytics","community","emptyData","src","alt","text","quickActionData","onClick","history","push","pathname","search","Role","owner","changeSettingsTabs","window","open","filter","el","length","quickActions","title","formControl","margin","plotCard","paddingBottom","root","padding","plot","marginTop","Plot","createPlotlyComponent","Plotly","CommunityAnalyticsPlot","dailyOperators","dailyOperatorData","dailyExperiments","dailyExperimentData","monthlyOperators","monthlyOperatorData","monthlyExperiments","monthlyExperimentData","React","useState","x","y","y2","data","setData","name","currentPlotType","setPlotType","currentGranularityType","setGranularityType","cumulativeSum","timeSeriesCounts","sum","countSum","useEffect","Operators","Experiments","forEach","element","index","rawData","date","experimentRuns","dataObject","Date","string","datum","splits","split","processData","nodeStyle","document","getElementsByClassName","left","background","paper","err","console","FormControl","focused","InputLabel","htmlFor","Select","onChange","event","target","label","inputProps","id","MenuItem","type","mode","line","yaxis","layout","autosize","l","r","b","pad","xaxis","rangeselector","buttons","step","stepmode","rangeslider","visible","side","showgrid","yaxis2","overlaying","legend","traceorder","font","family","size","bgcolor","bordercolor","borderwidth","useResizeHandler","config","displaylogo","autosizable","responsive","frameMargins","showAxisDragHandles","showAxisRangeEntryBoxes","showTips","displayModeBar","toImageButtonOptions","format","filename","scale","onInitialized","AntSwitch","withStyles","createStyles","switchBase","grey","transform","borderColor","thumb","boxShadow","track","border","checked","Switch","BinarySwitch","handleChange","leftLabel","rightLabel","component","Grid","container","alignItems","justify","item","binarySwitch","cityMapMarkerStyles","fill","dark","stroke","cards","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","cityMapGeography","light","default","cityMapComposableMap","countryMapchartStyle","justifyContent","countryMapchartContentStyle","geoUrl","datageo","CityMap","geoCity","projection","center","zoom","geography","geographies","geo","rsmKey","latitude","longitude","coordinates","parseFloat","CountryMap","parsedData","geoCountry","unshift","chartType","options","colorAxis","colors","datalessRegionColor","defaultColor","rootProps","GeoMap","showCountry","setShowCountry","overflowX","mainHeader","LitmusAnalyticsBlock","marginBottom","LitmusAnalyticsDiv","header2","cardDiv","card","cardContent","LitmusOnDev","LitmusOnDevSpan","position","bottom","devToLogo","imgDiv","userDrag","followBtn","contrastText","black","textTransform","devToLink","textDecoration","LitmusUsedBlock","LitmusUsedDiv","quickActionCard","Header2","children","Community","Scaffold","InfoFilled","Paper","Card","CardContent","href","rel","Button"],"mappings":"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","file":"static/js/38.d3f49988.chunk.js","sourcesContent":["export const constants = {\n  // Litmus HomePage [Component Used in -> LocalQuickActionCard]\n  FeedbackForm: 'https://forms.gle/KQp5qj8MUneMSxLp9',\n\n  /**\n   * Schedule & Edit Schedule [Component Used in -> views/ScheduleWorkflow,\n   * pages/EditSchedule/Schedule]\n   * */\n  recurringEveryHour: 'everyHr',\n  recurringEveryDay: 'everyDay',\n  recurringEveryWeek: 'everyWeek',\n  recurringEveryMonth: 'everyMonth',\n\n  /**\n   * GVR and AppKind Constants [Component Used in -> TuneWorkflow/TargetApplication]\n   */\n  deployment: 'deployment',\n  statefulset: 'statefulset',\n  daemonset: 'daemonset',\n  deploymentconfig: 'deploymentconfig',\n  rollout: 'rollout',\n  deployments: 'deployments',\n  statefulsets: 'statefulsets',\n  daemonsets: 'daemonsets',\n  deploymentconfigs: 'deploymentconfigs',\n  rollouts: 'rollouts',\n  apps: 'apps',\n  v1: 'v1',\n  openshift: 'apps.openshift.io',\n  argoproj: 'argoproj.io',\n  v1alpha1: 'v1alpha1',\n  appns: 'appns',\n  appKind: 'appkind',\n  appLabel: 'applabel',\n  jobCleanUp: 'jobCleanUpPolicy',\n  nodeselector: 'nodeselector',\n  pods: 'pods',\n  services: 'services',\n  nodes: 'nodes',\n  replicasets: 'replicasets',\n  /**\n   * Template Saved Constants [Component Used in -> Save Template Modal]\n   */\n  error: 'error',\n  success: 'success',\n\n  /**\n   * Tuneworkflow index\n   */\n  adminMode: 'adminModeNamespace',\n  chaosHub: 'Chaos Hub',\n  workflow: 'Workflow',\n\n  /**\n   * Image Registry constants\n   */\n  dockerio: 'docker.io',\n  docker: 'Docker Hub',\n  litmus: 'litmuschaos',\n  public: 'Public',\n  private: 'Private',\n};\n","const formatCount = (count: number | undefined): string => {\n  if (count)\n    if (count >= 1000000)\n      /*\n      If count provided is greater than or equal to\n      1000000 then round it to the floor value and append\n      an 'M' to the end\n    */\n      return `${(Math.floor(count / 100000) / 10).toFixed(1)}M`;\n    /*\n      If count provided is greater than or equal to\n      1000 then round it to the floor value and append\n      a 'k' to the end\n    */ else if (count >= 1000)\n      return `${(Math.floor(count / 100) / 10).toFixed(1)}k`;\n    else return `${count}`;\n  return '0';\n};\n\nexport default formatCount;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  infoFilledDiv: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    width: theme.spacing(30),\n    height: theme.spacing(22),\n    marginRight: theme.spacing(3),\n    borderRadius: 3,\n    [theme.breakpoints.down('sm')]: {\n      width: '15rem',\n    },\n  },\n  infoFilledWrap: {\n    display: 'flex',\n    flexDirection: 'row',\n    width: theme.spacing(30),\n    height: theme.spacing(22),\n    flexGrow: 1,\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n    },\n  },\n  errorMessage: {\n    marginLeft: theme.spacing(10),\n  },\n  horizontalRule: {\n    width: theme.spacing(14),\n    opacity: 0.5,\n  },\n  value: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(4),\n    fontFamily: 'Ubuntu',\n    letterSpacing: theme.spacing(0.3),\n    fontWeight: 'bold',\n    fontSize: theme.spacing(4),\n    color: theme.palette.common.white,\n  },\n  plusBtn: {\n    fontSize: theme.spacing(2.5),\n    fontWeight: 'bold',\n  },\n  statType: {\n    textAlign: 'center',\n    fontSize: theme.spacing(2),\n    color: theme.palette.common.white,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  horizontalLine: {\n    width: 120,\n    opacity: 0.5,\n  },\n}));\n\nexport default useStyles;\n","import { useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport Center from '../../containers/layouts/Center';\nimport { RootState } from '../../redux/reducers';\nimport formatCount from '../../utils/formatCount';\nimport Loader from '../Loader';\nimport useStyles from './styles';\n\ninterface CardValueData {\n  color: string;\n  value: number;\n  statType: string;\n  plus?: boolean | undefined;\n}\n/*\n  Reusable Custom Information Card\n  Required Params: color, statType\n  Optional Params: plus, value\n*/\n\nconst InfoFilledWrap: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const theme = useTheme();\n  // Card Value Data fetched from Redux\n  const { communityData, loading, error } = useSelector(\n    (state: RootState) => state.communityData\n  );\n\n  const cardData: CardValueData[] = [\n    {\n      color: theme.palette.warning.main,\n      value: parseInt(communityData.github.experimentsCount, 10),\n      statType: 'Total Experiments',\n    },\n    {\n      color: theme.palette.secondary.main,\n      value: parseInt(communityData.google.operatorInstalls, 10),\n      statType: 'Operator Installs',\n      plus: true,\n    },\n    {\n      color: theme.palette.primary.main,\n      value: parseInt(communityData.google.totalRuns, 10),\n      statType: 'Total Experiment Runs',\n      plus: true,\n    },\n    {\n      color: theme.palette.error.main,\n      value: parseInt(communityData.github.stars, 10),\n      statType: 'GitHub Stars',\n    },\n  ];\n\n  const cardArray = cardData.map((individualCard) => {\n    return (\n      <div\n        key={individualCard.value}\n        style={{ backgroundColor: `${individualCard.color}` }}\n        className={classes.infoFilledDiv}\n      >\n        {/*\n          If value of plus is provided then render a different\n          plus icon else dont\n          \n          formatCount -> utility is used to convert large value to\n          their respective Thousands or Millions respectively\n        */}\n        {individualCard.plus ? (\n          <Typography className={classes.value}>\n            {formatCount(individualCard.value)}\n            <span className={classes.plusBtn}>+</span>\n          </Typography>\n        ) : (\n          <Typography className={classes.value}>\n            {formatCount(individualCard.value)}\n          </Typography>\n        )}\n        <hr className={classes.horizontalRule} />\n        <Typography className={classes.statType}>\n          {individualCard.statType}\n        </Typography>\n      </div>\n    );\n  });\n\n  return (\n    <div className={classes.infoFilledWrap}>\n      {loading ? (\n        <div>\n          <Loader />\n          <Typography>{t('internetIssues.fetchData')}</Typography>\n        </div>\n      ) : error ? (\n        <div className={classes.errorMessage}>\n          <Center>\n            <Typography variant=\"h4\">\n              {t('internetIssues.connectionError')}\n            </Typography>\n          </Center>\n        </div>\n      ) : (\n        cardArray\n      )}\n    </div>\n  );\n};\n\nexport default InfoFilledWrap;\n","/* eslint-disable no-return-assign */\nimport { QuickActionCard, QuickActionCardProps } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { constants } from '../../constants';\nimport { Role } from '../../models/graphql/user';\nimport useActions from '../../redux/actions';\nimport * as TabActions from '../../redux/actions/tabs';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\n\ntype Variant = 'homePage' | 'returningHome' | 'analytics' | 'community';\n\ninterface LocalQuickActionCardProps {\n  variant?: Variant;\n  className?: string;\n}\n\nconst LocalQuickActionCard: React.FC<LocalQuickActionCardProps> = ({\n  variant,\n  className,\n}) => {\n  const tabs = useActions(TabActions);\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const userRole = getProjectRole();\n  const homePage = variant === 'homePage';\n  const returningHome = variant === 'returningHome';\n  const analytics = variant === 'analytics';\n  const community = variant === 'community';\n  const emptyData: QuickActionCardProps = {\n    src: '',\n    alt: '',\n    text: '',\n  };\n  const quickActionData: Array<QuickActionCardProps> = [\n    analytics\n      ? {\n          src: './icons/addDataSource.svg',\n          alt: 'data source',\n          onClick: () =>\n            history.push({\n              pathname: '/analytics/datasource/select',\n              search: `?projectID=${projectID}&projectRole=${userRole}`,\n            }),\n          text: t('quickActionCard.addDataSource'),\n        }\n      : emptyData,\n    returningHome\n      ? {\n          src: '/icons/calendarWorkflowIcon.svg',\n          alt: 'workflow',\n          onClick: () =>\n            history.push({\n              pathname: '/create-workflow',\n              search: `?projectID=${projectID}&projectRole=${userRole}`,\n            }),\n          text: t('quickActionCard.scheduleWorkflow'),\n        }\n      : emptyData,\n    homePage || returningHome || analytics\n      ? {\n          src: '/icons/target.svg',\n          alt: 'agent',\n          onClick: () =>\n            history.push({\n              pathname: '/target-connect',\n              search: `?projectID=${projectID}&projectRole=${userRole}`,\n            }),\n          text: t('quickActionCard.connectNewAgent'),\n        }\n      : emptyData,\n\n    // TODO: settings only accessible by Owner\n    (homePage || returningHome || community || analytics) &&\n    getProjectRole() === Role.owner\n      ? {\n          src: '/icons/teamMember.svg',\n          alt: 'team',\n          onClick: () => {\n            tabs.changeSettingsTabs(1);\n            history.push({\n              pathname: '/settings',\n              search: `?projectID=${projectID}&projectRole=${userRole}`,\n            });\n          },\n          text: t('quickActionCard.inviteTeamMember'),\n        }\n      : emptyData,\n    homePage || community\n      ? {\n          src: '/icons/survey.svg',\n          alt: 'survey',\n          onClick: () => window.open(constants.FeedbackForm),\n          text: t('quickActionCard.quickSurvey'),\n        }\n      : emptyData,\n    homePage || community || analytics\n      ? {\n          src: '/icons/docs.svg',\n          alt: 'docs',\n          onClick: () =>\n            window.open('https://docs.litmuschaos.io/docs/getstarted'),\n          text: t('quickActionCard.readDocs'),\n        }\n      : emptyData,\n    community\n      ? {\n          src: './icons/docs.svg',\n          alt: 'docs',\n          onClick: () =>\n            window.open(\n              'https://docs.litmus.com/docs/litmus-api-documentation'\n            ),\n          text: t('quickActionCard.readAPIDocs'),\n        }\n      : emptyData,\n  ].filter((el) => {\n    return el.src.length > 0;\n  });\n\n  return (\n    <QuickActionCard\n      className={className}\n      quickActions={quickActionData}\n      title={t('quickActionCard.quickActions')}\n    />\n  );\n};\nexport { LocalQuickActionCard };\n","import { makeStyles } from '@material-ui/core/styles';\n\n// CommunityTimeSeriesPlot Component Styling\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(0.5),\n    height: '2.5rem',\n    width: '19.375rem',\n    [theme.breakpoints.down('sm')]: {\n      width: '15rem',\n    },\n  },\n\n  plotCard: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n\n  root: {\n    height: '2.5rem',\n    padding: theme.spacing(0.5),\n  },\n\n  plot: {\n    margin: 'auto',\n    width: '150%',\n    paddingLeft: '4.5%',\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable no-empty-pattern */\n/* eslint-disable no-return-assign */\n/* eslint-disable no-param-reassign */\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  useTheme,\n} from '@material-ui/core';\nimport Plotly from 'plotly.js';\nimport { string } from 'prop-types';\nimport React, { useEffect } from 'react';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/reducers';\nimport useStyles from './styles';\n\nconst Plot = createPlotlyComponent(Plotly);\n\nconst CommunityAnalyticsPlot: React.FC = () => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n\n  const { communityData } = useSelector(\n    (state: RootState) => state.communityData\n  );\n\n  const dailyOperators = communityData.google.dailyOperatorData;\n\n  const dailyExperiments = communityData.google.dailyExperimentData;\n\n  const monthlyOperators = communityData.google.monthlyOperatorData;\n\n  const monthlyExperiments = communityData.google.monthlyExperimentData;\n\n  const [data, setData] = React.useState({ x: [], y: [], y2: [] });\n\n  const [currentPlotType, setPlotType] = React.useState<{ name: string }>({\n    name: 'Growth',\n  });\n\n  const [currentGranularityType, setGranularityType] = React.useState<{\n    name: string;\n  }>({\n    name: 'Monthly',\n  });\n\n  const handleChangeInType = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    const name = event.target.name as keyof typeof currentPlotType;\n    if (name !== currentPlotType.name) {\n      setPlotType({\n        ...currentPlotType,\n        [name]: event.target.value as string,\n      });\n    }\n  };\n\n  const handleChangeInGranularity = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    const name = event.target.name as keyof typeof currentGranularityType;\n    if (name !== currentGranularityType.name) {\n      setGranularityType({\n        ...currentGranularityType,\n        [name]: event.target.value as string,\n      });\n    }\n  };\n\n  const cumulativeSum = (timeSeriesCounts: any) => {\n    const countSum = (\n      (sum: any) => (value: any) =>\n        (sum = parseInt(sum, 10) + parseInt(value, 10))\n    )(0);\n    const MappedCumulativeSum = timeSeriesCounts.map(countSum);\n    return MappedCumulativeSum;\n  };\n\n  const processData = () => {\n    let Operators: string[] = [];\n    let Experiments: string[] = [];\n    if (currentGranularityType.name === 'Daily') {\n      dailyOperators.forEach((element: any, index: any) => {\n        Operators.push(element.count);\n        Experiments.push(dailyExperiments[index].count);\n      });\n    } else {\n      monthlyOperators.forEach((element: any, index: any) => {\n        Operators.push(element.count);\n        Experiments.push(monthlyExperiments[index].count);\n      });\n    }\n\n    if (currentPlotType.name === 'Growth') {\n      Operators = cumulativeSum(Operators);\n      Experiments = cumulativeSum(Experiments);\n    }\n\n    const rawData: any = [];\n    if (currentGranularityType.name === 'Daily') {\n      dailyOperators.forEach((element: any, index: any) => {\n        rawData.push({\n          date: element.date,\n          operatorInstalls: Operators[index],\n          experimentRuns: Experiments[index],\n        });\n      });\n    } else {\n      monthlyOperators.forEach((element: any, index: any) => {\n        rawData.push({\n          date: element.date,\n          operatorInstalls: Operators[index],\n          experimentRuns: Experiments[index],\n        });\n      });\n    }\n\n    const dataObject = {\n      x: ([] = [Date]),\n      y: ([] = [string]),\n      y2: ([] = [string]),\n    };\n\n    rawData.forEach(function dateSplit(datum: any) {\n      const splits = datum.date.split('-');\n      dataObject.x.push(\n        new Date(\n          splits[0] as any,\n          (splits[1] as any) - 1,\n          splits[2] as any\n        ) as any\n      );\n      dataObject.y.push(datum.operatorInstalls as any);\n      dataObject.y2.push(datum.experimentRuns as any);\n    });\n\n    setData(dataObject as any);\n  };\n\n  const selectorOptions = {\n    buttons: [\n      {\n        step: 'day',\n        stepmode: 'backward',\n        count: 7,\n        label: '1w',\n      },\n      {\n        step: 'day',\n        stepmode: 'backward',\n        count: 14,\n        label: '2w',\n      },\n      {\n        step: 'month',\n        stepmode: 'backward',\n        count: 1,\n        label: '1m',\n      },\n      {\n        step: 'month',\n        stepmode: 'backward',\n        count: 3,\n        label: '3m',\n      },\n      {\n        step: 'month',\n        stepmode: 'backward',\n        count: 6,\n        label: '6m',\n      },\n      {\n        step: 'year',\n        stepmode: 'backward',\n        count: 1,\n        label: '1y',\n      },\n      {\n        step: 'all',\n        label: 'default',\n      },\n    ],\n  };\n\n  useEffect(() => {\n    processData();\n    try {\n      const nodeStyle = (\n        document.getElementsByClassName('modebar')[0] as HTMLElement\n      ).style;\n      nodeStyle.left = '29%';\n      nodeStyle.width = 'fit-content';\n      nodeStyle.backgroundColor = palette.background.paper;\n    } catch (err) {\n      console.error(err);\n    }\n  }, [currentPlotType, currentGranularityType]);\n\n  return (\n    <div className={classes.plotCard}>\n      <FormControl\n        variant=\"outlined\"\n        className={classes.formControl}\n        color=\"primary\"\n        focused\n      >\n        <InputLabel htmlFor=\"outlined-selection\" className={classes.root}>\n          Plot Style\n        </InputLabel>\n        <Select\n          value={currentPlotType.name}\n          onChange={handleChangeInType}\n          label=\"Plot Type\"\n          inputProps={{\n            name: 'name',\n            id: 'outlined-selection',\n          }}\n          className={classes.root}\n        >\n          <MenuItem value=\"Growth\">Growth</MenuItem>\n          <MenuItem value=\"Trend\">Trend</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl\n        variant=\"outlined\"\n        className={classes.formControl}\n        color=\"primary\"\n        focused\n      >\n        <InputLabel\n          htmlFor=\"outlined-selection-granularity\"\n          className={classes.root}\n        >\n          Granularity\n        </InputLabel>\n        <Select\n          value={currentGranularityType.name}\n          onChange={handleChangeInGranularity}\n          label=\"Granularity\"\n          inputProps={{\n            name: 'name',\n            id: 'outlined-selection-granularity',\n          }}\n          className={classes.root}\n        >\n          <MenuItem value=\"Daily\">Daily</MenuItem>\n          <MenuItem value=\"Monthly\">Monthly</MenuItem>\n        </Select>\n      </FormControl>\n      <Plot\n        className={classes.plot}\n        data={[\n          {\n            type: 'scatter',\n            x: data.x,\n            y: data.y,\n            mode: 'lines',\n            name: 'Operator Installs',\n            line: { color: palette.secondary.main },\n          },\n          {\n            type: 'scatter',\n            x: data.x,\n            y: data.y2,\n            mode: 'lines',\n            name: 'Experiment Runs',\n            yaxis: 'y2',\n            line: { color: palette.primary.main },\n          },\n        ]}\n        layout={{\n          autosize: true,\n          height: 800,\n          margin: {\n            l: 60,\n            r: 60,\n            b: 10,\n            t: 5,\n            pad: 10,\n          },\n          xaxis: {\n            rangeselector: selectorOptions as any,\n            rangeslider: { visible: true },\n          },\n          yaxis: {\n            title: 'Operators',\n            side: 'left',\n            showgrid: false,\n          },\n          yaxis2: {\n            title: 'Experiments',\n            side: 'right',\n            overlaying: 'y',\n          },\n          legend: {\n            x: 0,\n            y: 1,\n            traceorder: 'normal',\n            font: {\n              family: 'ubuntu',\n              size: 12,\n              color: palette.text.primary,\n            },\n            bgcolor: palette.background.paper,\n            bordercolor: palette.background.paper,\n            borderwidth: 0,\n          },\n        }}\n        useResizeHandler\n        style={{\n          margin: 'auto',\n        }}\n        config={{\n          displaylogo: false,\n          autosizable: true,\n          responsive: true,\n          frameMargins: 0.2,\n          showAxisDragHandles: true,\n          showAxisRangeEntryBoxes: true,\n          showTips: true,\n          displayModeBar: true,\n          toImageButtonOptions: {\n            format: 'png',\n            filename: 'Litmus_Community_Stats',\n            width: 1920,\n            height: 1080,\n            scale: 2,\n          },\n        }}\n        onInitialized={() => {\n          try {\n            const nodeStyle = (\n              document.getElementsByClassName('modebar')[0] as HTMLElement\n            ).style;\n            nodeStyle.left = '29%';\n            nodeStyle.width = 'fit-content';\n            nodeStyle.backgroundColor = palette.background.paper;\n          } catch (err) {\n            console.error(err);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CommunityAnalyticsPlot;\n","import { Grid, Switch, Typography } from '@material-ui/core';\nimport { createStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst AntSwitch = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '1.75rem',\n      height: '1rem',\n      padding: 0,\n      display: 'flex',\n    },\n    switchBase: {\n      padding: '0.125rem',\n      color: theme.palette.grey[500],\n      '&$checked': {\n        transform: 'translateX(12px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          opacity: 1,\n          backgroundColor: theme.palette.primary.main,\n          borderColor: theme.palette.primary.main,\n        },\n      },\n    },\n    thumb: {\n      width: '0.75rem',\n      height: '0.75rem',\n      boxShadow: 'none',\n    },\n    track: {\n      border: `1px solid ${theme.palette.grey[500]}`,\n      borderRadius: 'calc(1rem / 0.125rem)',\n      opacity: 1,\n      backgroundColor: theme.palette.common.white,\n    },\n    checked: {},\n  })\n)(Switch);\n\ninterface BinarySwitchProps {\n  handleChange:\n    | ((event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void)\n    | undefined;\n  checked: boolean;\n  leftLabel: string;\n  rightLabel: string;\n}\n\nconst BinarySwitch: React.FC<BinarySwitchProps> = ({\n  handleChange,\n  checked,\n  leftLabel,\n  rightLabel,\n}) => {\n  return (\n    <Typography component=\"div\">\n      <Grid\n        component=\"label\"\n        container\n        alignItems=\"center\"\n        justify=\"center\"\n        spacing={1}\n      >\n        <Grid item>{leftLabel}</Grid>\n        <Grid item>\n          <AntSwitch\n            checked={checked}\n            onChange={handleChange}\n            name=\"checkedC\"\n          />\n        </Grid>\n        <Grid item>{rightLabel}</Grid>\n      </Grid>\n    </Typography>\n  );\n};\n\nexport default BinarySwitch;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  binarySwitch: {\n    paddingBottom: theme.spacing(2),\n  },\n  cityMapMarkerStyles: {\n    fill: theme.palette.primary.dark,\n    '& circle': {\n      stroke: theme.palette.cards.background,\n      strokeWidth: 2,\n      strokeLinecap: 'round',\n      strokeLinejoin: 'round',\n      transform: 'translate(-12, -24)',\n      cx: 12,\n      cy: 10,\n      r: 4,\n    },\n    '&:hover': {\n      fill: theme.palette.border.main,\n    },\n  },\n  cityMapGeography: {\n    fill: theme.palette.primary.light,\n    stroke: theme.palette.background.default,\n    '&:hover': {\n      stroke: theme.palette.background.default,\n      fill: theme.palette.border.main,\n    },\n  },\n  cityMapComposableMap: {\n    width: '45vw',\n    height: '30rem',\n    [theme.breakpoints.down('sm')]: {\n      height: '25rem',\n    },\n  },\n  countryMapchartStyle: {\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: theme.spacing(2),\n  },\n  countryMapchartContentStyle: {\n    width: '45vw',\n    height: '30rem',\n    [theme.breakpoints.down('sm')]: {\n      height: '25rem',\n    },\n  },\n  map: {\n    flexGrow: 1,\n    textAlign: 'center',\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.cards.background,\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      width: '100%',\n      flexDirection: 'column',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  ZoomableGroup,\n} from 'react-simple-maps';\nimport { RootState } from '../../../redux/reducers';\nimport datageo from './geo.json';\nimport useStyles from './styles';\n\nconst geoUrl = datageo;\n\n/* City geo Map is used for location of users with \nlat and lng wise to present it on map */\nconst CityMap: React.FC = () => {\n  const classes = useStyles();\n\n  const { communityData } = useSelector(\n    (state: RootState) => state.communityData\n  );\n  const { geoCity } = communityData.google;\n  return (\n    <div>\n      <ComposableMap\n        projection=\"geoMercator\"\n        className={classes.cityMapComposableMap}\n      >\n        <ZoomableGroup center={[0, -675]} zoom={0.85}>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  className={classes.cityMapGeography}\n                  key={geo.rsmKey}\n                  geography={geo}\n                />\n              ))\n            }\n          </Geographies>\n          {geoCity &&\n            geoCity.map(\n              ({ name, latitude, longitude }) =>\n                name !== '(not set)' && (\n                  <Marker\n                    className={classes.cityMapMarkerStyles}\n                    key={`${name}_${latitude}_${longitude}`}\n                    coordinates={[\n                      parseFloat(longitude) - 4,\n                      parseFloat(latitude) + 4,\n                    ]}\n                  >\n                    <circle />\n                  </Marker>\n                )\n            )}\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default CityMap;\n","import { useTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport Chart from 'react-google-charts';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/reducers';\nimport useStyles from './styles';\n/* Country geo Map is used for location of users with Country and \nrespective count of users wise to present it on map */\n\nconst CountryMap = () => {\n  const { communityData } = useSelector(\n    (state: RootState) => state.communityData\n  );\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = communityData.google.geoCountry;\n\n  const parsedData = data.map((item) => [item[0], parseInt(item[1], 10)]);\n  parsedData.unshift(['Country', 'Count']);\n\n  return (\n    <div className={classes.countryMapchartStyle}>\n      <Chart\n        className={classes.countryMapchartContentStyle}\n        chartType=\"GeoChart\"\n        data={parsedData}\n        options={{\n          colorAxis: {\n            colors: [theme.palette.primary.main, theme.palette.primary.dark],\n          },\n          backgroundColor: theme.palette.cards.background, // White Theme\n          datalessRegionColor: theme.palette.primary.light,\n          defaultColor: theme.palette.background.default,\n        }}\n        rootProps={{ 'data-testid': '1' }}\n      />\n    </div>\n  );\n};\nexport default CountryMap;\n","import React, { useState } from 'react';\nimport BinarySwitch from '../../../components/Button/BinarySwitch';\nimport CityMap from './CityMap';\nimport CountryMap from './CountryMap';\nimport useStyles from './styles';\n\nconst GeoMap = () => {\n  const [showCountry, setShowCountry] = useState<boolean>(true);\n  const classes = useStyles();\n  return (\n    <div className={classes.map}>\n      {showCountry ? <CountryMap /> : <CityMap />}\n      <br />\n      <br />\n      <div className={classes.binarySwitch}>\n        <BinarySwitch\n          handleChange={() => setShowCountry(!showCountry)}\n          checked={showCountry}\n          leftLabel=\"City View\"\n          rightLabel=\"Country View\"\n        />\n      </div>\n    </div>\n  );\n};\nexport default GeoMap;\n","import { makeStyles } from '@material-ui/core/styles';\n\n// Community Component Styling\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1, 1.5, 1.5),\n    overflowX: 'hidden',\n  },\n  mainHeader: {\n    color: theme.palette.text.primary,\n    margin: theme.spacing(0, 1.5, 2.5, 0),\n  },\n\n  LitmusAnalyticsBlock: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  errorMessage: {\n    marginTop: theme.spacing(35),\n  },\n\n  LitmusAnalyticsDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: theme.spacing(0.4),\n    paddingBottom: theme.spacing(0.4),\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n  },\n\n  header2: {\n    fontSize: '1.5rem',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n\n  cardDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n  },\n  paper: {\n    flexGrow: 1,\n    marginRight: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.primary,\n    backgroundColor: '#FFF',\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      width: '100%',\n      flexDirection: 'column',\n    },\n  },\n  card: {\n    backgroundColor: theme.palette.primary.main,\n    height: '21.25rem',\n    width: '20rem',\n    textAlign: 'center',\n    color: '#FFFFFF',\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      marginTop: theme.spacing(2),\n      width: '100%',\n      flexDirection: 'column',\n    },\n  },\n\n  cardContent: {\n    marginTop: theme.spacing(4),\n  },\n\n  LitmusOnDev: {\n    marginTop: theme.spacing(2),\n    fontWeight: 'bold',\n    fontSize: '1.5rem',\n  },\n\n  LitmusOnDevSpan: {\n    position: 'relative',\n    fontWeight: 'normal',\n    fontSize: '1.5rem',\n    bottom: theme.spacing(2),\n    left: theme.spacing(3),\n  },\n\n  devToLogo: {\n    fill: 'white',\n    filter:\n      'invert(98%) sepia(100%) saturate(0%) hue-rotate(86deg) brightness(118%) contrast(119%)',\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(1),\n    width: '5rem',\n    height: '3rem',\n  },\n  imgDiv: {\n    '& img': {\n      userDrag: 'none',\n    },\n  },\n  followBtn: {\n    width: '10rem',\n    height: '3rem',\n    backgroundColor: theme.palette.secondary.contrastText,\n    fontSize: '0.8rem',\n    color: theme.palette.common.black,\n    textTransform: 'none',\n  },\n\n  devToLink: {\n    textDecoration: 'none',\n  },\n\n  LitmusUsedBlock: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n\n  LitmusUsedDiv: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: theme.spacing(0.4),\n    paddingBottom: theme.spacing(0.4),\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n  },\n\n  quickActionCard: {\n    height: '21.25rem',\n    width: '15rem',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(7),\n    [theme.breakpoints.down('md')]: {\n      display: 'flex',\n      width: '15rem',\n      flexDirection: 'column',\n    },\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      margin: 0,\n      marginTop: theme.spacing(5),\n      width: '20rem',\n      flexDirection: 'column',\n    },\n  },\n}));\n\nexport default useStyles;\n","import Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Paper from '@material-ui/core/Paper'; // Temporary -> Should be replaced with Chart\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport InfoFilledWrap from '../../components/InfoFilled/index';\nimport Loader from '../../components/Loader';\nimport { LocalQuickActionCard } from '../../components/LocalQuickActionCard';\nimport Center from '../../containers/layouts/Center';\nimport Scaffold from '../../containers/layouts/Scaffold/index';\nimport { RootState } from '../../redux/reducers';\nimport CommunityAnalyticsPlot from '../../views/Community/CommunityTimeSeriesPlot';\nimport GeoMap from '../../views/Community/GeoMap/index';\nimport useStyles from './styles';\n\n// Reusable Header Component\nconst Header2: React.FC = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Typography className={classes.header2}>\n        <strong>{children}</strong>\n      </Typography>\n    </div>\n  );\n};\n\nconst Community: React.FC = () => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const { loading, error } = useSelector(\n    (state: RootState) => state.communityData\n  );\n\n  if (loading) {\n    return (\n      <Scaffold>\n        <div className={classes.root}>\n          <div>\n            <Typography variant=\"h3\" className={classes.mainHeader}>\n              {t('community.title')}\n            </Typography>\n            <div>\n              <Loader />\n              <Typography>{t('internetIssues.fetchData')}</Typography>\n            </div>\n          </div>\n        </div>\n      </Scaffold>\n    );\n  }\n  if (error) {\n    return (\n      <Scaffold>\n        <div className={classes.root}>\n          <div>\n            <Typography variant=\"h3\" className={classes.mainHeader}>\n              {t('community.title')}\n            </Typography>\n          </div>\n          <div className={classes.errorMessage}>\n            <Center>\n              <Typography variant=\"h4\">\n                {t('internetIssues.connectionError')}\n              </Typography>\n            </Center>\n          </div>\n        </div>\n      </Scaffold>\n    );\n  }\n\n  return (\n    <Scaffold>\n      <div className={classes.root}>\n        <div>\n          <Typography variant=\"h3\" className={classes.mainHeader}>\n            {t('community.title')}\n          </Typography>\n        </div>\n\n        {/* Litmus Daily Insights */}\n        <section>\n          <Header2>{t('community.heading')}</Header2>\n          <Typography>{t('community.headingDesc')}</Typography>\n          <div className={classes.cardDiv}>\n            <InfoFilledWrap />\n          </div>\n        </section>\n\n        {/* Litmus Analytics Dashboard */}\n        <section>\n          <div className={classes.LitmusAnalyticsBlock}>\n            <Header2>{t('community.analyticDesc')}</Header2>\n            <div className={classes.LitmusAnalyticsDiv}>\n              <Paper className={classes.paper}>\n                <CommunityAnalyticsPlot />\n              </Paper>\n\n              <div>\n                <Card className={classes.card}>\n                  <CardContent className={classes.cardContent}>\n                    <div className={classes.imgDiv}>\n                      <img src=\"./icons/litmusPurple.svg\" alt=\"litmus logo\" />\n                    </div>\n                    <Typography\n                      variant=\"body1\"\n                      component=\"p\"\n                      className={classes.LitmusOnDev}\n                    >\n                      {t('community.litmusChaos')}\n                      <br />\n                      <span className={classes.LitmusOnDevSpan}>on </span>\n                      <img\n                        className={classes.devToLogo}\n                        src=\"./icons/devto.svg\"\n                        alt=\"DevTo logo\"\n                      />\n                    </Typography>\n                  </CardContent>\n                  <a\n                    href=\"https://dev.to/litmus-chaos\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className={classes.devToLink}\n                  >\n                    <Button variant=\"contained\" className={classes.followBtn}>\n                      {t('community.follow')}\n                    </Button>\n                  </a>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Litmus Used Statistics all over the World */}\n        <section>\n          <div className={classes.LitmusUsedBlock}>\n            <Header2>{t('community.statsHeading')}</Header2>\n            <div className={classes.LitmusUsedDiv}>\n              <Paper className={classes.paper}>\n                <GeoMap />\n              </Paper>\n              <div className={classes.quickActionCard}>\n                <LocalQuickActionCard variant=\"community\" />\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </Scaffold>\n  );\n};\n\nexport default Community;\n"],"sourceRoot":""}