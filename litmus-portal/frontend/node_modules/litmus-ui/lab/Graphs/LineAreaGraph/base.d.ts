export interface DateValue {
    date: number | string;
    value: number | string;
}
export interface GraphMetric {
    metricName: string;
    data: Array<DateValue>;
    subData?: Array<{
        subDataName: string;
        value: string;
        date: number;
    }> | undefined;
    baseColor?: string;
}
export interface StrictColorGraphMetric extends Omit<GraphMetric, "baseColor"> {
    baseColor: string;
}
export interface ToolTip<T> {
    metricName: string;
    data: T;
    baseColor: string;
}
export interface LineAreaGraphProps<T> {
    closedSeries?: T;
    openSeries?: T;
    eventSeries?: T;
    unit?: string;
    showTips?: boolean;
    showMultiToolTip?: boolean;
    showPoints?: boolean;
    showEventMarkers?: boolean;
    showGrid?: boolean;
    showLegendTable?: boolean;
    showEventTable?: boolean;
    legendTableHeight?: number;
    widthPercentageEventTable?: number;
    marginLeftEventTable?: number;
    margin?: {
        top: number;
        right: number;
        bottom: number;
        left: number;
    };
    compact?: boolean;
    yLabel?: string;
    yLabelOffset?: number;
    xAxistimeFormat?: string;
    toolTiptimeFormat?: string;
}
export interface LineAreaGraphChildProps extends LineAreaGraphProps<Array<StrictColorGraphMetric>> {
    width?: number;
    height?: number;
}
export declare type ToolTipDateValue = ToolTip<DateValue>;
export declare type TooltipData = Array<ToolTipDateValue>;
