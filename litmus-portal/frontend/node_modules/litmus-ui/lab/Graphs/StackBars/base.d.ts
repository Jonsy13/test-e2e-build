/// <reference types="react" />
export interface BarDateValue {
    date: number;
    value: number | string;
    id?: string | undefined;
}
export interface LineMetricSeries {
    metricName: string;
    data: Array<BarDateValue>;
    baseColor?: string;
}
export interface StackBarMetric {
    id: string;
    date: number;
    passPercentage: number;
    failPercentage: number;
    passCount: number;
    failCount: number;
}
export interface ToolTip<T> {
    metricName: string;
    data: T;
    baseColor?: string;
}
export declare type StackBarTooltipProps = {
    tooltipData: TooltipData;
};
export interface BarStackProps {
    barSeries: Array<StackBarMetric>;
    openSeries?: LineMetricSeries | undefined;
    initialxAxisDate?: number;
    margin?: {
        top: number;
        right: number;
        bottom: number;
        left: number;
    };
    xAxistimeFormat?: string;
    unit?: string;
    yLabel?: string;
    yLabelOffset?: number;
    handleBarClick?: (barData: any) => void;
    StackBarTooltip?: ({ tooltipData, }: StackBarTooltipProps) => React.ReactElement;
}
export interface BarStackChildProps extends BarStackProps {
    width: number;
    height: number;
}
export declare type ToolTipDateValue = ToolTip<BarDateValue>;
export declare type TooltipData = Array<ToolTipDateValue>;
