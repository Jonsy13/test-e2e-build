/// <reference types="react" />
export interface GenericValue {
    [index: string]: any;
}
export interface ToolTip<T> {
    data: T;
}
export declare type ToolTipValue = ToolTip<GenericValue>;
export interface DayData {
    value: number | undefined;
    [index: string]: any;
}
export interface WeekData {
    bins: DayData[];
}
export declare type CalendarHeatmapTooltipProps = {
    tooltipData: ToolTipValue;
};
export declare type CalendarHeatMap = {
    binWidth?: number;
    binHeight?: number;
    calendarHeatmapMetric: Array<WeekData>;
    margin?: {
        top: number;
        right: number;
        bottom: number;
        left: number;
    };
    valueThreshold: Array<number>;
    colorMap?: Array<string>;
    handleBinClick?: (bin: any) => void;
    CalendarHeatmapTooltip: ({ tooltipData, }: CalendarHeatmapTooltipProps) => React.ReactElement;
};
export interface CalendarHeatMapChildProps extends CalendarHeatMap {
    width?: number;
    height?: number;
}
