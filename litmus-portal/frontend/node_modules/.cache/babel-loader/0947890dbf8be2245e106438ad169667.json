{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseSchedule/TableData.tsx\";\n\nimport { useMutation } from '@apollo/client';\nimport { Button, IconButton, Menu, MenuItem, Popover, TableCell, Typography } from '@material-ui/core';\nimport { InsertDriveFileOutlined } from '@material-ui/icons';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport parser from 'cron-parser';\nimport cronstrue from 'cronstrue';\nimport { ButtonFilled, ButtonOutlined, Modal } from 'litmus-ui';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport YAML from 'yaml';\nimport { RERUN_CHAOS_WORKFLOW } from '../../../graphql/mutations';\nimport useActions from '../../../redux/actions';\nimport * as TabActions from '../../../redux/actions/tabs';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { history } from '../../../redux/configureStore';\nimport { ReactComponent as CrossMarkIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../svg/crossmark.svg\";\nimport timeDifferenceForDate from '../../../utils/datesModifier';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport ExperimentPoints from './ExperimentPoints';\nimport SaveTemplateModal from './SaveTemplateModal';\nimport useStyles from './styles';\n\nvar TableData = function TableData(_ref) {\n  var data = _ref.data,\n      deleteRow = _ref.deleteRow,\n      handleToggleSchedule = _ref.handleToggleSchedule;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var projectID = getProjectID();\n  var projectRole = getProjectRole();\n  var workflow = useActions(WorkflowActions); // States for PopOver to display Experiment Weights\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      popAnchorEl = _React$useState4[0],\n      setPopAnchorEl = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isModalOpen = _React$useState6[0],\n      setIsModalOpen = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      isTemplateModalOpen = _React$useState8[0],\n      setIsTemplateModalOpen = _React$useState8[1];\n\n  var tabs = useActions(TabActions);\n  var open = Boolean(anchorEl);\n  var isOpen = Boolean(popAnchorEl);\n  var id = isOpen ? 'simple-popover' : undefined;\n\n  var handlePopOverClose = function handlePopOverClose() {\n    setPopAnchorEl(null);\n  };\n\n  var handlePopOverClick = function handlePopOverClick(event) {\n    setPopAnchorEl(event.currentTarget);\n  };\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n    setIsModalOpen(false);\n  }; // States for PopOver to display schedule details\n\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      popAnchorElSchedule = _React$useState10[0],\n      setPopAnchorElSchedule = _React$useState10[1];\n\n  var isOpenSchedule = Boolean(popAnchorElSchedule);\n  var idSchedule = isOpenSchedule ? 'simple-popover' : undefined;\n\n  var handlePopOverCloseForSchedule = function handlePopOverCloseForSchedule() {\n    setPopAnchorElSchedule(null);\n  };\n\n  var handlePopOverClickForSchedule = function handlePopOverClickForSchedule(event) {\n    setPopAnchorElSchedule(event.currentTarget);\n  }; // Function to download the manifest\n\n\n  var downloadYAML = function downloadYAML(manifest, name) {\n    var parsedYAML = YAML.parse(manifest);\n    var doc = new YAML.Document();\n    doc.contents = parsedYAML;\n    var element = document.createElement('a');\n    var file = new Blob([YAML.stringify(doc)], {\n      type: 'text/yaml'\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"\".concat(name, \".yaml\");\n    document.body.appendChild(element);\n    element.click();\n  }; // Function to convert UNIX time in format of DD MMM YYY\n\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var resDate = moment(updated).format('DD MMM YYYY');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  var editSchedule = function editSchedule() {\n    history.push({\n      pathname: \"/workflows/schedule/\".concat(data.project_id, \"/\").concat(data.workflow_name),\n      search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n    });\n  };\n\n  var _useMutation = useMutation(RERUN_CHAOS_WORKFLOW, {\n    onCompleted: function onCompleted() {\n      tabs.changeWorkflowsTabs(0);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      reRunChaosWorkFlow = _useMutation2[0];\n\n  var reRunSchedule = function reRunSchedule() {\n    reRunChaosWorkFlow({\n      variables: {\n        data: data.workflow_id\n      }\n    });\n  };\n\n  var handleSaveWorkflowTemplate = function handleSaveWorkflowTemplate(manifest) {\n    var parsedYAML = YAML.parse(manifest);\n\n    if (parsedYAML.metadata.labels !== undefined) {\n      var labelData = parsedYAML.metadata.labels;\n\n      if (labelData.cluster_id !== undefined) {\n        delete labelData.cluster_id;\n      }\n\n      if (labelData.workflow_id !== undefined) {\n        delete labelData.workflow_id;\n      }\n    }\n\n    workflow.setWorkflowManifest({\n      manifest: YAML.stringify(parsedYAML)\n    });\n    setIsTemplateModalOpen(true);\n  };\n\n  var handleCloseTemplate = function handleCloseTemplate() {\n    setIsTemplateModalOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    width: \"60%\",\n    open: isTemplateModalOpen,\n    onClose: handleCloseTemplate,\n    disableBackdropClick: true,\n    modalActions: /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: handleCloseTemplate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, \"\\u2715\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SaveTemplateModal, {\n    closeTemplate: handleCloseTemplate,\n    isCustomWorkflow: data.isCustomWorkflow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.workflowNameData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(classes.boldText, \" \").concat(YAML.parse(data.workflow_manifest).spec.suspend === true ? classes.dark : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, data.workflow_name))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.clusterData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: YAML.parse(data.workflow_manifest).spec.suspend === true ? classes.dark : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, data.cluster_name))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handlePopOverClick,\n    className: classes.buttonTransform,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: YAML.parse(data.workflow_manifest).spec.suspend === true ? classes.dark : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.boldText, \" \").concat(classes.expInfo),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, t('chaosWorkflows.browseSchedules.showExperiments')), isOpen ? /*#__PURE__*/React.createElement(KeyboardArrowDownIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: isOpen,\n    anchorEl: popAnchorEl,\n    onClose: handlePopOverClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.weightDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, data.weightages.map(function (expData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: expData.experiment_name,\n      style: {\n        marginBottom: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ExperimentPoints, {\n      expName: expData.experiment_name,\n      weight: expData.weightage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    }));\n  })))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handlePopOverClickForSchedule,\n    className: classes.buttonTransform,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: YAML.parse(data.workflow_manifest).spec.suspend === true ? classes.dark : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.boldText, \" \").concat(classes.expInfo),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, t('chaosWorkflows.browseSchedules.showSchedule')), isOpenSchedule ? /*#__PURE__*/React.createElement(KeyboardArrowDownIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Popover, {\n    id: idSchedule,\n    open: isOpenSchedule,\n    anchorEl: popAnchorElSchedule,\n    onClose: handlePopOverCloseForSchedule,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.weightDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scheduleDetailsFlex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.boldText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, t('chaosWorkflows.browseSchedules.startingDate'), \" :\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.scheduleDetailsValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }, formatDate(data.created_at))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scheduleDetailsFlex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.boldText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }, t('chaosWorkflows.browseSchedules.lastRun'), \" :\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.scheduleDetailsValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, timeDifferenceForDate(data.updated_at))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scheduleDetailsFlex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.boldText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }, t('chaosWorkflows.browseSchedules.regularity'), \" :\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.scheduleDetailsValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, data.cronSyntax === '' ? \"\".concat(t('chaosWorkflows.browseSchedules.regularityOnce')) : cronstrue.toString(data.cronSyntax)))))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: YAML.parse(data.workflow_manifest).spec.suspend === true ? classes.dark : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  }, YAML.parse(data.workflow_manifest).spec.suspend === true ? /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, t('chaosWorkflows.browseSchedules.scheduleIsDisabled')) : data.cronSyntax !== '' && /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, parser.parseExpression(data.cronSyntax).next().toString()))), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.menuCell,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"more\",\n    \"aria-controls\": \"long-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    className: classes.optionBtn,\n    \"data-cy\": \"browseScheduleOptions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Menu, {\n    id: \"long-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }\n  }, data.cronSyntax !== '' ? /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Edit_Schedule\",\n    onClick: function onClick() {\n      return editSchedule();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/Edit.svg\",\n    alt: \"Edit Schedule\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"editSchedule\",\n    className: classes.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }, t('chaosWorkflows.browseSchedules.editSchedule')))) : /*#__PURE__*/React.createElement(React.Fragment, null), projectRole !== 'Viewer' && data.cronSyntax === '' ? /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Rerun_Schedule\",\n    onClick: function onClick() {\n      return reRunSchedule();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ReplayIcon, {\n    className: classes.rerunBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"reRunSchedule\",\n    className: classes.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 17\n    }\n  }, t('chaosWorkflows.browseSchedules.reRunSchedule')))) : /*#__PURE__*/React.createElement(React.Fragment, null), projectRole !== 'Viewer' && data.cronSyntax !== '' && YAML.parse(data.workflow_manifest).spec.suspend !== true && /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Disable\",\n    onClick: function onClick() {\n      handleToggleSchedule(data);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/disableSchedule.svg\",\n    alt: \"Delete Schedule\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"disableSchedule\",\n    className: classes.downloadText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 19\n    }\n  }, t('chaosWorkflows.browseSchedules.disableSchedule')))), projectRole !== 'Viewer' && YAML.parse(data.workflow_manifest).spec.suspend === true && /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Enable\",\n    onClick: function onClick() {\n      handleToggleSchedule(data);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/disableSchedule.svg\",\n    alt: \"Enable Schedule\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"enableSchedule\",\n    className: classes.downloadText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 19\n    }\n  }, t('chaosWorkflows.browseSchedules.enableSchedule')))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Download\",\n    onClick: function onClick() {\n      return downloadYAML(data.workflow_manifest, data.workflow_name);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GetAppIcon, {\n    className: classes.downloadBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"downloadManifest\",\n    className: classes.downloadText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 15\n    }\n  }, t('chaosWorkflows.browseSchedules.downloadManifest')))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"SaveTemplate\",\n    \"data-cy\": \"saveTemplate\",\n    onClick: function onClick() {\n      return handleSaveWorkflowTemplate(data.workflow_manifest);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InsertDriveFileOutlined, {\n    className: classes.downloadBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.downloadText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 15\n    }\n  }, t('chaosWorkflows.browseSchedules.saveTemplate')))), projectRole !== 'Viewer' ? /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Analysis\",\n    onClick: function onClick() {\n      return setIsModalOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/deleteSchedule.svg\",\n    alt: \"Delete Schedule\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"deleteSchedule\",\n    className: classes.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 17\n    }\n  }, data.cronSyntax !== '' ? t('chaosWorkflows.browseSchedules.deleteSchedule') : t('chaosWorkflows.browseSchedules.deleteWorkflow')))) : null)), isModalOpen ? /*#__PURE__*/React.createElement(Modal, {\n    open: isModalOpen,\n    onClose: handleClose,\n    width: \"60%\",\n    modalActions: /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 13\n      }\n    }, \"\\u2715\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modalDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CrossMarkIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.scheduleWorkflow.modalHeader')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalConfirm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.scheduleWorkflow.modalSubheader')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modalBtns,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n    onClick: function onClick() {\n      return setIsModalOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.scheduleWorkflow.cancelBtn')), /*#__PURE__*/React.createElement(ButtonFilled, {\n    variant: \"error\",\n    className: classes.w7,\n    onClick: function onClick() {\n      deleteRow(data.workflow_id);\n      setIsModalOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.scheduleWorkflow.deleteBtn'))))) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default TableData;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseSchedule/TableData.tsx"],"names":["useMutation","Button","IconButton","Menu","MenuItem","Popover","TableCell","Typography","InsertDriveFileOutlined","ChevronRightIcon","GetAppIcon","KeyboardArrowDownIcon","MoreVertIcon","ReplayIcon","parser","cronstrue","ButtonFilled","ButtonOutlined","Modal","moment","React","useTranslation","YAML","RERUN_CHAOS_WORKFLOW","useActions","TabActions","WorkflowActions","history","timeDifferenceForDate","getProjectID","getProjectRole","ExperimentPoints","SaveTemplateModal","useStyles","TableData","data","deleteRow","handleToggleSchedule","classes","t","projectID","projectRole","workflow","useState","anchorEl","setAnchorEl","popAnchorEl","setPopAnchorEl","isModalOpen","setIsModalOpen","isTemplateModalOpen","setIsTemplateModalOpen","tabs","open","Boolean","isOpen","id","undefined","handlePopOverClose","handlePopOverClick","event","currentTarget","handleClick","handleClose","popAnchorElSchedule","setPopAnchorElSchedule","isOpenSchedule","idSchedule","handlePopOverCloseForSchedule","handlePopOverClickForSchedule","downloadYAML","manifest","name","parsedYAML","parse","doc","Document","contents","element","document","createElement","file","Blob","stringify","type","href","URL","createObjectURL","download","body","appendChild","click","formatDate","date","updated","Date","parseInt","toString","resDate","format","editSchedule","push","pathname","project_id","workflow_name","search","onCompleted","changeWorkflowsTabs","reRunChaosWorkFlow","reRunSchedule","variables","workflow_id","handleSaveWorkflowTemplate","metadata","labels","labelData","cluster_id","setWorkflowManifest","handleCloseTemplate","isCustomWorkflow","workflowNameData","boldText","workflow_manifest","spec","suspend","dark","clusterData","cluster_name","buttonTransform","expDiv","expInfo","vertical","horizontal","weightDiv","weightages","map","expData","experiment_name","marginBottom","weightage","scheduleDetailsFlex","scheduleDetailsValue","created_at","updated_at","cronSyntax","parseExpression","next","menuCell","optionBtn","btnImg","btnText","rerunBtn","downloadText","downloadBtn","modalDiv","modalHeader","modalConfirm","modalBtns","w7"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\nimport {\n  Button,\n  IconButton,\n  Menu,\n  MenuItem,\n  Popover,\n  TableCell,\n  Typography,\n} from '@material-ui/core';\nimport { InsertDriveFileOutlined } from '@material-ui/icons';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport parser from 'cron-parser';\nimport cronstrue from 'cronstrue';\nimport { ButtonFilled, ButtonOutlined, Modal } from 'litmus-ui';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport YAML from 'yaml';\nimport { RERUN_CHAOS_WORKFLOW } from '../../../graphql/mutations';\nimport { ScheduledWorkflow } from '../../../models/graphql/workflowListData';\nimport useActions from '../../../redux/actions';\nimport * as TabActions from '../../../redux/actions/tabs';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { history } from '../../../redux/configureStore';\nimport { ReactComponent as CrossMarkIcon } from '../../../svg/crossmark.svg';\nimport timeDifferenceForDate from '../../../utils/datesModifier';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport ExperimentPoints from './ExperimentPoints';\nimport SaveTemplateModal from './SaveTemplateModal';\nimport useStyles from './styles';\n\ninterface TableDataProps {\n  data: ScheduledWorkflow;\n  deleteRow: (wfid: string) => void;\n  handleToggleSchedule: (schedule: ScheduledWorkflow) => void;\n}\n\nconst TableData: React.FC<TableDataProps> = ({\n  data,\n  deleteRow,\n  handleToggleSchedule,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n\n  const workflow = useActions(WorkflowActions);\n\n  // States for PopOver to display Experiment Weights\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [popAnchorEl, setPopAnchorEl] = React.useState<null | HTMLElement>(\n    null\n  );\n  const [isModalOpen, setIsModalOpen] = React.useState<boolean>(false);\n  const [isTemplateModalOpen, setIsTemplateModalOpen] =\n    React.useState<boolean>(false);\n\n  const tabs = useActions(TabActions);\n  const open = Boolean(anchorEl);\n  const isOpen = Boolean(popAnchorEl);\n  const id = isOpen ? 'simple-popover' : undefined;\n  const handlePopOverClose = () => {\n    setPopAnchorEl(null);\n  };\n\n  const handlePopOverClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPopAnchorEl(event.currentTarget);\n  };\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setIsModalOpen(false);\n  };\n\n  // States for PopOver to display schedule details\n  const [popAnchorElSchedule, setPopAnchorElSchedule] =\n    React.useState<null | HTMLElement>(null);\n  const isOpenSchedule = Boolean(popAnchorElSchedule);\n  const idSchedule = isOpenSchedule ? 'simple-popover' : undefined;\n  const handlePopOverCloseForSchedule = () => {\n    setPopAnchorElSchedule(null);\n  };\n\n  const handlePopOverClickForSchedule = (\n    event: React.MouseEvent<HTMLElement>\n  ) => {\n    setPopAnchorElSchedule(event.currentTarget);\n  };\n\n  // Function to download the manifest\n  const downloadYAML = (manifest: string, name: string) => {\n    const parsedYAML = YAML.parse(manifest);\n    const doc = new YAML.Document();\n    doc.contents = parsedYAML;\n    const element = document.createElement('a');\n    const file = new Blob([YAML.stringify(doc)], {\n      type: 'text/yaml',\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = `${name}.yaml`;\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM YYYY');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  const editSchedule = () => {\n    history.push({\n      pathname: `/workflows/schedule/${data.project_id}/${data.workflow_name}`,\n      search: `?projectID=${projectID}&projectRole=${projectRole}`,\n    });\n  };\n\n  const [reRunChaosWorkFlow] = useMutation(RERUN_CHAOS_WORKFLOW, {\n    onCompleted: () => {\n      tabs.changeWorkflowsTabs(0);\n    },\n  });\n\n  const reRunSchedule = () => {\n    reRunChaosWorkFlow({\n      variables: {\n        data: data.workflow_id,\n      },\n    });\n  };\n\n  const handleSaveWorkflowTemplate = (manifest: string) => {\n    const parsedYAML = YAML.parse(manifest);\n    if (parsedYAML.metadata.labels !== undefined) {\n      const labelData = parsedYAML.metadata.labels;\n      if (labelData.cluster_id !== undefined) {\n        delete labelData.cluster_id;\n      }\n      if (labelData.workflow_id !== undefined) {\n        delete labelData.workflow_id;\n      }\n    }\n    workflow.setWorkflowManifest({\n      manifest: YAML.stringify(parsedYAML),\n    });\n    setIsTemplateModalOpen(true);\n  };\n\n  const handleCloseTemplate = () => {\n    setIsTemplateModalOpen(false);\n  };\n\n  return (\n    <>\n      <Modal\n        width=\"60%\"\n        open={isTemplateModalOpen}\n        onClose={handleCloseTemplate}\n        disableBackdropClick\n        modalActions={\n          <ButtonOutlined onClick={handleCloseTemplate}>\n            &#x2715;\n          </ButtonOutlined>\n        }\n      >\n        <SaveTemplateModal\n          closeTemplate={handleCloseTemplate}\n          isCustomWorkflow={data.isCustomWorkflow as unknown as boolean}\n        />\n      </Modal>\n      <TableCell className={classes.workflowNameData}>\n        <Typography>\n          <span\n            className={`${classes.boldText} ${\n              YAML.parse(data.workflow_manifest).spec.suspend === true\n                ? classes.dark\n                : ''\n            }`}\n          >\n            {data.workflow_name}\n          </span>\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <Typography className={classes.clusterData}>\n          <span\n            className={\n              YAML.parse(data.workflow_manifest).spec.suspend === true\n                ? classes.dark\n                : ''\n            }\n          >\n            {data.cluster_name}\n          </span>\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <Button\n          onClick={handlePopOverClick}\n          className={classes.buttonTransform}\n        >\n          <span\n            className={\n              YAML.parse(data.workflow_manifest).spec.suspend === true\n                ? classes.dark\n                : ''\n            }\n          >\n            <div className={classes.expDiv}>\n              <Typography className={`${classes.boldText} ${classes.expInfo}`}>\n                {t('chaosWorkflows.browseSchedules.showExperiments')}\n              </Typography>\n              {isOpen ? <KeyboardArrowDownIcon /> : <ChevronRightIcon />}\n            </div>\n          </span>\n        </Button>\n        <Popover\n          id={id}\n          open={isOpen}\n          anchorEl={popAnchorEl}\n          onClose={handlePopOverClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <div className={classes.weightDiv}>\n            {data.weightages.map((expData) => {\n              return (\n                <div key={expData.experiment_name} style={{ marginBottom: 8 }}>\n                  <ExperimentPoints\n                    expName={expData.experiment_name}\n                    weight={expData.weightage}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </Popover>\n      </TableCell>\n      <TableCell>\n        <Button\n          onClick={handlePopOverClickForSchedule}\n          className={classes.buttonTransform}\n        >\n          <span\n            className={\n              YAML.parse(data.workflow_manifest).spec.suspend === true\n                ? classes.dark\n                : ''\n            }\n          >\n            <div className={classes.expDiv}>\n              <Typography className={`${classes.boldText} ${classes.expInfo}`}>\n                {t('chaosWorkflows.browseSchedules.showSchedule')}\n              </Typography>\n              {isOpenSchedule ? (\n                <KeyboardArrowDownIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </div>\n          </span>\n        </Button>\n        <Popover\n          id={idSchedule}\n          open={isOpenSchedule}\n          anchorEl={popAnchorElSchedule}\n          onClose={handlePopOverCloseForSchedule}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <div className={classes.weightDiv}>\n            <Typography className={classes.scheduleDetailsFlex}>\n              <span className={classes.boldText}>\n                {t('chaosWorkflows.browseSchedules.startingDate')} :\n              </span>\n              <span className={classes.scheduleDetailsValue}>\n                {formatDate(data.created_at)}\n              </span>\n            </Typography>\n            <Typography className={classes.scheduleDetailsFlex}>\n              <span className={classes.boldText}>\n                {t('chaosWorkflows.browseSchedules.lastRun')} :\n              </span>\n              <span className={classes.scheduleDetailsValue}>\n                {timeDifferenceForDate(data.updated_at)}\n              </span>\n            </Typography>\n            <Typography className={classes.scheduleDetailsFlex}>\n              <span className={classes.boldText}>\n                {t('chaosWorkflows.browseSchedules.regularity')} :\n              </span>\n              <span className={classes.scheduleDetailsValue}>\n                {data.cronSyntax === ''\n                  ? `${t('chaosWorkflows.browseSchedules.regularityOnce')}`\n                  : cronstrue.toString(data.cronSyntax)}\n              </span>\n            </Typography>\n          </div>\n        </Popover>\n      </TableCell>\n      <TableCell>\n        <span\n          className={\n            YAML.parse(data.workflow_manifest).spec.suspend === true\n              ? classes.dark\n              : ''\n          }\n        >\n          {YAML.parse(data.workflow_manifest).spec.suspend === true ? (\n            <Typography>\n              {t('chaosWorkflows.browseSchedules.scheduleIsDisabled')}\n            </Typography>\n          ) : (\n            data.cronSyntax !== '' && (\n              <Typography>\n                {parser.parseExpression(data.cronSyntax).next().toString()}\n              </Typography>\n            )\n          )}\n        </span>\n      </TableCell>\n      <TableCell className={classes.menuCell}>\n        <IconButton\n          aria-label=\"more\"\n          aria-controls=\"long-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n          className={classes.optionBtn}\n          data-cy=\"browseScheduleOptions\"\n        >\n          <MoreVertIcon />\n        </IconButton>\n\n        <Menu\n          id=\"long-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={open}\n          onClose={handleClose}\n        >\n          {data.cronSyntax !== '' ? (\n            <MenuItem value=\"Edit_Schedule\" onClick={() => editSchedule()}>\n              <div className={classes.expDiv}>\n                <img\n                  src=\"/icons/Edit.svg\"\n                  alt=\"Edit Schedule\"\n                  className={classes.btnImg}\n                />\n                <Typography data-cy=\"editSchedule\" className={classes.btnText}>\n                  {t('chaosWorkflows.browseSchedules.editSchedule')}\n                </Typography>\n              </div>\n            </MenuItem>\n          ) : (\n            <></>\n          )}\n          {projectRole !== 'Viewer' && data.cronSyntax === '' ? (\n            <MenuItem value=\"Rerun_Schedule\" onClick={() => reRunSchedule()}>\n              <div className={classes.expDiv}>\n                <ReplayIcon className={classes.rerunBtn} />\n                <Typography data-cy=\"reRunSchedule\" className={classes.btnText}>\n                  {t('chaosWorkflows.browseSchedules.reRunSchedule')}\n                </Typography>\n              </div>\n            </MenuItem>\n          ) : (\n            <></>\n          )}\n          {projectRole !== 'Viewer' &&\n            data.cronSyntax !== '' &&\n            YAML.parse(data.workflow_manifest).spec.suspend !== true && (\n              <MenuItem\n                value=\"Disable\"\n                onClick={() => {\n                  handleToggleSchedule(data);\n                }}\n              >\n                <div className={classes.expDiv}>\n                  <img\n                    src=\"/icons/disableSchedule.svg\"\n                    alt=\"Delete Schedule\"\n                    className={classes.btnImg}\n                  />\n                  <Typography\n                    data-cy=\"disableSchedule\"\n                    className={classes.downloadText}\n                  >\n                    {t('chaosWorkflows.browseSchedules.disableSchedule')}\n                  </Typography>\n                </div>\n              </MenuItem>\n            )}\n\n          {projectRole !== 'Viewer' &&\n            YAML.parse(data.workflow_manifest).spec.suspend === true && (\n              <MenuItem\n                value=\"Enable\"\n                onClick={() => {\n                  handleToggleSchedule(data);\n                }}\n              >\n                <div className={classes.expDiv}>\n                  <img\n                    src=\"/icons/disableSchedule.svg\"\n                    alt=\"Enable Schedule\"\n                    className={classes.btnImg}\n                  />\n                  <Typography\n                    data-cy=\"enableSchedule\"\n                    className={classes.downloadText}\n                  >\n                    {t('chaosWorkflows.browseSchedules.enableSchedule')}\n                  </Typography>\n                </div>\n              </MenuItem>\n            )}\n          <MenuItem\n            value=\"Download\"\n            onClick={() =>\n              downloadYAML(data.workflow_manifest, data.workflow_name)\n            }\n          >\n            <div className={classes.expDiv}>\n              <GetAppIcon className={classes.downloadBtn} />\n              <Typography\n                data-cy=\"downloadManifest\"\n                className={classes.downloadText}\n              >\n                {t('chaosWorkflows.browseSchedules.downloadManifest')}\n              </Typography>\n            </div>\n          </MenuItem>\n          <MenuItem\n            value=\"SaveTemplate\"\n            data-cy=\"saveTemplate\"\n            onClick={() => handleSaveWorkflowTemplate(data.workflow_manifest)}\n          >\n            <div className={classes.expDiv}>\n              <InsertDriveFileOutlined className={classes.downloadBtn} />\n              <Typography className={classes.downloadText}>\n                {t('chaosWorkflows.browseSchedules.saveTemplate')}\n              </Typography>\n            </div>\n          </MenuItem>\n          {projectRole !== 'Viewer' ? (\n            <MenuItem value=\"Analysis\" onClick={() => setIsModalOpen(true)}>\n              <div className={classes.expDiv}>\n                <img\n                  src=\"/icons/deleteSchedule.svg\"\n                  alt=\"Delete Schedule\"\n                  className={classes.btnImg}\n                />\n                <Typography\n                  data-cy=\"deleteSchedule\"\n                  className={classes.btnText}\n                >\n                  {data.cronSyntax !== ''\n                    ? t('chaosWorkflows.browseSchedules.deleteSchedule')\n                    : t('chaosWorkflows.browseSchedules.deleteWorkflow')}\n                </Typography>\n              </div>\n            </MenuItem>\n          ) : null}\n        </Menu>\n      </TableCell>\n      {isModalOpen ? (\n        <Modal\n          open={isModalOpen}\n          onClose={handleClose}\n          width=\"60%\"\n          modalActions={\n            <ButtonOutlined onClick={handleClose}>&#x2715;</ButtonOutlined>\n          }\n        >\n          <div className={classes.modalDiv}>\n            <CrossMarkIcon />\n            <Typography className={classes.modalHeader}>\n              {t('createWorkflow.scheduleWorkflow.modalHeader')}\n            </Typography>\n            <Typography className={classes.modalConfirm}>\n              {t('createWorkflow.scheduleWorkflow.modalSubheader')}\n            </Typography>\n            <div className={classes.modalBtns}>\n              <ButtonOutlined onClick={() => setIsModalOpen(false)}>\n                {t('createWorkflow.scheduleWorkflow.cancelBtn')}\n              </ButtonOutlined>\n              <ButtonFilled\n                variant=\"error\"\n                className={classes.w7}\n                onClick={() => {\n                  deleteRow(data.workflow_id);\n                  setIsModalOpen(false);\n                }}\n              >\n                {t('createWorkflow.scheduleWorkflow.deleteBtn')}\n              </ButtonFilled>\n            </div>\n          </div>\n        </Modal>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}