{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{CardContent,CardHeader,IconButton,Menu,MenuItem,Typography,useTheme}from'@material-ui/core';import MoreVertIcon from'@material-ui/icons/MoreVert';import{LitmusCard}from'litmus-ui';import moment from'moment';import React from'react';import{useTranslation}from'react-i18next';import Loader from'../../components/Loader';import Center from'../../containers/layouts/Center';import{history}from'../../redux/configureStore';import{getProjectID,getProjectRole}from'../../utils/getSearchParams';import useStyles from'./styles';var CustomMyHubCard=function CustomMyHubCard(_ref){var hub=_ref.hub,keyValue=_ref.keyValue,refreshLoader=_ref.refreshLoader,handleDelete=_ref.handleDelete,handleRefresh=_ref.handleRefresh,handleEditHub=_ref.handleEditHub;var classes=useStyles();var _useTheme=useTheme(),palette=_useTheme.palette;// States for PopOver to display Experiment Weights\nvar _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),anchorEl=_React$useState2[0],setAnchorEl=_React$useState2[1];var open=Boolean(anchorEl);var handleClick=function handleClick(event){setAnchorEl(event.currentTarget);};var handleClose=function handleClose(){setAnchorEl(null);};var _useTranslation=useTranslation(),t=_useTranslation.t;var projectID=getProjectID();var userRole=getProjectRole();// Function to convert UNIX time in format of DD MMM YYY\nvar formatDate=function formatDate(date){var updated=new Date(parseInt(date,10)*1000).toString();var resDate=moment(updated).format('DD MMM YYYY hh:mm A');if(date)return resDate;return'Date not available';};return/*#__PURE__*/React.createElement(LitmusCard,{width:\"220px\",height:\"320px\",borderColor:palette.border.main,key:hub.id,className:classes.cardDivChart,\"data-cy\":\"myhubCard\"},/*#__PURE__*/React.createElement(CardHeader,{className:classes.cardHeader,action:/*#__PURE__*/React.createElement(\"div\",{className:classes.mainCardDiv},/*#__PURE__*/React.createElement(\"div\",{className:hub.IsAvailable?classes.connected:classes.error},/*#__PURE__*/React.createElement(Center,null,/*#__PURE__*/React.createElement(Typography,{className:classes.statusText},hub.IsAvailable?'Connected':'Error'))),userRole!=='Viewer'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"more\",\"aria-controls\":\"long-menu\",\"aria-haspopup\":\"true\",onClick:handleClick,\"data-cy\":\"myHubCardOption\",className:classes.iconButton},/*#__PURE__*/React.createElement(MoreVertIcon,{className:classes.cardOption})),/*#__PURE__*/React.createElement(Menu,{id:\"long-menu\",anchorEl:anchorEl,keepMounted:true,open:open,onClose:handleClose},/*#__PURE__*/React.createElement(MenuItem,{\"data-cy\":\"myHubRefresh\",value:\"Refresh\",onClick:function onClick(){handleRefresh(hub.id);}},/*#__PURE__*/React.createElement(\"div\",{className:classes.cardMenu},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/refresh.svg\",alt:\"Refresh\",className:classes.refreshImg}),/*#__PURE__*/React.createElement(Typography,{\"data-cy\":\"viewHub\"},t('myhub.refresh')))),/*#__PURE__*/React.createElement(MenuItem,{\"data-cy\":\"myHubEdit\",value:\"View\",onClick:function onClick(){handleEditHub(hub.HubName);handleClose();}},/*#__PURE__*/React.createElement(\"div\",{className:classes.cardMenu},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/Edit.svg\",alt:\"Edit\",className:classes.editImg}),/*#__PURE__*/React.createElement(Typography,{\"data-cy\":\"viewHub\"},t('myhub.edit')))),/*#__PURE__*/React.createElement(MenuItem,{\"data-cy\":\"myHubDelete\",value:\"Delete\",onClick:function onClick(){handleDelete(hub.id);}},/*#__PURE__*/React.createElement(\"div\",{className:classes.cardMenu},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/bin-red.svg\",alt:\"disconnect\",className:classes.disconnectImg}),/*#__PURE__*/React.createElement(Typography,{className:classes.disconnectText,\"data-cy\":\"viewHub\"},t('myhub.disconnect')))))))}),/*#__PURE__*/React.createElement(CardContent,{onClick:function onClick(){history.push({pathname:\"/myhub/\".concat(hub.HubName),search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(userRole)});}},/*#__PURE__*/React.createElement(\"div\",{className:classes.cardContent},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/\".concat(hub.HubName==='Chaos Hub'?'myhub-litmus.svg':'my-hub-charts.svg'),alt:\"add-hub\"}),/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",align:\"center\",className:classes.hubName},/*#__PURE__*/React.createElement(\"strong\",null,hub.HubName),\"/\",hub.RepoBranch),/*#__PURE__*/React.createElement(Typography,{className:classes.totalExp,gutterBottom:true},parseInt(hub.TotalExp,10)>0?\"\".concat(hub.TotalExp,\" experiments\"):t('myhub.error'))),keyValue===hub.id&&refreshLoader?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Loader,null),/*#__PURE__*/React.createElement(Typography,{className:classes.syncText},t('myhub.mainPage.sync'))):/*#__PURE__*/React.createElement(\"div\",{className:classes.lastSyncDiv},/*#__PURE__*/React.createElement(Typography,{className:classes.lastSyncText},t('myhub.lastSync')),/*#__PURE__*/React.createElement(Typography,{className:classes.lastSyncText},formatDate(hub.LastSyncedAt)))));};export default CustomMyHubCard;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/ChaosHub/customMyHubCard.tsx"],"names":["CardContent","CardHeader","IconButton","Menu","MenuItem","Typography","useTheme","MoreVertIcon","LitmusCard","moment","React","useTranslation","Loader","Center","history","getProjectID","getProjectRole","useStyles","CustomMyHubCard","hub","keyValue","refreshLoader","handleDelete","handleRefresh","handleEditHub","classes","palette","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","t","projectID","userRole","formatDate","date","updated","Date","parseInt","toString","resDate","format","border","main","id","cardDivChart","cardHeader","mainCardDiv","IsAvailable","connected","error","statusText","iconButton","cardOption","cardMenu","refreshImg","HubName","editImg","disconnectImg","disconnectText","push","pathname","search","cardContent","hubName","RepoBranch","totalExp","TotalExp","syncText","lastSyncDiv","lastSyncText","LastSyncedAt"],"mappings":"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","sourcesContent":["import {\n  CardContent,\n  CardHeader,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { LitmusCard } from 'litmus-ui';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport Center from '../../containers/layouts/Center';\nimport { HubDetails } from '../../models/redux/myhub';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface customMyHubCardProp {\n  hub: HubDetails;\n  keyValue: string;\n  handleDelete: (hubId: string) => void;\n  handleRefresh: (hubId: string) => void;\n  refreshLoader: boolean;\n  handleEditHub: (hubName: string) => void;\n}\n\nconst CustomMyHubCard: React.FC<customMyHubCardProp> = ({\n  hub,\n  keyValue,\n  refreshLoader,\n  handleDelete,\n  handleRefresh,\n  handleEditHub,\n}) => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n  // States for PopOver to display Experiment Weights\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const userRole = getProjectRole();\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM YYYY hh:mm A');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  return (\n    <LitmusCard\n      width=\"220px\"\n      height=\"320px\"\n      borderColor={palette.border.main}\n      key={hub.id}\n      className={classes.cardDivChart}\n      data-cy=\"myhubCard\"\n    >\n      {/* Card Header for Status and Menu Option */}\n      <CardHeader\n        className={classes.cardHeader}\n        action={\n          <div className={classes.mainCardDiv}>\n            <div\n              className={hub.IsAvailable ? classes.connected : classes.error}\n            >\n              <Center>\n                <Typography className={classes.statusText}>\n                  {hub.IsAvailable ? 'Connected' : 'Error'}\n                </Typography>\n              </Center>\n            </div>\n\n            {userRole !== 'Viewer' && (\n              <>\n                <IconButton\n                  aria-label=\"more\"\n                  aria-controls=\"long-menu\"\n                  aria-haspopup=\"true\"\n                  onClick={handleClick}\n                  data-cy=\"myHubCardOption\"\n                  className={classes.iconButton}\n                >\n                  <MoreVertIcon className={classes.cardOption} />\n                </IconButton>\n                <Menu\n                  id=\"long-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={open}\n                  onClose={handleClose}\n                >\n                  <MenuItem\n                    data-cy=\"myHubRefresh\"\n                    value=\"Refresh\"\n                    onClick={() => {\n                      handleRefresh(hub.id);\n                    }}\n                  >\n                    <div className={classes.cardMenu}>\n                      <img\n                        src=\"./icons/refresh.svg\"\n                        alt=\"Refresh\"\n                        className={classes.refreshImg}\n                      />\n                      <Typography data-cy=\"viewHub\">\n                        {t('myhub.refresh')}\n                      </Typography>\n                    </div>\n                  </MenuItem>\n                  <MenuItem\n                    data-cy=\"myHubEdit\"\n                    value=\"View\"\n                    onClick={() => {\n                      handleEditHub(hub.HubName);\n                      handleClose();\n                    }}\n                  >\n                    <div className={classes.cardMenu}>\n                      <img\n                        src=\"./icons/Edit.svg\"\n                        alt=\"Edit\"\n                        className={classes.editImg}\n                      />\n                      <Typography data-cy=\"viewHub\">\n                        {t('myhub.edit')}\n                      </Typography>\n                    </div>\n                  </MenuItem>\n\n                  <MenuItem\n                    data-cy=\"myHubDelete\"\n                    value=\"Delete\"\n                    onClick={() => {\n                      handleDelete(hub.id);\n                    }}\n                  >\n                    <div className={classes.cardMenu}>\n                      <img\n                        src=\"./icons/bin-red.svg\"\n                        alt=\"disconnect\"\n                        className={classes.disconnectImg}\n                      />\n                      <Typography\n                        className={classes.disconnectText}\n                        data-cy=\"viewHub\"\n                      >\n                        {t('myhub.disconnect')}\n                      </Typography>\n                    </div>\n                  </MenuItem>\n                </Menu>\n              </>\n            )}\n          </div>\n        }\n      />\n      {/* Card Content */}\n      <CardContent\n        onClick={() => {\n          history.push({\n            pathname: `/myhub/${hub.HubName}`,\n            search: `?projectID=${projectID}&projectRole=${userRole}`,\n          });\n        }}\n      >\n        <div className={classes.cardContent}>\n          <img\n            src={`./icons/${\n              hub.HubName === 'Chaos Hub'\n                ? 'myhub-litmus.svg'\n                : 'my-hub-charts.svg'\n            }`}\n            alt=\"add-hub\"\n          />\n          <Typography variant=\"h6\" align=\"center\" className={classes.hubName}>\n            <strong>{hub.HubName}</strong>/{hub.RepoBranch}\n          </Typography>\n          <Typography className={classes.totalExp} gutterBottom>\n            {parseInt(hub.TotalExp, 10) > 0\n              ? `${hub.TotalExp} experiments`\n              : t('myhub.error')}\n          </Typography>\n        </div>\n        {keyValue === hub.id && refreshLoader ? (\n          <div>\n            <Loader />\n            <Typography className={classes.syncText}>\n              {t('myhub.mainPage.sync')}\n            </Typography>\n          </div>\n        ) : (\n          <div className={classes.lastSyncDiv}>\n            <Typography className={classes.lastSyncText}>\n              {t('myhub.lastSync')}\n            </Typography>\n            <Typography className={classes.lastSyncText}>\n              {formatDate(hub.LastSyncedAt)}\n            </Typography>\n          </div>\n        )}\n      </CardContent>\n    </LitmusCard>\n  );\n};\n\nexport default CustomMyHubCard;\n"]},"metadata":{},"sourceType":"module"}