{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useLazyQuery,useQuery}from'@apollo/client';import{RadioGroup,Typography,useTheme}from'@material-ui/core';import{ButtonOutlined,LitmusCard,Modal,RadioButton,Search}from'litmus-ui';import React,{forwardRef,useEffect,useImperativeHandle,useState}from'react';import{useTranslation}from'react-i18next';import{useSelector}from'react-redux';import ArrowUpwardIcon from'@material-ui/icons/ArrowUpward';import{AgentDeployModal}from'../../../components/AgentDeployModal';import{constants}from'../../../constants';import{GET_CLUSTER,GET_IMAGE_REGISTRY,LIST_IMAGE_REGISTRY}from'../../../graphql';import useActions from'../../../redux/actions';import*as AlertActions from'../../../redux/actions/alert';import*as ImageRegistryActions from'../../../redux/actions/image_registry';import*as WorkflowActions from'../../../redux/actions/workflow';import{getProjectID,getProjectRole}from'../../../utils/getSearchParams';import useStyles from'./styles';var ChooseWorkflowAgent=forwardRef(function(_,ref){var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),palette=_useTheme.palette;var workflow=useActions(WorkflowActions);var alert=useActions(AlertActions);var imageRegistry=useActions(ImageRegistryActions);var clusterid=useSelector(function(state){return state.workflowData.clusterid;});var selectedProjectID=getProjectID();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),clusterData=_useState2[0],setClusterData=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),currentlySelectedAgent=_useState6[0],setCurrentlySelectedAgent=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),modalOpen=_useState8[0],setModalOpen=_useState8[1];var toggleModel=function toggleModel(){setModalOpen(!modalOpen);};var _useLazyQuery=useLazyQuery(GET_IMAGE_REGISTRY,{fetchPolicy:'network-only',onCompleted:function onCompleted(data){if(data!==undefined){var regData=data.GetImageRegistry.image_registry_info;imageRegistry.selectImageRegistry({image_registry_name:regData.image_registry_name,image_repo_name:regData.image_repo_name,image_registry_type:regData.image_registry_type,secret_name:regData.secret_name,secret_namespace:regData.secret_namespace,enable_registry:regData.enable_registry});}}}),_useLazyQuery2=_slicedToArray(_useLazyQuery,1),getRegistryData=_useLazyQuery2[0];useQuery(LIST_IMAGE_REGISTRY,{variables:{data:selectedProjectID},fetchPolicy:'network-only',onCompleted:function onCompleted(data){if(data.ListImageRegistry!==null&&data.ListImageRegistry.length>0){getRegistryData({variables:{registryid:data.ListImageRegistry[0].image_registry_id,projectid:selectedProjectID}});}else{imageRegistry.selectImageRegistry({image_registry_name:constants.dockerio,image_repo_name:constants.litmus,image_registry_type:constants.public,secret_name:'',secret_namespace:'',enable_registry:true});}}});var _useLazyQuery3=useLazyQuery(GET_CLUSTER,{onCompleted:function onCompleted(data){var clusters=[];if(data&&data.getCluster.length!==0){data.getCluster.forEach(function(e){if(e.is_active===true){// Populating all the cluster data in the clusters[] array\nclusters.push({cluster_name:e.cluster_name,is_active:e.is_active,cluster_id:e.cluster_id,agent_namespace:e.agent_namespace});// Setting the initial workflow yaml to be of type Workflow\n// Setting the initial workflow yaml to be of type Workflow\nworkflow.setWorkflowDetails({clusterid:'',cronSyntax:'',scheduleType:{scheduleOnce:'now',recurringSchedule:''},scheduleInput:{hour_interval:0,day:1,weekday:'Monday',time:new Date(),date:new Date()},workflowIcon:''});}});setClusterData(clusters);}},fetchPolicy:'cache-and-network'}),_useLazyQuery4=_slicedToArray(_useLazyQuery3,1),getCluster=_useLazyQuery4[0];function onNext(){if(getProjectRole()==='Viewer'){alert.changeAlertState(true);return false;}if(clusterid===''||clusterData.length===0){alert.changeAlertState(true);// No Cluster has been selected and user clicked on Next\nreturn false;}return true;}// Rendering once to get the cluster data\nuseEffect(function(){getCluster({variables:{project_id:selectedProjectID}});},[]);var handleChange=function handleChange(event){setCurrentlySelectedAgent(event.target.value);};// Filter the clusters based on search results\nvar filteredCluster=clusterData.filter(function(cluster){if(search===null)return cluster;if(cluster.cluster_name.toLowerCase().includes(search.toLowerCase()))return cluster;return null;});// Rendering atleast a few times till it updates the currentlySelectedAgent value\nuseEffect(function(){if(currentlySelectedAgent!==''){clusterData.forEach(function(cluster){if(currentlySelectedAgent===cluster.cluster_id){workflow.setWorkflowDetails({clusterid:cluster.cluster_id,project_id:selectedProjectID,clustername:cluster.cluster_name,namespace:cluster.agent_namespace});}});}},[currentlySelectedAgent]);useImperativeHandle(ref,function(){return{onNext:onNext};});return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.innerContainer},/*#__PURE__*/React.createElement(\"div\",{\"aria-label\":\"header\",className:classes.header},/*#__PURE__*/React.createElement(\"div\",{\"aria-label\":\"headerLeft\"},/*#__PURE__*/React.createElement(Typography,{className:classes.title},/*#__PURE__*/React.createElement(\"strong\",null,\" \",t('workflowAgent.header.chooseAgent'))),/*#__PURE__*/React.createElement(Typography,{className:classes.subtitle},t('workflowAgent.header.creatingNew'),\" \",/*#__PURE__*/React.createElement(\"br\",null),t('workflowAgent.header.selectAgent'))),/*#__PURE__*/React.createElement(\"div\",{\"aria-label\":\"headerRight\"},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/dart.svg\",className:classes.check,alt:\"Check\"}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Search,{\"data-cy\":\"agentSearch\",id:\"input-with-icon-textfield\",placeholder:t('workflowAgent.search.placeholder'),value:search,onChange:function onChange(event){return setSearch(event.target.value);}}),clusterData.length===0?/*#__PURE__*/React.createElement(\"div\",{className:classes.noAgents},/*#__PURE__*/React.createElement(Typography,{className:classes.noAgentsText},/*#__PURE__*/React.createElement(\"strong\",null,t('workflowAgent.noAgents'))),/*#__PURE__*/React.createElement(Typography,{className:classes.connectAgent},t('workflowAgent.connectAgent')),/*#__PURE__*/React.createElement(\"div\",{className:classes.connectBtn},/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:toggleModel,className:classes.infoContainerButton},/*#__PURE__*/React.createElement(Typography,null,/*#__PURE__*/React.createElement(ArrowUpwardIcon,null),t('homeViews.agentConfiguredHome.agentInfoContainer.deploy'))),/*#__PURE__*/React.createElement(Modal,{height:\"50%\",width:\"50%\",open:modalOpen,onClose:toggleModel,modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:toggleModel},\"\\u2715\")},/*#__PURE__*/React.createElement(AgentDeployModal,{handleClose:toggleModel})))):/*#__PURE__*/React.createElement(RadioGroup,{name:\"Agent Selection\",value:currentlySelectedAgent,onChange:function onChange(e){return handleChange(e);}},/*#__PURE__*/React.createElement(\"div\",{className:classes.agentWrapperDiv,\"data-cy\":\"AgentsRadioGroup\"},(filteredCluster===null||filteredCluster===void 0?void 0:filteredCluster.length)>0?filteredCluster.map(function(cluster){return/*#__PURE__*/React.createElement(LitmusCard,{key:cluster.cluster_id,glow:currentlySelectedAgent===cluster.cluster_id,width:\"40%\",height:\"4rem\",className:classes.litmusCard,borderColor:currentlySelectedAgent===cluster.cluster_id?palette.primary.main:palette.border.main},/*#__PURE__*/React.createElement(RadioButton,{value:cluster.cluster_id,className:classes.agentRadioButton},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,null,cluster.cluster_name),/*#__PURE__*/React.createElement(Typography,null,cluster.cluster_id))));}):/*#__PURE__*/React.createElement(\"div\",{className:classes.noAgentsText},/*#__PURE__*/React.createElement(Typography,null,/*#__PURE__*/React.createElement(\"strong\",null,t('workflowAgent.noAgentSearch'))))))));});export default ChooseWorkflowAgent;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ChooseAWorkflowAgent/index.tsx"],"names":["useLazyQuery","useQuery","RadioGroup","Typography","useTheme","ButtonOutlined","LitmusCard","Modal","RadioButton","Search","React","forwardRef","useEffect","useImperativeHandle","useState","useTranslation","useSelector","ArrowUpwardIcon","AgentDeployModal","constants","GET_CLUSTER","GET_IMAGE_REGISTRY","LIST_IMAGE_REGISTRY","useActions","AlertActions","ImageRegistryActions","WorkflowActions","getProjectID","getProjectRole","useStyles","ChooseWorkflowAgent","_","ref","classes","t","palette","workflow","alert","imageRegistry","clusterid","state","workflowData","selectedProjectID","clusterData","setClusterData","search","setSearch","currentlySelectedAgent","setCurrentlySelectedAgent","modalOpen","setModalOpen","toggleModel","fetchPolicy","onCompleted","data","undefined","regData","GetImageRegistry","image_registry_info","selectImageRegistry","image_registry_name","image_repo_name","image_registry_type","secret_name","secret_namespace","enable_registry","getRegistryData","variables","ListImageRegistry","length","registryid","image_registry_id","projectid","dockerio","litmus","public","clusters","getCluster","forEach","e","is_active","push","cluster_name","cluster_id","agent_namespace","setWorkflowDetails","cronSyntax","scheduleType","scheduleOnce","recurringSchedule","scheduleInput","hour_interval","day","weekday","time","Date","date","workflowIcon","onNext","changeAlertState","project_id","handleChange","event","target","value","filteredCluster","filter","cluster","toLowerCase","includes","clustername","namespace","root","innerContainer","header","title","subtitle","check","noAgents","noAgentsText","connectAgent","connectBtn","infoContainerButton","agentWrapperDiv","map","litmusCard","primary","main","border","agentRadioButton"],"mappings":"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","sourcesContent":["import { useLazyQuery, useQuery } from '@apollo/client';\nimport { RadioGroup, Typography, useTheme } from '@material-ui/core';\nimport {\n  ButtonOutlined,\n  LitmusCard,\n  Modal,\n  RadioButton,\n  Search,\n} from 'litmus-ui';\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { AgentDeployModal } from '../../../components/AgentDeployModal';\nimport { constants } from '../../../constants';\nimport {\n  GET_CLUSTER,\n  GET_IMAGE_REGISTRY,\n  LIST_IMAGE_REGISTRY,\n} from '../../../graphql';\nimport { ImageRegistryInfo } from '../../../models/redux/image_registry';\nimport useActions from '../../../redux/actions';\nimport * as AlertActions from '../../../redux/actions/alert';\nimport * as ImageRegistryActions from '../../../redux/actions/image_registry';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { RootState } from '../../../redux/reducers';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface Cluster {\n  cluster_name: string;\n  is_active: boolean;\n  cluster_id: string;\n  agent_namespace: string;\n}\n\nconst ChooseWorkflowAgent = forwardRef((_, ref) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { palette } = useTheme();\n\n  const workflow = useActions(WorkflowActions);\n  const alert = useActions(AlertActions);\n  const imageRegistry = useActions(ImageRegistryActions);\n  const clusterid: string = useSelector(\n    (state: RootState) => state.workflowData.clusterid\n  );\n  const selectedProjectID = getProjectID();\n\n  const [clusterData, setClusterData] = useState<Cluster[]>([]);\n  const [search, setSearch] = useState<string | null>(null);\n  const [currentlySelectedAgent, setCurrentlySelectedAgent] =\n    useState<string>('');\n\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\n\n  const toggleModel = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  const [getRegistryData] = useLazyQuery(GET_IMAGE_REGISTRY, {\n    fetchPolicy: 'network-only',\n    onCompleted: (data) => {\n      if (data !== undefined) {\n        const regData = data.GetImageRegistry\n          .image_registry_info as ImageRegistryInfo;\n        imageRegistry.selectImageRegistry({\n          image_registry_name: regData.image_registry_name,\n          image_repo_name: regData.image_repo_name,\n          image_registry_type: regData.image_registry_type,\n          secret_name: regData.secret_name,\n          secret_namespace: regData.secret_namespace,\n          enable_registry: regData.enable_registry,\n        });\n      }\n    },\n  });\n\n  useQuery(LIST_IMAGE_REGISTRY, {\n    variables: {\n      data: selectedProjectID,\n    },\n    fetchPolicy: 'network-only',\n    onCompleted: (data) => {\n      if (\n        data.ListImageRegistry !== null &&\n        data.ListImageRegistry.length > 0\n      ) {\n        getRegistryData({\n          variables: {\n            registryid: data.ListImageRegistry[0].image_registry_id,\n            projectid: selectedProjectID,\n          },\n        });\n      } else {\n        imageRegistry.selectImageRegistry({\n          image_registry_name: constants.dockerio,\n          image_repo_name: constants.litmus,\n          image_registry_type: constants.public,\n          secret_name: '',\n          secret_namespace: '',\n          enable_registry: true,\n        });\n      }\n    },\n  });\n\n  const [getCluster] = useLazyQuery(GET_CLUSTER, {\n    onCompleted: (data) => {\n      const clusters: Cluster[] = [];\n      if (data && data.getCluster.length !== 0) {\n        data.getCluster.forEach((e: Cluster) => {\n          if (e.is_active === true) {\n            // Populating all the cluster data in the clusters[] array\n            clusters.push({\n              cluster_name: e.cluster_name,\n              is_active: e.is_active,\n              cluster_id: e.cluster_id,\n              agent_namespace: e.agent_namespace,\n            });\n            // Setting the initial workflow yaml to be of type Workflow\n            workflow.setWorkflowDetails({\n              clusterid: '',\n              cronSyntax: '',\n              scheduleType: {\n                scheduleOnce: 'now',\n                recurringSchedule: '',\n              },\n              scheduleInput: {\n                hour_interval: 0,\n                day: 1,\n                weekday: 'Monday',\n                time: new Date(),\n                date: new Date(),\n              },\n              workflowIcon: '',\n            });\n          }\n        });\n        setClusterData(clusters);\n      }\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  function onNext() {\n    if (getProjectRole() === 'Viewer') {\n      alert.changeAlertState(true);\n      return false;\n    }\n    if (clusterid === '' || clusterData.length === 0) {\n      alert.changeAlertState(true); // No Cluster has been selected and user clicked on Next\n      return false;\n    }\n    return true;\n  }\n\n  // Rendering once to get the cluster data\n  useEffect(() => {\n    getCluster({ variables: { project_id: selectedProjectID } });\n  }, []);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrentlySelectedAgent(event.target.value);\n  };\n\n  // Filter the clusters based on search results\n  const filteredCluster = clusterData.filter((cluster: Cluster) => {\n    if (search === null) return cluster;\n    if (cluster.cluster_name.toLowerCase().includes(search.toLowerCase()))\n      return cluster;\n    return null;\n  });\n\n  // Rendering atleast a few times till it updates the currentlySelectedAgent value\n  useEffect(() => {\n    if (currentlySelectedAgent !== '') {\n      clusterData.forEach((cluster) => {\n        if (currentlySelectedAgent === cluster.cluster_id) {\n          workflow.setWorkflowDetails({\n            clusterid: cluster.cluster_id,\n            project_id: selectedProjectID,\n            clustername: cluster.cluster_name,\n            namespace: cluster.agent_namespace,\n          });\n        }\n      });\n    }\n  }, [currentlySelectedAgent]);\n\n  useImperativeHandle(ref, () => ({\n    onNext,\n  }));\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.innerContainer}>\n        {/* Header */}\n        <div aria-label=\"header\" className={classes.header}>\n          <div aria-label=\"headerLeft\">\n            <Typography className={classes.title}>\n              <strong> {t('workflowAgent.header.chooseAgent')}</strong>\n            </Typography>\n            <Typography className={classes.subtitle}>\n              {t('workflowAgent.header.creatingNew')} <br />\n              {t('workflowAgent.header.selectAgent')}\n            </Typography>\n          </div>\n          {/* Dart Icon */}\n          <div aria-label=\"headerRight\">\n            <img src=\"./icons/dart.svg\" className={classes.check} alt=\"Check\" />\n          </div>\n        </div>\n\n        <br />\n        {/* Search Bar */}\n        <Search\n          data-cy=\"agentSearch\"\n          id=\"input-with-icon-textfield\"\n          placeholder={t('workflowAgent.search.placeholder')}\n          value={search}\n          onChange={(event) => setSearch(event.target.value)}\n        />\n\n        {/* Cluster Data */}\n        {clusterData.length === 0 ? (\n          <div className={classes.noAgents}>\n            <Typography className={classes.noAgentsText}>\n              <strong>{t('workflowAgent.noAgents')}</strong>\n            </Typography>\n            <Typography className={classes.connectAgent}>\n              {t('workflowAgent.connectAgent')}\n            </Typography>\n            <div className={classes.connectBtn}>\n              <ButtonOutlined\n                onClick={toggleModel}\n                className={classes.infoContainerButton}\n              >\n                <Typography>\n                  <ArrowUpwardIcon />\n                  {t('homeViews.agentConfiguredHome.agentInfoContainer.deploy')}\n                </Typography>\n              </ButtonOutlined>\n\n              <Modal\n                height=\"50%\"\n                width=\"50%\"\n                open={modalOpen}\n                onClose={toggleModel}\n                modalActions={\n                  <ButtonOutlined onClick={toggleModel}>\n                    &#x2715;\n                  </ButtonOutlined>\n                }\n              >\n                <AgentDeployModal handleClose={toggleModel} />\n              </Modal>\n            </div>\n          </div>\n        ) : (\n          <RadioGroup\n            name=\"Agent Selection\"\n            value={currentlySelectedAgent}\n            onChange={(e) => handleChange(e)}\n          >\n            <div className={classes.agentWrapperDiv} data-cy=\"AgentsRadioGroup\">\n              {filteredCluster?.length > 0 ? (\n                filteredCluster.map((cluster) => (\n                  <LitmusCard\n                    key={cluster.cluster_id}\n                    glow={currentlySelectedAgent === cluster.cluster_id}\n                    width=\"40%\"\n                    height=\"4rem\"\n                    className={classes.litmusCard}\n                    borderColor={\n                      currentlySelectedAgent === cluster.cluster_id\n                        ? palette.primary.main\n                        : palette.border.main\n                    }\n                  >\n                    <RadioButton\n                      value={cluster.cluster_id}\n                      className={classes.agentRadioButton}\n                    >\n                      <div>\n                        <Typography>{cluster.cluster_name}</Typography>\n                        <Typography>{cluster.cluster_id}</Typography>\n                      </div>\n                    </RadioButton>\n                  </LitmusCard>\n                ))\n              ) : (\n                <div className={classes.noAgentsText}>\n                  <Typography>\n                    <strong>{t('workflowAgent.noAgentSearch')}</strong>\n                  </Typography>\n                </div>\n              )}\n            </div>\n          </RadioGroup>\n        )}\n      </div>\n    </div>\n  );\n});\n\nexport default ChooseWorkflowAgent;\n"]},"metadata":{},"sourceType":"module"}