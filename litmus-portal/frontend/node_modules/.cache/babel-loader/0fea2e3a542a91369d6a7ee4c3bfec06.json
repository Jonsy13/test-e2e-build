{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useMutation,useQuery}from'@apollo/client';import{IconButton,Paper,Typography}from'@material-ui/core';import{ButtonFilled}from'litmus-ui';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import{GET_PROJECT,LEAVE_PROJECT,LIST_PROJECTS}from'../../../../../graphql';import{history}from'../../../../../redux/configureStore';import{getUserId}from'../../../../../utils/auth';import{getProjectID}from'../../../../../utils/getSearchParams';import useStyles from'./styles';var AcceptedInvitations=function AcceptedInvitations(){var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var userID=getUserId();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),projectOther=_useState2[0],setProjectOther=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),projects=_useState4[0],setProjects=_useState4[1];var _useQuery=useQuery(LIST_PROJECTS,{onCompleted:function onCompleted(){if(dataProject===null||dataProject===void 0?void 0:dataProject.listProjects){setProjects(dataProject===null||dataProject===void 0?void 0:dataProject.listProjects);}}}),dataProject=_useQuery.data;// const userData = useSelector((state: RootState) => state.userData);\nvar projectID=getProjectID();// stores the user who has left the project\nvar _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),exitedMember=_useState6[0],setExitedMember=_useState6[1];var _useMutation=useMutation(LEAVE_PROJECT,{onCompleted:function onCompleted(){setProjectOther(projectOther.filter(function(row){return row.projectDetails.id!==exitedMember;}));},refetchQueries:[{query:GET_PROJECT,variables:{projectID:projectID}},{query:LIST_PROJECTS}]}),_useMutation2=_slicedToArray(_useMutation,1),leaveProject=_useMutation2[0];useEffect(function(){var otherProject=[];projects.map(function(project){return project.members.forEach(function(member){if(member.user_id===userID&&member.role!=='Owner'&&member.invitation==='Accepted'){otherProject.push({projectDetails:project,currentUserProjectRole:member.role});}});});setProjectOther([].concat(otherProject));},[projects]);return/*#__PURE__*/React.createElement(React.Fragment,null,projectOther.length?projectOther.map(function(project){return/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"receivedInvitationModal\",className:classes.rootDiv,key:\"\".concat(project)},/*#__PURE__*/React.createElement(Paper,{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.projectDiv},/*#__PURE__*/React.createElement(Typography,{className:classes.projectName},project.projectDetails.name),/*#__PURE__*/React.createElement(IconButton,{className:classes.viewProject,onClick:function onClick(){history.push({pathname:\"/home\",search:\"?projectID=\".concat(project.projectDetails.id,\"&projectRole=\").concat(project.currentUserProjectRole)});}},/*#__PURE__*/React.createElement(Typography,null,t('settings.teamingTab.invitation.acceptedInvitation.viewProject')))),/*#__PURE__*/React.createElement(Typography,{className:classes.projectRole},t('settings.teamingTab.invitation.acceptedInvitation.role'),\":\",' ',project.currentUserProjectRole),/*#__PURE__*/React.createElement(\"div\",{className:classes.buttonDiv},/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"LeaveProject\"},/*#__PURE__*/React.createElement(ButtonFilled,{className:classes.leaveProjectBtn,onClick:function onClick(){setExitedMember(project.projectDetails.id);leaveProject({variables:{data:{project_id:project.projectDetails.id,user_id:getUserId(),role:project.currentUserProjectRole}}});}},t('settings.teamingTab.invitation.receivedInvitation.button.leave'))))));}):/*#__PURE__*/React.createElement(React.Fragment,null));};export default AcceptedInvitations;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/TeamingTab/Invitation/AcceptedInvitations/index.tsx"],"names":["useMutation","useQuery","IconButton","Paper","Typography","ButtonFilled","React","useEffect","useState","useTranslation","GET_PROJECT","LEAVE_PROJECT","LIST_PROJECTS","history","getUserId","getProjectID","useStyles","AcceptedInvitations","classes","t","userID","projectOther","setProjectOther","projects","setProjects","onCompleted","dataProject","listProjects","data","projectID","exitedMember","setExitedMember","filter","row","projectDetails","id","refetchQueries","query","variables","leaveProject","otherProject","map","project","members","forEach","member","user_id","role","invitation","push","currentUserProjectRole","length","rootDiv","root","projectDiv","projectName","name","viewProject","pathname","search","projectRole","buttonDiv","leaveProjectBtn","project_id"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport { IconButton, Paper, Typography } from '@material-ui/core';\nimport { ButtonFilled } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  GET_PROJECT,\n  LEAVE_PROJECT,\n  LIST_PROJECTS,\n} from '../../../../../graphql';\nimport { MemberInvitation } from '../../../../../models/graphql/invite';\nimport { Member, Project, Projects } from '../../../../../models/graphql/user';\nimport { history } from '../../../../../redux/configureStore';\nimport { getUserId } from '../../../../../utils/auth';\nimport { getProjectID } from '../../../../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface OtherProjectsType {\n  projectDetails: Project;\n  currentUserProjectRole: string;\n}\n\nconst AcceptedInvitations: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const userID = getUserId();\n  const [projectOther, setProjectOther] = useState<OtherProjectsType[]>([]);\n  const [projects, setProjects] = useState<Project[]>([]);\n  const { data: dataProject } = useQuery<Projects>(LIST_PROJECTS, {\n    onCompleted: () => {\n      if (dataProject?.listProjects) {\n        setProjects(dataProject?.listProjects);\n      }\n    },\n  });\n  // const userData = useSelector((state: RootState) => state.userData);\n  const projectID = getProjectID();\n\n  // stores the user who has left the project\n  const [exitedMember, setExitedMember] = useState<string>('');\n\n  const [leaveProject] = useMutation<MemberInvitation>(LEAVE_PROJECT, {\n    onCompleted: () => {\n      setProjectOther(\n        projectOther.filter((row) => row.projectDetails.id !== exitedMember)\n      );\n    },\n    refetchQueries: [\n      {\n        query: GET_PROJECT,\n        variables: { projectID },\n      },\n      { query: LIST_PROJECTS },\n    ],\n  });\n\n  useEffect(() => {\n    const otherProject: OtherProjectsType[] = [];\n    projects.map((project) => {\n      return project.members.forEach((member: Member) => {\n        if (\n          member.user_id === userID &&\n          member.role !== 'Owner' &&\n          member.invitation === 'Accepted'\n        ) {\n          otherProject.push({\n            projectDetails: project,\n            currentUserProjectRole: member.role,\n          });\n        }\n      });\n    });\n    setProjectOther([...otherProject]);\n  }, [projects]);\n\n  return (\n    <>\n      {projectOther.length ? (\n        projectOther.map((project) => (\n          <div\n            data-cy=\"receivedInvitationModal\"\n            className={classes.rootDiv}\n            key={`${project}`}\n          >\n            <Paper className={classes.root}>\n              <div className={classes.projectDiv}>\n                <Typography className={classes.projectName}>\n                  {project.projectDetails.name}\n                </Typography>\n                <IconButton\n                  className={classes.viewProject}\n                  onClick={() => {\n                    history.push({\n                      pathname: `/home`,\n                      search: `?projectID=${project.projectDetails.id}&projectRole=${project.currentUserProjectRole}`,\n                    });\n                  }}\n                >\n                  <Typography>\n                    {t(\n                      'settings.teamingTab.invitation.acceptedInvitation.viewProject'\n                    )}\n                  </Typography>\n                </IconButton>\n              </div>\n              <Typography className={classes.projectRole}>\n                {t('settings.teamingTab.invitation.acceptedInvitation.role')}:{' '}\n                {project.currentUserProjectRole}\n              </Typography>\n              <div className={classes.buttonDiv}>\n                <div data-cy=\"LeaveProject\">\n                  <ButtonFilled\n                    className={classes.leaveProjectBtn}\n                    onClick={() => {\n                      setExitedMember(project.projectDetails.id);\n                      leaveProject({\n                        variables: {\n                          data: {\n                            project_id: project.projectDetails.id,\n                            user_id: getUserId(),\n                            role: project.currentUserProjectRole,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {t(\n                      'settings.teamingTab.invitation.receivedInvitation.button.leave'\n                    )}\n                  </ButtonFilled>\n                </div>\n              </div>\n            </Paper>\n          </div>\n        ))\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default AcceptedInvitations;\n"]},"metadata":{},"sourceType":"module"}