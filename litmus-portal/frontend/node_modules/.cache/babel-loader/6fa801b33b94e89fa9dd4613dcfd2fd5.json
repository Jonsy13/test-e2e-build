{"ast":null,"code":"import _defineProperty from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable no-empty-pattern */ /* eslint-disable no-return-assign */ /* eslint-disable no-param-reassign */import{FormControl,InputLabel,MenuItem,Select,useTheme}from'@material-ui/core';import Plotly from'plotly.js';import{string}from'prop-types';import React,{useEffect}from'react';import createPlotlyComponent from'react-plotly.js/factory';import{useSelector}from'react-redux';import useStyles from'./styles';var Plot=createPlotlyComponent(Plotly);var CommunityAnalyticsPlot=function CommunityAnalyticsPlot(){var classes=useStyles();var _useTheme=useTheme(),palette=_useTheme.palette;var _useSelector=useSelector(function(state){return state.communityData;}),communityData=_useSelector.communityData;var dailyOperators=communityData.google.dailyOperatorData;var dailyExperiments=communityData.google.dailyExperimentData;var monthlyOperators=communityData.google.monthlyOperatorData;var monthlyExperiments=communityData.google.monthlyExperimentData;var _React$useState=React.useState({x:[],y:[],y2:[]}),_React$useState2=_slicedToArray(_React$useState,2),data=_React$useState2[0],setData=_React$useState2[1];var _React$useState3=React.useState({name:'Growth'}),_React$useState4=_slicedToArray(_React$useState3,2),currentPlotType=_React$useState4[0],setPlotType=_React$useState4[1];var _React$useState5=React.useState({name:'Monthly'}),_React$useState6=_slicedToArray(_React$useState5,2),currentGranularityType=_React$useState6[0],setGranularityType=_React$useState6[1];var handleChangeInType=function handleChangeInType(event){var name=event.target.name;if(name!==currentPlotType.name){setPlotType(_objectSpread(_objectSpread({},currentPlotType),{},_defineProperty({},name,event.target.value)));}};var handleChangeInGranularity=function handleChangeInGranularity(event){var name=event.target.name;if(name!==currentGranularityType.name){setGranularityType(_objectSpread(_objectSpread({},currentGranularityType),{},_defineProperty({},name,event.target.value)));}};var cumulativeSum=function cumulativeSum(timeSeriesCounts){var countSum=function(sum){return function(value){return sum=parseInt(sum,10)+parseInt(value,10);};}(0);var MappedCumulativeSum=timeSeriesCounts.map(countSum);return MappedCumulativeSum;};var processData=function processData(){var _ref,_ref2,_ref3;var Operators=[];var Experiments=[];if(currentGranularityType.name==='Daily'){dailyOperators.forEach(function(element,index){Operators.push(element.count);Experiments.push(dailyExperiments[index].count);});}else{monthlyOperators.forEach(function(element,index){Operators.push(element.count);Experiments.push(monthlyExperiments[index].count);});}if(currentPlotType.name==='Growth'){Operators=cumulativeSum(Operators);Experiments=cumulativeSum(Experiments);}var rawData=[];if(currentGranularityType.name==='Daily'){dailyOperators.forEach(function(element,index){rawData.push({date:element.date,operatorInstalls:Operators[index],experimentRuns:Experiments[index]});});}else{monthlyOperators.forEach(function(element,index){rawData.push({date:element.date,operatorInstalls:Operators[index],experimentRuns:Experiments[index]});});}var dataObject={x:(_ref=[Date],_ref),y:(_ref2=[string],_ref2),y2:(_ref3=[string],_ref3)};rawData.forEach(function dateSplit(datum){var splits=datum.date.split('-');dataObject.x.push(new Date(splits[0],splits[1]-1,splits[2]));dataObject.y.push(datum.operatorInstalls);dataObject.y2.push(datum.experimentRuns);});setData(dataObject);};var selectorOptions={buttons:[{step:'day',stepmode:'backward',count:7,label:'1w'},{step:'day',stepmode:'backward',count:14,label:'2w'},{step:'month',stepmode:'backward',count:1,label:'1m'},{step:'month',stepmode:'backward',count:3,label:'3m'},{step:'month',stepmode:'backward',count:6,label:'6m'},{step:'year',stepmode:'backward',count:1,label:'1y'},{step:'all',label:'default'}]};useEffect(function(){processData();try{var nodeStyle=document.getElementsByClassName('modebar')[0].style;nodeStyle.left='29%';nodeStyle.width='fit-content';nodeStyle.backgroundColor=palette.background.paper;}catch(err){console.error(err);}},[currentPlotType,currentGranularityType]);return/*#__PURE__*/React.createElement(\"div\",{className:classes.plotCard},/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formControl,color:\"primary\",focused:true},/*#__PURE__*/React.createElement(InputLabel,{htmlFor:\"outlined-selection\",className:classes.root},\"Plot Style\"),/*#__PURE__*/React.createElement(Select,{value:currentPlotType.name,onChange:handleChangeInType,label:\"Plot Type\",inputProps:{name:'name',id:'outlined-selection'},className:classes.root},/*#__PURE__*/React.createElement(MenuItem,{value:\"Growth\"},\"Growth\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"Trend\"},\"Trend\"))),/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formControl,color:\"primary\",focused:true},/*#__PURE__*/React.createElement(InputLabel,{htmlFor:\"outlined-selection-granularity\",className:classes.root},\"Granularity\"),/*#__PURE__*/React.createElement(Select,{value:currentGranularityType.name,onChange:handleChangeInGranularity,label:\"Granularity\",inputProps:{name:'name',id:'outlined-selection-granularity'},className:classes.root},/*#__PURE__*/React.createElement(MenuItem,{value:\"Daily\"},\"Daily\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"Monthly\"},\"Monthly\"))),/*#__PURE__*/React.createElement(Plot,{className:classes.plot,data:[{type:'scatter',x:data.x,y:data.y,mode:'lines',name:'Operator Installs',line:{color:palette.secondary.main}},{type:'scatter',x:data.x,y:data.y2,mode:'lines',name:'Experiment Runs',yaxis:'y2',line:{color:palette.primary.main}}],layout:{autosize:true,height:800,margin:{l:60,r:60,b:10,t:5,pad:10},xaxis:{rangeselector:selectorOptions,rangeslider:{visible:true}},yaxis:{title:'Operators',side:'left',showgrid:false},yaxis2:{title:'Experiments',side:'right',overlaying:'y'},legend:{x:0,y:1,traceorder:'normal',font:{family:'ubuntu',size:12,color:palette.text.primary},bgcolor:palette.background.paper,bordercolor:palette.background.paper,borderwidth:0}},useResizeHandler:true,style:{margin:'auto'},config:{displaylogo:false,autosizable:true,responsive:true,frameMargins:0.2,showAxisDragHandles:true,showAxisRangeEntryBoxes:true,showTips:true,displayModeBar:true,toImageButtonOptions:{format:'png',filename:'Litmus_Community_Stats',width:1920,height:1080,scale:2}},onInitialized:function onInitialized(){try{var nodeStyle=document.getElementsByClassName('modebar')[0].style;nodeStyle.left='29%';nodeStyle.width='fit-content';nodeStyle.backgroundColor=palette.background.paper;}catch(err){console.error(err);}}}));};export default CommunityAnalyticsPlot;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Community/CommunityTimeSeriesPlot/index.tsx"],"names":["FormControl","InputLabel","MenuItem","Select","useTheme","Plotly","string","React","useEffect","createPlotlyComponent","useSelector","useStyles","Plot","CommunityAnalyticsPlot","classes","palette","state","communityData","dailyOperators","google","dailyOperatorData","dailyExperiments","dailyExperimentData","monthlyOperators","monthlyOperatorData","monthlyExperiments","monthlyExperimentData","useState","x","y","y2","data","setData","name","currentPlotType","setPlotType","currentGranularityType","setGranularityType","handleChangeInType","event","target","value","handleChangeInGranularity","cumulativeSum","timeSeriesCounts","countSum","sum","parseInt","MappedCumulativeSum","map","processData","Operators","Experiments","forEach","element","index","push","count","rawData","date","operatorInstalls","experimentRuns","dataObject","Date","dateSplit","datum","splits","split","selectorOptions","buttons","step","stepmode","label","nodeStyle","document","getElementsByClassName","style","left","width","backgroundColor","background","paper","err","console","error","plotCard","formControl","root","id","plot","type","mode","line","color","secondary","main","yaxis","primary","autosize","height","margin","l","r","b","t","pad","xaxis","rangeselector","rangeslider","visible","title","side","showgrid","yaxis2","overlaying","legend","traceorder","font","family","size","text","bgcolor","bordercolor","borderwidth","displaylogo","autosizable","responsive","frameMargins","showAxisDragHandles","showAxisRangeEntryBoxes","showTips","displayModeBar","toImageButtonOptions","format","filename","scale"],"mappings":"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","sourcesContent":["/* eslint-disable no-empty-pattern */\n/* eslint-disable no-return-assign */\n/* eslint-disable no-param-reassign */\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  useTheme,\n} from '@material-ui/core';\nimport Plotly from 'plotly.js';\nimport { string } from 'prop-types';\nimport React, { useEffect } from 'react';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/reducers';\nimport useStyles from './styles';\n\nconst Plot = createPlotlyComponent(Plotly);\n\nconst CommunityAnalyticsPlot: React.FC = () => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n\n  const { communityData } = useSelector(\n    (state: RootState) => state.communityData\n  );\n\n  const dailyOperators = communityData.google.dailyOperatorData;\n\n  const dailyExperiments = communityData.google.dailyExperimentData;\n\n  const monthlyOperators = communityData.google.monthlyOperatorData;\n\n  const monthlyExperiments = communityData.google.monthlyExperimentData;\n\n  const [data, setData] = React.useState({ x: [], y: [], y2: [] });\n\n  const [currentPlotType, setPlotType] = React.useState<{ name: string }>({\n    name: 'Growth',\n  });\n\n  const [currentGranularityType, setGranularityType] = React.useState<{\n    name: string;\n  }>({\n    name: 'Monthly',\n  });\n\n  const handleChangeInType = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    const name = event.target.name as keyof typeof currentPlotType;\n    if (name !== currentPlotType.name) {\n      setPlotType({\n        ...currentPlotType,\n        [name]: event.target.value as string,\n      });\n    }\n  };\n\n  const handleChangeInGranularity = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    const name = event.target.name as keyof typeof currentGranularityType;\n    if (name !== currentGranularityType.name) {\n      setGranularityType({\n        ...currentGranularityType,\n        [name]: event.target.value as string,\n      });\n    }\n  };\n\n  const cumulativeSum = (timeSeriesCounts: any) => {\n    const countSum = (\n      (sum: any) => (value: any) =>\n        (sum = parseInt(sum, 10) + parseInt(value, 10))\n    )(0);\n    const MappedCumulativeSum = timeSeriesCounts.map(countSum);\n    return MappedCumulativeSum;\n  };\n\n  const processData = () => {\n    let Operators: string[] = [];\n    let Experiments: string[] = [];\n    if (currentGranularityType.name === 'Daily') {\n      dailyOperators.forEach((element: any, index: any) => {\n        Operators.push(element.count);\n        Experiments.push(dailyExperiments[index].count);\n      });\n    } else {\n      monthlyOperators.forEach((element: any, index: any) => {\n        Operators.push(element.count);\n        Experiments.push(monthlyExperiments[index].count);\n      });\n    }\n\n    if (currentPlotType.name === 'Growth') {\n      Operators = cumulativeSum(Operators);\n      Experiments = cumulativeSum(Experiments);\n    }\n\n    const rawData: any = [];\n    if (currentGranularityType.name === 'Daily') {\n      dailyOperators.forEach((element: any, index: any) => {\n        rawData.push({\n          date: element.date,\n          operatorInstalls: Operators[index],\n          experimentRuns: Experiments[index],\n        });\n      });\n    } else {\n      monthlyOperators.forEach((element: any, index: any) => {\n        rawData.push({\n          date: element.date,\n          operatorInstalls: Operators[index],\n          experimentRuns: Experiments[index],\n        });\n      });\n    }\n\n    const dataObject = {\n      x: ([] = [Date]),\n      y: ([] = [string]),\n      y2: ([] = [string]),\n    };\n\n    rawData.forEach(function dateSplit(datum: any) {\n      const splits = datum.date.split('-');\n      dataObject.x.push(\n        new Date(\n          splits[0] as any,\n          (splits[1] as any) - 1,\n          splits[2] as any\n        ) as any\n      );\n      dataObject.y.push(datum.operatorInstalls as any);\n      dataObject.y2.push(datum.experimentRuns as any);\n    });\n\n    setData(dataObject as any);\n  };\n\n  const selectorOptions = {\n    buttons: [\n      {\n        step: 'day',\n        stepmode: 'backward',\n        count: 7,\n        label: '1w',\n      },\n      {\n        step: 'day',\n        stepmode: 'backward',\n        count: 14,\n        label: '2w',\n      },\n      {\n        step: 'month',\n        stepmode: 'backward',\n        count: 1,\n        label: '1m',\n      },\n      {\n        step: 'month',\n        stepmode: 'backward',\n        count: 3,\n        label: '3m',\n      },\n      {\n        step: 'month',\n        stepmode: 'backward',\n        count: 6,\n        label: '6m',\n      },\n      {\n        step: 'year',\n        stepmode: 'backward',\n        count: 1,\n        label: '1y',\n      },\n      {\n        step: 'all',\n        label: 'default',\n      },\n    ],\n  };\n\n  useEffect(() => {\n    processData();\n    try {\n      const nodeStyle = (\n        document.getElementsByClassName('modebar')[0] as HTMLElement\n      ).style;\n      nodeStyle.left = '29%';\n      nodeStyle.width = 'fit-content';\n      nodeStyle.backgroundColor = palette.background.paper;\n    } catch (err) {\n      console.error(err);\n    }\n  }, [currentPlotType, currentGranularityType]);\n\n  return (\n    <div className={classes.plotCard}>\n      <FormControl\n        variant=\"outlined\"\n        className={classes.formControl}\n        color=\"primary\"\n        focused\n      >\n        <InputLabel htmlFor=\"outlined-selection\" className={classes.root}>\n          Plot Style\n        </InputLabel>\n        <Select\n          value={currentPlotType.name}\n          onChange={handleChangeInType}\n          label=\"Plot Type\"\n          inputProps={{\n            name: 'name',\n            id: 'outlined-selection',\n          }}\n          className={classes.root}\n        >\n          <MenuItem value=\"Growth\">Growth</MenuItem>\n          <MenuItem value=\"Trend\">Trend</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl\n        variant=\"outlined\"\n        className={classes.formControl}\n        color=\"primary\"\n        focused\n      >\n        <InputLabel\n          htmlFor=\"outlined-selection-granularity\"\n          className={classes.root}\n        >\n          Granularity\n        </InputLabel>\n        <Select\n          value={currentGranularityType.name}\n          onChange={handleChangeInGranularity}\n          label=\"Granularity\"\n          inputProps={{\n            name: 'name',\n            id: 'outlined-selection-granularity',\n          }}\n          className={classes.root}\n        >\n          <MenuItem value=\"Daily\">Daily</MenuItem>\n          <MenuItem value=\"Monthly\">Monthly</MenuItem>\n        </Select>\n      </FormControl>\n      <Plot\n        className={classes.plot}\n        data={[\n          {\n            type: 'scatter',\n            x: data.x,\n            y: data.y,\n            mode: 'lines',\n            name: 'Operator Installs',\n            line: { color: palette.secondary.main },\n          },\n          {\n            type: 'scatter',\n            x: data.x,\n            y: data.y2,\n            mode: 'lines',\n            name: 'Experiment Runs',\n            yaxis: 'y2',\n            line: { color: palette.primary.main },\n          },\n        ]}\n        layout={{\n          autosize: true,\n          height: 800,\n          margin: {\n            l: 60,\n            r: 60,\n            b: 10,\n            t: 5,\n            pad: 10,\n          },\n          xaxis: {\n            rangeselector: selectorOptions as any,\n            rangeslider: { visible: true },\n          },\n          yaxis: {\n            title: 'Operators',\n            side: 'left',\n            showgrid: false,\n          },\n          yaxis2: {\n            title: 'Experiments',\n            side: 'right',\n            overlaying: 'y',\n          },\n          legend: {\n            x: 0,\n            y: 1,\n            traceorder: 'normal',\n            font: {\n              family: 'ubuntu',\n              size: 12,\n              color: palette.text.primary,\n            },\n            bgcolor: palette.background.paper,\n            bordercolor: palette.background.paper,\n            borderwidth: 0,\n          },\n        }}\n        useResizeHandler\n        style={{\n          margin: 'auto',\n        }}\n        config={{\n          displaylogo: false,\n          autosizable: true,\n          responsive: true,\n          frameMargins: 0.2,\n          showAxisDragHandles: true,\n          showAxisRangeEntryBoxes: true,\n          showTips: true,\n          displayModeBar: true,\n          toImageButtonOptions: {\n            format: 'png',\n            filename: 'Litmus_Community_Stats',\n            width: 1920,\n            height: 1080,\n            scale: 2,\n          },\n        }}\n        onInitialized={() => {\n          try {\n            const nodeStyle = (\n              document.getElementsByClassName('modebar')[0] as HTMLElement\n            ).style;\n            nodeStyle.left = '29%';\n            nodeStyle.width = 'fit-content';\n            nodeStyle.backgroundColor = palette.background.paper;\n          } catch (err) {\n            console.error(err);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CommunityAnalyticsPlot;\n"]},"metadata":{},"sourceType":"module"}