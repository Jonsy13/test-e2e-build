{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Avatar,Button,Typography}from'@material-ui/core';import{ButtonOutlined,InputField,Modal}from'litmus-ui';import React,{useState}from'react';import{useTranslation}from'react-i18next';import{validateEmail,validateStartEmptySpacing}from'../../utils/validate';import ChooseAvatarModal from'../ChooseAvatarModal';import useStyles from'./styles';// Displays the personals details on the \"accounts\" tab\nvar UserDetails=function UserDetails(_ref){var handleNameChange=_ref.handleNameChange,nameValue=_ref.nameValue,userValue=_ref.userValue,handleEmailChange=_ref.handleEmailChange,emailValue=_ref.emailValue,handleUserChange=_ref.handleUserChange,isUsernameDisabled=_ref.isUsernameDisabled,isNameDisabled=_ref.isNameDisabled,isEmailDisabled=_ref.isEmailDisabled;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];// avatar image source string\nvar _useState=useState('./avatars/default.svg'),_useState2=_slicedToArray(_useState,2),avatar=_useState2[0],setAvatar=_useState2[1];var handleOpen=function handleOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:classes.headerText},/*#__PURE__*/React.createElement(\"strong\",null,t('settings.userManagementTab.createUser.userDetails.header'))),/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.details},/*#__PURE__*/React.createElement(\"div\",{className:classes.dp},/*#__PURE__*/React.createElement(Avatar,{\"data-cy\":\"avatar\",alt:\"User\",className:classes.avatarBackground,src:avatar}),/*#__PURE__*/React.createElement(Button,{className:classes.edit,onClick:handleOpen,disabled:true},t('settings.userManagementTab.createUser.userDetails.button')),/*#__PURE__*/React.createElement(Modal,{open:open,onClose:handleClose,modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:handleClose},\"\\u2715\")},/*#__PURE__*/React.createElement(ChooseAvatarModal,{avatar:avatar,setAvatar:setAvatar,handleSubmit:handleClose}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.details1},/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"InputName\"},/*#__PURE__*/React.createElement(InputField,{helperText:validateStartEmptySpacing(nameValue)?'Should not start with an empty space':'',disabled:isNameDisabled,value:nameValue,onChange:handleNameChange,variant:validateStartEmptySpacing(nameValue)?'error':'primary',label:t('settings.userManagementTab.createUser.userDetails.label.fullName')})),/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"InputEmail\"},/*#__PURE__*/React.createElement(InputField,{helperText:validateEmail(emailValue)?'Should be a valid email':'',type:\"email\",disabled:isEmailDisabled,value:emailValue,onChange:handleEmailChange,variant:validateEmail(emailValue)?'error':'primary',label:t('settings.userManagementTab.createUser.userDetails.label.email')})),/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"username\"},/*#__PURE__*/React.createElement(InputField,{helperText:validateStartEmptySpacing(userValue)?t('settings.userManagementTab.createUser.userDetails.validationEmptySpace'):'',label:t('settings.userManagementTab.createUser.label.username'),required:true,value:userValue,disabled:isUsernameDisabled,onChange:handleUserChange,variant:validateStartEmptySpacing(userValue)?'error':'primary'}))))));};export default UserDetails;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/UserDetails/index.tsx"],"names":["Avatar","Button","Typography","ButtonOutlined","InputField","Modal","React","useState","useTranslation","validateEmail","validateStartEmptySpacing","ChooseAvatarModal","useStyles","UserDetails","handleNameChange","nameValue","userValue","handleEmailChange","emailValue","handleUserChange","isUsernameDisabled","isNameDisabled","isEmailDisabled","classes","t","open","setOpen","avatar","setAvatar","handleOpen","handleClose","headerText","details","dp","avatarBackground","edit","details1"],"mappings":"mLAAA,OAASA,MAAT,CAAiBC,MAAjB,CAAyBC,UAAzB,KAA2C,mBAA3C,CACA,OAASC,cAAT,CAAyBC,UAAzB,CAAqCC,KAArC,KAAkD,WAAlD,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,aAAT,CAAwBC,yBAAxB,KAAyD,sBAAzD,CACA,MAAOC,CAAAA,iBAAP,KAA8B,sBAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAcA;AACA,GAAMC,CAAAA,WAA2C,CAAG,QAA9CA,CAAAA,WAA8C,MAU9C,IATJC,CAAAA,gBASI,MATJA,gBASI,CARJC,SAQI,MARJA,SAQI,CAPJC,SAOI,MAPJA,SAOI,CANJC,iBAMI,MANJA,iBAMI,CALJC,UAKI,MALJA,UAKI,CAJJC,gBAII,MAJJA,gBAII,CAHJC,kBAGI,MAHJA,kBAGI,CAFJC,cAEI,MAFJA,cAEI,CADJC,eACI,MADJA,eACI,CACJ,GAAMC,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CACA,oBAAcJ,cAAc,EAA5B,CAAQgB,CAAR,iBAAQA,CAAR,CAEA,oBAAwBlB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB,oDAAOkB,IAAP,qBAAaC,OAAb,qBACA;AACA,cAA4BnB,QAAQ,CAAS,uBAAT,CAApC,wCAAOoB,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBH,OAAO,CAAC,IAAD,CAAP,CACD,CAFD,CAIA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBJ,OAAO,CAAC,KAAD,CAAP,CACD,CAFD,CAIA,mBACE,4CACE,oBAAC,UAAD,EAAY,SAAS,CAAEH,OAAO,CAACQ,UAA/B,eACE,kCACGP,CAAC,CAAC,0DAAD,CADJ,CADF,CADF,cAME,6CACE,2BAAK,SAAS,CAAED,OAAO,CAACS,OAAxB,eACE,2BAAK,SAAS,CAAET,OAAO,CAACU,EAAxB,eACE,oBAAC,MAAD,EACE,UAAQ,QADV,CAEE,GAAG,CAAC,MAFN,CAGE,SAAS,CAAEV,OAAO,CAACW,gBAHrB,CAIE,GAAG,CAAEP,MAJP,EADF,cAOE,oBAAC,MAAD,EAAQ,SAAS,CAAEJ,OAAO,CAACY,IAA3B,CAAiC,OAAO,CAAEN,UAA1C,CAAsD,QAAQ,KAA9D,EACGL,CAAC,CAAC,0DAAD,CADJ,CAPF,cAUE,oBAAC,KAAD,EACE,IAAI,CAAEC,IADR,CAEE,OAAO,CAAEK,WAFX,CAGE,YAAY,cACV,oBAAC,cAAD,EAAgB,OAAO,CAAEA,WAAzB,WAJJ,eAOE,oBAAC,iBAAD,EACE,MAAM,CAAEH,MADV,CAEE,SAAS,CAAEC,SAFb,CAGE,YAAY,CAAEE,WAHhB,EAPF,CAVF,CADF,cA0BE,2BAAK,SAAS,CAAEP,OAAO,CAACa,QAAxB,eACE,2BAAK,UAAQ,WAAb,eACE,oBAAC,UAAD,EACE,UAAU,CACR1B,yBAAyB,CAACK,SAAD,CAAzB,CACI,sCADJ,CAEI,EAJR,CAME,QAAQ,CAAEM,cANZ,CAOE,KAAK,CAAEN,SAPT,CAQE,QAAQ,CAAED,gBARZ,CASE,OAAO,CACLJ,yBAAyB,CAACK,SAAD,CAAzB,CAAuC,OAAvC,CAAiD,SAVrD,CAYE,KAAK,CAAES,CAAC,CACN,kEADM,CAZV,EADF,CADF,cAmBE,2BAAK,UAAQ,YAAb,eACE,oBAAC,UAAD,EACE,UAAU,CACRf,aAAa,CAACS,UAAD,CAAb,CAA4B,yBAA5B,CAAwD,EAF5D,CAIE,IAAI,CAAC,OAJP,CAKE,QAAQ,CAAEI,eALZ,CAME,KAAK,CAAEJ,UANT,CAOE,QAAQ,CAAED,iBAPZ,CAQE,OAAO,CAAER,aAAa,CAACS,UAAD,CAAb,CAA4B,OAA5B,CAAsC,SARjD,CASE,KAAK,CAAEM,CAAC,CACN,+DADM,CATV,EADF,CAnBF,cAmCE,2BAAK,UAAQ,UAAb,eACE,oBAAC,UAAD,EACE,UAAU,CACRd,yBAAyB,CAACM,SAAD,CAAzB,CACIQ,CAAC,CACC,wEADD,CADL,CAII,EANR,CAQE,KAAK,CAAEA,CAAC,CACN,sDADM,CARV,CAWE,QAAQ,KAXV,CAYE,KAAK,CAAER,SAZT,CAaE,QAAQ,CAAEI,kBAbZ,CAcE,QAAQ,CAAED,gBAdZ,CAeE,OAAO,CACLT,yBAAyB,CAACM,SAAD,CAAzB,CAAuC,OAAvC,CAAiD,SAhBrD,EADF,CAnCF,CA1BF,CADF,CANF,CADF,CA+FD,CAzHD,CA2HA,cAAeH,CAAAA,WAAf","sourcesContent":["import { Avatar, Button, Typography } from '@material-ui/core';\nimport { ButtonOutlined, InputField, Modal } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { validateEmail, validateStartEmptySpacing } from '../../utils/validate';\nimport ChooseAvatarModal from '../ChooseAvatarModal';\nimport useStyles from './styles';\n\ninterface PersonalDetailsProps {\n  handleNameChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  nameValue: string;\n  handleUserChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  userValue: string;\n  handleEmailChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  emailValue: string;\n  isUsernameDisabled: boolean;\n  isNameDisabled: boolean;\n  isEmailDisabled: boolean;\n}\n\n// Displays the personals details on the \"accounts\" tab\nconst UserDetails: React.FC<PersonalDetailsProps> = ({\n  handleNameChange,\n  nameValue,\n  userValue,\n  handleEmailChange,\n  emailValue,\n  handleUserChange,\n  isUsernameDisabled,\n  isNameDisabled,\n  isEmailDisabled,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [open, setOpen] = React.useState(false);\n  // avatar image source string\n  const [avatar, setAvatar] = useState<string>('./avatars/default.svg');\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Typography className={classes.headerText}>\n        <strong>\n          {t('settings.userManagementTab.createUser.userDetails.header')}\n        </strong>\n      </Typography>\n      <form>\n        <div className={classes.details}>\n          <div className={classes.dp}>\n            <Avatar\n              data-cy=\"avatar\"\n              alt=\"User\"\n              className={classes.avatarBackground}\n              src={avatar}\n            />\n            <Button className={classes.edit} onClick={handleOpen} disabled>\n              {t('settings.userManagementTab.createUser.userDetails.button')}\n            </Button>\n            <Modal\n              open={open}\n              onClose={handleClose}\n              modalActions={\n                <ButtonOutlined onClick={handleClose}>&#x2715;</ButtonOutlined>\n              }\n            >\n              <ChooseAvatarModal\n                avatar={avatar}\n                setAvatar={setAvatar}\n                handleSubmit={handleClose}\n              />\n            </Modal>\n          </div>\n          {/* Fields for details including Full name, email, username */}\n          <div className={classes.details1}>\n            <div data-cy=\"InputName\">\n              <InputField\n                helperText={\n                  validateStartEmptySpacing(nameValue)\n                    ? 'Should not start with an empty space'\n                    : ''\n                }\n                disabled={isNameDisabled}\n                value={nameValue}\n                onChange={handleNameChange}\n                variant={\n                  validateStartEmptySpacing(nameValue) ? 'error' : 'primary'\n                }\n                label={t(\n                  'settings.userManagementTab.createUser.userDetails.label.fullName'\n                )}\n              />\n            </div>\n            <div data-cy=\"InputEmail\">\n              <InputField\n                helperText={\n                  validateEmail(emailValue) ? 'Should be a valid email' : ''\n                }\n                type=\"email\"\n                disabled={isEmailDisabled}\n                value={emailValue}\n                onChange={handleEmailChange}\n                variant={validateEmail(emailValue) ? 'error' : 'primary'}\n                label={t(\n                  'settings.userManagementTab.createUser.userDetails.label.email'\n                )}\n              />\n            </div>\n            {/* Username is not editable by non admin user */}\n            <div data-cy=\"username\">\n              <InputField\n                helperText={\n                  validateStartEmptySpacing(userValue)\n                    ? t(\n                        'settings.userManagementTab.createUser.userDetails.validationEmptySpace'\n                      )\n                    : ''\n                }\n                label={t(\n                  'settings.userManagementTab.createUser.label.username'\n                )}\n                required\n                value={userValue}\n                disabled={isUsernameDisabled}\n                onChange={handleUserChange}\n                variant={\n                  validateStartEmptySpacing(userValue) ? 'error' : 'primary'\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default UserDetails;\n"]},"metadata":{},"sourceType":"module"}