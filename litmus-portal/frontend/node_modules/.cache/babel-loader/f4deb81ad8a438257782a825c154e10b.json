{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/WorkflowTable.tsx\";\n\n/* eslint-disable no-const-assign */\nimport { IconButton, Typography, useTheme } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport localforage from 'localforage';\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport Row from '../../../containers/layouts/Row';\nimport useActions from '../../../redux/actions';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport parsed, { updateManifestImage } from '../../../utils/yamlUtils';\nimport ConfigurationStepper from './ConfigurationStepper/ConfigurationStepper';\nimport useStyles from './styles';\nvar WorkflowTable = forwardRef(function (_ref, ref) {\n  var isCustom = _ref.isCustom,\n      namespace = _ref.namespace;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var theme = useTheme();\n  var workflow = useActions(WorkflowActions);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      experiments = _useState2[0],\n      setExperiments = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      revertChaos = _useState4[0],\n      setRevertChaos = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      displayStepper = _useState6[0],\n      setDisplayStepper = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      engineIndex = _useState8[0],\n      setEngineIndex = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selected = _useState10[0],\n      setSelected = _useState10[1];\n\n  var manifest = useSelector(function (state) {\n    return state.workflowManifest.manifest;\n  });\n  var imageRegistryData = useSelector(function (state) {\n    return state.selectedImageRegistry;\n  });\n\n  var addWeights = function addWeights(manifest) {\n    var arr = [];\n    var hashMap = new Map();\n    var tests = parsed(manifest);\n    tests.forEach(function (test) {\n      var value = 10;\n\n      if (hashMap.has(test)) {\n        value = hashMap.get(test);\n      }\n\n      arr.push({\n        experimentName: test,\n        weight: value\n      });\n    });\n    localforage.setItem('weights', arr);\n  };\n\n  var parsing = function parsing(yamlText) {\n    var parsedYaml = YAML.parse(yamlText);\n    var expData = [];\n    addWeights(manifest);\n\n    var extractInfo = function extractInfo(template, index) {\n      if (template.inputs && template.inputs.artifacts) {\n        template.inputs.artifacts.forEach(function (artifact) {\n          var chaosEngine = YAML.parse(artifact.raw.data);\n\n          if (chaosEngine.kind === 'ChaosEngine') {\n            var _chaosEngine$spec$app, _chaosEngine$spec$app2, _chaosEngine$spec$app3, _chaosEngine$spec$app4, _chaosEngine$spec$app5, _chaosEngine$spec$exp, _chaosEngine$spec$exp2;\n\n            expData.push({\n              StepIndex: index,\n              Name: chaosEngine.metadata.generateName,\n              Namespace: ((_chaosEngine$spec$app = chaosEngine.spec.appinfo) === null || _chaosEngine$spec$app === void 0 ? void 0 : _chaosEngine$spec$app.appns.toLowerCase().includes('namespace')) ? namespace : (_chaosEngine$spec$app2 = (_chaosEngine$spec$app3 = chaosEngine.spec.appinfo) === null || _chaosEngine$spec$app3 === void 0 ? void 0 : _chaosEngine$spec$app3.appns) !== null && _chaosEngine$spec$app2 !== void 0 ? _chaosEngine$spec$app2 : '',\n              Application: (_chaosEngine$spec$app4 = (_chaosEngine$spec$app5 = chaosEngine.spec.appinfo) === null || _chaosEngine$spec$app5 === void 0 ? void 0 : _chaosEngine$spec$app5.applabel) !== null && _chaosEngine$spec$app4 !== void 0 ? _chaosEngine$spec$app4 : '',\n              Probes: (_chaosEngine$spec$exp = (_chaosEngine$spec$exp2 = chaosEngine.spec.experiments[0].spec.probe) === null || _chaosEngine$spec$exp2 === void 0 ? void 0 : _chaosEngine$spec$exp2.length) !== null && _chaosEngine$spec$exp !== void 0 ? _chaosEngine$spec$exp : 0,\n              ChaosEngine: artifact.raw.data\n            });\n          }\n        });\n      }\n    };\n\n    if (parsedYaml.kind === 'Workflow') {\n      parsedYaml.spec.templates.forEach(function (template, index) {\n        extractInfo(template, index);\n      });\n    } else if (parsedYaml.kind === 'CronWorkflow') {\n      parsedYaml.spec.workflowSpec.templates.forEach(function (template, index) {\n        extractInfo(template, index);\n      });\n    }\n\n    setExperiments(expData);\n  }; // Revert Chaos\n\n\n  var toggleRevertChaos = function toggleRevertChaos(manifest) {\n    var parsedYAML = YAML.parse(manifest);\n    var deleteEngines = ''; // Else if Revert Chaos is set to true and it is not already set in the manifest\n    // For Workflows\n\n    if (revertChaos && parsedYAML.kind === 'Workflow') {\n      parsedYAML.spec.podGC = {\n        strategy: 'OnWorkflowCompletion'\n      };\n      parsedYAML.spec.templates[0].steps.push([{\n        name: 'revert-chaos',\n        template: 'revert-chaos'\n      }]);\n      parsed(manifest).forEach(function (_, i) {\n        deleteEngines += \"\".concat(YAML.parse(parsedYAML.spec.templates[2 + i].inputs.artifacts[0].raw.data).metadata.labels['instance_id'], \", \");\n      });\n      parsedYAML.spec.templates[parsedYAML.spec.templates.length] = {\n        name: 'revert-chaos',\n        container: {\n          image: 'litmuschaos/k8s:latest',\n          command: ['sh', '-c'],\n          args: [\"kubectl delete chaosengine -l 'instance_id in (\".concat(deleteEngines, \")' -n {{workflow.parameters.adminModeNamespace}} \")]\n        }\n      };\n    } // Else if Revert Chaos is set to True and it is not already set in the manifest\n    // For Cron Workflow\n    else if (revertChaos && parsedYAML.kind === 'CronWorkflow') {\n        parsedYAML.spec.workflowSpec.podGC = {\n          strategy: 'OnWorkflowCompletion'\n        };\n        parsedYAML.spec.workflowSpec.templates[0].steps.push([{\n          name: 'revert-chaos',\n          template: 'revert-chaos'\n        }]);\n        parsed(manifest).forEach(function (_, i) {\n          deleteEngines = \"\".concat(deleteEngines + YAML.parse(parsedYAML.spec.workflowSpec.templates[2 + i].inputs.artifacts[0].raw.data).metadata.name, \" \");\n        });\n        deleteEngines += '-n {{workflow.parameters.adminModeNamespace}}';\n        parsedYAML.spec.workflowSpec.templates[parsedYAML.spec.workflowSpec.templates.length] = {\n          name: 'revert-chaos',\n          container: {\n            image: 'litmuschaos/k8s:latest',\n            command: ['sh', '-c'],\n            args: [deleteEngines]\n          }\n        };\n      }\n\n    var updatedManifest = updateManifestImage(parsedYAML, imageRegistryData);\n    workflow.setWorkflowManifest({\n      manifest: updatedManifest\n    });\n  };\n\n  var closeConfigurationStepper = function closeConfigurationStepper() {\n    workflow.setWorkflowManifest({\n      engineYAML: ''\n    });\n    setDisplayStepper(false);\n  };\n\n  var handleChange = function handleChange(event, newValue) {\n    setRevertChaos(newValue);\n  };\n\n  useEffect(function () {\n    if (manifest.length) {\n      parsing(manifest);\n    }\n\n    localforage.getItem('selectedScheduleOption').then(function (value) {\n      if (value) {\n        setSelected(value.selected);\n      } else setSelected('');\n    });\n  }, [manifest]);\n\n  var deleteExperiment = function deleteExperiment(experimentIndex) {\n    /**\n     * Workflow manifest saved in redux state\n     */\n    var wfManifest = YAML.parse(manifest);\n    /**\n     * Get template name according to the experiment index\n     */\n\n    var templateName = wfManifest.spec.templates[experimentIndex].name;\n    /**\n     * Get instance_id of Chaos Engines\n     */\n\n    var selectedEngine = wfManifest.spec.templates[experimentIndex].inputs.artifacts[0];\n    var instance_id = YAML.parse(selectedEngine.raw.data).metadata.labels.instance_id;\n    /**\n     * if the template is a revert-chaos template\n     * the engine name is removed from the\n     * revert-chaos template args\n     */\n\n    if (wfManifest.spec.templates[wfManifest.spec.templates.length - 1].name.includes('revert-')) {\n      var argument = wfManifest.spec.templates[wfManifest.spec.templates.length - 1].container.args[0].replace(\"\".concat(instance_id, \", \"), '');\n      wfManifest.spec.templates[wfManifest.spec.templates.length - 1].container.args[0] = argument;\n    }\n    /**\n     * Remove the experiment name from steps\n     */\n\n\n    wfManifest.spec.templates[0].steps.forEach(function (data, stepIndex) {\n      data.forEach(function (step, index) {\n        if (step.name === templateName) {\n          data.splice(index, 1);\n        }\n      });\n\n      if (data.length === 0) {\n        wfManifest.spec.templates[0].steps.splice(stepIndex, 1);\n      }\n    });\n    /**\n     * Remove the chaos engine from the overall manifest\n     * according to the experiment index\n     */\n\n    wfManifest.spec.templates.splice(experimentIndex, 1);\n    /**\n     * Set the updated manifest to redux state\n     */\n\n    workflow.setWorkflowManifest({\n      manifest: YAML.stringify(wfManifest),\n      engineYAML: ''\n    });\n  };\n\n  function onNext() {\n    if (experiments.length === 0) {\n      return false; // Should show alert\n    }\n\n    if (!isCustom) {\n      return true;\n    }\n\n    if (selected === 'C') {\n      toggleRevertChaos(manifest);\n    }\n\n    return true; // Should not show any alert\n  }\n\n  useImperativeHandle(ref, function () {\n    return {\n      onNext: onNext\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }\n  }, !displayStepper ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.table,\n    component: Paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.chooseWorkflow.table.head1')), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.chooseWorkflow.table.head2')), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.chooseWorkflow.table.head3')), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.chooseWorkflow.table.head4')), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.chooseWorkflow.table.head5')), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  }, experiments.length > 0 ? experiments.map(function (experiment, index) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: experiment.Name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 25\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.selection,\n      align: \"left\",\n      onClick: function onClick() {\n        setDisplayStepper(true);\n        setEngineIndex(experiment.StepIndex);\n        workflow.setWorkflowManifest({\n          engineYAML: experiment.ChaosEngine\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 25\n      }\n    }, experiment.Name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    }, experiment.Namespace), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 25\n      }\n    }, experiment.Application), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 25\n      }\n    }, experiment.Probes), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        return deleteExperiment(experiment.StepIndex);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./icons/bin-red.svg\",\n      alt: \"delete experiment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 29\n      }\n    }))));\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 25\n    }\n  }, t('createWorkflow.chooseWorkflow.pleaseAddExp'))))))), selected === 'C' && /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.revertChaos,\n    component: Paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: classes.wrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.key,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.chooseWorkflow.revertSchedule'))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: revertChaos,\n    exclusive: true,\n    onChange: handleChange,\n    \"aria-label\": \"text alignment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: true,\n    style: {\n      backgroundColor: revertChaos ? theme.palette.success.main : theme.palette.disabledBackground,\n      color: revertChaos ? theme.palette.common.white : theme.palette.text.disabled\n    },\n    \"aria-label\": \"centered\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 23\n    }\n  }, t('createWorkflow.chooseWorkflow.trueValue')), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: false,\n    style: {\n      backgroundColor: !revertChaos ? theme.palette.error.main : theme.palette.disabledBackground,\n      color: !revertChaos ? theme.palette.common.white : theme.palette.text.disabled\n    },\n    \"aria-label\": \"centered\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 23\n    }\n  }, t('createWorkflow.chooseWorkflow.falseValue'))))))) : /*#__PURE__*/React.createElement(ConfigurationStepper, {\n    experimentIndex: engineIndex,\n    closeStepper: closeConfigurationStepper,\n    isCustom: isCustom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 11\n    }\n  }));\n});\nexport default WorkflowTable;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/WorkflowTable.tsx"],"names":["IconButton","Typography","useTheme","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","ToggleButton","ToggleButtonGroup","localforage","React","forwardRef","useEffect","useImperativeHandle","useState","useTranslation","useSelector","YAML","Row","useActions","WorkflowActions","parsed","updateManifestImage","ConfigurationStepper","useStyles","WorkflowTable","ref","isCustom","namespace","classes","t","theme","workflow","experiments","setExperiments","revertChaos","setRevertChaos","displayStepper","setDisplayStepper","engineIndex","setEngineIndex","selected","setSelected","manifest","state","workflowManifest","imageRegistryData","selectedImageRegistry","addWeights","arr","hashMap","Map","tests","forEach","test","value","has","get","push","experimentName","weight","setItem","parsing","yamlText","parsedYaml","parse","expData","extractInfo","template","index","inputs","artifacts","artifact","chaosEngine","raw","data","kind","StepIndex","Name","metadata","generateName","Namespace","spec","appinfo","appns","toLowerCase","includes","Application","applabel","Probes","probe","length","ChaosEngine","templates","workflowSpec","toggleRevertChaos","parsedYAML","deleteEngines","podGC","strategy","steps","name","_","i","labels","container","image","command","args","updatedManifest","setWorkflowManifest","closeConfigurationStepper","engineYAML","handleChange","event","newValue","getItem","then","deleteExperiment","experimentIndex","wfManifest","templateName","selectedEngine","instance_id","argument","replace","stepIndex","step","splice","stringify","onNext","table","map","experiment","selection","wrapper","key","backgroundColor","palette","success","main","disabledBackground","color","common","white","text","disabled","error"],"mappings":"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","sourcesContent":["/* eslint-disable no-const-assign */\nimport { IconButton, Typography, useTheme } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport localforage from 'localforage';\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport Row from '../../../containers/layouts/Row';\nimport { ChooseWorkflowRadio } from '../../../models/localforage/radioButton';\nimport { experimentMap } from '../../../models/redux/workflow';\nimport useActions from '../../../redux/actions';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { RootState } from '../../../redux/reducers';\nimport parsed, { updateManifestImage } from '../../../utils/yamlUtils';\nimport ConfigurationStepper from './ConfigurationStepper/ConfigurationStepper';\nimport useStyles from './styles';\n\ninterface WorkflowTableProps {\n  isCustom: boolean | undefined;\n  namespace: string;\n}\n\ninterface ChaosCRDTable {\n  StepIndex: number;\n  Name: string;\n  Namespace: string;\n  Application: string;\n  Probes: number;\n  ChaosEngine: string;\n}\n\nconst WorkflowTable = forwardRef(\n  ({ isCustom, namespace }: WorkflowTableProps, ref) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const theme = useTheme();\n    const workflow = useActions(WorkflowActions);\n    const [experiments, setExperiments] = useState<ChaosCRDTable[]>([]);\n    const [revertChaos, setRevertChaos] = useState<boolean>(true);\n    const [displayStepper, setDisplayStepper] = useState<boolean>(false);\n    const [engineIndex, setEngineIndex] = useState<number>(0);\n    const [selected, setSelected] = useState<string>('');\n    const manifest = useSelector(\n      (state: RootState) => state.workflowManifest.manifest\n    );\n    const imageRegistryData = useSelector(\n      (state: RootState) => state.selectedImageRegistry\n    );\n    const addWeights = (manifest: string) => {\n      const arr: experimentMap[] = [];\n      const hashMap = new Map();\n      const tests = parsed(manifest);\n      tests.forEach((test) => {\n        let value = 10;\n        if (hashMap.has(test)) {\n          value = hashMap.get(test);\n        }\n        arr.push({ experimentName: test, weight: value });\n      });\n      localforage.setItem('weights', arr);\n    };\n\n    const parsing = (yamlText: string) => {\n      const parsedYaml = YAML.parse(yamlText);\n      const expData: ChaosCRDTable[] = [];\n      addWeights(manifest);\n\n      const extractInfo = (template: any, index: number) => {\n        if (template.inputs && template.inputs.artifacts) {\n          template.inputs.artifacts.forEach((artifact: any) => {\n            const chaosEngine = YAML.parse(artifact.raw.data);\n            if (chaosEngine.kind === 'ChaosEngine') {\n              expData.push({\n                StepIndex: index,\n                Name: chaosEngine.metadata.generateName,\n                Namespace: chaosEngine.spec.appinfo?.appns\n                  .toLowerCase()\n                  .includes('namespace')\n                  ? namespace\n                  : chaosEngine.spec.appinfo?.appns ?? '',\n                Application: chaosEngine.spec.appinfo?.applabel ?? '',\n                Probes: chaosEngine.spec.experiments[0].spec.probe?.length ?? 0,\n                ChaosEngine: artifact.raw.data,\n              });\n            }\n          });\n        }\n      };\n\n      if (parsedYaml.kind === 'Workflow') {\n        parsedYaml.spec.templates.forEach((template: any, index: number) => {\n          extractInfo(template, index);\n        });\n      } else if (parsedYaml.kind === 'CronWorkflow') {\n        parsedYaml.spec.workflowSpec.templates.forEach(\n          (template: any, index: number) => {\n            extractInfo(template, index);\n          }\n        );\n      }\n      setExperiments(expData);\n    };\n\n    // Revert Chaos\n    const toggleRevertChaos = (manifest: string) => {\n      const parsedYAML = YAML.parse(manifest);\n      let deleteEngines: string = '';\n\n      // Else if Revert Chaos is set to true and it is not already set in the manifest\n      // For Workflows\n      if (revertChaos && parsedYAML.kind === 'Workflow') {\n        parsedYAML.spec.podGC = {\n          strategy: 'OnWorkflowCompletion',\n        };\n        parsedYAML.spec.templates[0].steps.push([\n          {\n            name: 'revert-chaos',\n            template: 'revert-chaos',\n          },\n        ]);\n\n        parsed(manifest).forEach((_, i) => {\n          deleteEngines += `${\n            YAML.parse(\n              parsedYAML.spec.templates[2 + i].inputs.artifacts[0].raw.data\n            ).metadata.labels['instance_id']\n          }, `;\n        });\n\n        parsedYAML.spec.templates[parsedYAML.spec.templates.length] = {\n          name: 'revert-chaos',\n          container: {\n            image: 'litmuschaos/k8s:latest',\n            command: ['sh', '-c'],\n            args: [\n              `kubectl delete chaosengine -l 'instance_id in (${deleteEngines})' -n {{workflow.parameters.adminModeNamespace}} `,\n            ],\n          },\n        };\n      }\n\n      // Else if Revert Chaos is set to True and it is not already set in the manifest\n      // For Cron Workflow\n      else if (revertChaos && parsedYAML.kind === 'CronWorkflow') {\n        parsedYAML.spec.workflowSpec.podGC = {\n          strategy: 'OnWorkflowCompletion',\n        };\n        parsedYAML.spec.workflowSpec.templates[0].steps.push([\n          {\n            name: 'revert-chaos',\n            template: 'revert-chaos',\n          },\n        ]);\n\n        parsed(manifest).forEach((_, i) => {\n          deleteEngines = `${\n            deleteEngines +\n            YAML.parse(\n              parsedYAML.spec.workflowSpec.templates[2 + i].inputs.artifacts[0]\n                .raw.data\n            ).metadata.name\n          } `;\n        });\n\n        deleteEngines += '-n {{workflow.parameters.adminModeNamespace}}';\n\n        parsedYAML.spec.workflowSpec.templates[\n          parsedYAML.spec.workflowSpec.templates.length\n        ] = {\n          name: 'revert-chaos',\n          container: {\n            image: 'litmuschaos/k8s:latest',\n            command: ['sh', '-c'],\n            args: [deleteEngines],\n          },\n        };\n      }\n\n      const updatedManifest = updateManifestImage(\n        parsedYAML,\n        imageRegistryData\n      );\n      workflow.setWorkflowManifest({\n        manifest: updatedManifest,\n      });\n    };\n\n    const closeConfigurationStepper = () => {\n      workflow.setWorkflowManifest({\n        engineYAML: '',\n      });\n      setDisplayStepper(false);\n    };\n\n    const handleChange = (\n      event: React.MouseEvent<HTMLElement>,\n      newValue: boolean\n    ) => {\n      setRevertChaos(newValue);\n    };\n\n    useEffect(() => {\n      if (manifest.length) {\n        parsing(manifest);\n      }\n      localforage.getItem('selectedScheduleOption').then((value) => {\n        if (value) {\n          setSelected((value as ChooseWorkflowRadio).selected);\n        } else setSelected('');\n      });\n    }, [manifest]);\n\n    const deleteExperiment = (experimentIndex: number) => {\n      /**\n       * Workflow manifest saved in redux state\n       */\n      const wfManifest = YAML.parse(manifest);\n\n      /**\n       * Get template name according to the experiment index\n       */\n      const templateName = wfManifest.spec.templates[experimentIndex].name;\n\n      /**\n       * Get instance_id of Chaos Engines\n       */\n      const selectedEngine =\n        wfManifest.spec.templates[experimentIndex].inputs.artifacts[0];\n      const { instance_id } = YAML.parse(selectedEngine.raw.data).metadata\n        .labels;\n\n      /**\n       * if the template is a revert-chaos template\n       * the engine name is removed from the\n       * revert-chaos template args\n       */\n      if (\n        wfManifest.spec.templates[\n          wfManifest.spec.templates.length - 1\n        ].name.includes('revert-')\n      ) {\n        const argument = wfManifest.spec.templates[\n          wfManifest.spec.templates.length - 1\n        ].container.args[0].replace(`${instance_id}, `, '');\n        wfManifest.spec.templates[\n          wfManifest.spec.templates.length - 1\n        ].container.args[0] = argument;\n      }\n\n      /**\n       * Remove the experiment name from steps\n       */\n      wfManifest.spec.templates[0].steps.forEach(\n        (data: any, stepIndex: number) => {\n          data.forEach((step: any, index: number) => {\n            if (step.name === templateName) {\n              data.splice(index, 1);\n            }\n          });\n          if (data.length === 0) {\n            wfManifest.spec.templates[0].steps.splice(stepIndex, 1);\n          }\n        }\n      );\n\n      /**\n       * Remove the chaos engine from the overall manifest\n       * according to the experiment index\n       */\n      wfManifest.spec.templates.splice(experimentIndex, 1);\n\n      /**\n       * Set the updated manifest to redux state\n       */\n      workflow.setWorkflowManifest({\n        manifest: YAML.stringify(wfManifest),\n        engineYAML: '',\n      });\n    };\n\n    function onNext() {\n      if (experiments.length === 0) {\n        return false; // Should show alert\n      }\n      if (!isCustom) {\n        return true;\n      }\n      if (selected === 'C') {\n        toggleRevertChaos(manifest);\n      }\n      return true; // Should not show any alert\n    }\n\n    useImperativeHandle(ref, () => ({\n      onNext,\n    }));\n\n    return (\n      <div>\n        {!displayStepper ? (\n          <>\n            <TableContainer className={classes.table} component={Paper}>\n              <Table aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      {t('createWorkflow.chooseWorkflow.table.head1')}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {t('createWorkflow.chooseWorkflow.table.head2')}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {t('createWorkflow.chooseWorkflow.table.head3')}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {t('createWorkflow.chooseWorkflow.table.head4')}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {t('createWorkflow.chooseWorkflow.table.head5')}\n                    </TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {experiments.length > 0 ? (\n                    experiments.map((experiment: ChaosCRDTable, index) => (\n                      <TableRow key={experiment.Name}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {index + 1}\n                        </TableCell>\n                        <TableCell\n                          className={classes.selection}\n                          align=\"left\"\n                          onClick={() => {\n                            setDisplayStepper(true);\n                            setEngineIndex(experiment.StepIndex);\n                            workflow.setWorkflowManifest({\n                              engineYAML: experiment.ChaosEngine,\n                            });\n                          }}\n                        >\n                          {experiment.Name}\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {experiment.Namespace}\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {experiment.Application}\n                        </TableCell>\n                        <TableCell align=\"left\">{experiment.Probes}</TableCell>\n                        <TableCell>\n                          <IconButton\n                            onClick={() =>\n                              deleteExperiment(experiment.StepIndex)\n                            }\n                          >\n                            <img\n                              src=\"./icons/bin-red.svg\"\n                              alt=\"delete experiment\"\n                            />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  ) : (\n                    <TableRow>\n                      <TableCell colSpan={5}>\n                        <Typography align=\"center\">\n                          {t('createWorkflow.chooseWorkflow.pleaseAddExp')}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            {selected === 'C' && (\n              <TableContainer className={classes.revertChaos} component={Paper}>\n                <Row className={classes.wrapper}>\n                  <div className={classes.key}>\n                    <Typography>\n                      {t('createWorkflow.chooseWorkflow.revertSchedule')}\n                    </Typography>\n                  </div>\n                  <div>\n                    <ToggleButtonGroup\n                      value={revertChaos}\n                      exclusive\n                      onChange={handleChange}\n                      aria-label=\"text alignment\"\n                    >\n                      <ToggleButton\n                        value\n                        style={{\n                          backgroundColor: revertChaos\n                            ? theme.palette.success.main\n                            : theme.palette.disabledBackground,\n                          color: revertChaos\n                            ? theme.palette.common.white\n                            : theme.palette.text.disabled,\n                        }}\n                        aria-label=\"centered\"\n                      >\n                        {t('createWorkflow.chooseWorkflow.trueValue')}\n                      </ToggleButton>\n                      <ToggleButton\n                        value={false}\n                        style={{\n                          backgroundColor: !revertChaos\n                            ? theme.palette.error.main\n                            : theme.palette.disabledBackground,\n                          color: !revertChaos\n                            ? theme.palette.common.white\n                            : theme.palette.text.disabled,\n                        }}\n                        aria-label=\"centered\"\n                      >\n                        {t('createWorkflow.chooseWorkflow.falseValue')}\n                      </ToggleButton>\n                    </ToggleButtonGroup>\n                  </div>\n                </Row>\n              </TableContainer>\n            )}\n          </>\n        ) : (\n          <ConfigurationStepper\n            experimentIndex={engineIndex}\n            closeStepper={closeConfigurationStepper}\n            isCustom={isCustom}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nexport default WorkflowTable;\n"]},"metadata":{},"sourceType":"module"}