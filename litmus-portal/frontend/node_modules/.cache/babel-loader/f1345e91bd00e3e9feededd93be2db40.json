{"ast":null,"code":"import{safeLoadAll}from'js-yaml';export var parseYamlValidations=function parseYamlValidations(yamlInput,classes){var parsedValidations={markers:[],annotations:[]};try{safeLoadAll(yamlInput);}catch(e){var row=e.mark&&e.mark.line?e.mark.line:0;var col=e.mark&&e.mark.column?e.mark.column:0;var message=e.message?e.message:'';parsedValidations.markers.push({startRow:row,startCol:0,endRow:row+1,endCol:0,className:classes.validationError,type:'fullLine'});parsedValidations.annotations.push({row:row,column:col,type:'error',text:message});}return parsedValidations;};","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/YamlEditor/Validations.ts"],"names":["safeLoadAll","parseYamlValidations","yamlInput","classes","parsedValidations","markers","annotations","e","row","mark","line","col","column","message","push","startRow","startCol","endRow","endCol","className","validationError","type","text"],"mappings":"AACA,OAASA,WAAT,KAA4B,SAA5B,CAOA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAClCC,SADkC,CAElCC,OAFkC,CAGf,CACnB,GAAMC,CAAAA,iBAAiC,CAAG,CACxCC,OAAO,CAAE,EAD+B,CAExCC,WAAW,CAAE,EAF2B,CAA1C,CAIA,GAAI,CACFN,WAAW,CAACE,SAAD,CAAX,CACD,CAAC,MAAOK,CAAP,CAAU,CACV,GAAMC,CAAAA,GAAG,CAAGD,CAAC,CAACE,IAAF,EAAUF,CAAC,CAACE,IAAF,CAAOC,IAAjB,CAAwBH,CAAC,CAACE,IAAF,CAAOC,IAA/B,CAAsC,CAAlD,CACA,GAAMC,CAAAA,GAAG,CAAGJ,CAAC,CAACE,IAAF,EAAUF,CAAC,CAACE,IAAF,CAAOG,MAAjB,CAA0BL,CAAC,CAACE,IAAF,CAAOG,MAAjC,CAA0C,CAAtD,CACA,GAAMC,CAAAA,OAAO,CAAGN,CAAC,CAACM,OAAF,CAAYN,CAAC,CAACM,OAAd,CAAwB,EAAxC,CACAT,iBAAiB,CAACC,OAAlB,CAA0BS,IAA1B,CAA+B,CAC7BC,QAAQ,CAAEP,GADmB,CAE7BQ,QAAQ,CAAE,CAFmB,CAG7BC,MAAM,CAAET,GAAG,CAAG,CAHe,CAI7BU,MAAM,CAAE,CAJqB,CAK7BC,SAAS,CAAEhB,OAAO,CAACiB,eALU,CAM7BC,IAAI,CAAE,UANuB,CAA/B,EAQAjB,iBAAiB,CAACE,WAAlB,CAA8BQ,IAA9B,CAAmC,CACjCN,GAAG,CAAHA,GADiC,CAEjCI,MAAM,CAAED,GAFyB,CAGjCU,IAAI,CAAE,OAH2B,CAIjCC,IAAI,CAAET,OAJ2B,CAAnC,EAMD,CACD,MAAOT,CAAAA,iBAAP,CACD,CA9BM","sourcesContent":["import { IAnnotation, IMarker } from 'react-ace';\nimport { safeLoadAll } from 'js-yaml';\n\nexport interface AceValidations {\n  markers: Array<IMarker>;\n  annotations: Array<IAnnotation>;\n}\n\nexport const parseYamlValidations = (\n  yamlInput: string,\n  classes: any\n): AceValidations => {\n  const parsedValidations: AceValidations = {\n    markers: [],\n    annotations: [],\n  };\n  try {\n    safeLoadAll(yamlInput);\n  } catch (e) {\n    const row = e.mark && e.mark.line ? e.mark.line : 0;\n    const col = e.mark && e.mark.column ? e.mark.column : 0;\n    const message = e.message ? e.message : '';\n    parsedValidations.markers.push({\n      startRow: row,\n      startCol: 0,\n      endRow: row + 1,\n      endCol: 0,\n      className: classes.validationError,\n      type: 'fullLine',\n    });\n    parsedValidations.annotations.push({\n      row,\n      column: col,\n      type: 'error',\n      text: message,\n    });\n  }\n  return parsedValidations;\n};\n"]},"metadata":{},"sourceType":"module"}