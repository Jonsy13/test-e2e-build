{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/GitHubComponents/GitHubToggleButtons/GitHubToggleButton.tsx\";\n\nimport { Button, Typography } from '@material-ui/core';\nimport React from 'react';\nimport useStyles from './styles';\n\nvar GitHubToggleButton = function GitHubToggleButton(_ref) {\n  var isToggled = _ref.isToggled,\n      setIsToggled = _ref.setIsToggled;\n  var classes = useStyles();\n\n  var setFilledButtonState = function setFilledButtonState(buttonName) {\n    return /*#__PURE__*/React.createElement(Button, {\n      className: classes.toggleActive,\n      onClick: function onClick() {\n        return isToggled.isPublicToggled ? setIsToggled({\n          isPublicToggled: true,\n          isPrivateToggled: false\n        }) : isToggled.isPrivateToggled ? setIsToggled({\n          isPublicToggled: false,\n          isPrivateToggled: true\n        }) : setIsToggled({\n          isPublicToggled: false,\n          isPrivateToggled: false\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.toggleFont,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, buttonName));\n  };\n\n  var setButtonOutlinedState = function setButtonOutlinedState(buttonName, setIsToggleValues) {\n    return /*#__PURE__*/React.createElement(Button, {\n      className: classes.toggleInactive,\n      onClick: function onClick() {\n        return setIsToggled(setIsToggleValues);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.toggleFont,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, buttonName));\n  };\n\n  var PublicButton = function PublicButton() {\n    return isToggled.isPublicToggled ? setFilledButtonState('Public') : setButtonOutlinedState('Public', {\n      isPublicToggled: true,\n      isPrivateToggled: false\n    });\n  };\n\n  var PrivateButton = function PrivateButton() {\n    return isToggled.isPrivateToggled ? setFilledButtonState('Private') : setButtonOutlinedState('Private', {\n      isPublicToggled: false,\n      isPrivateToggled: true\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, PublicButton(), PrivateButton()));\n};\n\nexport default GitHubToggleButton;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/GitHubComponents/GitHubToggleButtons/GitHubToggleButton.tsx"],"names":["Button","Typography","React","useStyles","GitHubToggleButton","isToggled","setIsToggled","classes","setFilledButtonState","buttonName","toggleActive","isPublicToggled","isPrivateToggled","toggleFont","setButtonOutlinedState","setIsToggleValues","toggleInactive","PublicButton","PrivateButton"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAYA,IAAMC,kBAAmC,GAAG,SAAtCA,kBAAsC,OAAiC;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAC3E,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;;AACA,MAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,UAAD,EAAwB;AACnD,wBACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAEF,OAAO,CAACG,YADrB;AAEE,MAAA,OAAO,EAAE;AAAA,eACPL,SAAS,CAACM,eAAV,GACIL,YAAY,CAAC;AACXK,UAAAA,eAAe,EAAE,IADN;AAEXC,UAAAA,gBAAgB,EAAE;AAFP,SAAD,CADhB,GAKIP,SAAS,CAACO,gBAAV,GACAN,YAAY,CAAC;AACXK,UAAAA,eAAe,EAAE,KADN;AAEXC,UAAAA,gBAAgB,EAAE;AAFP,SAAD,CADZ,GAKAN,YAAY,CAAC;AACXK,UAAAA,eAAe,EAAE,KADN;AAEXC,UAAAA,gBAAgB,EAAE;AAFP,SAAD,CAXT;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAmBE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEL,OAAO,CAACM,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4CJ,UAA5C,CAnBF,CADF;AAuBD,GAxBD;;AA0BA,MAAMK,sBAAsB,GAAG,SAAzBA,sBAAyB,CAC7BL,UAD6B,EAE7BM,iBAF6B,EAG1B;AACH,wBACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAER,OAAO,CAACS,cADrB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMV,YAAY,CAACS,iBAAD,CAAlB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAER,OAAO,CAACM,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4CJ,UAA5C,CAJF,CADF;AAQD,GAZD;;AAcA,MAAMQ,YAAY,GAAG,SAAfA,YAAe;AAAA,WACnBZ,SAAS,CAACM,eAAV,GACIH,oBAAoB,CAAC,QAAD,CADxB,GAEIM,sBAAsB,CAAC,QAAD,EAAW;AAC/BH,MAAAA,eAAe,EAAE,IADc;AAE/BC,MAAAA,gBAAgB,EAAE;AAFa,KAAX,CAHP;AAAA,GAArB;;AAQA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WACpBb,SAAS,CAACO,gBAAV,GACIJ,oBAAoB,CAAC,SAAD,CADxB,GAEIM,sBAAsB,CAAC,SAAD,EAAY;AAChCH,MAAAA,eAAe,EAAE,KADe;AAEhCC,MAAAA,gBAAgB,EAAE;AAFc,KAAZ,CAHN;AAAA,GAAtB;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,YAAY,EADf,EAEGC,aAAa,EAFhB,CADF,CADF;AAQD,CAlED;;AAoEA,eAAed,kBAAf","sourcesContent":["import { Button, Typography } from '@material-ui/core';\nimport React from 'react';\nimport useStyles from './styles';\n\ninterface MyHubToggleProps {\n  isPublicToggled: boolean;\n  isPrivateToggled: boolean;\n}\n\ninterface Props {\n  isToggled: MyHubToggleProps;\n  setIsToggled: React.Dispatch<React.SetStateAction<MyHubToggleProps>>;\n}\n\nconst GitHubToggleButton: React.FC<Props> = ({ isToggled, setIsToggled }) => {\n  const classes = useStyles();\n  const setFilledButtonState = (buttonName: string) => {\n    return (\n      <Button\n        className={classes.toggleActive}\n        onClick={() =>\n          isToggled.isPublicToggled\n            ? setIsToggled({\n                isPublicToggled: true,\n                isPrivateToggled: false,\n              })\n            : isToggled.isPrivateToggled\n            ? setIsToggled({\n                isPublicToggled: false,\n                isPrivateToggled: true,\n              })\n            : setIsToggled({\n                isPublicToggled: false,\n                isPrivateToggled: false,\n              })\n        }\n      >\n        <Typography className={classes.toggleFont}>{buttonName}</Typography>\n      </Button>\n    );\n  };\n\n  const setButtonOutlinedState = (\n    buttonName: string,\n    setIsToggleValues: MyHubToggleProps\n  ) => {\n    return (\n      <Button\n        className={classes.toggleInactive}\n        onClick={() => setIsToggled(setIsToggleValues)}\n      >\n        <Typography className={classes.toggleFont}>{buttonName}</Typography>\n      </Button>\n    );\n  };\n\n  const PublicButton = () =>\n    isToggled.isPublicToggled\n      ? setFilledButtonState('Public')\n      : setButtonOutlinedState('Public', {\n          isPublicToggled: true,\n          isPrivateToggled: false,\n        });\n\n  const PrivateButton = () =>\n    isToggled.isPrivateToggled\n      ? setFilledButtonState('Private')\n      : setButtonOutlinedState('Private', {\n          isPublicToggled: false,\n          isPrivateToggled: true,\n        });\n\n  return (\n    <div>\n      <div>\n        {PublicButton()}\n        {PrivateButton()}\n      </div>\n    </div>\n  );\n};\n\nexport default GitHubToggleButton;\n"]},"metadata":{},"sourceType":"module"}