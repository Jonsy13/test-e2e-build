{"ast":null,"code":"import{Typography}from'@material-ui/core';import{ButtonOutlined,Modal}from'litmus-ui';import React from'react';import{useTranslation}from'react-i18next';import useActions from'../../../../redux/actions';import*as DashboardActions from'../../../../redux/actions/dashboards';import{history}from'../../../../redux/configureStore';import{getProjectID,getProjectRole}from'../../../../utils/getSearchParams';import useStyles from'./styles';var DataSourceInactiveModal=function DataSourceInactiveModal(_ref){var dataSourceStatus=_ref.dataSourceStatus,dashboardID=_ref.dashboardID;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;// get ProjectID\nvar projectID=getProjectID();var projectRole=getProjectRole();var dashboard=useActions(DashboardActions);return/*#__PURE__*/React.createElement(Modal,{open:true,onClose:function onClose(){history.goBack();},modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{className:classes.closeButton,onClick:function onClick(){history.goBack();}},\"\\u2715\"),width:\"60%\",height:\"fit-content\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.modal},/*#__PURE__*/React.createElement(Typography,{className:classes.modalHeading,align:\"left\"},\"\".concat(t('analyticsDashboard.monitoringDashboardPage.dataSourceIs'),\" \").concat(dataSourceStatus)),/*#__PURE__*/React.createElement(Typography,{align:\"left\",className:classes.modalBody},t('analyticsDashboard.monitoringDashboardPage.dataSourceError')),/*#__PURE__*/React.createElement(\"div\",{className:classes.flexButtons},/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){dashboard.selectDashboard({selectedDashboardID:dashboardID,activePanelID:''});history.push({pathname:'/analytics/dashboard/configure',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});}},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/disconnected.svg\",alt:\"disconnected\",className:classes.buttonIcon}),/*#__PURE__*/React.createElement(Typography,{className:classes.buttonText},t('analyticsDashboard.monitoringDashboardPage.reConfigureDashboard'))),/*#__PURE__*/React.createElement(Typography,{align:\"left\",className:classes.modalBodyText},t('analyticsDashboard.monitoringDashboardPage.or')),/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){history.push({pathname:'/analytics/datasource/configure',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});}},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/disconnected.svg\",alt:\"disconnected\",className:classes.buttonIcon}),/*#__PURE__*/React.createElement(Typography,{className:classes.buttonText},t('analyticsDashboard.monitoringDashboardPage.updateDataSource'))))));};export default DataSourceInactiveModal;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboard/DataSourceInactiveModal/index.tsx"],"names":["Typography","ButtonOutlined","Modal","React","useTranslation","useActions","DashboardActions","history","getProjectID","getProjectRole","useStyles","DataSourceInactiveModal","dataSourceStatus","dashboardID","classes","t","projectID","projectRole","dashboard","goBack","closeButton","modal","modalHeading","modalBody","flexButtons","selectDashboard","selectedDashboardID","activePanelID","push","pathname","search","buttonIcon","buttonText","modalBodyText"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport { ButtonOutlined, Modal } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useActions from '../../../../redux/actions';\nimport * as DashboardActions from '../../../../redux/actions/dashboards';\nimport { history } from '../../../../redux/configureStore';\nimport {\n  getProjectID,\n  getProjectRole,\n} from '../../../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface DataSourceInactiveModalProps {\n  dataSourceStatus: string;\n  dashboardID: string;\n}\n\nconst DataSourceInactiveModal: React.FC<DataSourceInactiveModalProps> = ({\n  dataSourceStatus,\n  dashboardID,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  // get ProjectID\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n  const dashboard = useActions(DashboardActions);\n\n  return (\n    <Modal\n      open\n      onClose={() => {\n        history.goBack();\n      }}\n      modalActions={\n        <ButtonOutlined\n          className={classes.closeButton}\n          onClick={() => {\n            history.goBack();\n          }}\n        >\n          &#x2715;\n        </ButtonOutlined>\n      }\n      width=\"60%\"\n      height=\"fit-content\"\n    >\n      <div className={classes.modal}>\n        <Typography className={classes.modalHeading} align=\"left\">\n          {`${t(\n            'analyticsDashboard.monitoringDashboardPage.dataSourceIs'\n          )} ${dataSourceStatus}`}\n        </Typography>\n        <Typography align=\"left\" className={classes.modalBody}>\n          {t('analyticsDashboard.monitoringDashboardPage.dataSourceError')}\n        </Typography>\n        <div className={classes.flexButtons}>\n          <ButtonOutlined\n            onClick={() => {\n              dashboard.selectDashboard({\n                selectedDashboardID: dashboardID,\n                activePanelID: '',\n              });\n              history.push({\n                pathname: '/analytics/dashboard/configure',\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              });\n            }}\n          >\n            <img\n              src=\"/icons/disconnected.svg\"\n              alt=\"disconnected\"\n              className={classes.buttonIcon}\n            />\n            <Typography className={classes.buttonText}>\n              {t(\n                'analyticsDashboard.monitoringDashboardPage.reConfigureDashboard'\n              )}\n            </Typography>\n          </ButtonOutlined>\n          <Typography align=\"left\" className={classes.modalBodyText}>\n            {t('analyticsDashboard.monitoringDashboardPage.or')}\n          </Typography>\n          <ButtonOutlined\n            onClick={() => {\n              history.push({\n                pathname: '/analytics/datasource/configure',\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              });\n            }}\n          >\n            <img\n              src=\"/icons/disconnected.svg\"\n              alt=\"disconnected\"\n              className={classes.buttonIcon}\n            />\n            <Typography className={classes.buttonText}>\n              {t('analyticsDashboard.monitoringDashboardPage.updateDataSource')}\n            </Typography>\n          </ButtonOutlined>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default DataSourceInactiveModal;\n"]},"metadata":{},"sourceType":"module"}