{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ApolloClient,HttpLink,InMemoryCache,split}from'@apollo/client';import{setContext}from'@apollo/client/link/context';import{WebSocketLink}from'@apollo/client/link/ws';import{getMainDefinition}from'@apollo/client/utilities';import{getToken}from'./auth';function createApolloClient(httpLinkUri,wsLinkUri){var httpLink=new HttpLink({uri:httpLinkUri});var authLink=setContext(function(_,_ref){var headers=_ref.headers;var token=getToken();return{headers:_objectSpread(_objectSpread({},headers),{},{authorization:token})};});var wsLink=new WebSocketLink({uri:wsLinkUri,options:{reconnect:true,lazy:true}});var link=split(function(_ref2){var query=_ref2.query;var definition=getMainDefinition(query);return definition.kind==='OperationDefinition'&&definition.operation==='subscription';},authLink.concat(wsLink),authLink.concat(httpLink));var client=new ApolloClient({link:link,cache:new InMemoryCache()});return client;}export default createApolloClient;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/utils/createApolloClient.ts"],"names":["ApolloClient","HttpLink","InMemoryCache","split","setContext","WebSocketLink","getMainDefinition","getToken","createApolloClient","httpLinkUri","wsLinkUri","httpLink","uri","authLink","_","headers","token","authorization","wsLink","options","reconnect","lazy","link","query","definition","kind","operation","concat","client","cache"],"mappings":"kLAAA,OAASA,YAAT,CAAuBC,QAAvB,CAAiCC,aAAjC,CAAgDC,KAAhD,KAA6D,gBAA7D,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,OAASC,iBAAT,KAAkC,0BAAlC,CACA,OAASC,QAAT,KAAyB,QAAzB,CAEA,QAASC,CAAAA,kBAAT,CAA4BC,WAA5B,CAAiDC,SAAjD,CAAoE,CAClE,GAAMC,CAAAA,QAAQ,CAAG,GAAIV,CAAAA,QAAJ,CAAa,CAC5BW,GAAG,CAAEH,WADuB,CAAb,CAAjB,CAGA,GAAMI,CAAAA,QAAQ,CAAGT,UAAU,CAAC,SAACU,CAAD,MAAoB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAC9C,GAAMC,CAAAA,KAAK,CAAGT,QAAQ,EAAtB,CACA,MAAO,CACLQ,OAAO,gCACFA,OADE,MAELE,aAAa,CAAED,KAFV,EADF,CAAP,CAMD,CAR0B,CAA3B,CAUA,GAAME,CAAAA,MAAM,CAAG,GAAIb,CAAAA,aAAJ,CAAkB,CAC/BO,GAAG,CAAEF,SAD0B,CAE/BS,OAAO,CAAE,CACPC,SAAS,CAAE,IADJ,CAEPC,IAAI,CAAE,IAFC,CAFsB,CAAlB,CAAf,CAQA,GAAMC,CAAAA,IAAI,CAAGnB,KAAK,CAChB,eAAe,IAAZoB,CAAAA,KAAY,OAAZA,KAAY,CACb,GAAMC,CAAAA,UAAU,CAAGlB,iBAAiB,CAACiB,KAAD,CAApC,CACA,MACEC,CAAAA,UAAU,CAACC,IAAX,GAAoB,qBAApB,EACAD,UAAU,CAACE,SAAX,GAAyB,cAF3B,CAID,CAPe,CAQhBb,QAAQ,CAACc,MAAT,CAAgBT,MAAhB,CARgB,CAShBL,QAAQ,CAACc,MAAT,CAAgBhB,QAAhB,CATgB,CAAlB,CAYA,GAAMiB,CAAAA,MAAM,CAAG,GAAI5B,CAAAA,YAAJ,CAAiB,CAC9BsB,IAAI,CAAJA,IAD8B,CAE9BO,KAAK,CAAE,GAAI3B,CAAAA,aAAJ,EAFuB,CAAjB,CAAf,CAKA,MAAO0B,CAAAA,MAAP,CACD,CAED,cAAepB,CAAAA,kBAAf","sourcesContent":["import { ApolloClient, HttpLink, InMemoryCache, split } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { getToken } from './auth';\n\nfunction createApolloClient(httpLinkUri: string, wsLinkUri: string) {\n  const httpLink = new HttpLink({\n    uri: httpLinkUri,\n  });\n  const authLink = setContext((_, { headers }) => {\n    const token = getToken();\n    return {\n      headers: {\n        ...headers,\n        authorization: token,\n      },\n    };\n  });\n\n  const wsLink = new WebSocketLink({\n    uri: wsLinkUri,\n    options: {\n      reconnect: true,\n      lazy: true,\n    },\n  });\n\n  const link = split(\n    ({ query }) => {\n      const definition = getMainDefinition(query);\n      return (\n        definition.kind === 'OperationDefinition' &&\n        definition.operation === 'subscription'\n      );\n    },\n    authLink.concat(wsLink),\n    authLink.concat(httpLink)\n  );\n\n  const client = new ApolloClient({\n    link,\n    cache: new InMemoryCache(),\n  });\n\n  return client;\n}\n\nexport default createApolloClient;\n"]},"metadata":{},"sourceType":"module"}