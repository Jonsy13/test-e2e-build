{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/HomePage/index.tsx\";\n\nimport { useQuery } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { GET_CLUSTER_LENGTH } from '../../graphql';\nimport { getUsername } from '../../utils/auth';\nimport { getProjectID } from '../../utils/getSearchParams';\nimport { AgentConfiguredHome } from '../../views/Home/AgentConfiguredHome';\nimport { LandingHome } from '../../views/Home/LandingHome';\nimport useStyles from './styles';\n\nvar HomePage = function HomePage() {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useQuery = useQuery(GET_CLUSTER_LENGTH, {\n    variables: {\n      project_id: getProjectID()\n    },\n    fetchPolicy: 'network-only'\n  }),\n      agentList = _useQuery.data,\n      loading = _useQuery.loading;\n\n  var agentCount = 0;\n\n  if (agentList !== undefined) {\n    agentCount = agentList.getCluster.length;\n  }\n\n  return /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    className: classes.userName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, t('home.heading'), \" \", getUsername()), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })) : agentList && agentCount > 0 ? /*#__PURE__*/React.createElement(AgentConfiguredHome, {\n    agentCount: agentCount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(LandingHome, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/HomePage/index.tsx"],"names":["useQuery","Typography","React","useTranslation","Loader","Scaffold","GET_CLUSTER_LENGTH","getUsername","getProjectID","AgentConfiguredHome","LandingHome","useStyles","HomePage","classes","t","variables","project_id","fetchPolicy","agentList","data","loading","agentCount","undefined","getCluster","length","userName","height"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,mBAAT,QAAoC,sCAApC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,IAAMC,QAAkB,GAAG,SAArBA,QAAqB,GAAM;AAC/B,MAAMC,OAAO,GAAGF,SAAS,EAAzB;;AACA,wBAAcR,cAAc,EAA5B;AAAA,MAAQW,CAAR,mBAAQA,CAAR;;AAEA,kBAAqCd,QAAQ,CAC3CM,kBAD2C,EAE3C;AACES,IAAAA,SAAS,EAAE;AAAEC,MAAAA,UAAU,EAAER,YAAY;AAA1B,KADb;AAEES,IAAAA,WAAW,EAAE;AAFf,GAF2C,CAA7C;AAAA,MAAcC,SAAd,aAAQC,IAAR;AAAA,MAAyBC,OAAzB,aAAyBA,OAAzB;;AAQA,MAAIC,UAAU,GAAG,CAAjB;;AAEA,MAAIH,SAAS,KAAKI,SAAlB,EAA6B;AAC3BD,IAAAA,UAAU,GAAGH,SAAS,CAACK,UAAV,CAAqBC,MAAlC;AACD;;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEX,OAAO,CAACY,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,CAAC,CAAC,cAAD,CADJ,OACuBP,WAAW,EADlC,CADF,EAIGa,OAAO,gBACN;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAIJR,SAAS,IAAIG,UAAU,GAAG,CAA1B,gBACF,oBAAC,mBAAD;AAAqB,IAAA,UAAU,EAAEA,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,gBAGF,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADF;AAgBD,CAlCD;;AAoCA,eAAeT,QAAf","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { GET_CLUSTER_LENGTH } from '../../graphql';\nimport { Clusters, ClusterVars } from '../../models/graphql/clusterData';\nimport { getUsername } from '../../utils/auth';\nimport { getProjectID } from '../../utils/getSearchParams';\nimport { AgentConfiguredHome } from '../../views/Home/AgentConfiguredHome';\nimport { LandingHome } from '../../views/Home/LandingHome';\nimport useStyles from './styles';\n\nconst HomePage: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const { data: agentList, loading } = useQuery<Clusters, ClusterVars>(\n    GET_CLUSTER_LENGTH,\n    {\n      variables: { project_id: getProjectID() },\n      fetchPolicy: 'network-only',\n    }\n  );\n\n  let agentCount = 0;\n\n  if (agentList !== undefined) {\n    agentCount = agentList.getCluster.length;\n  }\n\n  return (\n    <Scaffold>\n      <Typography variant=\"h3\" className={classes.userName}>\n        {t('home.heading')} {getUsername()}\n      </Typography>\n      {loading ? (\n        <div style={{ height: '100vh' }}>\n          <Loader />\n        </div>\n      ) : agentList && agentCount > 0 ? (\n        <AgentConfiguredHome agentCount={agentCount} />\n      ) : (\n        <LandingHome />\n      )}\n    </Scaffold>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}