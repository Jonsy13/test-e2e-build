{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport cx from 'classnames';\nimport { Group } from '@visx/group';\nimport { geoOrthographic, geoAlbers, geoAlbersUsa, geoMercator, geoNaturalEarth1, geoEqualEarth, geoPath } from 'd3-geo'; // this is just for types\n// eslint-disable-next-line import/no-unresolved\n\nimport Graticule from '../graticule/Graticule';\nvar projectionMapping = {\n  orthographic: function orthographic() {\n    return geoOrthographic();\n  },\n  albers: function albers() {\n    return geoAlbers();\n  },\n  albersUsa: function albersUsa() {\n    return geoAlbersUsa();\n  },\n  mercator: function mercator() {\n    return geoMercator();\n  },\n  naturalEarth: function naturalEarth() {\n    return geoNaturalEarth1();\n  },\n  equalEarth: function equalEarth() {\n    return geoEqualEarth();\n  }\n};\n/**\n * Component for all projections.\n */\n\nexport default function Projection(_ref) {\n  var data = _ref.data,\n      _ref$projection = _ref.projection,\n      projection = _ref$projection === void 0 ? 'mercator' : _ref$projection,\n      projectionFunc = _ref.projectionFunc,\n      clipAngle = _ref.clipAngle,\n      clipExtent = _ref.clipExtent,\n      scale = _ref.scale,\n      translate = _ref.translate,\n      center = _ref.center,\n      rotate = _ref.rotate,\n      precision = _ref.precision,\n      fitExtent = _ref.fitExtent,\n      fitSize = _ref.fitSize,\n      centroid = _ref.centroid,\n      graticule = _ref.graticule,\n      graticuleLines = _ref.graticuleLines,\n      graticuleOutline = _ref.graticuleOutline,\n      className = _ref.className,\n      innerRef = _ref.innerRef,\n      pointRadius = _ref.pointRadius,\n      children = _ref.children,\n      restProps = _objectWithoutPropertiesLoose(_ref, [\"data\", \"projection\", \"projectionFunc\", \"clipAngle\", \"clipExtent\", \"scale\", \"translate\", \"center\", \"rotate\", \"precision\", \"fitExtent\", \"fitSize\", \"centroid\", \"graticule\", \"graticuleLines\", \"graticuleOutline\", \"className\", \"innerRef\", \"pointRadius\", \"children\"]);\n\n  var maybeCustomProjection = typeof projection === 'string' ? projectionMapping[projection] : projection;\n  var currProjection = maybeCustomProjection();\n  if (clipAngle) currProjection.clipAngle(clipAngle);\n  if (clipExtent) currProjection.clipExtent(clipExtent);\n  if (scale) currProjection.scale(scale);\n  if (translate) currProjection.translate(translate);\n  if (center) currProjection.center(center);\n  if (rotate) currProjection.rotate(rotate);\n  if (precision) currProjection.precision(precision);\n  if (fitExtent) currProjection.fitExtent.apply(currProjection, fitExtent);\n  if (fitSize) currProjection.fitSize.apply(currProjection, fitSize);\n  var path = geoPath().projection(currProjection);\n  if (pointRadius) path.pointRadius(pointRadius);\n  var features = data.map(function (feature, i) {\n    return {\n      feature: feature,\n      type: projection,\n      projection: currProjection,\n      index: i,\n      centroid: path.centroid(feature),\n      path: path(feature)\n    };\n  });\n  if (children) return /*#__PURE__*/React.createElement(React.Fragment, null, children({\n    path: path,\n    features: features\n  }));\n  return /*#__PURE__*/React.createElement(Group, {\n    className: \"visx-geo\"\n  }, graticule && !graticule.foreground && /*#__PURE__*/React.createElement(Graticule, _extends({\n    graticule: function graticule(ml) {\n      return path(ml) || '';\n    }\n  }, graticule)), graticuleLines && !graticuleLines.foreground && /*#__PURE__*/React.createElement(Graticule, _extends({\n    lines: function lines(l) {\n      return path(l) || '';\n    }\n  }, graticuleLines)), graticuleOutline && !graticuleOutline.foreground && /*#__PURE__*/React.createElement(Graticule, _extends({\n    outline: function outline(p) {\n      return path(p) || '';\n    }\n  }, graticuleOutline)), features.map(function (feature, i) {\n    return /*#__PURE__*/React.createElement(\"g\", {\n      key: projection + \"-\" + i\n    }, /*#__PURE__*/React.createElement(\"path\", _extends({\n      className: cx(\"visx-geo-\" + projection, className),\n      d: feature.path || '',\n      ref: innerRef && innerRef(feature, i)\n    }, restProps)), centroid && centroid(feature.centroid, feature));\n  }), projectionFunc && projectionFunc(currProjection), graticule && graticule.foreground && /*#__PURE__*/React.createElement(Graticule, _extends({\n    graticule: function graticule(ml) {\n      return path(ml) || '';\n    }\n  }, graticule)), graticuleLines && graticuleLines.foreground && /*#__PURE__*/React.createElement(Graticule, _extends({\n    lines: function lines(l) {\n      return path(l) || '';\n    }\n  }, graticuleLines)), graticuleOutline && graticuleOutline.foreground && /*#__PURE__*/React.createElement(Graticule, _extends({\n    outline: function outline(p) {\n      return path(p) || '';\n    }\n  }, graticuleOutline)));\n}\nProjection.propTypes = {\n  data: _pt.array.isRequired,\n  projectionFunc: _pt.func,\n  clipAngle: _pt.number,\n  scale: _pt.number,\n  precision: _pt.number,\n  centroid: _pt.func,\n  className: _pt.string,\n  children: _pt.func,\n  innerRef: _pt.func,\n  pointRadius: _pt.number\n};","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/@visx/geo/esm/projections/Projection.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","cx","Group","geoOrthographic","geoAlbers","geoAlbersUsa","geoMercator","geoNaturalEarth1","geoEqualEarth","geoPath","Graticule","projectionMapping","orthographic","albers","albersUsa","mercator","naturalEarth","equalEarth","Projection","_ref","data","_ref$projection","projection","projectionFunc","clipAngle","clipExtent","scale","translate","center","rotate","precision","fitExtent","fitSize","centroid","graticule","graticuleLines","graticuleOutline","className","innerRef","pointRadius","children","restProps","maybeCustomProjection","currProjection","path","features","map","feature","type","index","createElement","Fragment","foreground","ml","lines","l","outline","p","d","ref","propTypes","array","isRequired","func","number","string"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cx from 'classnames';\nimport { Group } from '@visx/group';\nimport { geoOrthographic, geoAlbers, geoAlbersUsa, geoMercator, geoNaturalEarth1, geoEqualEarth, geoPath } from 'd3-geo'; // this is just for types\n// eslint-disable-next-line import/no-unresolved\n\nimport Graticule from '../graticule/Graticule';\nvar projectionMapping = {\n  orthographic: function orthographic() {\n    return geoOrthographic();\n  },\n  albers: function albers() {\n    return geoAlbers();\n  },\n  albersUsa: function albersUsa() {\n    return geoAlbersUsa();\n  },\n  mercator: function mercator() {\n    return geoMercator();\n  },\n  naturalEarth: function naturalEarth() {\n    return geoNaturalEarth1();\n  },\n  equalEarth: function equalEarth() {\n    return geoEqualEarth();\n  }\n};\n\n/**\n * Component for all projections.\n */\nexport default function Projection(_ref) {\n  var data = _ref.data,\n      _ref$projection = _ref.projection,\n      projection = _ref$projection === void 0 ? 'mercator' : _ref$projection,\n      projectionFunc = _ref.projectionFunc,\n      clipAngle = _ref.clipAngle,\n      clipExtent = _ref.clipExtent,\n      scale = _ref.scale,\n      translate = _ref.translate,\n      center = _ref.center,\n      rotate = _ref.rotate,\n      precision = _ref.precision,\n      fitExtent = _ref.fitExtent,\n      fitSize = _ref.fitSize,\n      centroid = _ref.centroid,\n      graticule = _ref.graticule,\n      graticuleLines = _ref.graticuleLines,\n      graticuleOutline = _ref.graticuleOutline,\n      className = _ref.className,\n      innerRef = _ref.innerRef,\n      pointRadius = _ref.pointRadius,\n      children = _ref.children,\n      restProps = _objectWithoutPropertiesLoose(_ref, [\"data\", \"projection\", \"projectionFunc\", \"clipAngle\", \"clipExtent\", \"scale\", \"translate\", \"center\", \"rotate\", \"precision\", \"fitExtent\", \"fitSize\", \"centroid\", \"graticule\", \"graticuleLines\", \"graticuleOutline\", \"className\", \"innerRef\", \"pointRadius\", \"children\"]);\n\n  var maybeCustomProjection = typeof projection === 'string' ? projectionMapping[projection] : projection;\n  var currProjection = maybeCustomProjection();\n  if (clipAngle) currProjection.clipAngle(clipAngle);\n  if (clipExtent) currProjection.clipExtent(clipExtent);\n  if (scale) currProjection.scale(scale);\n  if (translate) currProjection.translate(translate);\n  if (center) currProjection.center(center);\n  if (rotate) currProjection.rotate(rotate);\n  if (precision) currProjection.precision(precision);\n  if (fitExtent) currProjection.fitExtent.apply(currProjection, fitExtent);\n  if (fitSize) currProjection.fitSize.apply(currProjection, fitSize);\n  var path = geoPath().projection(currProjection);\n  if (pointRadius) path.pointRadius(pointRadius);\n  var features = data.map(function (feature, i) {\n    return {\n      feature: feature,\n      type: projection,\n      projection: currProjection,\n      index: i,\n      centroid: path.centroid(feature),\n      path: path(feature)\n    };\n  });\n  if (children) return /*#__PURE__*/React.createElement(React.Fragment, null, children({\n    path: path,\n    features: features\n  }));\n  return /*#__PURE__*/React.createElement(Group, {\n    className: \"visx-geo\"\n  }, graticule && !graticule.foreground && /*#__PURE__*/React.createElement(Graticule, _extends({\n    graticule: function graticule(ml) {\n      return path(ml) || '';\n    }\n  }, graticule)), graticuleLines && !graticuleLines.foreground && /*#__PURE__*/React.createElement(Graticule, _extends({\n    lines: function lines(l) {\n      return path(l) || '';\n    }\n  }, graticuleLines)), graticuleOutline && !graticuleOutline.foreground && /*#__PURE__*/React.createElement(Graticule, _extends({\n    outline: function outline(p) {\n      return path(p) || '';\n    }\n  }, graticuleOutline)), features.map(function (feature, i) {\n    return /*#__PURE__*/React.createElement(\"g\", {\n      key: projection + \"-\" + i\n    }, /*#__PURE__*/React.createElement(\"path\", _extends({\n      className: cx(\"visx-geo-\" + projection, className),\n      d: feature.path || '',\n      ref: innerRef && innerRef(feature, i)\n    }, restProps)), centroid && centroid(feature.centroid, feature));\n  }), projectionFunc && projectionFunc(currProjection), graticule && graticule.foreground && /*#__PURE__*/React.createElement(Graticule, _extends({\n    graticule: function graticule(ml) {\n      return path(ml) || '';\n    }\n  }, graticule)), graticuleLines && graticuleLines.foreground && /*#__PURE__*/React.createElement(Graticule, _extends({\n    lines: function lines(l) {\n      return path(l) || '';\n    }\n  }, graticuleLines)), graticuleOutline && graticuleOutline.foreground && /*#__PURE__*/React.createElement(Graticule, _extends({\n    outline: function outline(p) {\n      return path(p) || '';\n    }\n  }, graticuleOutline)));\n}\nProjection.propTypes = {\n  data: _pt.array.isRequired,\n  projectionFunc: _pt.func,\n  clipAngle: _pt.number,\n  scale: _pt.number,\n  precision: _pt.number,\n  centroid: _pt.func,\n  className: _pt.string,\n  children: _pt.func,\n  innerRef: _pt.func,\n  pointRadius: _pt.number\n};"]},"metadata":{},"sourceType":"module"}