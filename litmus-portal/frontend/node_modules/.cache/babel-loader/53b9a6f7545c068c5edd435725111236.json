{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{IconButton,Typography}from'@material-ui/core';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import YAML from'yaml';import{ButtonOutlined}from'litmus-ui';import{useSelector}from'react-redux';import timeDifference from'../../../utils/datesModifier';import useStyles from'./styles';import trimstring from'../../../utils/trim';import WorkflowStatus from'../WorkflowStatus';import LogsSwitcher from'../LogsSwitcher';import{stepEmbeddedYAMLExtractor}from'../../../utils/yamlUtils';var WorkflowNodeInfo=function WorkflowNodeInfo(_ref){var manifest=_ref.manifest,cluster_id=_ref.cluster_id,workflow_run_id=_ref.workflow_run_id,data=_ref.data,setIsInfoToggled=_ref.setIsInfoToggled;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAppInfoVisible=_useState2[0],setIsAppInfoVisible=_useState2[1];var _useSelector=useSelector(function(state){return state.selectedNode;}),pod_name=_useSelector.pod_name;var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),embeddedYAMLString=_useState4[0],setEmbeddedYAMLString=_useState4[1];useEffect(function(){var currentEmbeddedYAMLString=stepEmbeddedYAMLExtractor(manifest,data.nodes[pod_name].name);setEmbeddedYAMLString(currentEmbeddedYAMLString);if(embeddedYAMLString&&!YAML.parse(embeddedYAMLString).spec.appinfo)setIsAppInfoVisible(false);},[pod_name]);return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.header},/*#__PURE__*/React.createElement(Typography,{className:classes.title},/*#__PURE__*/React.createElement(\"strong\",null,trimstring(data.nodes[pod_name].name,30))),/*#__PURE__*/React.createElement(ButtonOutlined,{className:classes.closeButton,onClick:function onClick(){setIsInfoToggled(false);}},\"\\u2715\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.section},/*#__PURE__*/React.createElement(\"div\",{className:classes.leftPanel},/*#__PURE__*/React.createElement(WorkflowStatus,{phase:data.nodes[pod_name].phase}),/*#__PURE__*/React.createElement(Typography,{className:classes.textMargin},/*#__PURE__*/React.createElement(\"strong\",null,t('workflowDetailsView.workflowNodeInfo.startTime'),\":\"),\"\\xA0\\xA0\\xA0\",/*#__PURE__*/React.createElement(\"span\",null,data.nodes[pod_name].phase!=='Pending'?timeDifference(data.nodes[pod_name].startedAt):'- -')),/*#__PURE__*/React.createElement(Typography,{className:classes.textMargin},/*#__PURE__*/React.createElement(\"strong\",null,t('workflowDetailsView.workflowNodeInfo.endTime'),\":\"),\"\\xA0\\xA0\\xA0\",data.nodes[pod_name].finishedAt!==''?/*#__PURE__*/React.createElement(\"span\",null,timeDifference(data.nodes[pod_name].finishedAt)):/*#__PURE__*/React.createElement(\"span\",null,\"- -\")),/*#__PURE__*/React.createElement(Typography,{className:classes.textMargin},/*#__PURE__*/React.createElement(\"strong\",null,t('workflowDetailsView.workflowNodeInfo.duration'),\":\"),\"\\xA0\\xA0\\xA0\",data.nodes[pod_name].finishedAt!==''?((parseInt(data.nodes[pod_name].finishedAt,10)-parseInt(data.nodes[pod_name].startedAt,10))/60).toFixed(1):((new Date().getTime()/1000-parseInt(data.nodes[pod_name].startedAt,10))/60).toFixed(1),' ',\"minutes\"),data.nodes[pod_name].type==='ChaosEngine'&&embeddedYAMLString&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IconButton,{disabled:!YAML.parse(embeddedYAMLString).spec.appinfo,onClick:function onClick(){return setIsAppInfoVisible(!isAppInfoVisible);},className:classes.buttonAlign},isAppInfoVisible?/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/down-arrow.svg\",alt:\"down arrow icon\",className:classes.icon}):/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/right-arrow.svg\",alt:\"right-arrow icon\",className:classes.icon}),/*#__PURE__*/React.createElement(Typography,null,/*#__PURE__*/React.createElement(\"strong\",null,t('workflowDetailsView.workflowNodeInfo.viewApplicationDetails')))),isAppInfoVisible&&YAML.parse(embeddedYAMLString).spec.appinfo&&/*#__PURE__*/React.createElement(Typography,{className:classes.textMargin},Object.keys(YAML.parse(embeddedYAMLString).spec.appinfo).map(function(key,index){return/*#__PURE__*/React.createElement(\"div\",{key:index.toString()},/*#__PURE__*/React.createElement(\"strong\",null,key,\" :\"),/*#__PURE__*/React.createElement(\"span\",null,\"\\xA0\\xA0\",YAML.parse(embeddedYAMLString).spec.appinfo[key]));})))),/*#__PURE__*/React.createElement(\"div\",{className:classes.rightPanel},/*#__PURE__*/React.createElement(LogsSwitcher,{cluster_id:cluster_id,workflow_run_id:workflow_run_id,pod_namespace:data.namespace,pod_type:data.nodes[pod_name].type,pod_name:pod_name}))));};export default WorkflowNodeInfo;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/WorkflowDetails/WorkflowNodeInfo/index.tsx"],"names":["IconButton","Typography","React","useEffect","useState","useTranslation","YAML","ButtonOutlined","useSelector","timeDifference","useStyles","trimstring","WorkflowStatus","LogsSwitcher","stepEmbeddedYAMLExtractor","WorkflowNodeInfo","manifest","cluster_id","workflow_run_id","data","setIsInfoToggled","classes","t","isAppInfoVisible","setIsAppInfoVisible","state","selectedNode","pod_name","embeddedYAMLString","setEmbeddedYAMLString","currentEmbeddedYAMLString","nodes","name","parse","spec","appinfo","root","header","title","closeButton","section","leftPanel","phase","textMargin","startedAt","finishedAt","parseInt","toFixed","Date","getTime","type","buttonAlign","icon","Object","keys","map","key","index","toString","rightPanel","namespace"],"mappings":"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","sourcesContent":["import { IconButton, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport YAML from 'yaml';\nimport { ButtonOutlined } from 'litmus-ui';\nimport { useSelector } from 'react-redux';\nimport timeDifference from '../../../utils/datesModifier';\nimport useStyles from './styles';\nimport trimstring from '../../../utils/trim';\nimport WorkflowStatus from '../WorkflowStatus';\nimport LogsSwitcher from '../LogsSwitcher';\nimport { stepEmbeddedYAMLExtractor } from '../../../utils/yamlUtils';\nimport { ExecutionData } from '../../../models/graphql/workflowData';\nimport { RootState } from '../../../redux/reducers';\n\ninterface WorkflowNodeInfoProps {\n  setIsInfoToggled: React.Dispatch<React.SetStateAction<boolean>>;\n  manifest: string;\n  cluster_id: string;\n  workflow_run_id: string;\n  data: ExecutionData;\n}\n\nconst WorkflowNodeInfo: React.FC<WorkflowNodeInfoProps> = ({\n  manifest,\n  cluster_id,\n  workflow_run_id,\n  data,\n  setIsInfoToggled,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [isAppInfoVisible, setIsAppInfoVisible] = useState(false);\n\n  const { pod_name } = useSelector((state: RootState) => state.selectedNode);\n\n  const [embeddedYAMLString, setEmbeddedYAMLString] = useState('');\n\n  useEffect(() => {\n    const currentEmbeddedYAMLString = stepEmbeddedYAMLExtractor(\n      manifest,\n      data.nodes[pod_name].name\n    );\n    setEmbeddedYAMLString(currentEmbeddedYAMLString);\n    if (embeddedYAMLString && !YAML.parse(embeddedYAMLString).spec.appinfo)\n      setIsAppInfoVisible(false);\n  }, [pod_name]);\n\n  return (\n    <div className={classes.root}>\n      {/* Node Details */}\n\n      {/* Header */}\n      <div className={classes.header}>\n        <Typography className={classes.title}>\n          <strong>{trimstring(data.nodes[pod_name].name, 30)}</strong>\n        </Typography>\n        <ButtonOutlined\n          className={classes.closeButton}\n          onClick={() => {\n            setIsInfoToggled(false);\n          }}\n        >\n          &#x2715;\n        </ButtonOutlined>\n      </div>\n\n      {/* Section */}\n      <div className={classes.section}>\n        {/* Left-Panel Containing details about selected Node. */}\n        <div className={classes.leftPanel}>\n          {/* Phase */}\n          <WorkflowStatus phase={data.nodes[pod_name].phase} />\n          {/* Start Time */}\n          <Typography className={classes.textMargin}>\n            <strong>\n              {t('workflowDetailsView.workflowNodeInfo.startTime')}:\n            </strong>\n            &nbsp;&nbsp;&nbsp;\n            <span>\n              {data.nodes[pod_name].phase !== 'Pending'\n                ? timeDifference(data.nodes[pod_name].startedAt)\n                : '- -'}\n            </span>\n          </Typography>\n          {/* End Time */}\n          <Typography className={classes.textMargin}>\n            <strong>\n              {t('workflowDetailsView.workflowNodeInfo.endTime')}:\n            </strong>\n            &nbsp;&nbsp;&nbsp;\n            {data.nodes[pod_name].finishedAt !== '' ? (\n              <span>{timeDifference(data.nodes[pod_name].finishedAt)}</span>\n            ) : (\n              <span>- -</span>\n            )}\n          </Typography>\n          {/* Duration */}\n          <Typography className={classes.textMargin}>\n            <strong>\n              {t('workflowDetailsView.workflowNodeInfo.duration')}:\n            </strong>\n            &nbsp;&nbsp;&nbsp;\n            {data.nodes[pod_name].finishedAt !== ''\n              ? (\n                  (parseInt(data.nodes[pod_name].finishedAt, 10) -\n                    parseInt(data.nodes[pod_name].startedAt, 10)) /\n                  60\n                ).toFixed(1)\n              : (\n                  (new Date().getTime() / 1000 -\n                    parseInt(data.nodes[pod_name].startedAt, 10)) /\n                  60\n                ).toFixed(1)}{' '}\n            minutes\n          </Typography>\n          {/* Button to show Application Details */}\n          {data.nodes[pod_name].type === 'ChaosEngine' && embeddedYAMLString && (\n            <>\n              <IconButton\n                disabled={!YAML.parse(embeddedYAMLString).spec.appinfo}\n                onClick={() => setIsAppInfoVisible(!isAppInfoVisible)}\n                className={classes.buttonAlign}\n              >\n                {isAppInfoVisible ? (\n                  <img\n                    src=\"/icons/down-arrow.svg\"\n                    alt=\"down arrow icon\"\n                    className={classes.icon}\n                  />\n                ) : (\n                  <img\n                    src=\"/icons/right-arrow.svg\"\n                    alt=\"right-arrow icon\"\n                    className={classes.icon}\n                  />\n                )}\n                <Typography>\n                  <strong>\n                    {t(\n                      'workflowDetailsView.workflowNodeInfo.viewApplicationDetails'\n                    )}\n                  </strong>\n                </Typography>\n              </IconButton>\n              {isAppInfoVisible && YAML.parse(embeddedYAMLString).spec.appinfo && (\n                <Typography className={classes.textMargin}>\n                  {Object.keys(YAML.parse(embeddedYAMLString).spec.appinfo).map(\n                    (key, index) => (\n                      <div key={index.toString()}>\n                        <strong>{key} :</strong>\n                        <span>\n                          &nbsp;&nbsp;\n                          {YAML.parse(embeddedYAMLString).spec.appinfo[key]}\n                        </span>\n                      </div>\n                    )\n                  )}\n                </Typography>\n              )}\n            </>\n          )}\n        </div>\n        {/* Right Panel for Node Logs */}\n        <div className={classes.rightPanel}>\n          <LogsSwitcher\n            cluster_id={cluster_id}\n            workflow_run_id={workflow_run_id}\n            pod_namespace={data.namespace}\n            pod_type={data.nodes[pod_name].type}\n            pod_name={pod_name}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkflowNodeInfo;\n"]},"metadata":{},"sourceType":"module"}