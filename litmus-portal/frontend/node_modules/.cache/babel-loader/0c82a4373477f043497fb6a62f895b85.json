{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{FormControl,IconButton,InputAdornment,InputBase,InputLabel,MenuItem,Popover,Select,Typography}from'@material-ui/core';import ChevronRightIcon from'@material-ui/icons/ChevronRight';import KeyboardArrowDownIcon from'@material-ui/icons/KeyboardArrowDown';import SearchIcon from'@material-ui/icons/Search';import{ButtonOutlined}from'litmus-ui';import React,{useState}from'react';import{DateRangePicker}from'react-date-range';import{useTranslation}from'react-i18next';import{useTheme}from'@material-ui/core/styles';import'react-date-range/dist/styles.css';// main css file\nimport'react-date-range/dist/theme/default.css';// theme css file\nimport useStyles from'./styles';var HeaderSection=function HeaderSection(_ref){var searchValue=_ref.searchValue,statusValue=_ref.statusValue,clusterValue=_ref.clusterValue,isOpen=_ref.isOpen,popAnchorEl=_ref.popAnchorEl,displayDate=_ref.displayDate,changeSearch=_ref.changeSearch,changeStatus=_ref.changeStatus,changeCluster=_ref.changeCluster,popOverClick=_ref.popOverClick,popOverClose=_ref.popOverClose,selectDate=_ref.selectDate;var classes=useStyles();var _useTheme=useTheme(),palette=_useTheme.palette;var _useState=useState([{startDate:new Date(),endDate:new Date(),key:'selection'}]),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.headerSection},/*#__PURE__*/React.createElement(InputBase,{id:\"input-with-icon-adornment\",placeholder:\"Search\",className:classes.search,value:searchValue,onChange:changeSearch,startAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"start\"},/*#__PURE__*/React.createElement(SearchIcon,null))}),/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formControl,color:\"primary\",focused:true},/*#__PURE__*/React.createElement(InputLabel,{className:classes.selectText},t('workflowCluster.header.status')),/*#__PURE__*/React.createElement(Select,{value:statusValue,onChange:changeStatus,label:\"Cluster Status\",className:classes.selectText},/*#__PURE__*/React.createElement(MenuItem,{value:\"All\"},t('workflowCluster.header.formControl.menu')),/*#__PURE__*/React.createElement(MenuItem,{value:\"true\"},t('workflowCluster.header.formControl.menu1')),/*#__PURE__*/React.createElement(MenuItem,{value:\"false\"},t('workflowCluster.header.formControl.menu2')),/*#__PURE__*/React.createElement(MenuItem,{value:\"pending\"},t('workflowCluster.header.formControl.menu6')))),/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formControl,color:\"primary\",focused:true},/*#__PURE__*/React.createElement(InputLabel,{className:classes.selectText},t('workflowCluster.header.target')),/*#__PURE__*/React.createElement(Select,{value:clusterValue,onChange:changeCluster,label:\"Target Agent\",className:classes.selectText},/*#__PURE__*/React.createElement(MenuItem,{value:\"All\"},t('workflowCluster.header.formControl.menu')),/*#__PURE__*/React.createElement(MenuItem,{value:\"Internal\"},t('workflowCluster.header.formControl.menu4')),/*#__PURE__*/React.createElement(MenuItem,{value:\"External\"},t('workflowCluster.header.formControl.menu5')))),/*#__PURE__*/React.createElement(\"div\",{className:classes.dateBtn},/*#__PURE__*/React.createElement(ButtonOutlined,{disabled:false,onClick:popOverClick},/*#__PURE__*/React.createElement(Typography,{className:classes.displayDate},displayDate,/*#__PURE__*/React.createElement(IconButton,{className:classes.iconButton},isOpen?/*#__PURE__*/React.createElement(KeyboardArrowDownIcon,null):/*#__PURE__*/React.createElement(ChevronRightIcon,null))))),/*#__PURE__*/React.createElement(Popover,{open:isOpen,anchorEl:popAnchorEl,onClose:popOverClose,anchorOrigin:{vertical:'bottom',horizontal:'center'},transformOrigin:{vertical:'top',horizontal:'center'},className:classes.popOver},/*#__PURE__*/React.createElement(DateRangePicker,{onChange:function onChange(item){setState([item.selection]);selectDate(\"\".concat(item.selection.startDate),\"\".concat(item.selection.endDate));},showSelectionPreview:true,moveRangeOnFirstSelection:false,months:1,ranges:state,direction:\"vertical\",editableDateInputs:true,rangeColors:[palette.secondary.dark],showMonthAndYearPickers:true}))));};export default HeaderSection;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Targets/BrowseCluster/HeaderSection.tsx"],"names":["FormControl","IconButton","InputAdornment","InputBase","InputLabel","MenuItem","Popover","Select","Typography","ChevronRightIcon","KeyboardArrowDownIcon","SearchIcon","ButtonOutlined","React","useState","DateRangePicker","useTranslation","useTheme","useStyles","HeaderSection","searchValue","statusValue","clusterValue","isOpen","popAnchorEl","displayDate","changeSearch","changeStatus","changeCluster","popOverClick","popOverClose","selectDate","classes","palette","startDate","Date","endDate","key","state","setState","t","headerSection","search","formControl","selectText","dateBtn","iconButton","vertical","horizontal","popOver","item","selection","secondary","dark"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Popover,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { ButtonOutlined } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport { useTranslation } from 'react-i18next';\nimport { useTheme } from '@material-ui/core/styles';\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport useStyles from './styles';\n\ninterface HeaderSectionProps {\n  searchValue: string;\n  statusValue: string;\n  clusterValue: string;\n  isOpen: boolean;\n  isDateOpen: boolean;\n  popAnchorEl: HTMLElement | null;\n  displayDate: string;\n  changeSearch: (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n  changeStatus: (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>,\n    child: React.ReactNode\n  ) => void;\n  changeCluster: (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>,\n    child: React.ReactNode\n  ) => void;\n  popOverClick: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  popOverClose: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  selectDate: (selectFromDate: string, selectToDate: string) => void;\n}\n\nconst HeaderSection: React.FC<HeaderSectionProps> = ({\n  searchValue,\n  statusValue,\n  clusterValue,\n  isOpen,\n  popAnchorEl,\n  displayDate,\n  changeSearch,\n  changeStatus,\n  changeCluster,\n  popOverClick,\n  popOverClose,\n  selectDate,\n}) => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n  const [state, setState] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection',\n    },\n  ]);\n  const { t } = useTranslation();\n  return (\n    <div>\n      <div className={classes.headerSection}>\n        {/* Search Field */}\n        <InputBase\n          id=\"input-with-icon-adornment\"\n          placeholder=\"Search\"\n          className={classes.search}\n          value={searchValue}\n          onChange={changeSearch}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          }\n        />\n\n        {/* Select Workflow */}\n        <FormControl\n          variant=\"outlined\"\n          className={classes.formControl}\n          color=\"primary\"\n          focused\n        >\n          <InputLabel className={classes.selectText}>\n            {t('workflowCluster.header.status')}\n          </InputLabel>\n          <Select\n            value={statusValue}\n            onChange={changeStatus}\n            label=\"Cluster Status\"\n            className={classes.selectText}\n          >\n            <MenuItem value=\"All\">\n              {t('workflowCluster.header.formControl.menu')}\n            </MenuItem>\n            <MenuItem value=\"true\">\n              {t('workflowCluster.header.formControl.menu1')}\n            </MenuItem>\n            <MenuItem value=\"false\">\n              {t('workflowCluster.header.formControl.menu2')}\n            </MenuItem>\n            <MenuItem value=\"pending\">\n              {t('workflowCluster.header.formControl.menu6')}\n            </MenuItem>\n          </Select>\n        </FormControl>\n\n        {/* Select Cluster */}\n        <FormControl\n          variant=\"outlined\"\n          className={classes.formControl}\n          color=\"primary\"\n          focused\n        >\n          <InputLabel className={classes.selectText}>\n            {t('workflowCluster.header.target')}\n          </InputLabel>\n          <Select\n            value={clusterValue}\n            onChange={changeCluster}\n            label=\"Target Agent\"\n            className={classes.selectText}\n          >\n            <MenuItem value=\"All\">\n              {t('workflowCluster.header.formControl.menu')}\n            </MenuItem>\n            <MenuItem value=\"Internal\">\n              {t('workflowCluster.header.formControl.menu4')}\n            </MenuItem>\n            <MenuItem value=\"External\">\n              {t('workflowCluster.header.formControl.menu5')}\n            </MenuItem>\n          </Select>\n        </FormControl>\n        <div className={classes.dateBtn}>\n          <ButtonOutlined disabled={false} onClick={popOverClick}>\n            <Typography className={classes.displayDate}>\n              {displayDate}\n              <IconButton className={classes.iconButton}>\n                {isOpen ? <KeyboardArrowDownIcon /> : <ChevronRightIcon />}\n              </IconButton>\n            </Typography>\n          </ButtonOutlined>\n        </div>\n        <Popover\n          open={isOpen}\n          anchorEl={popAnchorEl}\n          onClose={popOverClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          className={classes.popOver}\n        >\n          <DateRangePicker\n            onChange={(item) => {\n              setState([(item as any).selection]);\n              selectDate(\n                `${(item as any).selection.startDate}`,\n                `${(item as any).selection.endDate}`\n              );\n            }}\n            showSelectionPreview\n            moveRangeOnFirstSelection={false}\n            months={1}\n            ranges={state}\n            direction=\"vertical\"\n            editableDateInputs\n            rangeColors={[palette.secondary.dark]}\n            showMonthAndYearPickers\n          />\n        </Popover>\n      </div>\n    </div>\n  );\n};\nexport default HeaderSection;\n"]},"metadata":{},"sourceType":"module"}