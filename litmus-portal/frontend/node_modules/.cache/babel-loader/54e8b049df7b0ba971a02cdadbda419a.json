{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/Targets/index.tsx\";\n\nimport { Tooltip, Typography } from '@material-ui/core';\nimport { ButtonFilled } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport BrowseCluster from '../../views/Targets/BrowseCluster';\nimport useStyles from './styles';\n\nvar Targets = function Targets() {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var projectID = getProjectID();\n  var userRole = getProjectRole();\n\n  var handleCluster = function handleCluster() {\n    history.push({\n      pathname: '/target-connect',\n      search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(userRole)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"Header section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, t('targets.connectHome.head')), /*#__PURE__*/React.createElement(Tooltip, {\n    classes: {\n      tooltip: classes.customTooltip\n    },\n    disableFocusListener: true,\n    disableHoverListener: userRole !== 'Viewer',\n    placement: \"bottom\",\n    title: \"Insufficient Permissions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scheduleBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    variant: \"success\",\n    onClick: handleCluster,\n    disabled: userRole === 'Viewer',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, t('targets.connectHome.connectText'))))))), /*#__PURE__*/React.createElement(BrowseCluster, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Targets;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/Targets/index.tsx"],"names":["Tooltip","Typography","ButtonFilled","React","useTranslation","Scaffold","history","getProjectID","getProjectRole","BrowseCluster","useStyles","Targets","classes","t","projectID","userRole","handleCluster","push","pathname","search","header","tooltip","customTooltip","scheduleBtn"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,mBAApC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,6BAA7C;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,IAAMC,OAAiB,GAAG,SAApBA,OAAoB,GAAM;AAC9B,MAAMC,OAAO,GAAGF,SAAS,EAAzB;;AACA,wBAAcN,cAAc,EAA5B;AAAA,MAAQS,CAAR,mBAAQA,CAAR;;AACA,MAAMC,SAAS,GAAGP,YAAY,EAA9B;AACA,MAAMQ,QAAQ,GAAGP,cAAc,EAA/B;;AAEA,MAAMQ,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BV,IAAAA,OAAO,CAACW,IAAR,CAAa;AACXC,MAAAA,QAAQ,EAAE,iBADC;AAEXC,MAAAA,MAAM,uBAAgBL,SAAhB,0BAAyCC,QAAzC;AAFK,KAAb;AAID,GALD;;AAOA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BP,CAAC,CAAC,0BAAD,CAA3B,CADF,eAEE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAE;AACPQ,MAAAA,OAAO,EAAET,OAAO,CAACU;AADV,KADX;AAIE,IAAA,oBAAoB,MAJtB;AAKE,IAAA,oBAAoB,EAAEP,QAAQ,KAAK,QALrC;AAME,IAAA,SAAS,EAAC,QANZ;AAOE,IAAA,KAAK,EAAC,0BAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACW,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,OAAO,EAAEP,aAFX;AAGE,IAAA,QAAQ,EAAED,QAAQ,KAAK,QAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,CAAC,CAAC,iCAAD,CAAP,CALF,CADF,CATF,CAFF,CADF,CADF,eAyBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADF;AA6BD,CA1CD;;AA2CA,eAAeF,OAAf","sourcesContent":["import { Tooltip, Typography } from '@material-ui/core';\nimport { ButtonFilled } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport BrowseCluster from '../../views/Targets/BrowseCluster';\nimport useStyles from './styles';\n\nconst Targets: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const userRole = getProjectRole();\n\n  const handleCluster = () => {\n    history.push({\n      pathname: '/target-connect',\n      search: `?projectID=${projectID}&projectRole=${userRole}`,\n    });\n  };\n\n  return (\n    <Scaffold>\n      <section className=\"Header section\">\n        <div className={classes.header}>\n          <Typography variant=\"h3\">{t('targets.connectHome.head')}</Typography>\n          <Tooltip\n            classes={{\n              tooltip: classes.customTooltip,\n            }}\n            disableFocusListener\n            disableHoverListener={userRole !== 'Viewer'}\n            placement=\"bottom\"\n            title=\"Insufficient Permissions\"\n          >\n            <div className={classes.scheduleBtn}>\n              <ButtonFilled\n                variant=\"success\"\n                onClick={handleCluster}\n                disabled={userRole === 'Viewer'}\n              >\n                <div>{t('targets.connectHome.connectText')}</div>\n              </ButtonFilled>\n            </div>\n          </Tooltip>\n        </div>\n      </section>\n      <BrowseCluster />\n    </Scaffold>\n  );\n};\nexport default Targets;\n"]},"metadata":{},"sourceType":"module"}