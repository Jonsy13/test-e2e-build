{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Typography}from'@material-ui/core';import{ButtonFilled}from'litmus-ui';import React,{useEffect,useState}from'react';import{DragDropContext,Draggable,Droppable}from'react-beautiful-dnd';import{useTranslation}from'react-i18next';import{useSelector}from'react-redux';import YAML from'yaml';import useActions from'../../../../redux/actions';import*as WorkflowActions from'../../../../redux/actions/workflow';import{reorderSteps}from'./reorder';import useStyles from'./styles';var WorkflowSequence=function WorkflowSequence(_ref){var handleSequenceModal=_ref.handleSequenceModal,getSteps=_ref.getSteps;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var manifest=useSelector(function(state){return state.workflowManifest.manifest;});var workflow=useActions(WorkflowActions);var manifestSteps=YAML.parse(manifest).spec.templates[0].steps;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),steps=_useState2[0],setSteps=_useState2[1];/**\n   * handleStepsChange updates the steps in the main manifest\n   */var handleStepsChange=function handleStepsChange(){var updatedSteps=[];Object.entries(steps).forEach(function(_ref2){var _ref3=_slicedToArray(_ref2,2),value=_ref3[1];if(value.length!==0){updatedSteps.push(value);}});var updatedManifest=YAML.parse(manifest);delete updatedManifest.spec.templates[0].steps;updatedManifest.spec.templates[0].steps=updatedSteps;workflow.setWorkflowManifest({manifest:YAML.stringify(updatedManifest)});handleSequenceModal(false);};/**\n   * useEffect to save the state in StepType format\n   * on the first render\n   */useEffect(function(){var modifiedSteps={};manifestSteps.forEach(function(step,index){modifiedSteps[\"stepname\".concat(index)]=step;});setSteps(modifiedSteps);},[]);getSteps(steps);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DragDropContext,{onDragEnd:function onDragEnd(_ref4){var destination=_ref4.destination,source=_ref4.source;/**\n           * If the item is dropped outside the list\n           */if(!destination){return;}var newSteps=reorderSteps(steps,source,destination);setSteps(newSteps);}},/*#__PURE__*/React.createElement(\"div\",{className:classes.dragdropDiv},Object.entries(steps).map(function(_ref5){var _ref6=_slicedToArray(_ref5,2),key=_ref6[0],value=_ref6[1];return/*#__PURE__*/React.createElement(Droppable,{key:key,droppableId:key,type:\"CARD\",direction:\"horizontal\",isCombineEnabled:false,isDropDisabled:key==='stepname0'},function(dropProvided){return/*#__PURE__*/React.createElement(\"div\",dropProvided.droppableProps,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.droppableDiv,ref:dropProvided.innerRef},value.map(function(step,index){return/*#__PURE__*/React.createElement(Draggable,{key:step.name,draggableId:step.name,index:index,isDragDisabled:key==='stepname0'},function(dragProvided){return/*#__PURE__*/React.createElement(\"div\",Object.assign({ref:dragProvided.innerRef},dragProvided.draggableProps,dragProvided.dragHandleProps),/*#__PURE__*/React.createElement(\"div\",{className:classes.draggableDiv},/*#__PURE__*/React.createElement(\"img\",{className:classes.expImg,src:\"./icons/sequencing-exp.svg\",alt:step.name}),/*#__PURE__*/React.createElement(Typography,{className:classes.expName},step.name)));});}),dropProvided.placeholder))));});}))),/*#__PURE__*/React.createElement(Typography,{className:classes.sequencingHeader},t('customWorkflow.createWorkflow.selectAnExp')),/*#__PURE__*/React.createElement(Typography,{className:classes.sequencingDesc},t('customWorkflow.sequence.dragexp')),/*#__PURE__*/React.createElement(\"div\",{className:classes.buttonDiv},/*#__PURE__*/React.createElement(ButtonFilled,{variant:\"error\",onClick:function onClick(){return handleSequenceModal(false);},className:classes.discard},t('customWorkflow.sequence.discard')),/*#__PURE__*/React.createElement(ButtonFilled,{onClick:handleStepsChange},t('customWorkflow.sequence.saveChanges'))));};export default WorkflowSequence;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/WorkflowSequence/index.tsx"],"names":["Typography","ButtonFilled","React","useEffect","useState","DragDropContext","Draggable","Droppable","useTranslation","useSelector","YAML","useActions","WorkflowActions","reorderSteps","useStyles","WorkflowSequence","handleSequenceModal","getSteps","classes","t","manifest","state","workflowManifest","workflow","manifestSteps","parse","spec","templates","steps","setSteps","handleStepsChange","updatedSteps","Object","entries","forEach","value","length","push","updatedManifest","setWorkflowManifest","stringify","modifiedSteps","step","index","destination","source","newSteps","dragdropDiv","map","key","dropProvided","droppableProps","droppableDiv","innerRef","name","dragProvided","draggableProps","dragHandleProps","draggableDiv","expImg","expName","placeholder","sequencingHeader","sequencingDesc","buttonDiv","discard"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport { ButtonFilled } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport {\n  DragDropContext,\n  Draggable,\n  DraggableProvided,\n  Droppable,\n} from 'react-beautiful-dnd';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport useActions from '../../../../redux/actions';\nimport * as WorkflowActions from '../../../../redux/actions/workflow';\nimport { RootState } from '../../../../redux/reducers';\nimport { reorderSteps } from './reorder';\nimport useStyles from './styles';\n\ninterface ManifestSteps {\n  name: string;\n  template: string;\n}\n\ninterface StepType {\n  [key: string]: ManifestSteps[];\n}\n\ninterface ExperimentSequenceProps {\n  handleSequenceModal: (sequenceState: boolean) => void;\n  getSteps: (steps: StepType) => void;\n}\n\nconst WorkflowSequence: React.FC<ExperimentSequenceProps> = ({\n  handleSequenceModal,\n  getSteps,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const manifest = useSelector(\n    (state: RootState) => state.workflowManifest.manifest\n  );\n  const workflow = useActions(WorkflowActions);\n  const manifestSteps = YAML.parse(manifest).spec.templates[0].steps;\n\n  const [steps, setSteps] = useState<StepType>({});\n\n  /**\n   * handleStepsChange updates the steps in the main manifest\n   */\n  const handleStepsChange = () => {\n    const updatedSteps: Array<ManifestSteps[]> = [];\n    Object.entries(steps).forEach(([, value]) => {\n      if ((value as ManifestSteps[]).length !== 0) {\n        updatedSteps.push(value as ManifestSteps[]);\n      }\n    });\n\n    const updatedManifest = YAML.parse(manifest);\n    delete updatedManifest.spec.templates[0].steps;\n    updatedManifest.spec.templates[0].steps = updatedSteps;\n\n    workflow.setWorkflowManifest({\n      manifest: YAML.stringify(updatedManifest),\n    });\n    handleSequenceModal(false);\n  };\n\n  /**\n   * useEffect to save the state in StepType format\n   * on the first render\n   */\n  useEffect(() => {\n    const modifiedSteps: StepType = {};\n    manifestSteps.forEach((step: any, index: number) => {\n      modifiedSteps[`stepname${index}`] = step;\n    });\n    setSteps(modifiedSteps);\n  }, []);\n\n  getSteps(steps);\n  return (\n    <div>\n      <DragDropContext\n        onDragEnd={({ destination, source }) => {\n          /**\n           * If the item is dropped outside the list\n           */\n          if (!destination) {\n            return;\n          }\n          const newSteps = reorderSteps(steps, source, destination);\n          setSteps(newSteps);\n        }}\n      >\n        <div className={classes.dragdropDiv}>\n          {Object.entries(steps).map(([key, value]) => {\n            return (\n              <Droppable\n                key={key}\n                droppableId={key}\n                type=\"CARD\"\n                direction=\"horizontal\"\n                isCombineEnabled={false}\n                isDropDisabled={key === 'stepname0'}\n              >\n                {(dropProvided) => (\n                  <div {...dropProvided.droppableProps}>\n                    <div>\n                      <div>\n                        <div\n                          className={classes.droppableDiv}\n                          ref={dropProvided.innerRef}\n                        >\n                          {(value as ManifestSteps[]).map(\n                            (step: ManifestSteps, index: number) => {\n                              return (\n                                <Draggable\n                                  key={step.name}\n                                  draggableId={step.name}\n                                  index={index}\n                                  isDragDisabled={key === 'stepname0'}\n                                >\n                                  {(dragProvided: DraggableProvided) => (\n                                    <div\n                                      ref={dragProvided.innerRef}\n                                      {...dragProvided.draggableProps}\n                                      {...dragProvided.dragHandleProps}\n                                    >\n                                      <div className={classes.draggableDiv}>\n                                        <img\n                                          className={classes.expImg}\n                                          src=\"./icons/sequencing-exp.svg\"\n                                          alt={step.name}\n                                        />\n                                        <Typography className={classes.expName}>\n                                          {step.name}\n                                        </Typography>\n                                      </div>\n                                    </div>\n                                  )}\n                                </Draggable>\n                              );\n                            }\n                          )}\n                          {dropProvided.placeholder}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </Droppable>\n            );\n          })}\n        </div>\n      </DragDropContext>\n      <Typography className={classes.sequencingHeader}>\n        {t('customWorkflow.createWorkflow.selectAnExp')}\n      </Typography>\n      <Typography className={classes.sequencingDesc}>\n        {t('customWorkflow.sequence.dragexp')}\n      </Typography>\n      <div className={classes.buttonDiv}>\n        <ButtonFilled\n          variant=\"error\"\n          onClick={() => handleSequenceModal(false)}\n          className={classes.discard}\n        >\n          {t('customWorkflow.sequence.discard')}\n        </ButtonFilled>\n        <ButtonFilled onClick={handleStepsChange}>\n          {t('customWorkflow.sequence.saveChanges')}\n        </ButtonFilled>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkflowSequence;\n"]},"metadata":{},"sourceType":"module"}