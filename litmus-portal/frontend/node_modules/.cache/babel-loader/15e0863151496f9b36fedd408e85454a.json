{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"value\", \"index\"];\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/TeamingTab/Invitation/index.tsx\";\n\nimport { useQuery } from '@apollo/client';\nimport { Box, Paper, Tab, Tabs, useTheme } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LIST_PROJECTS } from '../../../../graphql';\nimport { getUserId } from '../../../../utils/auth';\nimport AcceptedInvitations from './AcceptedInvitations';\nimport ReceivedInvitations from './ReceivedInvitations';\nimport useStyles from './styles';\n\n// TabPanel ise used to implement the functioning of tabs\nvar TabPanel = function TabPanel(_ref) {\n  var children = _ref.children,\n      value = _ref.value,\n      index = _ref.index,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"simple-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"simple-tab-\".concat(index)\n  }, other, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 27\n    }\n  }, children));\n}; // tabProps returns 'id' and 'aria-control' props of Tab\n\n\nfunction tabProps(index) {\n  return {\n    id: \"simple-tab-\".concat(index),\n    'aria-controls': \"simple-tabpanel-\".concat(index)\n  };\n} // NewUserModal displays a modal on creating a new user\n\n\nvar Invitation = function Invitation() {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeTab = _React$useState2[0],\n      setActiveTab = _React$useState2[1];\n\n  var handleChange = function handleChange(event, actTab) {\n    setActiveTab(actTab);\n  };\n\n  var userID = getUserId();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      projectOtherCount = _useState2[0],\n      setProjectOtherCount = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      invitationsCount = _useState4[0],\n      setInvitationCount = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      projects = _useState6[0],\n      setProjects = _useState6[1];\n\n  var _useQuery = useQuery(LIST_PROJECTS, {\n    onCompleted: function onCompleted() {\n      if (dataProject === null || dataProject === void 0 ? void 0 : dataProject.listProjects) {\n        setProjects(dataProject === null || dataProject === void 0 ? void 0 : dataProject.listProjects);\n      }\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      dataProject = _useQuery.data;\n\n  useEffect(function () {\n    var otherCount = 0;\n    var inviteCount = 0;\n    projects.map(function (project) {\n      return project.members.forEach(function (member) {\n        if (member.user_id === userID && member.invitation === 'Pending') {\n          inviteCount++;\n        } else if (member.user_id === userID && member.role !== 'Owner' && member.invitation === 'Accepted') {\n          otherCount++;\n        }\n      });\n    });\n    setInvitationCount(inviteCount);\n    setProjectOtherCount(otherCount);\n  }, [projects, dataProject]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    elevation: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: activeTab,\n    onChange: handleChange,\n    TabIndicatorProps: {\n      style: {\n        backgroundColor: theme.palette.primary.main\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n    \"data-cy\": \"activeTab\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: activeTab === 0 ? classes.active : classes.inActive,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.invitationCount,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, projectOtherCount), ' ', t('settings.teamingTab.active'))\n  }, tabProps(0), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    \"data-cy\": \"receivedTab\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      className: activeTab === 1 ? classes.active : classes.inActive,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.invitationCount,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, invitationsCount), ' ', t('settings.teamingTab.invitations'))\n  }, tabProps(1), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: activeTab,\n    index: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AcceptedInvitations, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: activeTab,\n    index: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReceivedInvitations, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Invitation;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/TeamingTab/Invitation/index.tsx"],"names":["useQuery","Box","Paper","Tab","Tabs","useTheme","React","useEffect","useState","useTranslation","LIST_PROJECTS","getUserId","AcceptedInvitations","ReceivedInvitations","useStyles","TabPanel","children","value","index","other","tabProps","id","Invitation","classes","theme","t","activeTab","setActiveTab","handleChange","event","actTab","userID","projectOtherCount","setProjectOtherCount","invitationsCount","setInvitationCount","projects","setProjects","onCompleted","dataProject","listProjects","fetchPolicy","data","otherCount","inviteCount","map","project","members","forEach","member","user_id","invitation","role","root","style","backgroundColor","palette","primary","main","active","inActive","invitationCount"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Box, Paper, Tab, Tabs, useTheme } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LIST_PROJECTS } from '../../../../graphql';\nimport { Member, Project, Projects } from '../../../../models/graphql/user';\nimport { getUserId } from '../../../../utils/auth';\nimport AcceptedInvitations from './AcceptedInvitations';\nimport ReceivedInvitations from './ReceivedInvitations';\nimport useStyles from './styles';\n\ninterface TabPanelProps {\n  index: any;\n  value: any;\n}\n\n// TabPanel ise used to implement the functioning of tabs\nconst TabPanel: React.FC<TabPanelProps> = ({\n  children,\n  value,\n  index,\n  ...other\n}) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n};\n\n// tabProps returns 'id' and 'aria-control' props of Tab\nfunction tabProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\n// NewUserModal displays a modal on creating a new user\nconst Invitation: React.FC = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [activeTab, setActiveTab] = React.useState(0);\n  const handleChange = (event: React.ChangeEvent<{}>, actTab: number) => {\n    setActiveTab(actTab);\n  };\n\n  const userID = getUserId();\n\n  const [projectOtherCount, setProjectOtherCount] = useState<number>(0);\n  const [invitationsCount, setInvitationCount] = useState<number>(0);\n  const [projects, setProjects] = useState<Project[]>([]);\n  const { data: dataProject } = useQuery<Projects>(LIST_PROJECTS, {\n    onCompleted: () => {\n      if (dataProject?.listProjects) {\n        setProjects(dataProject?.listProjects);\n      }\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n  useEffect(() => {\n    let otherCount = 0;\n    let inviteCount = 0;\n    projects.map((project) => {\n      return project.members.forEach((member: Member) => {\n        if (member.user_id === userID && member.invitation === 'Pending') {\n          inviteCount++;\n        } else if (\n          member.user_id === userID &&\n          member.role !== 'Owner' &&\n          member.invitation === 'Accepted'\n        ) {\n          otherCount++;\n        }\n      });\n    });\n    setInvitationCount(inviteCount);\n    setProjectOtherCount(otherCount);\n  }, [projects, dataProject]);\n  return (\n    <div>\n      <Paper className={classes.root} elevation={0}>\n        <Tabs\n          value={activeTab}\n          onChange={handleChange}\n          TabIndicatorProps={{\n            style: {\n              backgroundColor: theme.palette.primary.main,\n            },\n          }}\n        >\n          <Tab\n            data-cy=\"activeTab\"\n            label={\n              <span\n                className={activeTab === 0 ? classes.active : classes.inActive}\n              >\n                <span className={classes.invitationCount}>\n                  {projectOtherCount}\n                </span>{' '}\n                {t('settings.teamingTab.active')}\n              </span>\n            }\n            {...tabProps(0)}\n          />\n          <Tab\n            data-cy=\"receivedTab\"\n            label={\n              <span\n                className={activeTab === 1 ? classes.active : classes.inActive}\n              >\n                <span className={classes.invitationCount}>\n                  {invitationsCount}\n                </span>{' '}\n                {t('settings.teamingTab.invitations')}\n              </span>\n            }\n            {...tabProps(1)}\n          />\n        </Tabs>\n      </Paper>\n      <TabPanel value={activeTab} index={0}>\n        <AcceptedInvitations />\n      </TabPanel>\n      <TabPanel value={activeTab} index={1}>\n        <ReceivedInvitations />\n      </TabPanel>\n    </div>\n  );\n};\nexport default Invitation;\n"]},"metadata":{},"sourceType":"module"}