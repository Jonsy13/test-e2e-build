{"ast":null,"code":"import _objectSpread from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/TuneWorkflowSteps/TargetApplication.tsx\";\n\nimport { Button, Checkbox, FormControl, FormControlLabel, InputLabel, MenuItem, Select, Typography, useTheme } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { InputField } from 'litmus-ui';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport YAML from 'yaml';\nimport { useSelector } from 'react-redux';\nimport { useSubscription } from '@apollo/client';\nimport { Autocomplete } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\nimport * as WorkflowActions from '../../../../redux/actions/workflow';\nimport useActions from '../../../../redux/actions';\nimport { KUBE_OBJ } from '../../../../graphql';\nimport { constants } from '../../../../constants';\nimport { gvrData } from './data';\n\nvar TargetApplication = function TargetApplication(_ref) {\n  var _engineManifest$spec$, _engineManifest$spec$2, _engineManifest$spec$3, _engineManifest$spec$4, _engineManifest$spec$5, _engineManifest$spec$6, _engineManifest$spec$7, _engineManifest$spec$8, _engineManifest$spec$9, _engineManifest$spec$10;\n\n  var engineIndex = _ref.engineIndex,\n      gotoStep = _ref.gotoStep;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n  /**\n   * State Variables to manage theme changes\n   */\n\n\n  var classes = useStyles();\n  var theme = useTheme();\n  /**\n   * State variable for redux\n   */\n\n  var workflow = useActions(WorkflowActions);\n  var manifest = useSelector(function (state) {\n    return state.workflowManifest;\n  });\n  var workflowData = useSelector(function (state) {\n    return state.workflowData;\n  });\n  var clusterid = workflowData.clusterid;\n  var engineManifest = YAML.parse(manifest.engineYAML);\n  /**\n   * State variable for editing the ChaosEngine Configuration\n   */\n\n  var _useState = useState({\n    appns: (_engineManifest$spec$ = (_engineManifest$spec$2 = engineManifest.spec.appinfo) === null || _engineManifest$spec$2 === void 0 ? void 0 : _engineManifest$spec$2.appns) !== null && _engineManifest$spec$ !== void 0 ? _engineManifest$spec$ : '',\n    applabel: (_engineManifest$spec$3 = (_engineManifest$spec$4 = engineManifest.spec.appinfo) === null || _engineManifest$spec$4 === void 0 ? void 0 : _engineManifest$spec$4.applabel) !== null && _engineManifest$spec$3 !== void 0 ? _engineManifest$spec$3 : '',\n    appkind: (_engineManifest$spec$5 = (_engineManifest$spec$6 = engineManifest.spec.appinfo) === null || _engineManifest$spec$6 === void 0 ? void 0 : _engineManifest$spec$6.appkind) !== null && _engineManifest$spec$5 !== void 0 ? _engineManifest$spec$5 : '',\n    annotationCheck: typeof engineManifest.spec.annotationCheck === 'boolean' ? engineManifest.spec.annotationCheck : engineManifest.spec.annotationCheck === 'true',\n    jobCleanUpPolicy: (_engineManifest$spec$7 = engineManifest.spec.jobCleanUpPolicy) !== null && _engineManifest$spec$7 !== void 0 ? _engineManifest$spec$7 : 'retain'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      targetApp = _useState2[0],\n      setTargetApp = _useState2[1];\n\n  var _useState3 = useState(!!engineManifest.spec.experiments[0].spec.components['nodeSelectors']),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addNodeSelector = _useState4[0],\n      setAddNodeSelector = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nodeSelector = _useState6[0],\n      setNodeSelector = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      appinfoData = _useState8[0],\n      setAppInfoData = _useState8[1];\n\n  var _useState9 = useState({\n    group: '',\n    version: '',\n    resource: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      GVRObj = _useState10[0],\n      setGVRObj = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      appLabel = _useState12[0],\n      setAppLabel = _useState12[1];\n  /**\n   * Function for handling AnnotationCheck toggle button\n   */\n\n\n  var handleAlignment = function handleAlignment(event, newAlignment) {\n    if (newAlignment !== null) {\n      setTargetApp(_objectSpread(_objectSpread({}, targetApp), {}, {\n        annotationCheck: newAlignment\n      }));\n      engineManifest.spec.annotationCheck = newAlignment.toString();\n    }\n  };\n  /**\n   * handleMainYAMLChange handles the change in configuration\n   * of the Chaos Engine accroding to the index of the main manifest\n   */\n\n\n  var handleMainYAMLChange = function handleMainYAMLChange() {\n    engineManifest.spec.annotationCheck = targetApp.annotationCheck.toString();\n\n    if (engineManifest.spec.appinfo !== undefined) {\n      engineManifest.spec.appinfo.appns = targetApp.appns;\n      engineManifest.spec.appinfo.applabel = targetApp.applabel;\n      engineManifest.spec.appinfo.appkind = targetApp.appkind;\n    }\n\n    if (typeof engineManifest.metadata.namespace === 'object') {\n      // Removes any whitespace in '{{workflow.parameters.adminModeNamespace}}'\n      var namespace = Object.keys(engineManifest.metadata.namespace)[0].replace(/\\s/g, '');\n      engineManifest.metadata.namespace = \"{\".concat(namespace, \"}\");\n    }\n    /**\n     * If addNodeSelector is true, the value of nodeselector is added\n     * else if the addNodeSelector is false and it exists, the value is removed\n     */\n\n\n    if (addNodeSelector) {\n      engineManifest.spec.experiments[0].spec.components['nodeSelectors'] = {\n        'kubernetes.io/hostname': nodeSelector\n      };\n    } else if (!addNodeSelector && engineManifest.spec.experiments[0].spec.components['nodeSelectors']) {\n      delete engineManifest.spec.experiments[0].spec.components['nodeSelectors'];\n    }\n\n    engineManifest.spec.jobCleanUpPolicy = targetApp.jobCleanUpPolicy;\n    var mainManifest = YAML.parse(manifest.manifest);\n    mainManifest.spec.templates[engineIndex].inputs.artifacts[0].raw.data = YAML.stringify(engineManifest);\n    workflow.setWorkflowManifest({\n      engineYAML: YAML.stringify(engineManifest)\n    });\n    return gotoStep(2);\n  };\n  /**\n   * GraphQL subscription to fetch the KubeObjData from the server\n   */\n\n\n  var _useSubscription = useSubscription(KUBE_OBJ, {\n    variables: {\n      data: {\n        cluster_id: clusterid,\n        object_type: 'kubeobject',\n        kube_obj_request: {\n          group: GVRObj.group,\n          version: GVRObj.version,\n          resource: GVRObj.resource\n        }\n      }\n    },\n    fetchPolicy: 'network-only'\n  }),\n      data = _useSubscription.data;\n  /**\n   * UseEffect to filter the labels according to the namespace provided\n   */\n\n\n  useEffect(function () {\n    if (data !== undefined) {\n      var appinfo = [];\n\n      try {\n        /**\n         * Parse the kubeObject data\n         */\n        var kubeData = JSON.parse(data.getKubeObject.kube_obj);\n        kubeData.forEach(function (obj) {\n          var applabels = [];\n\n          if (obj.data != null) {\n            obj.data.forEach(function (objData) {\n              if (objData.labels != null) {\n                /**\n                 * Get the labels from the key value pairs\n                 * example - app=mongo\n                 */\n                Object.entries(objData.labels).map(function (_ref2) {\n                  var _ref3 = _slicedToArray(_ref2, 2),\n                      key = _ref3[0],\n                      value = _ref3[1];\n\n                  return applabels.push(\"\".concat(key, \"=\").concat(value));\n                });\n              }\n            });\n          }\n          /**\n           * Push these labels corresponding to their namespaces\n           */\n\n\n          appinfo.push({\n            namespace: obj.namespace,\n            appLabel: applabels\n          });\n        });\n      } catch (err) {\n        console.error(err);\n        appinfo.push({\n          namespace: '',\n          appLabel: ['']\n        });\n      }\n\n      setAppInfoData(appinfo);\n      /**\n       * Filter the labels according to their namespace\n       */\n\n      if (appinfoData !== undefined) {\n        var filteredAppLabel = [];\n        appinfo.forEach(function (appinfos) {\n          if (appinfos.namespace === targetApp.appns) {\n            appinfos.appLabel.forEach(function (label) {\n              return filteredAppLabel.push(label);\n            });\n          }\n        });\n\n        if (filteredAppLabel.length > 0) {\n          setAppLabel(filteredAppLabel);\n        } else {\n          setAppLabel(['No resource available']);\n        }\n      }\n    }\n  }, [data, targetApp.appns]);\n  /**\n   * This useEffect is called on the first render to fetch the\n   * kubeObj data and populate it in the AutoComplete textfields\n   */\n\n  useEffect(function () {\n    gvrData.forEach(function (gvr) {\n      if (gvr.resource === targetApp.appkind) setGVRObj({\n        group: gvr.group,\n        version: gvr.version,\n        resource: \"\".concat(gvr.resource, \"s\")\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.annotationInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }, t('createWorkflow.tuneWorkflow.verticalStepper.annotationInfo')), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexDisplay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.annotation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, t('createWorkflow.tuneWorkflow.verticalStepper.annotation')), /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: targetApp.annotationCheck,\n    exclusive: true,\n    onChange: handleAlignment,\n    \"aria-label\": \"text alignment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    className: classes.annotationToggleBtn,\n    style: {\n      backgroundColor: targetApp.annotationCheck ? theme.palette.success.main : theme.palette.disabledBackground\n    },\n    value: true,\n    \"aria-label\": \"left aligned\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: targetApp.annotationCheck ? theme.palette.common.white : theme.palette.text.disabled\n    },\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.verticalStepper.true'))), /*#__PURE__*/React.createElement(ToggleButton, {\n    style: {\n      backgroundColor: !targetApp.annotationCheck ? theme.palette.error.main : theme.palette.disabledBackground\n    },\n    className: classes.annotationToggleBtn,\n    value: false,\n    \"aria-label\": \"centered\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: !targetApp.annotationCheck ? theme.palette.common.white : theme.palette.text.disabled,\n      textTransform: 'none'\n    },\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.verticalStepper.false'))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.annotationDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, t('createWorkflow.tuneWorkflow.verticalStepper.annotationDesc')), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(React.Fragment, null, ((_engineManifest$spec$8 = engineManifest.spec.appinfo) === null || _engineManifest$spec$8 === void 0 ? void 0 : _engineManifest$spec$8.appns) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: appinfoData.map(function (option) {\n      return option.namespace;\n    }),\n    freeSolo: true,\n    value: targetApp.appns,\n    defaultValue: targetApp.appns,\n    className: classes.autoCompleteText,\n    onChange: function onChange(_, v) {\n      setTargetApp(_objectSpread(_objectSpread({}, targetApp), {}, {\n        appns: v\n      }));\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(InputField, Object.assign({\n        onChange: function onChange(event) {\n          setTargetApp(_objectSpread(_objectSpread({}, targetApp), {}, {\n            appns: event.target.value\n          }));\n        }\n      }, params, {\n        label: constants.appns,\n        helperText: appinfoData.filter(function (data) {\n          return data.namespace === targetApp.appns;\n        }).length === 0 ? /*#__PURE__*/React.createElement(Typography, {\n          color: \"error\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }\n        }, t('createWorkflow.tuneWorkflow.verticalStepper.nsError')) : '',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 19\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 15\n    }\n  })), ((_engineManifest$spec$9 = engineManifest.spec.appinfo) === null || _engineManifest$spec$9 === void 0 ? void 0 : _engineManifest$spec$9.appkind) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"appKind\",\n    className: classes.appKind,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.tuneWorkflow.verticalStepper.appkind')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"appKind\",\n    value: targetApp.appkind,\n    onChange: function onChange(event) {\n      setTargetApp(_objectSpread(_objectSpread({}, targetApp), {}, {\n        appkind: event.target.value\n      }));\n      gvrData.forEach(function (gvr) {\n        if (gvr.resource === event.target.value) {\n          setGVRObj({\n            group: gvr.group,\n            version: gvr.version,\n            resource: \"\".concat(gvr.resource, \"s\")\n          });\n        }\n      });\n    },\n    label: constants.appKind,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 19\n    }\n  }), gvrData.map(function (gvr) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: gvr.resource,\n      value: gvr.resource,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 23\n      }\n    }, gvr.resource);\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 15\n    }\n  })), ((_engineManifest$spec$10 = engineManifest.spec.appinfo) === null || _engineManifest$spec$10 === void 0 ? void 0 : _engineManifest$spec$10.applabel) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: appLabel,\n    freeSolo: true,\n    value: targetApp.applabel,\n    defaultValue: targetApp.applabel,\n    className: classes.autoCompleteText,\n    onChange: function onChange(_, v) {\n      setTargetApp(_objectSpread(_objectSpread({}, targetApp), {}, {\n        applabel: v\n      }));\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(InputField, Object.assign({\n        onChange: function onChange(event) {\n          setTargetApp(_objectSpread(_objectSpread({}, targetApp), {}, {\n            applabel: event.target.value\n          }));\n        },\n        helperText: appLabel.filter(function (data) {\n          return data === targetApp.applabel;\n        }).length === 0 ? /*#__PURE__*/React.createElement(Typography, {\n          color: \"error\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 25\n          }\n        }, t('createWorkflow.tuneWorkflow.verticalStepper.labelError')) : ''\n      }, params, {\n        label: constants.appLabel,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 19\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(InputField, {\n    label: constants.jobCleanUp,\n    width: \"auto\",\n    value: targetApp.jobCleanUpPolicy,\n    onChange: function onChange(event) {\n      setTargetApp(_objectSpread(_objectSpread({}, targetApp), {}, {\n        jobCleanUpPolicy: event.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: addNodeSelector,\n      onChange: function onChange(event) {\n        return setAddNodeSelector(event.target.checked);\n      },\n      className: classes.checkBoxDefault,\n      name: \"checkedB\",\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 15\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      className: classes.checkBoxText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 15\n      }\n    }, t('createWorkflow.tuneWorkflow.verticalStepper.nodeselector')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 11\n    }\n  }), addNodeSelector && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexDisplay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.nodeSelectorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.verticalStepper.selector')), /*#__PURE__*/React.createElement(InputField, {\n    label: constants.nodeselector,\n    width: \"50%\",\n    value: nodeSelector,\n    onChange: function onChange(event) {\n      setNodeSelector(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return gotoStep(0);\n    },\n    className: classes.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 9\n    }\n  }, t('workflowStepper.back')), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return handleMainYAMLChange();\n    },\n    className: classes.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }\n  }, t('workflowStepper.next'))));\n};\n\nexport default TargetApplication;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/TuneWorkflowSteps/TargetApplication.tsx"],"names":["Button","Checkbox","FormControl","FormControlLabel","InputLabel","MenuItem","Select","Typography","useTheme","React","useEffect","useState","InputField","ToggleButton","ToggleButtonGroup","YAML","useSelector","useSubscription","Autocomplete","useTranslation","useStyles","WorkflowActions","useActions","KUBE_OBJ","constants","gvrData","TargetApplication","engineIndex","gotoStep","t","classes","theme","workflow","manifest","state","workflowManifest","workflowData","clusterid","engineManifest","parse","engineYAML","appns","spec","appinfo","applabel","appkind","annotationCheck","jobCleanUpPolicy","targetApp","setTargetApp","experiments","components","addNodeSelector","setAddNodeSelector","nodeSelector","setNodeSelector","appinfoData","setAppInfoData","group","version","resource","GVRObj","setGVRObj","appLabel","setAppLabel","handleAlignment","event","newAlignment","toString","handleMainYAMLChange","undefined","metadata","namespace","Object","keys","replace","mainManifest","templates","inputs","artifacts","raw","data","stringify","setWorkflowManifest","variables","cluster_id","object_type","kube_obj_request","fetchPolicy","kubeData","JSON","getKubeObject","kube_obj","forEach","obj","applabels","objData","labels","entries","map","key","value","push","err","console","error","filteredAppLabel","appinfos","label","length","gvr","annotationInfo","inputDiv","flexDisplay","annotation","annotationToggleBtn","backgroundColor","palette","success","main","disabledBackground","color","common","white","text","disabled","textTransform","annotationDesc","option","autoCompleteText","_","v","params","target","filter","appKind","jobCleanUp","checked","checkBoxDefault","checkBoxText","nodeSelectorText","nodeselector","button"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { InputField } from 'litmus-ui';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport YAML from 'yaml';\nimport { useSelector } from 'react-redux';\nimport { useSubscription } from '@apollo/client';\nimport { Autocomplete } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\nimport * as WorkflowActions from '../../../../redux/actions/workflow';\nimport {\n  WorkflowData,\n  WorkflowManifest,\n} from '../../../../models/redux/workflow';\nimport { RootState } from '../../../../redux/reducers';\nimport useActions from '../../../../redux/actions';\nimport {\n  GVRRequest,\n  KubeObjData,\n  KubeObjRequest,\n  KubeObjResource,\n  KubeObjResponse,\n} from '../../../../models/graphql/createWorkflowData';\nimport { KUBE_OBJ } from '../../../../graphql';\nimport { constants } from '../../../../constants';\nimport { gvrData } from './data';\n\ninterface AppInfoData {\n  namespace: string;\n  appLabel: string[];\n}\n\ninterface TargetApplicationData {\n  appns: string | undefined;\n  appkind: string;\n  applabel: string;\n  annotationCheck: boolean;\n  jobCleanUpPolicy: string;\n}\n\ninterface TargetApplicationProp {\n  engineIndex: number;\n  gotoStep: (page: number) => void;\n}\n\nconst TargetApplication: React.FC<TargetApplicationProp> = ({\n  engineIndex,\n  gotoStep,\n}) => {\n  const { t } = useTranslation();\n  /**\n   * State Variables to manage theme changes\n   */\n  const classes = useStyles();\n  const theme = useTheme();\n\n  /**\n   * State variable for redux\n   */\n  const workflow = useActions(WorkflowActions);\n  const manifest: WorkflowManifest = useSelector(\n    (state: RootState) => state.workflowManifest\n  );\n  const workflowData: WorkflowData = useSelector(\n    (state: RootState) => state.workflowData\n  );\n  const { clusterid } = workflowData;\n  const engineManifest = YAML.parse(manifest.engineYAML);\n\n  /**\n   * State variable for editing the ChaosEngine Configuration\n   */\n  const [targetApp, setTargetApp] = useState<TargetApplicationData>({\n    appns: engineManifest.spec.appinfo?.appns ?? '',\n    applabel: engineManifest.spec.appinfo?.applabel ?? '',\n    appkind: engineManifest.spec.appinfo?.appkind ?? '',\n    annotationCheck:\n      typeof engineManifest.spec.annotationCheck === 'boolean'\n        ? engineManifest.spec.annotationCheck\n        : engineManifest.spec.annotationCheck === 'true',\n    jobCleanUpPolicy: engineManifest.spec.jobCleanUpPolicy ?? 'retain',\n  });\n  const [addNodeSelector, setAddNodeSelector] = useState<boolean>(\n    !!engineManifest.spec.experiments[0].spec.components['nodeSelectors']\n  );\n  const [nodeSelector, setNodeSelector] = useState('');\n  const [appinfoData, setAppInfoData] = useState<AppInfoData[]>([]);\n  const [GVRObj, setGVRObj] = useState<GVRRequest>({\n    group: '',\n    version: '',\n    resource: '',\n  });\n  const [appLabel, setAppLabel] = useState<string[]>([]);\n\n  /**\n   * Function for handling AnnotationCheck toggle button\n   */\n  const handleAlignment = (\n    event: React.MouseEvent<HTMLElement>,\n    newAlignment: boolean\n  ) => {\n    if (newAlignment !== null) {\n      setTargetApp({ ...targetApp, annotationCheck: newAlignment });\n      engineManifest.spec.annotationCheck = newAlignment.toString();\n    }\n  };\n\n  /**\n   * handleMainYAMLChange handles the change in configuration\n   * of the Chaos Engine accroding to the index of the main manifest\n   */\n  const handleMainYAMLChange = () => {\n    engineManifest.spec.annotationCheck = targetApp.annotationCheck.toString();\n    if (engineManifest.spec.appinfo !== undefined) {\n      engineManifest.spec.appinfo.appns = targetApp.appns;\n      engineManifest.spec.appinfo.applabel = targetApp.applabel;\n      engineManifest.spec.appinfo.appkind = targetApp.appkind;\n    }\n    if (typeof engineManifest.metadata.namespace === 'object') {\n      // Removes any whitespace in '{{workflow.parameters.adminModeNamespace}}'\n      const namespace = Object.keys(\n        engineManifest.metadata.namespace\n      )[0].replace(/\\s/g, '');\n      engineManifest.metadata.namespace = `{${namespace}}`;\n    }\n    /**\n     * If addNodeSelector is true, the value of nodeselector is added\n     * else if the addNodeSelector is false and it exists, the value is removed\n     */\n    if (addNodeSelector) {\n      engineManifest.spec.experiments[0].spec.components['nodeSelectors'] = {\n        'kubernetes.io/hostname': nodeSelector,\n      };\n    } else if (\n      !addNodeSelector &&\n      engineManifest.spec.experiments[0].spec.components['nodeSelectors']\n    ) {\n      delete engineManifest.spec.experiments[0].spec.components[\n        'nodeSelectors'\n      ];\n    }\n    engineManifest.spec.jobCleanUpPolicy = targetApp.jobCleanUpPolicy;\n    const mainManifest = YAML.parse(manifest.manifest);\n    mainManifest.spec.templates[engineIndex].inputs.artifacts[0].raw.data =\n      YAML.stringify(engineManifest);\n    workflow.setWorkflowManifest({\n      engineYAML: YAML.stringify(engineManifest),\n    });\n    return gotoStep(2);\n  };\n\n  /**\n   * GraphQL subscription to fetch the KubeObjData from the server\n   */\n  const { data } = useSubscription<KubeObjResponse, KubeObjRequest>(KUBE_OBJ, {\n    variables: {\n      data: {\n        cluster_id: clusterid,\n        object_type: 'kubeobject',\n        kube_obj_request: {\n          group: GVRObj.group,\n          version: GVRObj.version,\n          resource: GVRObj.resource,\n        },\n      },\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  /**\n   * UseEffect to filter the labels according to the namespace provided\n   */\n  useEffect(() => {\n    if (data !== undefined) {\n      const appinfo: AppInfoData[] = [];\n      try {\n        /**\n         * Parse the kubeObject data\n         */\n        const kubeData: KubeObjData[] = JSON.parse(data.getKubeObject.kube_obj);\n        kubeData.forEach((obj: KubeObjData) => {\n          const applabels: string[] = [];\n          if (obj.data != null) {\n            obj.data.forEach((objData: KubeObjResource) => {\n              if (objData.labels != null) {\n                /**\n                 * Get the labels from the key value pairs\n                 * example - app=mongo\n                 */\n                Object.entries(objData.labels).map(([key, value]) =>\n                  applabels.push(`${key}=${value}`)\n                );\n              }\n            });\n          }\n          /**\n           * Push these labels corresponding to their namespaces\n           */\n          appinfo.push({\n            namespace: obj.namespace,\n            appLabel: applabels,\n          });\n        });\n      } catch (err) {\n        console.error(err);\n        appinfo.push({\n          namespace: '',\n          appLabel: [''],\n        });\n      }\n      setAppInfoData(appinfo);\n\n      /**\n       * Filter the labels according to their namespace\n       */\n      if (appinfoData !== undefined) {\n        const filteredAppLabel: string[] = [];\n        appinfo.forEach((appinfos) => {\n          if (appinfos.namespace === targetApp.appns) {\n            appinfos.appLabel.forEach((label) => filteredAppLabel.push(label));\n          }\n        });\n        if (filteredAppLabel.length > 0) {\n          setAppLabel(filteredAppLabel);\n        } else {\n          setAppLabel(['No resource available']);\n        }\n      }\n    }\n  }, [data, targetApp.appns]);\n  /**\n   * This useEffect is called on the first render to fetch the\n   * kubeObj data and populate it in the AutoComplete textfields\n   */\n  useEffect(() => {\n    gvrData.forEach((gvr) => {\n      if (gvr.resource === targetApp.appkind)\n        setGVRObj({\n          group: gvr.group,\n          version: gvr.version,\n          resource: `${gvr.resource}s`,\n        });\n    });\n  }, []);\n\n  return (\n    <div>\n      <Typography className={classes.annotationInfo}>\n        {t('createWorkflow.tuneWorkflow.verticalStepper.annotationInfo')}\n      </Typography>\n      <br />\n      <div className={classes.inputDiv}>\n        {/* Annotation Check  */}\n        <div className={classes.flexDisplay}>\n          <Typography className={classes.annotation}>\n            {t('createWorkflow.tuneWorkflow.verticalStepper.annotation')}\n          </Typography>\n          <ToggleButtonGroup\n            value={targetApp.annotationCheck}\n            exclusive\n            onChange={handleAlignment}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton\n              className={classes.annotationToggleBtn}\n              style={{\n                backgroundColor: targetApp.annotationCheck\n                  ? theme.palette.success.main\n                  : theme.palette.disabledBackground,\n              }}\n              value\n              aria-label=\"left aligned\"\n            >\n              <Typography\n                style={{\n                  color: targetApp.annotationCheck\n                    ? theme.palette.common.white\n                    : theme.palette.text.disabled,\n                }}\n                className={classes.text}\n              >\n                {t('createWorkflow.tuneWorkflow.verticalStepper.true')}\n              </Typography>\n            </ToggleButton>\n            <ToggleButton\n              style={{\n                backgroundColor: !targetApp.annotationCheck\n                  ? theme.palette.error.main\n                  : theme.palette.disabledBackground,\n              }}\n              className={classes.annotationToggleBtn}\n              value={false}\n              aria-label=\"centered\"\n            >\n              <Typography\n                style={{\n                  color: !targetApp.annotationCheck\n                    ? theme.palette.common.white\n                    : theme.palette.text.disabled,\n                  textTransform: 'none',\n                }}\n                className={classes.text}\n              >\n                {t('createWorkflow.tuneWorkflow.verticalStepper.false')}\n              </Typography>\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n        <br />\n        <Typography className={classes.annotationDesc}>\n          {t('createWorkflow.tuneWorkflow.verticalStepper.annotationDesc')}\n        </Typography>\n        <br />\n        <>\n          {/* AutoComplete textfield for Namespace */}\n          {engineManifest.spec.appinfo?.appns && (\n            <>\n              <Autocomplete\n                id=\"combo-box-demo\"\n                options={appinfoData.map((option) => option.namespace)}\n                freeSolo\n                value={targetApp.appns}\n                defaultValue={targetApp.appns}\n                className={classes.autoCompleteText}\n                onChange={(_, v: any) => {\n                  setTargetApp({\n                    ...targetApp,\n                    appns: v,\n                  });\n                }}\n                renderInput={(params) => (\n                  <InputField\n                    onChange={(event) => {\n                      setTargetApp({\n                        ...targetApp,\n                        appns: event.target.value,\n                      });\n                    }}\n                    {...params}\n                    label={constants.appns}\n                    helperText={\n                      appinfoData.filter(\n                        (data) => data.namespace === targetApp.appns\n                      ).length === 0 ? (\n                        <Typography color=\"error\">\n                          {t(\n                            'createWorkflow.tuneWorkflow.verticalStepper.nsError'\n                          )}\n                        </Typography>\n                      ) : (\n                        ''\n                      )\n                    }\n                  />\n                )}\n              />\n              <br />\n            </>\n          )}\n\n          {/* AppKind MenuList */}\n          {engineManifest.spec.appinfo?.appkind && (\n            <>\n              <FormControl variant=\"outlined\">\n                <InputLabel id=\"appKind\" className={classes.appKind}>\n                  {t('createWorkflow.tuneWorkflow.verticalStepper.appkind')}\n                </InputLabel>\n                <Select\n                  labelId=\"appKind\"\n                  value={targetApp.appkind}\n                  onChange={(event) => {\n                    setTargetApp({\n                      ...targetApp,\n                      appkind: event.target.value as string,\n                    });\n                    gvrData.forEach((gvr) => {\n                      if (gvr.resource === (event.target.value as string)) {\n                        setGVRObj({\n                          group: gvr.group,\n                          version: gvr.version,\n                          resource: `${gvr.resource}s`,\n                        });\n                      }\n                    });\n                  }}\n                  label={constants.appKind}\n                >\n                  <MenuItem aria-label=\"None\" value=\"\" />\n                  {gvrData.map((gvr) => {\n                    return (\n                      <MenuItem key={gvr.resource} value={gvr.resource}>\n                        {gvr.resource}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n              <br />\n            </>\n          )}\n\n          {/* AutoComplete textfield for applabel */}\n          {engineManifest.spec.appinfo?.applabel && (\n            <>\n              <Autocomplete\n                id=\"combo-box-demo\"\n                options={appLabel}\n                freeSolo\n                value={targetApp.applabel}\n                defaultValue={targetApp.applabel}\n                className={classes.autoCompleteText}\n                onChange={(_, v: any) => {\n                  setTargetApp({\n                    ...targetApp,\n                    applabel: v,\n                  });\n                }}\n                renderInput={(params) => (\n                  <InputField\n                    onChange={(event) => {\n                      setTargetApp({\n                        ...targetApp,\n                        applabel: event.target.value,\n                      });\n                    }}\n                    helperText={\n                      appLabel.filter((data) => data === targetApp.applabel)\n                        .length === 0 ? (\n                        <Typography color=\"error\">\n                          {t(\n                            'createWorkflow.tuneWorkflow.verticalStepper.labelError'\n                          )}\n                        </Typography>\n                      ) : (\n                        ''\n                      )\n                    }\n                    {...params}\n                    label={constants.appLabel}\n                  />\n                )}\n              />\n              <br />\n            </>\n          )}\n\n          {/* JobCleanUpPolicy textfield */}\n          <InputField\n            label={constants.jobCleanUp}\n            width=\"auto\"\n            value={targetApp.jobCleanUpPolicy}\n            onChange={(event) => {\n              setTargetApp({\n                ...targetApp,\n                jobCleanUpPolicy: event.target.value,\n              });\n            }}\n          />\n          <br />\n\n          {/* Checkbox for adding NodeSelector */}\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={addNodeSelector}\n                onChange={(event) => {\n                  return setAddNodeSelector(event.target.checked);\n                }}\n                className={classes.checkBoxDefault}\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label={\n              <Typography className={classes.checkBoxText}>\n                {t('createWorkflow.tuneWorkflow.verticalStepper.nodeselector')}\n              </Typography>\n            }\n          />\n          {addNodeSelector && (\n            <div className={classes.flexDisplay}>\n              <Typography className={classes.nodeSelectorText}>\n                {t('createWorkflow.tuneWorkflow.verticalStepper.selector')}\n              </Typography>\n              <InputField\n                label={constants.nodeselector}\n                width=\"50%\"\n                value={nodeSelector}\n                onChange={(event) => {\n                  setNodeSelector(event.target.value);\n                }}\n              />\n            </div>\n          )}\n        </>\n      </div>\n      <br />\n\n      <div>\n        <Button onClick={() => gotoStep(0)} className={classes.button}>\n          {t('workflowStepper.back')}\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleMainYAMLChange()}\n          className={classes.button}\n        >\n          {t('workflowStepper.next')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TargetApplication;\n"]},"metadata":{},"sourceType":"module"}