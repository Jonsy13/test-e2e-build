{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/ConfigureDataSources/index.tsx\";\n\nimport { useMutation } from '@apollo/client';\nimport { Snackbar, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { ButtonFilled, ButtonOutlined } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport BackButton from '../../components/Button/BackButton';\nimport Loader from '../../components/Loader';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { CREATE_DATASOURCE, UPDATE_DATASOURCE } from '../../graphql/mutations';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport { isValidWebUrl, validateTextEmpty, validateTimeInSeconds } from '../../utils/validate';\nimport ConfigurePrometheus from '../../views/Analytics/DataSources/Forms/prometheus';\nimport useStyles from './styles';\n\nvar DataSourceConfigurePage = function DataSourceConfigurePage(_ref) {\n  var configure = _ref.configure;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var dataSourceID = useSelector(function (state) {\n    return state.selectDataSource.selectedDataSourceID;\n  });\n  var selectedDataSourceName = useSelector(function (state) {\n    return state.selectDataSource.selectedDataSourceName;\n  });\n  var projectID = getProjectID();\n  var projectRole = getProjectRole();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      disabled = _React$useState2[0],\n      setDisabled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      page = _React$useState4[0],\n      setPage = _React$useState4[1];\n\n  var _useState = useState({\n    id: '',\n    name: '',\n    dataSourceType: 'Prometheus',\n    url: 'http://localhost:9090',\n    access: 'Server (Default)',\n    basicAuth: false,\n    username: '',\n    password: '',\n    noAuth: true,\n    withCredentials: false,\n    tlsClientAuth: false,\n    withCACert: false,\n    scrapeInterval: '15s',\n    queryTimeout: '30s',\n    httpMethod: 'POST'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataSourceVars = _useState2[0],\n      setDataSourceVars = _useState2[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      mutate = _React$useState6[0],\n      setMutate = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      isAlertOpen = _React$useState8[0],\n      setIsAlertOpen = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      success = _React$useState10[0],\n      setSuccess = _React$useState10[1];\n\n  var _useMutation = useMutation(CREATE_DATASOURCE, {\n    onCompleted: function onCompleted() {\n      setMutate(false);\n      setSuccess(true);\n      setIsAlertOpen(true);\n    },\n    onError: function onError() {\n      setMutate(false);\n      setSuccess(false);\n      setIsAlertOpen(true);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createDataSource = _useMutation2[0];\n\n  var _useMutation3 = useMutation(UPDATE_DATASOURCE, {\n    onCompleted: function onCompleted() {\n      setMutate(false);\n      setSuccess(true);\n      setIsAlertOpen(true);\n    },\n    onError: function onError() {\n      setMutate(false);\n      setSuccess(false);\n      setIsAlertOpen(true);\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      updateDataSource = _useMutation4[0];\n\n  var handleCreateMutation = function handleCreateMutation() {\n    var authType = 'no auth';\n\n    if (dataSourceVars.noAuth === false && dataSourceVars.basicAuth === true) {\n      authType = 'basic auth';\n    }\n\n    var dataSourceInput = {\n      ds_name: dataSourceVars.name,\n      ds_type: dataSourceVars.dataSourceType,\n      ds_url: dataSourceVars.url[dataSourceVars.url.length - 1] !== '/' ? dataSourceVars.url : dataSourceVars.url.slice(0, -1),\n      access_type: dataSourceVars.access,\n      auth_type: authType,\n      basic_auth_username: dataSourceVars.username,\n      basic_auth_password: dataSourceVars.password,\n      scrape_interval: parseInt(dataSourceVars.scrapeInterval.split('s')[0], 10),\n      query_timeout: parseInt(dataSourceVars.queryTimeout.split('s')[0], 10),\n      http_method: dataSourceVars.httpMethod,\n      project_id: projectID\n    };\n    createDataSource({\n      variables: {\n        DSInput: dataSourceInput\n      }\n    });\n  };\n\n  var handleUpdateMutation = function handleUpdateMutation() {\n    var _dataSourceVars$id;\n\n    var authType = 'no auth';\n\n    if (dataSourceVars.noAuth === false && dataSourceVars.basicAuth === true) {\n      authType = 'basic auth';\n    }\n\n    var dataSourceInput = {\n      ds_id: (_dataSourceVars$id = dataSourceVars.id) !== null && _dataSourceVars$id !== void 0 ? _dataSourceVars$id : '',\n      ds_name: dataSourceVars.name,\n      ds_type: dataSourceVars.dataSourceType,\n      ds_url: dataSourceVars.url[dataSourceVars.url.length - 1] !== '/' ? dataSourceVars.url : dataSourceVars.url.slice(0, -1),\n      access_type: dataSourceVars.access,\n      auth_type: authType,\n      basic_auth_username: dataSourceVars.username,\n      basic_auth_password: dataSourceVars.password,\n      scrape_interval: parseInt(dataSourceVars.scrapeInterval.split('s')[0], 10),\n      query_timeout: parseInt(dataSourceVars.queryTimeout.split('s')[0], 10),\n      http_method: dataSourceVars.httpMethod,\n      project_id: projectID\n    };\n    updateDataSource({\n      variables: {\n        DSInput: dataSourceInput\n      }\n    });\n  };\n\n  useEffect(function () {\n    if (mutate === true && configure === false) {\n      handleCreateMutation();\n    } else if (mutate === true && configure === true) {\n      handleUpdateMutation();\n    }\n  }, [mutate]);\n  useEffect(function () {\n    if (dataSourceVars.name === '' || !isValidWebUrl(dataSourceVars.url) || !validateTimeInSeconds(dataSourceVars.queryTimeout) || !validateTimeInSeconds(dataSourceVars.scrapeInterval) || dataSourceVars.basicAuth && (validateTextEmpty(dataSourceVars.username) || validateTextEmpty(dataSourceVars.password))) {\n      setDisabled(true);\n    } else {\n      setDisabled(false);\n    }\n  }, [dataSourceVars]);\n  return /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rootConfigure,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, configure === false ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.backButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, t('analyticsDashboard.dataSourceForm.headingAdd')), /*#__PURE__*/React.createElement(ConfigurePrometheus, {\n    configure: configure,\n    page: page,\n    CallbackToSetVars: function CallbackToSetVars(vars) {\n      setDataSourceVars(vars);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.backButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, t('analyticsDashboard.dataSourceForm.headingConfigure'), \" /\", \" \".concat(selectedDataSourceName)), dataSourceID ? /*#__PURE__*/React.createElement(ConfigurePrometheus, {\n    configure: configure,\n    dataSourceID: dataSourceID,\n    page: page,\n    CallbackToSetVars: function CallbackToSetVars(vars) {\n      setDataSourceVars(vars);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.buttons, \" \").concat(page === 2 ? '' : classes.flexEnd),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, page === 2 && /*#__PURE__*/React.createElement(ButtonOutlined, {\n    onClick: function onClick() {\n      return setPage(1);\n    },\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.dataSourceForm.back'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.saveButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.stepText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, t('analyticsDashboard.dataSourceForm.step'), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, \" \".concat(page, \" \")), t('analyticsDashboard.dataSourceForm.of2')), /*#__PURE__*/React.createElement(ButtonFilled, {\n    disabled: page === 1 && (dataSourceVars.name === '' || !isValidWebUrl(dataSourceVars.url)) || mutate ? true : page === 2 ? disabled : false,\n    onClick: function onClick() {\n      return page === 2 && !disabled ? setMutate(true) : setPage(2);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, page === 2 ? mutate ? !configure ? t('analyticsDashboard.dataSourceForm.adding') : t('analyticsDashboard.dataSourceForm.updating') : t('analyticsDashboard.dataSourceForm.saveChanges') : t('analyticsDashboard.dataSourceForm.next')), mutate && /*#__PURE__*/React.createElement(Loader, {\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 26\n    }\n  }))))), isAlertOpen && /*#__PURE__*/React.createElement(Snackbar, {\n    open: isAlertOpen,\n    autoHideDuration: 6000,\n    onClose: function onClose() {\n      setIsAlertOpen(false);\n\n      if (success) {\n        history.push({\n          pathname: '/analytics',\n          search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: function onClose() {\n      setIsAlertOpen(false);\n\n      if (success) {\n        history.push({\n          pathname: '/analytics',\n          search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n        });\n      }\n    },\n    severity: success ? 'success' : 'error',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, !configure ? success ? t('analyticsDashboard.dataSourceForm.connectionSuccess') : t('analyticsDashboard.dataSourceForm.connectionError') : success ? t('analyticsDashboard.dataSourceForm.updateSuccess') : t('analyticsDashboard.dataSourceForm.updateError'))));\n};\n\nexport default DataSourceConfigurePage;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/ConfigureDataSources/index.tsx"],"names":["useMutation","Snackbar","Typography","Alert","ButtonFilled","ButtonOutlined","React","useEffect","useState","useTranslation","useSelector","BackButton","Loader","Scaffold","CREATE_DATASOURCE","UPDATE_DATASOURCE","history","getProjectID","getProjectRole","isValidWebUrl","validateTextEmpty","validateTimeInSeconds","ConfigurePrometheus","useStyles","DataSourceConfigurePage","configure","classes","t","dataSourceID","state","selectDataSource","selectedDataSourceID","selectedDataSourceName","projectID","projectRole","disabled","setDisabled","page","setPage","id","name","dataSourceType","url","access","basicAuth","username","password","noAuth","withCredentials","tlsClientAuth","withCACert","scrapeInterval","queryTimeout","httpMethod","dataSourceVars","setDataSourceVars","mutate","setMutate","isAlertOpen","setIsAlertOpen","success","setSuccess","onCompleted","onError","createDataSource","updateDataSource","handleCreateMutation","authType","dataSourceInput","ds_name","ds_type","ds_url","length","slice","access_type","auth_type","basic_auth_username","basic_auth_password","scrape_interval","parseInt","split","query_timeout","http_method","project_id","variables","DSInput","handleUpdateMutation","ds_id","rootConfigure","backButton","heading","vars","buttons","flexEnd","saveButton","stepText","buttonText","push","pathname","search"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\nimport { Snackbar, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { ButtonFilled, ButtonOutlined } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport BackButton from '../../components/Button/BackButton';\nimport Loader from '../../components/Loader';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { CREATE_DATASOURCE, UPDATE_DATASOURCE } from '../../graphql/mutations';\nimport { DataSourceDetails } from '../../models/dataSourceData';\nimport {\n  CreateDataSourceInput,\n  ListDataSourceResponse,\n} from '../../models/graphql/dataSourceDetails';\nimport { history } from '../../redux/configureStore';\nimport { RootState } from '../../redux/reducers';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport {\n  isValidWebUrl,\n  validateTextEmpty,\n  validateTimeInSeconds,\n} from '../../utils/validate';\nimport ConfigurePrometheus from '../../views/Analytics/DataSources/Forms/prometheus';\nimport useStyles from './styles';\n\ninterface DataSourceConfigurePageProps {\n  configure: boolean;\n}\n\nconst DataSourceConfigurePage: React.FC<DataSourceConfigurePageProps> = ({\n  configure,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const dataSourceID = useSelector(\n    (state: RootState) => state.selectDataSource.selectedDataSourceID\n  );\n  const selectedDataSourceName = useSelector(\n    (state: RootState) => state.selectDataSource.selectedDataSourceName\n  );\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n  const [disabled, setDisabled] = React.useState(true);\n  const [page, setPage] = React.useState<number>(1);\n  const [dataSourceVars, setDataSourceVars] = useState<DataSourceDetails>({\n    id: '',\n    name: '',\n    dataSourceType: 'Prometheus',\n    url: 'http://localhost:9090',\n    access: 'Server (Default)',\n    basicAuth: false,\n    username: '',\n    password: '',\n    noAuth: true,\n    withCredentials: false,\n    tlsClientAuth: false,\n    withCACert: false,\n    scrapeInterval: '15s',\n    queryTimeout: '30s',\n    httpMethod: 'POST',\n  });\n  const [mutate, setMutate] = React.useState(false);\n  const [isAlertOpen, setIsAlertOpen] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [createDataSource] = useMutation<\n    ListDataSourceResponse,\n    CreateDataSourceInput\n  >(CREATE_DATASOURCE, {\n    onCompleted: () => {\n      setMutate(false);\n      setSuccess(true);\n      setIsAlertOpen(true);\n    },\n    onError: () => {\n      setMutate(false);\n      setSuccess(false);\n      setIsAlertOpen(true);\n    },\n  });\n  const [updateDataSource] = useMutation<\n    ListDataSourceResponse,\n    CreateDataSourceInput\n  >(UPDATE_DATASOURCE, {\n    onCompleted: () => {\n      setMutate(false);\n      setSuccess(true);\n      setIsAlertOpen(true);\n    },\n    onError: () => {\n      setMutate(false);\n      setSuccess(false);\n      setIsAlertOpen(true);\n    },\n  });\n\n  const handleCreateMutation = () => {\n    let authType: string = 'no auth';\n    if (dataSourceVars.noAuth === false && dataSourceVars.basicAuth === true) {\n      authType = 'basic auth';\n    }\n    const dataSourceInput = {\n      ds_name: dataSourceVars.name,\n      ds_type: dataSourceVars.dataSourceType,\n      ds_url:\n        dataSourceVars.url[dataSourceVars.url.length - 1] !== '/'\n          ? dataSourceVars.url\n          : dataSourceVars.url.slice(0, -1),\n      access_type: dataSourceVars.access,\n      auth_type: authType,\n      basic_auth_username: dataSourceVars.username,\n      basic_auth_password: dataSourceVars.password,\n      scrape_interval: parseInt(\n        dataSourceVars.scrapeInterval.split('s')[0],\n        10\n      ),\n      query_timeout: parseInt(dataSourceVars.queryTimeout.split('s')[0], 10),\n      http_method: dataSourceVars.httpMethod,\n      project_id: projectID,\n    };\n    createDataSource({\n      variables: { DSInput: dataSourceInput },\n    });\n  };\n\n  const handleUpdateMutation = () => {\n    let authType: string = 'no auth';\n    if (dataSourceVars.noAuth === false && dataSourceVars.basicAuth === true) {\n      authType = 'basic auth';\n    }\n    const dataSourceInput = {\n      ds_id: dataSourceVars.id ?? '',\n      ds_name: dataSourceVars.name,\n      ds_type: dataSourceVars.dataSourceType,\n      ds_url:\n        dataSourceVars.url[dataSourceVars.url.length - 1] !== '/'\n          ? dataSourceVars.url\n          : dataSourceVars.url.slice(0, -1),\n      access_type: dataSourceVars.access,\n      auth_type: authType,\n      basic_auth_username: dataSourceVars.username,\n      basic_auth_password: dataSourceVars.password,\n      scrape_interval: parseInt(\n        dataSourceVars.scrapeInterval.split('s')[0],\n        10\n      ),\n      query_timeout: parseInt(dataSourceVars.queryTimeout.split('s')[0], 10),\n      http_method: dataSourceVars.httpMethod,\n      project_id: projectID,\n    };\n    updateDataSource({\n      variables: { DSInput: dataSourceInput },\n    });\n  };\n\n  useEffect(() => {\n    if (mutate === true && configure === false) {\n      handleCreateMutation();\n    } else if (mutate === true && configure === true) {\n      handleUpdateMutation();\n    }\n  }, [mutate]);\n\n  useEffect(() => {\n    if (\n      dataSourceVars.name === '' ||\n      !isValidWebUrl(dataSourceVars.url) ||\n      !validateTimeInSeconds(dataSourceVars.queryTimeout) ||\n      !validateTimeInSeconds(dataSourceVars.scrapeInterval) ||\n      (dataSourceVars.basicAuth &&\n        (validateTextEmpty(dataSourceVars.username) ||\n          validateTextEmpty(dataSourceVars.password)))\n    ) {\n      setDisabled(true);\n    } else {\n      setDisabled(false);\n    }\n  }, [dataSourceVars]);\n\n  return (\n    <Scaffold>\n      <div className={classes.rootConfigure}>\n        {configure === false ? (\n          <div>\n            <div className={classes.backButton}>\n              <BackButton />\n            </div>\n            <Typography className={classes.heading}>\n              {t('analyticsDashboard.dataSourceForm.headingAdd')}\n            </Typography>\n            <ConfigurePrometheus\n              configure={configure}\n              page={page}\n              CallbackToSetVars={(vars: DataSourceDetails) => {\n                setDataSourceVars(vars);\n              }}\n            />\n          </div>\n        ) : (\n          <div>\n            <div className={classes.backButton}>\n              <BackButton />\n            </div>\n            <Typography className={classes.heading}>\n              {t('analyticsDashboard.dataSourceForm.headingConfigure')} /\n              {` ${selectedDataSourceName}`}\n            </Typography>\n            {dataSourceID ? (\n              <ConfigurePrometheus\n                configure={configure}\n                dataSourceID={dataSourceID}\n                page={page}\n                CallbackToSetVars={(vars: DataSourceDetails) => {\n                  setDataSourceVars(vars);\n                }}\n              />\n            ) : (\n              <div />\n            )}\n          </div>\n        )}\n\n        <div\n          className={`${classes.buttons} ${page === 2 ? '' : classes.flexEnd}`}\n        >\n          {page === 2 && (\n            <ButtonOutlined onClick={() => setPage(1)} disabled={false}>\n              <Typography>\n                {t('analyticsDashboard.dataSourceForm.back')}\n              </Typography>\n            </ButtonOutlined>\n          )}\n          <div className={classes.saveButton}>\n            <Typography className={classes.stepText}>\n              {t('analyticsDashboard.dataSourceForm.step')}\n              <strong>{` ${page} `}</strong>\n              {t('analyticsDashboard.dataSourceForm.of2')}\n            </Typography>\n            <ButtonFilled\n              disabled={\n                (page === 1 &&\n                  (dataSourceVars.name === '' ||\n                    !isValidWebUrl(dataSourceVars.url))) ||\n                mutate\n                  ? true\n                  : page === 2\n                  ? disabled\n                  : false\n              }\n              onClick={() =>\n                page === 2 && !disabled ? setMutate(true) : setPage(2)\n              }\n            >\n              <Typography className={classes.buttonText}>\n                {page === 2\n                  ? mutate\n                    ? !configure\n                      ? t('analyticsDashboard.dataSourceForm.adding')\n                      : t('analyticsDashboard.dataSourceForm.updating')\n                    : t('analyticsDashboard.dataSourceForm.saveChanges')\n                  : t('analyticsDashboard.dataSourceForm.next')}\n              </Typography>\n              {mutate && <Loader size={20} />}\n            </ButtonFilled>\n          </div>\n        </div>\n      </div>\n      {isAlertOpen && (\n        <Snackbar\n          open={isAlertOpen}\n          autoHideDuration={6000}\n          onClose={() => {\n            setIsAlertOpen(false);\n            if (success) {\n              history.push({\n                pathname: '/analytics',\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              });\n            }\n          }}\n        >\n          <Alert\n            onClose={() => {\n              setIsAlertOpen(false);\n              if (success) {\n                history.push({\n                  pathname: '/analytics',\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n              }\n            }}\n            severity={success ? 'success' : 'error'}\n          >\n            {!configure\n              ? success\n                ? t('analyticsDashboard.dataSourceForm.connectionSuccess')\n                : t('analyticsDashboard.dataSourceForm.connectionError')\n              : success\n              ? t('analyticsDashboard.dataSourceForm.updateSuccess')\n              : t('analyticsDashboard.dataSourceForm.updateError')}\n          </Alert>\n        </Snackbar>\n      )}\n    </Scaffold>\n  );\n};\n\nexport default DataSourceConfigurePage;\n"]},"metadata":{},"sourceType":"module"}