{"ast":null,"code":"import _toConsumableArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/TeamingTab/InviteNew/Invite/index.tsx\";\n\n/* eslint-disable no-unused-expressions */\nimport { useMutation, useQuery } from '@apollo/client/react';\nimport { Input, InputAdornment, Table, TableCell, TableContainer, TableRow, Toolbar, Typography, useTheme } from '@material-ui/core';\nimport { ButtonFilled } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../../../components/Loader';\nimport { ALL_USERS, GET_PROJECT, SEND_INVITE } from '../../../../../graphql';\nimport { getProjectID } from '../../../../../utils/getSearchParams';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\nvar Invite = function Invite(_ref) {\n  var handleModal = _ref.handleModal;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // for response data\n\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rows = _useState2[0],\n      setRows = _useState2[1];\n\n  var projectID = getProjectID(); // for setting the role of the user while sending invitation\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      roles = _useState4[0],\n      setRoles = _useState4[1]; // Array to store the list of selected users to be invited\n\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selected = _React$useState2[0],\n      setSelected = _React$useState2[1]; // Sets the user role while inviting\n\n\n  var setUserRole = function setUserRole(user_uid, role) {\n    setSelected(selected.map(function (r) {\n      return r.user_id === user_uid ? _objectSpread(_objectSpread({}, r), {}, {\n        role: role\n      }) : r;\n    }));\n\n    if (roles.find(function (ele) {\n      return ele.user_uid === user_uid;\n    })) {\n      setRoles(roles.map(function (r) {\n        return r.user_uid === user_uid ? {\n          user_uid: user_uid,\n          role: role\n        } : r;\n      }));\n    } else {\n      setRoles([].concat(_toConsumableArray(roles), [{\n        user_uid: user_uid,\n        role: role\n      }]));\n    }\n  };\n\n  var _useQuery = useQuery(GET_PROJECT, {\n    variables: {\n      projectID: projectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      loading = _useQuery.loading,\n      dataB = _useQuery.data;\n\n  useQuery(ALL_USERS, {\n    skip: !dataB,\n    onCompleted: function onCompleted(data) {\n      var memberList = new Map();\n      var users = [];\n\n      if (dataB !== undefined) {\n        dataB.getProject.members.forEach(function (member) {\n          if (member.invitation === 'Accepted' || member.invitation === 'Pending') {\n            memberList.set(member.user_id, 1);\n          }\n        }); // check for displaying only those users who are not the part of team\n\n        data && data.users.forEach(function (user) {\n          if (!memberList.has(user.id)) users.push(user);\n        });\n        setRows([].concat(users));\n      }\n    }\n  }); // mutation to send invitation to selected users\n\n  var _useMutation = useMutation(SEND_INVITE, {\n    refetchQueries: [{\n      query: GET_PROJECT,\n      variables: {\n        projectID: projectID\n      }\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      SendInvite = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      errorB = _useMutation2$.error,\n      loadingB = _useMutation2$.loading; // Checks if the user the already selected or not\n\n\n  var isSelected = function isSelected(user) {\n    var user_uids = new Map();\n    selected.map(function (el) {\n      return user_uids.set(el.user_id, el.role);\n    });\n    return user_uids.has(user.id);\n  };\n\n  var handleClick = function handleClick(event, selectedUser) {\n    var selectedIds = selected.map(function (el) {\n      return el.user_id;\n    });\n    var isUserAlreadySelected = selectedIds.indexOf(selectedUser.id);\n    var newSelected = [];\n\n    if (isUserAlreadySelected === -1) {\n      var userrole = function userrole() {\n        var r = roles.find(function (ele) {\n          return ele.user_uid === selectedUser.id;\n        });\n\n        if (r) {\n          return r.role;\n        }\n\n        return 'Viewer';\n      };\n\n      newSelected = newSelected.concat(selected, {\n        user_name: selectedUser.username,\n        user_id: selectedUser.id,\n        role: userrole()\n      });\n    } else if (isUserAlreadySelected === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (isUserAlreadySelected === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (isUserAlreadySelected > 0) {\n      newSelected = newSelected.concat(selected.slice(0, isUserAlreadySelected), selected.slice(isUserAlreadySelected + 1));\n    }\n\n    setSelected(newSelected);\n  }; // States for filters\n\n\n  var _useState5 = useState({\n    search: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filters = _useState6[0],\n      setFilters = _useState6[1];\n\n  var filteredData = !loading ? rows.filter(function (dataRow) {\n    return dataRow.username.toLowerCase().includes(filters.search.toLowerCase());\n  }) : [];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showsuccess = _useState8[0],\n      setShowsuccess = _useState8[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, showsuccess ? /*#__PURE__*/React.createElement(React.Fragment, null, loadingB ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, errorB ? /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, errorB.message) : /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"inviteNewMemberSuccessModal\",\n    className: classes.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/checkmark.svg\",\n    alt: \"checkmark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, t('settings.teamingTab.inviteNew.invite.successHeader'), ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 23\n    }\n  }, t('settings.teamingTab.inviteNew.invite.successHeaderStrong')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textSecond,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typoSub,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, t('settings.teamingTab.inviteNew.invite.info'))), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"inviteNewMemberSuccessModalDoneButton\",\n    className: classes.buttonModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: handleModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, t('settings.teamingTab.inviteNew.invite.button.done'))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.Header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, t('settings.teamingTab.inviteNew.invite.header'), ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, t('settings.teamingTab.inviteNew.invite.headerStrong'))), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"inviteNewMemberSearch\",\n    className: classes.inviteSomeone,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"input-with-icon-textfield\",\n    placeholder: t('settings.teamingTab.inviteNew.invite.label.someone'),\n    onChange: function onChange(e) {\n      setFilters({\n        search: e.target.value\n      });\n    },\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./icons/user-invite.svg\",\n      alt: \"user\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 23\n      }\n    })),\n    disableUnderline: true,\n    inputProps: {\n      className: classes.input,\n      style: {\n        color: theme.palette.text.primary\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"inviteNewMemberSendInviteButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    disabled: !selected.length,\n    onClick: function onClick() {\n      setShowsuccess(true);\n      selected.map(function (s) {\n        return !errorB && !loadingB && SendInvite({\n          variables: {\n            member: {\n              project_id: projectID,\n              user_id: s.user_id,\n              role: s.role\n            }\n          }\n        });\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  }, t('settings.teamingTab.inviteNew.invite.button.send')))))), /*#__PURE__*/React.createElement(TableContainer, {\n    \"data-cy\": \"inviteNewMemberTable\",\n    className: classes.table,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, filteredData && filteredData.length > 0 ? filteredData.map(function (row, index) {\n    var isItemSelected = isSelected(row);\n    var labelId = \"enhanced-table-checkbox-\".concat(index);\n    return /*#__PURE__*/React.createElement(TableRow, {\n      \"data-cy\": \"inviteNewMemberCheckBox\",\n      role: \"checkbox\",\n      key: row.id,\n      \"aria-checked\": isItemSelected,\n      selected: isItemSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableData, {\n      row: row,\n      isItemSelected: isItemSelected,\n      handleCheck: handleClick,\n      labelId: labelId,\n      sendInvite: setUserRole,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 23\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 2,\n    className: classes.tableCell,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, t('settings.teamingTab.inviteNew.invite.noUsers'))))))));\n};\n\nexport default Invite;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/TeamingTab/InviteNew/Invite/index.tsx"],"names":["useMutation","useQuery","Input","InputAdornment","Table","TableCell","TableContainer","TableRow","Toolbar","Typography","useTheme","ButtonFilled","React","useState","useTranslation","Loader","ALL_USERS","GET_PROJECT","SEND_INVITE","getProjectID","useStyles","TableData","Invite","handleModal","classes","theme","t","rows","setRows","projectID","roles","setRoles","selected","setSelected","setUserRole","user_uid","role","map","r","user_id","find","ele","variables","fetchPolicy","loading","dataB","data","skip","onCompleted","memberList","Map","users","undefined","getProject","members","forEach","member","invitation","set","user","has","id","push","refetchQueries","query","SendInvite","errorB","error","loadingB","isSelected","user_uids","el","handleClick","event","selectedUser","selectedIds","isUserAlreadySelected","indexOf","newSelected","userrole","concat","user_name","username","slice","length","search","filters","setFilters","filteredData","filter","dataRow","toLowerCase","includes","showsuccess","setShowsuccess","message","body","text","typo","textSecond","typoSub","buttonModal","Header","toolbar","inviteSomeone","e","target","value","className","input","style","color","palette","primary","s","project_id","table","row","index","isItemSelected","labelId","tableCell"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { useMutation, useQuery } from '@apollo/client/react';\nimport {\n  Input,\n  InputAdornment,\n  Table,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Toolbar,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport { ButtonFilled } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../../../components/Loader';\nimport { ALL_USERS, GET_PROJECT, SEND_INVITE } from '../../../../../graphql';\nimport {\n  MemberInviteNew,\n  UserInvite,\n} from '../../../../../models/graphql/invite';\nimport {\n  ProjectDetail,\n  ProjectDetailVars,\n} from '../../../../../models/graphql/user';\nimport { getProjectID } from '../../../../../utils/getSearchParams';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\ninterface FilterOptions {\n  search: string;\n}\n\ninterface InviteProps {\n  handleModal: () => void;\n}\n\ninterface SelectedUser {\n  user_name: string;\n  user_id: string;\n  role: string;\n}\n\ninterface Role {\n  user_uid: string;\n  role: string;\n}\n\nconst Invite: React.FC<InviteProps> = ({ handleModal }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n\n  // for response data\n  const [rows, setRows] = useState<UserInvite[]>([]);\n\n  const projectID = getProjectID();\n\n  // for setting the role of the user while sending invitation\n  const [roles, setRoles] = useState<Role[]>([]);\n\n  // Array to store the list of selected users to be invited\n  const [selected, setSelected] = React.useState<SelectedUser[]>([]);\n\n  // Sets the user role while inviting\n  const setUserRole = (user_uid: string, role: string) => {\n    setSelected(\n      selected.map((r) => (r.user_id === user_uid ? { ...r, role } : r))\n    );\n    if (roles.find((ele) => ele.user_uid === user_uid)) {\n      setRoles(\n        roles.map((r) => (r.user_uid === user_uid ? { user_uid, role } : r))\n      );\n    } else {\n      setRoles([...roles, { user_uid, role }]);\n    }\n  };\n\n  const { loading, data: dataB } = useQuery<ProjectDetail, ProjectDetailVars>(\n    GET_PROJECT,\n    {\n      variables: { projectID },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  useQuery(ALL_USERS, {\n    skip: !dataB,\n    onCompleted: (data) => {\n      const memberList = new Map();\n      const users: UserInvite[] = [];\n      if (dataB !== undefined) {\n        dataB.getProject.members.forEach((member) => {\n          if (\n            member.invitation === 'Accepted' ||\n            member.invitation === 'Pending'\n          ) {\n            memberList.set(member.user_id, 1);\n          }\n        });\n        // check for displaying only those users who are not the part of team\n        data &&\n          data.users.forEach((user: UserInvite) => {\n            if (!memberList.has(user.id)) users.push(user);\n          });\n        setRows([...users]);\n      }\n    },\n  });\n\n  // mutation to send invitation to selected users\n  const [SendInvite, { error: errorB, loading: loadingB }] =\n    useMutation<MemberInviteNew>(SEND_INVITE, {\n      refetchQueries: [\n        {\n          query: GET_PROJECT,\n          variables: { projectID },\n        },\n      ],\n    });\n\n  // Checks if the user the already selected or not\n  const isSelected = (user: UserInvite) => {\n    const user_uids = new Map();\n    selected.map((el) => user_uids.set(el.user_id, el.role));\n    return user_uids.has(user.id);\n  };\n\n  const handleClick = (\n    event: React.MouseEvent<unknown>,\n    selectedUser: UserInvite\n  ) => {\n    const selectedIds = selected.map((el) => el.user_id);\n    const isUserAlreadySelected = selectedIds.indexOf(selectedUser.id);\n    let newSelected: SelectedUser[] = [];\n    if (isUserAlreadySelected === -1) {\n      const userrole = () => {\n        const r = roles.find((ele) => ele.user_uid === selectedUser.id);\n        if (r) {\n          return r.role;\n        }\n        return 'Viewer';\n      };\n      newSelected = newSelected.concat(selected, {\n        user_name: selectedUser.username,\n        user_id: selectedUser.id,\n        role: userrole(),\n      });\n    } else if (isUserAlreadySelected === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (isUserAlreadySelected === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (isUserAlreadySelected > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, isUserAlreadySelected),\n        selected.slice(isUserAlreadySelected + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  // States for filters\n  const [filters, setFilters] = useState<FilterOptions>({\n    search: '',\n  });\n\n  const filteredData = !loading\n    ? rows.filter((dataRow) => {\n        return dataRow.username\n          .toLowerCase()\n          .includes(filters.search.toLowerCase());\n      })\n    : [];\n\n  const [showsuccess, setShowsuccess] = useState<boolean>(false);\n\n  return (\n    <div>\n      {showsuccess ? (\n        <>\n          {loadingB ? (\n            <>\n              <Loader />\n            </>\n          ) : (\n            <Typography>\n              {errorB ? (\n                <Typography>{errorB.message}</Typography>\n              ) : (\n                <div\n                  data-cy=\"inviteNewMemberSuccessModal\"\n                  className={classes.body}\n                >\n                  <img src=\"./icons/checkmark.svg\" alt=\"checkmark\" />\n                  <div className={classes.text}>\n                    <Typography className={classes.typo}>\n                      {t('settings.teamingTab.inviteNew.invite.successHeader')}{' '}\n                      <strong>\n                        {t(\n                          'settings.teamingTab.inviteNew.invite.successHeaderStrong'\n                        )}\n                      </strong>\n                    </Typography>\n                  </div>\n                  <div className={classes.textSecond}>\n                    <Typography className={classes.typoSub}>\n                      {t('settings.teamingTab.inviteNew.invite.info')}\n                    </Typography>\n                  </div>\n                  <div\n                    data-cy=\"inviteNewMemberSuccessModalDoneButton\"\n                    className={classes.buttonModal}\n                  >\n                    <ButtonFilled onClick={handleModal}>\n                      <>\n                        {t('settings.teamingTab.inviteNew.invite.button.done')}\n                      </>\n                    </ButtonFilled>\n                  </div>\n                </div>\n              )}\n            </Typography>\n          )}\n        </>\n      ) : (\n        <div>\n          <Typography className={classes.Header}>\n            {t('settings.teamingTab.inviteNew.invite.header')}{' '}\n            <strong>\n              {t('settings.teamingTab.inviteNew.invite.headerStrong')}\n            </strong>\n          </Typography>\n          <Toolbar className={classes.toolbar}>\n            <div\n              data-cy=\"inviteNewMemberSearch\"\n              className={classes.inviteSomeone}\n            >\n              <div>\n                <Input\n                  id=\"input-with-icon-textfield\"\n                  placeholder={t(\n                    'settings.teamingTab.inviteNew.invite.label.someone'\n                  )}\n                  onChange={(e) => {\n                    setFilters({\n                      search: e.target.value,\n                    });\n                  }}\n                  startAdornment={\n                    <InputAdornment position=\"start\">\n                      <img src=\"./icons/user-invite.svg\" alt=\"user\" />\n                    </InputAdornment>\n                  }\n                  disableUnderline\n                  inputProps={{\n                    className: classes.input,\n                    style: {\n                      color: theme.palette.text.primary,\n                    },\n                  }}\n                />\n              </div>\n              <div data-cy=\"inviteNewMemberSendInviteButton\">\n                <ButtonFilled\n                  disabled={!selected.length}\n                  onClick={() => {\n                    setShowsuccess(true);\n                    selected.map(\n                      (s) =>\n                        !errorB &&\n                        !loadingB &&\n                        SendInvite({\n                          variables: {\n                            member: {\n                              project_id: projectID,\n                              user_id: s.user_id,\n                              role: s.role,\n                            },\n                          },\n                        })\n                    );\n                  }}\n                >\n                  <div>\n                    {t('settings.teamingTab.inviteNew.invite.button.send')}\n                  </div>\n                </ButtonFilled>\n              </div>\n            </div>\n          </Toolbar>\n          <TableContainer\n            data-cy=\"inviteNewMemberTable\"\n            className={classes.table}\n          >\n            <Table stickyHeader aria-label=\"sticky table\">\n              {filteredData && filteredData.length > 0 ? (\n                filteredData.map((row, index) => {\n                  const isItemSelected = isSelected(row);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      data-cy=\"inviteNewMemberCheckBox\"\n                      role=\"checkbox\"\n                      key={row.id}\n                      aria-checked={isItemSelected}\n                      selected={isItemSelected}\n                    >\n                      <TableData\n                        row={row}\n                        isItemSelected={isItemSelected}\n                        handleCheck={handleClick}\n                        labelId={labelId}\n                        sendInvite={setUserRole}\n                      />\n                    </TableRow>\n                  );\n                })\n              ) : (\n                <TableRow>\n                  <TableCell colSpan={2} className={classes.tableCell}>\n                    <Typography align=\"center\">\n                      {t('settings.teamingTab.inviteNew.invite.noUsers')}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </Table>\n          </TableContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Invite;\n"]},"metadata":{},"sourceType":"module"}