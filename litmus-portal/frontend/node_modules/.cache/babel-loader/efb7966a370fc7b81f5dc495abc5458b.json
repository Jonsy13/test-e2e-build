{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useQuery}from'@apollo/client';import{Paper,Tabs,useTheme}from'@material-ui/core';import{LineAreaGraph}from'litmus-ui';import React,{useState}from'react';import{StyledTab,TabPanel}from'../../../../../components/Tabs';import{WORKFLOW_STATS}from'../../../../../graphql';import{Filter}from'../../../../../models/graphql/scheduleData';import{getProjectID}from'../../../../../utils/getSearchParams';import useStyles from'./style';// tabProps returns 'id' and 'aria-control' props of Tab\nfunction tabProps(index){return{id:\"simple-tab-\".concat(index),'aria-controls':\"simple-tabpanel-\".concat(index)};}var ScheduleAndRunStats=function ScheduleAndRunStats(_ref){var filter=_ref.filter;var classes=useStyles();var projectID=getProjectID();var theme=useTheme();var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),activeTab=_React$useState2[0],setActiveTab=_React$useState2[1];var handleChange=function handleChange(event,actTab){setActiveTab(actTab);};var _useState=useState([]),_useState2=_slicedToArray(_useState,2),graphDataState=_useState2[0],setGraphDataState=_useState2[1];var tempGraphData=[];useQuery(WORKFLOW_STATS,{variables:{filter:filter,project_id:projectID,show_workflow_runs:activeTab===0},onCompleted:function onCompleted(dateValueData){dateValueData.getScheduledWorkflowStats.map(function(data){return tempGraphData.push({date:data.date,value:data.value});});setGraphDataState(tempGraphData);}});var closedSeriesData=[{metricName:activeTab===0?'Runs':'Schedules',data:graphDataState,baseColor:activeTab===0?'#F6793E':'#5B44BA'}];function xAxisTimeFormat(filter){switch(filter){case Filter.monthly:return'MMM';case Filter.weekly:return'[W] W';case Filter.hourly:return'HH[hrs]';default:return'MMM';}}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Paper,{elevation:0},/*#__PURE__*/React.createElement(Paper,{className:classes.workflowGraphs},/*#__PURE__*/React.createElement(Tabs,{value:activeTab,onChange:handleChange,TabIndicatorProps:{style:{backgroundColor:theme.palette.primary.main}}},/*#__PURE__*/React.createElement(StyledTab,Object.assign({\"data-cy\":\"receivedTab\",label:\" Run stats\"},tabProps(1))),/*#__PURE__*/React.createElement(StyledTab,Object.assign({\"data-cy\":\"activeTab\",label:\"Schedule stats\"},tabProps(0)))),/*#__PURE__*/React.createElement(TabPanel,{value:activeTab,index:0},/*#__PURE__*/React.createElement(\"div\",{className:classes.graphContainer},/*#__PURE__*/React.createElement(LineAreaGraph,{closedSeries:closedSeriesData,showLegendTable:false,showPoints:true,showTips:true,showMultiToolTip:true,yLabelOffset:35,xAxistimeFormat:xAxisTimeFormat(filter)}))),/*#__PURE__*/React.createElement(TabPanel,{value:activeTab,index:1},/*#__PURE__*/React.createElement(\"div\",{className:classes.graphContainer},/*#__PURE__*/React.createElement(LineAreaGraph,{closedSeries:closedSeriesData,showLegendTable:false,showPoints:true,showTips:true,showMultiToolTip:true,yLabelOffset:35,xAxistimeFormat:xAxisTimeFormat(filter)}))))));};export default ScheduleAndRunStats;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowGraphs/ScheduleAndRunStats/index.tsx"],"names":["useQuery","Paper","Tabs","useTheme","LineAreaGraph","React","useState","StyledTab","TabPanel","WORKFLOW_STATS","Filter","getProjectID","useStyles","tabProps","index","id","ScheduleAndRunStats","filter","classes","projectID","theme","activeTab","setActiveTab","handleChange","event","actTab","graphDataState","setGraphDataState","tempGraphData","variables","project_id","show_workflow_runs","onCompleted","dateValueData","getScheduledWorkflowStats","map","data","push","date","value","closedSeriesData","metricName","baseColor","xAxisTimeFormat","monthly","weekly","hourly","workflowGraphs","style","backgroundColor","palette","primary","main","graphContainer"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Paper, Tabs, useTheme } from '@material-ui/core';\nimport { GraphMetric, LineAreaGraph } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { StyledTab, TabPanel } from '../../../../../components/Tabs';\nimport { WORKFLOW_STATS } from '../../../../../graphql';\nimport {\n  DateValue,\n  Filter,\n  WorkflowStatsResponse,\n  WorkflowStatsVars,\n} from '../../../../../models/graphql/scheduleData';\nimport { getProjectID } from '../../../../../utils/getSearchParams';\nimport useStyles from './style';\n\n// tabProps returns 'id' and 'aria-control' props of Tab\nfunction tabProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\ninterface ScheduleAndRunStatsProps {\n  filter: Filter;\n}\n\nconst ScheduleAndRunStats: React.FC<ScheduleAndRunStatsProps> = ({\n  filter,\n}) => {\n  const classes = useStyles();\n  const projectID = getProjectID();\n  const theme = useTheme();\n  const [activeTab, setActiveTab] = React.useState(0);\n  const handleChange = (event: React.ChangeEvent<{}>, actTab: number) => {\n    setActiveTab(actTab);\n  };\n\n  const [graphDataState, setGraphDataState] = useState<DateValue[]>([]);\n\n  const tempGraphData: Array<DateValue> = [];\n\n  useQuery<WorkflowStatsResponse, WorkflowStatsVars>(WORKFLOW_STATS, {\n    variables: {\n      filter,\n      project_id: projectID,\n      show_workflow_runs: activeTab === 0,\n    },\n    onCompleted: (dateValueData) => {\n      dateValueData.getScheduledWorkflowStats.map((data) =>\n        tempGraphData.push({\n          date: data.date,\n          value: data.value,\n        })\n      );\n      setGraphDataState(tempGraphData);\n    },\n  });\n\n  const closedSeriesData: Array<GraphMetric> = [\n    {\n      metricName: activeTab === 0 ? 'Runs' : 'Schedules',\n      data: graphDataState,\n      baseColor: activeTab === 0 ? '#F6793E' : '#5B44BA',\n    },\n  ];\n\n  function xAxisTimeFormat(filter: Filter) {\n    switch (filter) {\n      case Filter.monthly:\n        return 'MMM';\n      case Filter.weekly:\n        return '[W] W';\n      case Filter.hourly:\n        return 'HH[hrs]';\n      default:\n        return 'MMM';\n    }\n  }\n\n  return (\n    <div>\n      <Paper elevation={0}>\n        <Paper className={classes.workflowGraphs}>\n          <Tabs\n            value={activeTab}\n            onChange={handleChange}\n            TabIndicatorProps={{\n              style: {\n                backgroundColor: theme.palette.primary.main,\n              },\n            }}\n          >\n            <StyledTab\n              data-cy=\"receivedTab\"\n              label=\" Run stats\"\n              {...tabProps(1)}\n            />\n            <StyledTab\n              data-cy=\"activeTab\"\n              label=\"Schedule stats\"\n              {...tabProps(0)}\n            />\n          </Tabs>\n          <TabPanel value={activeTab} index={0}>\n            <div className={classes.graphContainer}>\n              <LineAreaGraph\n                closedSeries={closedSeriesData}\n                showLegendTable={false}\n                showPoints\n                showTips\n                showMultiToolTip\n                yLabelOffset={35}\n                xAxistimeFormat={xAxisTimeFormat(filter)}\n              />\n            </div>\n          </TabPanel>\n          <TabPanel value={activeTab} index={1}>\n            <div className={classes.graphContainer}>\n              <LineAreaGraph\n                closedSeries={closedSeriesData}\n                showLegendTable={false}\n                showPoints\n                showTips\n                showMultiToolTip\n                yLabelOffset={35}\n                xAxistimeFormat={xAxisTimeFormat(filter)}\n              />\n            </div>\n          </TabPanel>\n        </Paper>\n      </Paper>\n    </div>\n  );\n};\nexport default ScheduleAndRunStats;\n"]},"metadata":{},"sourceType":"module"}