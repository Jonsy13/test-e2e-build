{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/ChooseADashboardType/index.tsx\";\n\nimport { Typography } from '@material-ui/core';\nimport React, { forwardRef, useImperativeHandle } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport DashboardList from '../../../../../components/PreconfiguredDashboards/data';\nimport useActions from '../../../../../redux/actions';\nimport * as AlertActions from '../../../../../redux/actions/alert';\nimport { getProjectRole } from '../../../../../utils/getSearchParams';\nimport DashboardCards from './Cards/DashBoardCards';\nimport useStyles from './styles';\nvar ChooseADashboardType = forwardRef(function (_ref, ref) {\n  var handleNext = _ref.handleNext;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var alert = useActions(AlertActions);\n\n  function onNext() {\n    if (getProjectRole() === 'Viewer') {\n      alert.changeAlertState(true);\n      return false;\n    }\n\n    return true;\n  }\n\n  useImperativeHandle(ref, function () {\n    return {\n      onNext: onNext\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, t('analyticsDashboard.applicationDashboards.chooseADashboardType.header')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, t('analyticsDashboard.applicationDashboards.chooseADashboardType.description')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cards,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DashboardCards, {\n    dashboards: DashboardList,\n    handleClick: handleNext,\n    generateAlert: function generateAlert() {\n      alert.changeAlertState(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })));\n});\nexport default ChooseADashboardType;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/ChooseADashboardType/index.tsx"],"names":["Typography","React","forwardRef","useImperativeHandle","useTranslation","DashboardList","useActions","AlertActions","getProjectRole","DashboardCards","useStyles","ChooseADashboardType","ref","handleNext","classes","t","alert","onNext","changeAlertState","heading","description","cards"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,mBAA5B,QAAuD,OAAvD;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,aAAP,MAA0B,wDAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,KAAKC,YAAZ,MAA8B,oCAA9B;AACA,SAASC,cAAT,QAA+B,sCAA/B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAMA,IAAMC,oBAAoB,GAAGT,UAAU,CACrC,gBAA4CU,GAA5C,EAAoD;AAAA,MAAjDC,UAAiD,QAAjDA,UAAiD;AAClD,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;;AACA,wBAAcN,cAAc,EAA5B;AAAA,MAAQW,CAAR,mBAAQA,CAAR;;AACA,MAAMC,KAAK,GAAGV,UAAU,CAACC,YAAD,CAAxB;;AAEA,WAASU,MAAT,GAAkB;AAChB,QAAIT,cAAc,OAAO,QAAzB,EAAmC;AACjCQ,MAAAA,KAAK,CAACE,gBAAN,CAAuB,IAAvB;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAEDf,EAAAA,mBAAmB,CAACS,GAAD,EAAM;AAAA,WAAO;AAC9BK,MAAAA,MAAM,EAANA;AAD8B,KAAP;AAAA,GAAN,CAAnB;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEH,OAAO,CAACK,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,CAAC,CACA,sEADA,CADJ,CADF,eAME,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAED,OAAO,CAACM,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,CAAC,CACA,2EADA,CADJ,CANF,eAWE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACO,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,UAAU,EAAEhB,aADd;AAEE,IAAA,WAAW,EAAEQ,UAFf;AAGE,IAAA,aAAa,EAAE,yBAAM;AACnBG,MAAAA,KAAK,CAACE,gBAAN,CAAuB,IAAvB;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF;AAuBD,CAzCoC,CAAvC;AA4CA,eAAeP,oBAAf","sourcesContent":["import { Typography } from '@material-ui/core';\nimport React, { forwardRef, useImperativeHandle } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport DashboardList from '../../../../../components/PreconfiguredDashboards/data';\nimport useActions from '../../../../../redux/actions';\nimport * as AlertActions from '../../../../../redux/actions/alert';\nimport { getProjectRole } from '../../../../../utils/getSearchParams';\nimport DashboardCards from './Cards/DashBoardCards';\nimport useStyles from './styles';\n\ninterface ChooseADashboardTypeProps {\n  handleNext: () => void;\n}\n\nconst ChooseADashboardType = forwardRef(\n  ({ handleNext }: ChooseADashboardTypeProps, ref) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const alert = useActions(AlertActions);\n\n    function onNext() {\n      if (getProjectRole() === 'Viewer') {\n        alert.changeAlertState(true);\n        return false;\n      }\n      return true;\n    }\n\n    useImperativeHandle(ref, () => ({\n      onNext,\n    }));\n\n    return (\n      <div>\n        <Typography className={classes.heading}>\n          {t(\n            'analyticsDashboard.applicationDashboards.chooseADashboardType.header'\n          )}\n        </Typography>\n        <Typography className={classes.description}>\n          {t(\n            'analyticsDashboard.applicationDashboards.chooseADashboardType.description'\n          )}\n        </Typography>\n        <div className={classes.cards}>\n          <DashboardCards\n            dashboards={DashboardList}\n            handleClick={handleNext}\n            generateAlert={() => {\n              alert.changeAlertState(true);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default ChooseADashboardType;\n"]},"metadata":{},"sourceType":"module"}