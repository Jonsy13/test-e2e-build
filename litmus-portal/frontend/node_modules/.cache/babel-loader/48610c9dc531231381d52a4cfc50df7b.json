{"ast":null,"code":"import{Typography}from'@material-ui/core';import React,{forwardRef,useImperativeHandle}from'react';import{useTranslation}from'react-i18next';import useActions from'../../../../../redux/actions';import*as AlertActions from'../../../../../redux/actions/alert';import{getProjectRole}from'../../../../../utils/getSearchParams';import DashboardMetadataForm from'./Form';import useStyles from'./styles';var ConfigureDashboardMetadata=forwardRef(function(_ref,ref){var dashboardVars=_ref.dashboardVars,dataSourceList=_ref.dataSourceList,handleMetadataUpdate=_ref.handleMetadataUpdate,configure=_ref.configure,setDisabledNext=_ref.setDisabledNext;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var alert=useActions(AlertActions);function onNext(){if(getProjectRole()==='Viewer'){alert.changeAlertState(true);return false;}return true;}useImperativeHandle(ref,function(){return{onNext:onNext};});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:classes.heading},t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.header')),/*#__PURE__*/React.createElement(Typography,{className:classes.description},t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.description')),/*#__PURE__*/React.createElement(\"div\",{className:classes.metadataForm},/*#__PURE__*/React.createElement(DashboardMetadataForm,{dashboardVars:dashboardVars,dataSourceList:dataSourceList,configure:configure,CallbackToSetVars:handleMetadataUpdate,setDisabledNext:setDisabledNext})));});export default ConfigureDashboardMetadata;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/ConfigureDashboardMetadata/index.tsx"],"names":["Typography","React","forwardRef","useImperativeHandle","useTranslation","useActions","AlertActions","getProjectRole","DashboardMetadataForm","useStyles","ConfigureDashboardMetadata","ref","dashboardVars","dataSourceList","handleMetadataUpdate","configure","setDisabledNext","classes","t","alert","onNext","changeAlertState","heading","description","metadataForm"],"mappings":"AAAA,OAASA,UAAT,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,mBAA5B,KAAuD,OAAvD,CACA,OAASC,cAAT,KAA+B,eAA/B,CAGA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAO,GAAKC,CAAAA,YAAZ,KAA8B,oCAA9B,CACA,OAASC,cAAT,KAA+B,sCAA/B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,QAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAUA,GAAMC,CAAAA,0BAA0B,CAAGR,UAAU,CAC3C,cAQES,GARF,CASK,IAPDC,CAAAA,aAOC,MAPDA,aAOC,CANDC,cAMC,MANDA,cAMC,CALDC,oBAKC,MALDA,oBAKC,CAJDC,SAIC,MAJDA,SAIC,CAHDC,eAGC,MAHDA,eAGC,CACH,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CACA,oBAAcL,cAAc,EAA5B,CAAQc,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,KAAK,CAAGd,UAAU,CAACC,YAAD,CAAxB,CAEA,QAASc,CAAAA,MAAT,EAAkB,CAChB,GAAIb,cAAc,KAAO,QAAzB,CAAmC,CACjCY,KAAK,CAACE,gBAAN,CAAuB,IAAvB,EACA,MAAO,MAAP,CACD,CACD,MAAO,KAAP,CACD,CAEDlB,mBAAmB,CAACQ,GAAD,CAAM,iBAAO,CAC9BS,MAAM,CAANA,MAD8B,CAAP,EAAN,CAAnB,CAIA,mBACE,4CACE,oBAAC,UAAD,EAAY,SAAS,CAAEH,OAAO,CAACK,OAA/B,EACGJ,CAAC,CACA,4EADA,CADJ,CADF,cAME,oBAAC,UAAD,EAAY,SAAS,CAAED,OAAO,CAACM,WAA/B,EACGL,CAAC,CACA,iFADA,CADJ,CANF,cAWE,2BAAK,SAAS,CAAED,OAAO,CAACO,YAAxB,eACE,oBAAC,qBAAD,EACE,aAAa,CAAEZ,aADjB,CAEE,cAAc,CAAEC,cAFlB,CAGE,SAAS,CAAEE,SAHb,CAIE,iBAAiB,CAAED,oBAJrB,CAKE,eAAe,CAAEE,eALnB,EADF,CAXF,CADF,CAuBD,CAlD0C,CAA7C,CAqDA,cAAeN,CAAAA,0BAAf","sourcesContent":["import { Typography } from '@material-ui/core';\nimport React, { forwardRef, useImperativeHandle } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardDetails } from '../../../../../models/dashboardsData';\nimport { ListDataSourceResponse } from '../../../../../models/graphql/dataSourceDetails';\nimport useActions from '../../../../../redux/actions';\nimport * as AlertActions from '../../../../../redux/actions/alert';\nimport { getProjectRole } from '../../../../../utils/getSearchParams';\nimport DashboardMetadataForm from './Form';\nimport useStyles from './styles';\n\ninterface ConfigureDashboardMetadataProps {\n  dashboardVars: DashboardDetails;\n  dataSourceList: ListDataSourceResponse[];\n  handleMetadataUpdate: (dashboardMetadata: DashboardDetails) => void;\n  configure: boolean;\n  setDisabledNext: (next: boolean) => void;\n}\n\nconst ConfigureDashboardMetadata = forwardRef(\n  (\n    {\n      dashboardVars,\n      dataSourceList,\n      handleMetadataUpdate,\n      configure,\n      setDisabledNext,\n    }: ConfigureDashboardMetadataProps,\n    ref\n  ) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const alert = useActions(AlertActions);\n\n    function onNext() {\n      if (getProjectRole() === 'Viewer') {\n        alert.changeAlertState(true);\n        return false;\n      }\n      return true;\n    }\n\n    useImperativeHandle(ref, () => ({\n      onNext,\n    }));\n\n    return (\n      <div>\n        <Typography className={classes.heading}>\n          {t(\n            'analyticsDashboard.applicationDashboards.configureDashboardMetadata.header'\n          )}\n        </Typography>\n        <Typography className={classes.description}>\n          {t(\n            'analyticsDashboard.applicationDashboards.configureDashboardMetadata.description'\n          )}\n        </Typography>\n        <div className={classes.metadataForm}>\n          <DashboardMetadataForm\n            dashboardVars={dashboardVars}\n            dataSourceList={dataSourceList}\n            configure={configure}\n            CallbackToSetVars={handleMetadataUpdate}\n            setDisabledNext={setDisabledNext}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default ConfigureDashboardMetadata;\n"]},"metadata":{},"sourceType":"module"}