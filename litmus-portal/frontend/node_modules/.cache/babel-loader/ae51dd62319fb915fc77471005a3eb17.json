{"ast":null,"code":"import{getNode}from'../../../utils/createSVGNode';import{getIcon}from'./icons';// Firefox 1.0+\n// @ts-ignore\nvar isFirefox=typeof InstallTrigger!=='undefined';var createLabel=function createLabel(_ref){var currentNodeID=_ref.currentNodeID,selectedNodeID=_ref.selectedNodeID,label=_ref.label,tooltip=_ref.tooltip,phase=_ref.phase,horizontal=_ref.horizontal;var g=getNode('g');var circle=getNode('circle',{cx:0,cy:0,r:15});g.appendChild(circle);// If Current Node is selected, then selection circle gets appended\nif(currentNodeID===selectedNodeID){var outerCircle=getNode('circle',{cx:0,cy:0,r:18,class:'selected'});g.appendChild(outerCircle);}if(tooltip){var title=getNode('title');title.innerHTML=tooltip;circle.appendChild(title);}g.appendChild(getIcon(phase));var text=getNode('text');g.appendChild(text);var increment=horizontal?10:25;for(var i=0;i<label.length;i+=increment){var tspan=getNode('tspan',{x:horizontal||label.length>25?-2*increment:-label.length*3,y:(isFirefox?35:20)+i*(horizontal?1.2:0.6),dy:'1rem'});tspan.innerHTML=i+increment<label.length-1?label.slice(i,i+increment):label.slice(i);text.appendChild(tspan);}return g;};export{createLabel};","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/WorkflowDetails/ArgoWorkflow/createLabel.ts"],"names":["getNode","getIcon","isFirefox","InstallTrigger","createLabel","currentNodeID","selectedNodeID","label","tooltip","phase","horizontal","g","circle","cx","cy","r","appendChild","outerCircle","class","title","innerHTML","text","increment","i","length","tspan","x","y","dy","slice"],"mappings":"AAAA,OAASA,OAAT,KAAwB,8BAAxB,CACA,OAASC,OAAT,KAAwB,SAAxB,CAeA;AACA;AACA,GAAMC,CAAAA,SAAS,CAAG,MAAOC,CAAAA,cAAP,GAA0B,WAA5C,CAEA,GAAMC,CAAAA,WAAwB,CAAG,QAA3BA,CAAAA,WAA2B,MAO3B,IANJC,CAAAA,aAMI,MANJA,aAMI,CALJC,cAKI,MALJA,cAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,OAGI,MAHJA,OAGI,CAFJC,KAEI,MAFJA,KAEI,CADJC,UACI,MADJA,UACI,CACJ,GAAMC,CAAAA,CAAC,CAAGX,OAAO,CAAC,GAAD,CAAjB,CAEA,GAAMY,CAAAA,MAAM,CAAGZ,OAAO,CAAC,QAAD,CAAW,CAC/Ba,EAAE,CAAE,CAD2B,CAE/BC,EAAE,CAAE,CAF2B,CAG/BC,CAAC,CAAE,EAH4B,CAAX,CAAtB,CAMAJ,CAAC,CAACK,WAAF,CAAcJ,MAAd,EAEA;AACA,GAAIP,aAAa,GAAKC,cAAtB,CAAsC,CACpC,GAAMW,CAAAA,WAAW,CAAGjB,OAAO,CAAC,QAAD,CAAW,CACpCa,EAAE,CAAE,CADgC,CAEpCC,EAAE,CAAE,CAFgC,CAGpCC,CAAC,CAAE,EAHiC,CAIpCG,KAAK,CAAE,UAJ6B,CAAX,CAA3B,CAMAP,CAAC,CAACK,WAAF,CAAcC,WAAd,EACD,CAED,GAAIT,OAAJ,CAAa,CACX,GAAMW,CAAAA,KAAK,CAAGnB,OAAO,CAAC,OAAD,CAArB,CACAmB,KAAK,CAACC,SAAN,CAAkBZ,OAAlB,CACAI,MAAM,CAACI,WAAP,CAAmBG,KAAnB,EACD,CAEDR,CAAC,CAACK,WAAF,CAAcf,OAAO,CAACQ,KAAD,CAArB,EAEA,GAAMY,CAAAA,IAAI,CAAGrB,OAAO,CAAC,MAAD,CAApB,CACAW,CAAC,CAACK,WAAF,CAAcK,IAAd,EAEA,GAAMC,CAAAA,SAAS,CAAGZ,UAAU,CAAG,EAAH,CAAQ,EAApC,CACA,IAAK,GAAIa,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGhB,KAAK,CAACiB,MAA1B,CAAkCD,CAAC,EAAID,SAAvC,CAAkD,CAChD,GAAMG,CAAAA,KAAK,CAAGzB,OAAO,CAAC,OAAD,CAAU,CAC7B0B,CAAC,CAAEhB,UAAU,EAAIH,KAAK,CAACiB,MAAN,CAAe,EAA7B,CAAkC,CAAC,CAAD,CAAKF,SAAvC,CAAmD,CAACf,KAAK,CAACiB,MAAP,CAAgB,CADzC,CAE7BG,CAAC,CAAE,CAACzB,SAAS,CAAG,EAAH,CAAQ,EAAlB,EAAwBqB,CAAC,EAAIb,UAAU,CAAG,GAAH,CAAS,GAAvB,CAFC,CAG7BkB,EAAE,CAAE,MAHyB,CAAV,CAArB,CAKAH,KAAK,CAACL,SAAN,CACEG,CAAC,CAAGD,SAAJ,CAAgBf,KAAK,CAACiB,MAAN,CAAe,CAA/B,CACIjB,KAAK,CAACsB,KAAN,CAAYN,CAAZ,CAAeA,CAAC,CAAGD,SAAnB,CADJ,CAEIf,KAAK,CAACsB,KAAN,CAAYN,CAAZ,CAHN,CAIAF,IAAI,CAACL,WAAL,CAAiBS,KAAjB,EACD,CAED,MAAOd,CAAAA,CAAP,CACD,CAvDD,CAwDA,OAASP,WAAT","sourcesContent":["import { getNode } from '../../../utils/createSVGNode';\nimport { getIcon } from './icons';\n\ninterface CreateLabelProps {\n  currentNodeID: string;\n  selectedNodeID: string;\n  label: string;\n  tooltip?: string;\n  phase: string;\n  horizontal: boolean;\n}\n\ninterface CreateLabel {\n  (props: CreateLabelProps): SVGElement;\n}\n\n// Firefox 1.0+\n// @ts-ignore\nconst isFirefox = typeof InstallTrigger !== 'undefined';\n\nconst createLabel: CreateLabel = ({\n  currentNodeID,\n  selectedNodeID,\n  label,\n  tooltip,\n  phase,\n  horizontal,\n}) => {\n  const g = getNode('g');\n\n  const circle = getNode('circle', {\n    cx: 0,\n    cy: 0,\n    r: 15,\n  });\n\n  g.appendChild(circle);\n\n  // If Current Node is selected, then selection circle gets appended\n  if (currentNodeID === selectedNodeID) {\n    const outerCircle = getNode('circle', {\n      cx: 0,\n      cy: 0,\n      r: 18,\n      class: 'selected',\n    });\n    g.appendChild(outerCircle);\n  }\n\n  if (tooltip) {\n    const title = getNode('title');\n    title.innerHTML = tooltip;\n    circle.appendChild(title);\n  }\n\n  g.appendChild(getIcon(phase));\n\n  const text = getNode('text');\n  g.appendChild(text);\n\n  const increment = horizontal ? 10 : 25;\n  for (let i = 0; i < label.length; i += increment) {\n    const tspan = getNode('tspan', {\n      x: horizontal || label.length > 25 ? -2 * increment : -label.length * 3,\n      y: (isFirefox ? 35 : 20) + i * (horizontal ? 1.2 : 0.6),\n      dy: '1rem',\n    });\n    tspan.innerHTML =\n      i + increment < label.length - 1\n        ? label.slice(i, i + increment)\n        : label.slice(i);\n    text.appendChild(tspan);\n  }\n\n  return g;\n};\nexport { createLabel };\n"]},"metadata":{},"sourceType":"module"}