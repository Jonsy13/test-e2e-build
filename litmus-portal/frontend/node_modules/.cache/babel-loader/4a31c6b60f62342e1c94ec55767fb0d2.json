{"ast":null,"code":"import _regeneratorRuntime from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/* eslint-disable no-unused-expressions */import{IconButton,Typography}from'@material-ui/core';import React from'react';import useActions from'../../../../redux/actions';import*as DashboardActions from'../../../../redux/actions/dashboards';import*as DataSourceActions from'../../../../redux/actions/dataSource';import{history}from'../../../../redux/configureStore';import{ReactComponent as AnalyticsIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/analytics.svg\";import{ReactComponent as CogwheelIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/cogwheel.svg\";import{ReactComponent as DownloadIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/download.svg\";import timeDifferenceForDate from'../../../../utils/datesModifier';import{getProjectID,getProjectRole}from'../../../../utils/getSearchParams';import useStyles from'./styles';var ApplicationDashboardCard=function ApplicationDashboardCard(_ref){var data=_ref.data;var classes=useStyles();var dashboard=useActions(DashboardActions);var dataSource=useActions(DataSourceActions);var projectID=getProjectID();var projectRole=getProjectRole();var onDashboardLoadRoutine=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dashboard.selectDashboard({selectedDashboardID:data.db_id,refreshRate:0});dataSource.selectDataSource({selectedDataSourceURL:'',selectedDataSourceID:'',selectedDataSourceName:''});return _context.abrupt(\"return\",true);case 3:case\"end\":return _context.stop();}}},_callee);}));return function onDashboardLoadRoutine(){return _ref2.apply(this,arguments);};}();var getDashboard=function getDashboard(){var _data$application_met;var panelGroupMap=[];var panelGroups=[];data.panel_groups.forEach(function(panelGroup){panelGroupMap.push({groupName:panelGroup.panel_group_name,panels:[]});var len=panelGroupMap.length;var selectedPanels=[];panelGroup.panels.forEach(function(panel){panelGroupMap[len-1].panels.push(panel.panel_name);var queries=[];panel.prom_queries.forEach(function(query){queries.push({prom_query_name:query.prom_query_name,legend:query.legend,resolution:query.resolution,minstep:query.minstep,line:query.line,close_area:query.close_area});});var options={points:panel.panel_options.points,grids:panel.panel_options.grids,left_axis:panel.panel_options.left_axis};var selectedPanel={prom_queries:queries,panel_options:options,panel_name:panel.panel_name,y_axis_left:panel.y_axis_left,y_axis_right:panel.y_axis_right,x_axis_down:panel.x_axis_down,unit:panel.unit};selectedPanels.push(selectedPanel);});panelGroups.push({panel_group_name:panelGroup.panel_group_name,panels:selectedPanels});});var applicationMetadataMap=[];(_data$application_met=data.application_metadata_map)===null||_data$application_met===void 0?void 0:_data$application_met.forEach(function(applicationMetadata){var applications=[];applicationMetadata.applications.forEach(function(application){applications.push({kind:application.kind,names:application.names});});applicationMetadataMap.push({namespace:applicationMetadata.namespace,applications:applications});});var exportedDashboard={dashboardID:data.db_type_id,name:data.db_name,information:data.db_information,chaosEventQueryTemplate:data.chaos_event_query_template,chaosVerdictQueryTemplate:data.chaos_verdict_query_template,applicationMetadataMap:applicationMetadataMap,panelGroupMap:panelGroupMap,panelGroups:panelGroups};return exportedDashboard;};// Function to download the JSON\nvar downloadJSON=function downloadJSON(){var element=document.createElement('a');var file=new Blob([JSON.stringify(getDashboard(),null,2)],{type:'text/json'});element.href=URL.createObjectURL(file);element.download=\"\".concat(data.db_name,\".json\");document.body.appendChild(element);element.click();};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.animatedContainer},/*#__PURE__*/React.createElement(\"div\",{className:classes.workflowDataContainer},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.statusDiv},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/\".concat(data.db_type_id,\"_dashboard.svg\"),alt:\"k8s\",title:data.db_type}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:\"\".concat(classes.testName,\" \").concat(classes.noWrapProvider)},data.db_name),/*#__PURE__*/React.createElement(Typography,{className:classes.hint},\"Agent: \",data.cluster_name)))),/*#__PURE__*/React.createElement(Typography,{className:\"\".concat(classes.noWrapProvider,\" \").concat(classes.hint)},timeDifferenceForDate(data.updated_at)),/*#__PURE__*/React.createElement(\"section\",{className:classes.cardActionsSection},/*#__PURE__*/React.createElement(\"div\",{className:classes.cardActions},/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){onDashboardLoadRoutine().then(function(){history.push({pathname:'/analytics/application-dashboard',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});});}},/*#__PURE__*/React.createElement(AnalyticsIcon,null)),/*#__PURE__*/React.createElement(Typography,null,\"Analytics\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.cardActions},/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){dashboard.selectDashboard({selectedDashboardID:data.db_id,activePanelID:''});history.push({pathname:'/analytics/dashboard/configure',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});}},/*#__PURE__*/React.createElement(CogwheelIcon,null)),/*#__PURE__*/React.createElement(Typography,null,\"Configure\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.cardActions},/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){return downloadJSON();}},/*#__PURE__*/React.createElement(DownloadIcon,null)),/*#__PURE__*/React.createElement(Typography,null,\"JSON\"))))));};export{ApplicationDashboardCard};","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/Overview/ApplicationDashboardCard/index.tsx"],"names":["IconButton","Typography","React","useActions","DashboardActions","DataSourceActions","history","timeDifferenceForDate","getProjectID","getProjectRole","useStyles","ApplicationDashboardCard","data","classes","dashboard","dataSource","projectID","projectRole","onDashboardLoadRoutine","selectDashboard","selectedDashboardID","db_id","refreshRate","selectDataSource","selectedDataSourceURL","selectedDataSourceID","selectedDataSourceName","getDashboard","panelGroupMap","panelGroups","panel_groups","forEach","panelGroup","push","groupName","panel_group_name","panels","len","length","selectedPanels","panel","panel_name","queries","prom_queries","query","prom_query_name","legend","resolution","minstep","line","close_area","options","points","panel_options","grids","left_axis","selectedPanel","y_axis_left","y_axis_right","x_axis_down","unit","applicationMetadataMap","application_metadata_map","applicationMetadata","applications","application","kind","names","namespace","exportedDashboard","dashboardID","db_type_id","name","db_name","information","db_information","chaosEventQueryTemplate","chaos_event_query_template","chaosVerdictQueryTemplate","chaos_verdict_query_template","downloadJSON","element","document","createElement","file","Blob","JSON","stringify","type","href","URL","createObjectURL","download","body","appendChild","click","animatedContainer","workflowDataContainer","statusDiv","db_type","testName","noWrapProvider","hint","cluster_name","updated_at","cardActionsSection","cardActions","then","pathname","search","activePanelID"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { IconButton, Typography } from '@material-ui/core';\nimport React from 'react';\nimport {\n  DashboardExport,\n  PanelExport,\n  PanelGroupExport,\n  PanelGroupMap,\n  PromQueryExport,\n} from '../../../../models/dashboardsData';\nimport {\n  ApplicationMetadata,\n  ListDashboardResponse,\n  PanelOption,\n  Resource,\n} from '../../../../models/graphql/dashboardsDetails';\nimport useActions from '../../../../redux/actions';\nimport * as DashboardActions from '../../../../redux/actions/dashboards';\nimport * as DataSourceActions from '../../../../redux/actions/dataSource';\nimport { history } from '../../../../redux/configureStore';\nimport { ReactComponent as AnalyticsIcon } from '../../../../svg/analytics.svg';\nimport { ReactComponent as CogwheelIcon } from '../../../../svg/cogwheel.svg';\nimport { ReactComponent as DownloadIcon } from '../../../../svg/download.svg';\nimport timeDifferenceForDate from '../../../../utils/datesModifier';\nimport {\n  getProjectID,\n  getProjectRole,\n} from '../../../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface ApplicationDashboardCardProps {\n  data: ListDashboardResponse;\n}\n\nconst ApplicationDashboardCard: React.FC<ApplicationDashboardCardProps> = ({\n  data,\n}) => {\n  const classes = useStyles();\n\n  const dashboard = useActions(DashboardActions);\n  const dataSource = useActions(DataSourceActions);\n\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n\n  const onDashboardLoadRoutine = async () => {\n    dashboard.selectDashboard({\n      selectedDashboardID: data.db_id,\n      refreshRate: 0,\n    });\n    dataSource.selectDataSource({\n      selectedDataSourceURL: '',\n      selectedDataSourceID: '',\n      selectedDataSourceName: '',\n    });\n    return true;\n  };\n\n  const getDashboard = () => {\n    const panelGroupMap: PanelGroupMap[] = [];\n    const panelGroups: PanelGroupExport[] = [];\n    data.panel_groups.forEach((panelGroup) => {\n      panelGroupMap.push({\n        groupName: panelGroup.panel_group_name,\n        panels: [],\n      });\n      const len: number = panelGroupMap.length;\n      const selectedPanels: PanelExport[] = [];\n      panelGroup.panels.forEach((panel) => {\n        panelGroupMap[len - 1].panels.push(panel.panel_name);\n        const queries: PromQueryExport[] = [];\n        panel.prom_queries.forEach((query) => {\n          queries.push({\n            prom_query_name: query.prom_query_name,\n            legend: query.legend,\n            resolution: query.resolution,\n            minstep: query.minstep,\n            line: query.line,\n            close_area: query.close_area,\n          });\n        });\n        const options: PanelOption = {\n          points: panel.panel_options.points,\n          grids: panel.panel_options.grids,\n          left_axis: panel.panel_options.left_axis,\n        };\n        const selectedPanel: PanelExport = {\n          prom_queries: queries,\n          panel_options: options,\n          panel_name: panel.panel_name,\n          y_axis_left: panel.y_axis_left,\n          y_axis_right: panel.y_axis_right,\n          x_axis_down: panel.x_axis_down,\n          unit: panel.unit,\n        };\n        selectedPanels.push(selectedPanel);\n      });\n      panelGroups.push({\n        panel_group_name: panelGroup.panel_group_name,\n        panels: selectedPanels,\n      });\n    });\n\n    const applicationMetadataMap: ApplicationMetadata[] = [];\n\n    data.application_metadata_map?.forEach((applicationMetadata) => {\n      const applications: Resource[] = [];\n\n      applicationMetadata.applications.forEach((application) => {\n        applications.push({\n          kind: application.kind,\n          names: application.names,\n        });\n      });\n      applicationMetadataMap.push({\n        namespace: applicationMetadata.namespace,\n        applications,\n      });\n    });\n\n    const exportedDashboard: DashboardExport = {\n      dashboardID: data.db_type_id,\n      name: data.db_name,\n      information: data.db_information,\n      chaosEventQueryTemplate: data.chaos_event_query_template,\n      chaosVerdictQueryTemplate: data.chaos_verdict_query_template,\n      applicationMetadataMap,\n      panelGroupMap,\n      panelGroups,\n    };\n\n    return exportedDashboard;\n  };\n\n  // Function to download the JSON\n  const downloadJSON = () => {\n    const element = document.createElement('a');\n    const file = new Blob([JSON.stringify(getDashboard(), null, 2)], {\n      type: 'text/json',\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = `${data.db_name}.json`;\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  return (\n    <>\n      <div className={classes.animatedContainer}>\n        <div className={classes.workflowDataContainer}>\n          <div>\n            <div className={classes.statusDiv}>\n              <img\n                src={`/icons/${data.db_type_id}_dashboard.svg`}\n                alt=\"k8s\"\n                title={data.db_type}\n              />\n              <div>\n                <Typography\n                  className={`${classes.testName} ${classes.noWrapProvider}`}\n                >\n                  {data.db_name}\n                </Typography>\n                <Typography className={classes.hint}>\n                  Agent: {data.cluster_name}\n                </Typography>\n              </div>\n            </div>\n          </div>\n          <Typography className={`${classes.noWrapProvider} ${classes.hint}`}>\n            {timeDifferenceForDate(data.updated_at)}\n          </Typography>\n          <section className={classes.cardActionsSection}>\n            <div className={classes.cardActions}>\n              <IconButton\n                onClick={() => {\n                  onDashboardLoadRoutine().then(() => {\n                    history.push({\n                      pathname: '/analytics/application-dashboard',\n                      search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                    });\n                  });\n                }}\n              >\n                <AnalyticsIcon />\n              </IconButton>\n              <Typography>Analytics</Typography>\n            </div>\n            <div className={classes.cardActions}>\n              <IconButton\n                onClick={() => {\n                  dashboard.selectDashboard({\n                    selectedDashboardID: data.db_id,\n                    activePanelID: '',\n                  });\n                  history.push({\n                    pathname: '/analytics/dashboard/configure',\n                    search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                  });\n                }}\n              >\n                <CogwheelIcon />\n              </IconButton>\n              <Typography>Configure</Typography>\n            </div>\n            <div className={classes.cardActions}>\n              <IconButton onClick={() => downloadJSON()}>\n                <DownloadIcon />\n              </IconButton>\n              <Typography>JSON</Typography>\n            </div>\n          </section>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport { ApplicationDashboardCard };\n"]},"metadata":{},"sourceType":"module"}