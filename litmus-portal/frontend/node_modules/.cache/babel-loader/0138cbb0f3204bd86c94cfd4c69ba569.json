{"ast":null,"code":"import _regeneratorRuntime from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Table/TableData.tsx\";\n\nimport { useMutation } from '@apollo/client';\nimport { IconButton, Menu, MenuItem, Typography } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { ButtonFilled, Modal, TextButton } from 'litmus-ui';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DELETE_DASHBOARD } from '../../../../graphql/mutations';\nimport useActions from '../../../../redux/actions';\nimport * as DashboardActions from '../../../../redux/actions/dashboards';\nimport * as DataSourceActions from '../../../../redux/actions/dataSource';\nimport { history } from '../../../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../../../utils/getSearchParams';\nimport useStyles, { StyledTableCell } from './styles';\n\nvar TableData = function TableData(_ref) {\n  var data = _ref.data,\n      alertStateHandler = _ref.alertStateHandler;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var dashboard = useActions(DashboardActions);\n  var dataSource = useActions(DataSourceActions);\n  var projectID = getProjectID();\n  var projectRole = getProjectRole();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mutate = _React$useState2[0],\n      setMutate = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openModal = _React$useState4[0],\n      setOpenModal = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    dbID: ''\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      dashboardSelectedForDeleting = _React$useState6[0],\n      setDashboardSelectedForDeleting = _React$useState6[1]; // Function to convert UNIX time in format of dddd, DD MMM YYYY, HH:mm\n\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var resDate = moment(updated).format('dddd, DD MMM YYYY, HH:mm');\n    return resDate;\n  };\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      anchorEl = _React$useState8[0],\n      setAnchorEl = _React$useState8[1];\n\n  var open = Boolean(anchorEl);\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var _useMutation = useMutation(DELETE_DASHBOARD, {\n    onCompleted: function onCompleted() {\n      setMutate(false);\n      alertStateHandler(true);\n    },\n    onError: function onError() {\n      setMutate(false);\n      alertStateHandler(false);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      deleteDashboard = _useMutation2[0];\n\n  var onDashboardLoadRoutine = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dashboard.selectDashboard({\n                selectedDashboardID: data.db_id,\n                refreshRate: 0\n              });\n              dataSource.selectDataSource({\n                selectedDataSourceURL: '',\n                selectedDataSourceID: '',\n                selectedDataSourceName: ''\n              });\n              return _context.abrupt(\"return\", true);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onDashboardLoadRoutine() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (mutate === true) {\n      deleteDashboard({\n        variables: {\n          dbID: dashboardSelectedForDeleting.dbID\n        }\n      });\n    }\n  }, [mutate]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledTableCell, {\n    className: classes.columnDivider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.tableObjects, \" \").concat(classes.dashboardNameCol, \" \").concat(classes.dashboardNameColData),\n    onClick: function onClick() {\n      onDashboardLoadRoutine().then(function () {\n        history.push({\n          pathname: '/analytics/application-dashboard',\n          search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n        });\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, data.db_name)), /*#__PURE__*/React.createElement(StyledTableCell, {\n    className: classes.dividerPadding,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.tableObjects,\n    style: {\n      maxWidth: '5rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, data.cluster_name)), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.tableObjects,\n    style: {\n      maxWidth: '7rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/\".concat(data.db_type_id, \"_dashboard.svg\"),\n    alt: data.db_type_name,\n    className: classes.inlineTypeIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), data.db_type_name)), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.tableObjects,\n    style: {\n      maxWidth: '5rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/prometheus.svg\",\n    alt: \"Prometheus\",\n    className: classes.inlineIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), data.ds_type)), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.tableObjects,\n    style: {\n      maxWidth: '12.5rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/calendarIcon.svg\",\n    alt: \"Calender\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }), formatDate(data.updated_at))), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"more\",\n    \"aria-controls\": \"long-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    \"data-cy\": \"browseDashboardOptions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    className: classes.headerIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Menu, {\n    id: \"long-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    getContentAnchorEl: null,\n    classes: {\n      paper: classes.menuList\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"View\",\n    onClick: function onClick() {\n      onDashboardLoadRoutine().then(function () {\n        history.push({\n          pathname: '/analytics/application-dashboard',\n          search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n        });\n      });\n    },\n    className: classes.menuItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/viewAnalytics.svg\",\n    alt: \"View\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"openDashboard\",\n    className: classes.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.applicationDashboardTable.view')))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Configure\",\n    onClick: function onClick() {\n      dashboard.selectDashboard({\n        selectedDashboardID: data.db_id,\n        activePanelID: ''\n      });\n      history.push({\n        pathname: '/analytics/dashboard/configure',\n        search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n      });\n    },\n    className: classes.menuItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/cogwheel.svg\",\n    alt: \"Configure\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \" configureDashboard\",\n    className: classes.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.applicationDashboardTable.configure')))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Delete\",\n    onClick: function onClick() {\n      setDashboardSelectedForDeleting({\n        dbID: data.db_id\n      });\n      setOpenModal(true);\n      handleClose();\n    },\n    className: classes.menuItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/delete.svg\",\n    alt: \"Delete\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"deleteDashboard\",\n    className: \"\".concat(classes.btnText, \" \").concat(classes.deleteText),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.applicationDashboardTable.delete')))))), /*#__PURE__*/React.createElement(Modal, {\n    open: openModal,\n    onClose: function onClose() {\n      return setOpenModal(false);\n    },\n    width: \"45%\",\n    height: \"fit-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalHeading,\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.applicationDashboardTable.modal.removeDashboard')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalBodyText,\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.applicationDashboardTable.modal.removeDashboardConfirmation'), /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, \" \".concat(data.db_name, \" \"))), \"?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexButtons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextButton, {\n    onClick: function onClick() {\n      return setOpenModal(false);\n    },\n    className: classes.cancelButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.applicationDashboardTable.modal.cancel'))), /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: function onClick() {\n      setMutate(true);\n      setOpenModal(false);\n    },\n    variant: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.buttonText, \" \").concat(classes.confirmButtonText),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.applicationDashboardTable.modal.delete')))))));\n};\n\nexport default TableData;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Table/TableData.tsx"],"names":["useMutation","IconButton","Menu","MenuItem","Typography","MoreVertIcon","ButtonFilled","Modal","TextButton","moment","React","useEffect","useTranslation","DELETE_DASHBOARD","useActions","DashboardActions","DataSourceActions","history","getProjectID","getProjectRole","useStyles","StyledTableCell","TableData","data","alertStateHandler","classes","t","dashboard","dataSource","projectID","projectRole","useState","mutate","setMutate","openModal","setOpenModal","dbID","dashboardSelectedForDeleting","setDashboardSelectedForDeleting","formatDate","date","updated","Date","parseInt","toString","resDate","format","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","onCompleted","onError","deleteDashboard","onDashboardLoadRoutine","selectDashboard","selectedDashboardID","db_id","refreshRate","selectDataSource","selectedDataSourceURL","selectedDataSourceID","selectedDataSourceName","variables","columnDivider","tableObjects","dashboardNameCol","dashboardNameColData","then","push","pathname","search","db_name","dividerPadding","maxWidth","cluster_name","db_type_id","db_type_name","inlineTypeIcon","inlineIcon","ds_type","updated_at","headerIcon","vertical","horizontal","paper","menuList","menuItem","expDiv","btnImg","btnText","activePanelID","deleteText","modal","modalHeading","modalBodyText","flexButtons","cancelButton","buttonText","confirmButtonText"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\nimport { IconButton, Menu, MenuItem, Typography } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { ButtonFilled, Modal, TextButton } from 'litmus-ui';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DELETE_DASHBOARD } from '../../../../graphql/mutations';\nimport {\n  DeleteDashboardInput,\n  ListDashboardResponse,\n} from '../../../../models/graphql/dashboardsDetails';\nimport useActions from '../../../../redux/actions';\nimport * as DashboardActions from '../../../../redux/actions/dashboards';\nimport * as DataSourceActions from '../../../../redux/actions/dataSource';\nimport { history } from '../../../../redux/configureStore';\nimport {\n  getProjectID,\n  getProjectRole,\n} from '../../../../utils/getSearchParams';\nimport useStyles, { StyledTableCell } from './styles';\n\ninterface TableDataProps {\n  data: ListDashboardResponse;\n  alertStateHandler: (successState: boolean) => void;\n}\n\nconst TableData: React.FC<TableDataProps> = ({ data, alertStateHandler }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const dashboard = useActions(DashboardActions);\n  const dataSource = useActions(DataSourceActions);\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n  const [mutate, setMutate] = React.useState(false);\n  const [openModal, setOpenModal] = React.useState(false);\n  const [dashboardSelectedForDeleting, setDashboardSelectedForDeleting] =\n    React.useState<DeleteDashboardInput>({\n      dbID: '',\n    });\n\n  // Function to convert UNIX time in format of dddd, DD MMM YYYY, HH:mm\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('dddd, DD MMM YYYY, HH:mm');\n    return resDate;\n  };\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [deleteDashboard] = useMutation<boolean, DeleteDashboardInput>(\n    DELETE_DASHBOARD,\n    {\n      onCompleted: () => {\n        setMutate(false);\n        alertStateHandler(true);\n      },\n      onError: () => {\n        setMutate(false);\n        alertStateHandler(false);\n      },\n    }\n  );\n\n  const onDashboardLoadRoutine = async () => {\n    dashboard.selectDashboard({\n      selectedDashboardID: data.db_id,\n      refreshRate: 0,\n    });\n    dataSource.selectDataSource({\n      selectedDataSourceURL: '',\n      selectedDataSourceID: '',\n      selectedDataSourceName: '',\n    });\n    return true;\n  };\n\n  useEffect(() => {\n    if (mutate === true) {\n      deleteDashboard({\n        variables: { dbID: dashboardSelectedForDeleting.dbID },\n      });\n    }\n  }, [mutate]);\n\n  return (\n    <>\n      <StyledTableCell className={classes.columnDivider}>\n        <Typography\n          className={`${classes.tableObjects} ${classes.dashboardNameCol} ${classes.dashboardNameColData}`}\n          onClick={() => {\n            onDashboardLoadRoutine().then(() => {\n              history.push({\n                pathname: '/analytics/application-dashboard',\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              });\n            });\n          }}\n        >\n          {data.db_name}\n        </Typography>\n      </StyledTableCell>\n\n      <StyledTableCell className={classes.dividerPadding}>\n        <Typography\n          className={classes.tableObjects}\n          style={{ maxWidth: '5rem' }}\n        >\n          {data.cluster_name}\n        </Typography>\n      </StyledTableCell>\n\n      <StyledTableCell>\n        <Typography\n          className={classes.tableObjects}\n          style={{ maxWidth: '7rem' }}\n        >\n          <img\n            src={`/icons/${data.db_type_id}_dashboard.svg`}\n            alt={data.db_type_name}\n            className={classes.inlineTypeIcon}\n          />\n          {data.db_type_name}\n        </Typography>\n      </StyledTableCell>\n\n      <StyledTableCell>\n        <Typography\n          className={classes.tableObjects}\n          style={{ maxWidth: '5rem' }}\n        >\n          <img\n            src=\"/icons/prometheus.svg\"\n            alt=\"Prometheus\"\n            className={classes.inlineIcon}\n          />\n          {data.ds_type}\n        </Typography>\n      </StyledTableCell>\n\n      <StyledTableCell>\n        <Typography\n          className={classes.tableObjects}\n          style={{ maxWidth: '12.5rem' }}\n        >\n          <img src=\"/icons/calendarIcon.svg\" alt=\"Calender\" />\n          {formatDate(data.updated_at)}\n        </Typography>\n      </StyledTableCell>\n\n      <StyledTableCell>\n        <IconButton\n          aria-label=\"more\"\n          aria-controls=\"long-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n          data-cy=\"browseDashboardOptions\"\n        >\n          <MoreVertIcon className={classes.headerIcon} />\n        </IconButton>\n        <Menu\n          id=\"long-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          getContentAnchorEl={null}\n          classes={{ paper: classes.menuList }}\n        >\n          <MenuItem\n            value=\"View\"\n            onClick={() => {\n              onDashboardLoadRoutine().then(() => {\n                history.push({\n                  pathname: '/analytics/application-dashboard',\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n              });\n            }}\n            className={classes.menuItem}\n          >\n            <div className={classes.expDiv}>\n              <img\n                src=\"/icons/viewAnalytics.svg\"\n                alt=\"View\"\n                className={classes.btnImg}\n              />\n              <Typography data-cy=\"openDashboard\" className={classes.btnText}>\n                {t('analyticsDashboard.applicationDashboardTable.view')}\n              </Typography>\n            </div>\n          </MenuItem>\n\n          <MenuItem\n            value=\"Configure\"\n            onClick={() => {\n              dashboard.selectDashboard({\n                selectedDashboardID: data.db_id,\n                activePanelID: '',\n              });\n              history.push({\n                pathname: '/analytics/dashboard/configure',\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              });\n            }}\n            className={classes.menuItem}\n          >\n            <div className={classes.expDiv}>\n              <img\n                src=\"/icons/cogwheel.svg\"\n                alt=\"Configure\"\n                className={classes.btnImg}\n              />\n              <Typography\n                data-cy=\" configureDashboard\"\n                className={classes.btnText}\n              >\n                {t('analyticsDashboard.applicationDashboardTable.configure')}\n              </Typography>\n            </div>\n          </MenuItem>\n\n          <MenuItem\n            value=\"Delete\"\n            onClick={() => {\n              setDashboardSelectedForDeleting({\n                dbID: data.db_id,\n              });\n              setOpenModal(true);\n              handleClose();\n            }}\n            className={classes.menuItem}\n          >\n            <div className={classes.expDiv}>\n              <img\n                src=\"/icons/delete.svg\"\n                alt=\"Delete\"\n                className={classes.btnImg}\n              />\n              <Typography\n                data-cy=\"deleteDashboard\"\n                className={`${classes.btnText} ${classes.deleteText}`}\n              >\n                {t('analyticsDashboard.applicationDashboardTable.delete')}\n              </Typography>\n            </div>\n          </MenuItem>\n        </Menu>\n      </StyledTableCell>\n      <Modal\n        open={openModal}\n        onClose={() => setOpenModal(false)}\n        width=\"45%\"\n        height=\"fit-content\"\n      >\n        <div className={classes.modal}>\n          <Typography className={classes.modalHeading} align=\"left\">\n            {t(\n              'analyticsDashboard.applicationDashboardTable.modal.removeDashboard'\n            )}\n          </Typography>\n\n          <Typography className={classes.modalBodyText} align=\"left\">\n            {t(\n              'analyticsDashboard.applicationDashboardTable.modal.removeDashboardConfirmation'\n            )}\n            <b>\n              <i>{` ${data.db_name} `}</i>\n            </b>\n            ?\n          </Typography>\n\n          <div className={classes.flexButtons}>\n            <TextButton\n              onClick={() => setOpenModal(false)}\n              className={classes.cancelButton}\n            >\n              <Typography className={classes.buttonText}>\n                {t('analyticsDashboard.applicationDashboardTable.modal.cancel')}\n              </Typography>\n            </TextButton>\n            <ButtonFilled\n              onClick={() => {\n                setMutate(true);\n                setOpenModal(false);\n              }}\n              variant=\"error\"\n            >\n              <Typography\n                className={`${classes.buttonText} ${classes.confirmButtonText}`}\n              >\n                {t('analyticsDashboard.applicationDashboardTable.modal.delete')}\n              </Typography>\n            </ButtonFilled>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}