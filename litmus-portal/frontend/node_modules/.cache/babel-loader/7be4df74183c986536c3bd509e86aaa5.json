{"ast":null,"code":"import _objectSpread from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowComparisonTable/index.tsx\";\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-loop-func */\nimport { useQuery } from '@apollo/client';\nimport { IconButton, Paper, Table, TableBody, TableCell, TableContainer, TablePagination, TableRow, Typography } from '@material-ui/core';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as _ from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../../components/Loader';\nimport { WORKFLOW_LIST_DETAILS } from '../../../../graphql/queries';\nimport { getProjectID } from '../../../../utils/getSearchParams';\nimport { sortAlphaAsc, sortAlphaDesc, sortNumAsc, sortNumDesc } from '../../../../utils/sort';\nimport ResilienceScoreComparisonPlot from '../WorkflowComparisonPlot/index';\nimport WorkflowGraphs from '../WorkflowGraphs';\nimport useStyles from './styles';\nimport TableData from './TableData';\nimport TableHeader from './TableHeader';\nimport TableToolBar from './TableToolbar';\n\nvar WorkflowComparisonTable = function WorkflowComparisonTable() {\n  var classes = useStyles();\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _React$useState = React.useState({\n    range: {\n      startDate: 'all',\n      endDate: 'all'\n    },\n    selectedCluster: 'All',\n    sortData: {\n      name: {\n        sort: false,\n        ascending: true\n      },\n      startDate: {\n        sort: true,\n        ascending: true\n      },\n      cluster: {\n        sort: false,\n        ascending: true\n      }\n    },\n    searchTokens: ['']\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      filter = _React$useState2[0],\n      setFilter = _React$useState2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayData = _useState2[0],\n      setDisplayData = _useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      clusters = _React$useState4[0],\n      setClusters = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      page = _React$useState6[0],\n      setPage = _React$useState6[1];\n\n  var _React$useState7 = React.useState(5),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      rowsPerPage = _React$useState8[0],\n      setRowsPerPage = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      selected = _React$useState10[0],\n      setSelected = _React$useState10[1];\n\n  var isSelected = function isSelected(name) {\n    return selected.indexOf(name) !== -1;\n  };\n\n  var emptyRows = rowsPerPage - Math.min(rowsPerPage, displayData.length - page * rowsPerPage);\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      compare = _React$useState12[0],\n      setCompare = _React$useState12[1];\n\n  var _React$useState13 = React.useState(true),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      isDataAvailable = _React$useState14[0],\n      setIsDataAvailable = _React$useState14[1];\n\n  var _React$useState15 = React.useState(true),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      showAll = _React$useState16[0],\n      setShowAll = _React$useState16[1];\n\n  var _React$useState17 = React.useState(),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      plotDataForComparison = _React$useState18[0],\n      setPlotDataForComparison = _React$useState18[1];\n\n  var _React$useState19 = React.useState([]),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      totalValidWorkflowRuns = _React$useState20[0],\n      setTotalValidWorkflowRuns = _React$useState20[1];\n\n  var _React$useState21 = React.useState(0),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      totalValidWorkflowRunsCount = _React$useState22[0],\n      setTotalValidWorkflowRunsCount = _React$useState22[1];\n\n  var projectID = getProjectID(); // Apollo query to get the scheduled workflow data\n\n  var _useQuery = useQuery(WORKFLOW_LIST_DETAILS, {\n    variables: {\n      workflowInput: {\n        project_id: projectID\n      }\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var getClusters = function getClusters(searchingData) {\n    var uniqueList = [];\n    searchingData.forEach(function (data) {\n      if (!uniqueList.includes(data.cluster_name)) {\n        uniqueList.push(data.cluster_name);\n      }\n    });\n    setClusters(uniqueList);\n  };\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  var handleSelectAllClick = function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      var newSelecteds = displayData.map(function (n) {\n        return n.workflow_id;\n      });\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  var handleClick = function handleClick(name) {\n    var selectedIndex = selected.indexOf(name);\n    var newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  var searchingDataRetriever = function searchingDataRetriever() {\n    var searchingData = [];\n\n    if (compare === false) {\n      var _data$ListWorkflow$wo;\n\n      searchingData = (_data$ListWorkflow$wo = data === null || data === void 0 ? void 0 : data.ListWorkflow.workflows) !== null && _data$ListWorkflow$wo !== void 0 ? _data$ListWorkflow$wo : [];\n    } else {\n      var searchedData = [];\n      selected.forEach(function (workflowID) {\n        data === null || data === void 0 ? void 0 : data.ListWorkflow.workflows.forEach(function (workflow) {\n          if (workflow.workflow_id === workflowID) {\n            searchedData.push(workflow);\n          }\n        });\n      });\n      searchingData = searchedData;\n    }\n\n    return searchingData;\n  };\n\n  var randomColor = function randomColor() {\n    return Math.floor(Math.random() * 16777215).toString(16);\n  }; // Function to convert UNIX time in format of DD MMM YYY\n\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var resDate = moment(updated).format('dddd DD/MM/YYYY HH:mm:ss Z');\n    return resDate;\n  };\n\n  var generateDataForComparing = function generateDataForComparing() {\n    var plotData = {\n      xData: {\n        Hourly: [[]],\n        Daily: [[]],\n        Monthly: [[]]\n      },\n      yData: {\n        Hourly: [[]],\n        Daily: [[]],\n        Monthly: [[]]\n      },\n      labels: [],\n      colors: []\n    };\n    var totalValidRuns = 0;\n    var totalValidWorkflowRuns = [];\n    var timeSeriesArray = [];\n    selected.forEach(function (workflow) {\n      var workflowData = data === null || data === void 0 ? void 0 : data.ListWorkflow.workflows.filter(function match(wkf) {\n        return wkf.workflow_id === workflow;\n      });\n      var runs = workflowData ? workflowData[0].workflow_runs : [];\n      var workflowTimeSeriesData = [];\n      var isWorkflowValid = false;\n\n      try {\n        runs === null || runs === void 0 ? void 0 : runs.forEach(function (data) {\n          try {\n            (function () {\n              var executionData = JSON.parse(data.execution_data);\n              var nodes = executionData.nodes;\n              var experimentTestResultsArrayPerWorkflowRun = [];\n              var totalExperimentsPassed = 0;\n              var weightsSum = 0;\n              var testDetails = {\n                testNames: [],\n                testWeights: [],\n                testResults: []\n              };\n              var isValid = false;\n\n              for (var _i = 0, _Object$keys = Object.keys(nodes); _i < _Object$keys.length; _i++) {\n                var key = _Object$keys[_i];\n                var node = nodes[key];\n\n                if (node.chaosData) {\n                  (function () {\n                    var chaosData = node.chaosData;\n\n                    if (chaosData.experimentVerdict === 'Pass' || chaosData.experimentVerdict === 'Fail') {\n                      var weightageMap = workflowData ? workflowData[0].weightages : [];\n                      weightageMap.forEach(function (weightage) {\n                        if (weightage.experiment_name === chaosData.experimentName) {\n                          if (chaosData.experimentVerdict === 'Pass') {\n                            experimentTestResultsArrayPerWorkflowRun.push(weightage.weightage * parseInt(chaosData.probeSuccessPercentage, 10) / 100);\n                            totalExperimentsPassed += 1;\n                          }\n\n                          if (chaosData.experimentVerdict === 'Fail') {\n                            experimentTestResultsArrayPerWorkflowRun.push(0);\n                          }\n\n                          if (chaosData.experimentVerdict === 'Pass' || chaosData.experimentVerdict === 'Fail') {\n                            weightsSum += weightage.weightage;\n                            testDetails.testNames.push(weightage.experiment_name);\n                            testDetails.testWeights.push(weightage.weightage);\n                            testDetails.testResults.push(chaosData.experimentVerdict);\n                            isValid = true;\n                            isWorkflowValid = true;\n                          }\n                        }\n                      });\n                    }\n                  })();\n                }\n              }\n\n              if (executionData.event_type === 'UPDATE' && isValid) {\n                totalValidRuns += 1;\n                totalValidWorkflowRuns.push({\n                  cluster_name: workflowData ? workflowData[0].cluster_name : '',\n                  workflow_name: workflowData ? workflowData[0].workflow_name : '',\n                  run_date: formatDate(executionData.creationTimestamp),\n                  tests_passed: totalExperimentsPassed,\n                  tests_failed: experimentTestResultsArrayPerWorkflowRun.length - totalExperimentsPassed,\n                  resilience_score: experimentTestResultsArrayPerWorkflowRun.length ? parseFloat((experimentTestResultsArrayPerWorkflowRun.reduce(function (a, b) {\n                    return a + b;\n                  }, 0) / weightsSum * 100).toFixed(2)) : 0,\n                  test_details: testDetails\n                });\n                workflowTimeSeriesData.push({\n                  date: data.last_updated,\n                  value: experimentTestResultsArrayPerWorkflowRun.length ? parseFloat((experimentTestResultsArrayPerWorkflowRun.reduce(function (a, b) {\n                    return a + b;\n                  }, 0) / weightsSum * 100).toFixed(2)) : 0\n                });\n              }\n            })();\n          } catch (error) {\n            console.error(error);\n          }\n        });\n\n        if (isWorkflowValid) {\n          plotData.labels.push(workflowData ? workflowData[0].workflow_name : '');\n          plotData.colors.push(\"#\".concat(randomColor()));\n          timeSeriesArray.push(workflowTimeSeriesData);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n\n    if (plotData.labels.length === 0) {\n      setIsDataAvailable(false);\n    }\n\n    timeSeriesArray.forEach(function (workflowTimeSeriesData, index) {\n      var hourlyGroupedResults = _.groupBy(workflowTimeSeriesData, function (data) {\n        return moment.unix(parseInt(data.date, 10)).startOf('hour').format('YYYY-MM-DD HH:mm:ss');\n      });\n\n      var dailyGroupedResults = _.groupBy(workflowTimeSeriesData, function (data) {\n        return moment.unix(parseInt(data.date, 10)).startOf('day').format('YYYY-MM-DD');\n      });\n\n      var monthlyGroupedResults = _.groupBy(workflowTimeSeriesData, function (data) {\n        return moment.unix(parseInt(data.date, 10)).startOf('month').format('YYYY-MM');\n      });\n\n      plotData.xData.Hourly[index] = [];\n      plotData.yData.Hourly[index] = [];\n      Object.keys(hourlyGroupedResults).forEach(function (hour) {\n        var total = 0;\n        hourlyGroupedResults[hour].forEach(function (data) {\n          total += data.value;\n        });\n        plotData.xData.Hourly[index].push(hour);\n        plotData.yData.Hourly[index].push(total / hourlyGroupedResults[hour].length);\n      });\n      plotData.xData.Daily[index] = [];\n      plotData.yData.Daily[index] = [];\n      Object.keys(dailyGroupedResults).forEach(function (day) {\n        var total = 0;\n        dailyGroupedResults[day].forEach(function (data) {\n          total += data.value;\n        });\n        plotData.xData.Daily[index].push(day);\n        plotData.yData.Daily[index].push(total / dailyGroupedResults[day].length);\n      });\n      plotData.xData.Monthly[index] = [];\n      plotData.yData.Monthly[index] = [];\n      Object.keys(monthlyGroupedResults).forEach(function (month) {\n        var total = 0;\n        monthlyGroupedResults[month].forEach(function (data) {\n          total += data.value;\n        });\n        plotData.xData.Monthly[index].push(month);\n        plotData.yData.Monthly[index].push(total / monthlyGroupedResults[month].length);\n      });\n    });\n    setPlotDataForComparison(plotData);\n    setTotalValidWorkflowRuns(totalValidWorkflowRuns);\n    setTotalValidWorkflowRunsCount(totalValidRuns);\n  };\n\n  var CallbackForComparing = function CallbackForComparing(compareWorkflows) {\n    setCompare(compareWorkflows);\n    var payload = [];\n    selected.forEach(function (workflow) {\n      displayData.forEach(function (displayWorkflow, i) {\n        if (displayWorkflow.workflow_id === workflow && data) {\n          payload.push(data === null || data === void 0 ? void 0 : data.ListWorkflow.workflows[i]);\n        }\n      });\n    });\n    generateDataForComparing();\n    setDisplayData(payload);\n  };\n\n  var generatePDF = function generatePDF() {\n    if (document.getElementById('analytics')) {\n      var heads = [{\n        cluster_name: 'Cluster Name',\n        workflow_name: 'Workflow Name',\n        run_date: 'Date-Time',\n        tests_passed: '#Expts. Passed',\n        tests_failed: '#Expts. Failed',\n        resilience_score: 'Reliability Score',\n        test_details_string: 'Experiment Details\\nName\\nWeight / Verdict'\n      }];\n      var rows = [];\n      totalValidWorkflowRuns.forEach(function (run) {\n        var _run$test_details;\n\n        var detail_string = '';\n        (_run$test_details = run.test_details) === null || _run$test_details === void 0 ? void 0 : _run$test_details.testNames.forEach(function (experiment, index) {\n          var _run$test_details2, _run$test_details3;\n\n          detail_string += \"\".concat(experiment, \"\\n\").concat((_run$test_details2 = run.test_details) === null || _run$test_details2 === void 0 ? void 0 : _run$test_details2.testWeights[index], \" / \").concat((_run$test_details3 = run.test_details) === null || _run$test_details3 === void 0 ? void 0 : _run$test_details3.testResults[index], \"\\n\");\n        });\n        rows.push({\n          cluster_name: run.cluster_name,\n          workflow_name: run.workflow_name,\n          run_date: run.run_date,\n          tests_passed: run.tests_passed.toString(),\n          tests_failed: run.tests_failed.toString(),\n          resilience_score: \"\".concat(parseFloat(run.resilience_score).toFixed(2).toString(), \"%\"),\n          test_details_string: detail_string\n        });\n      });\n      var input = document.getElementById('analytics');\n      html2canvas(input).then(function (canvas) {\n        var imgWidth = 206;\n        var imgHeight = canvas.height * imgWidth / canvas.width;\n        var contentDataURL = canvas.toDataURL('image/png');\n        var doc = new jsPDF('p', 'mm', 'a4'); // A4 size page of PDF\n\n        var position = -54;\n        var version = process.env.REACT_APP_KB_CHAOS_VERSION;\n        doc.setFillColor(255, 255, 255);\n        doc.setFontSize(10);\n        doc.setTextColor(0, 0, 0);\n        doc.setDrawColor(0, 0, 0);\n        doc.text(\"Litmus Portal Report Version: \".concat(version), 10, 10);\n        doc.text('Time of Generation:', 10, 15);\n        doc.text(new Date().toString(), 42, 15);\n        doc.text('Total Number of Chaos Workflow Schedules under consideration:', 10, 20);\n        doc.text(plotDataForComparison ? plotDataForComparison.labels.length.toString() : '0', 114, 20);\n        doc.text('Total Number of Chaos Workflow Runs under consideration:', 10, 25);\n        doc.text(totalValidWorkflowRunsCount.toString(), 105, 25);\n        var img = new Image();\n        img.src = '/icons/LitmusLogo.png';\n        doc.addImage(img, 'png', 165, 10, 30, 12.5);\n        doc.line(0, 33, 300, 33);\n        doc.setLineWidth(5.0);\n        doc.text('Workflow Run Details Table & Workflow Schedules Table with Resilience Score Comparison Graph', 27.5, 39);\n\n        try {\n          autoTable(doc, {\n            head: heads,\n            body: rows,\n            startY: 44,\n            margin: {\n              horizontal: 2\n            },\n            styles: {\n              overflow: 'linebreak',\n              font: 'Ubuntu',\n              lineColor: [0, 0, 0]\n            },\n            bodyStyles: {\n              valign: 'top',\n              fillColor: [245, 246, 255],\n              textColor: [0, 0, 0],\n              lineWidth: 0.05\n            },\n            tableLineColor: [0, 0, 0],\n            tableLineWidth: 0.05,\n            headStyles: {\n              fillColor: [245, 246, 255],\n              textColor: [0, 0, 0],\n              lineWidth: 0.05,\n              lineColor: [0, 0, 0]\n            },\n            alternateRowStyles: {\n              fillColor: [245, 246, 255]\n            },\n            theme: 'striped',\n            showHead: 'firstPage'\n          });\n        } catch (err) {\n          console.error(err);\n        }\n\n        doc.addPage();\n        doc.addImage(contentDataURL, 'PNG', 2, showAll ? position : -55, imgWidth, imgHeight);\n        doc.save('litmus-portal-analytics.pdf'); // Generated PDF\n      });\n    }\n  };\n\n  useEffect(function () {\n    setDisplayData(data ? data.ListWorkflow.workflows : []);\n    getClusters(data ? data.ListWorkflow.workflows : []);\n  }, [data]);\n  useEffect(function () {\n    var payload = searchingDataRetriever().filter(function (wkf) {\n      return filter.searchTokens.every(function (s) {\n        return wkf.workflow_name.toLowerCase().includes(s) || (wkf.cluster_name !== undefined ? wkf.cluster_name.toLowerCase().includes(s) : false);\n      });\n    }).filter(function (data) {\n      return filter.selectedCluster === 'All' ? true : data.cluster_name === filter.selectedCluster;\n    }).filter(function (data) {\n      return filter.range.startDate === 'all' || filter.range.startDate && filter.range.endDate === undefined ? true : parseInt(data.created_at, 10) * 1000 >= new Date(moment(filter.range.startDate).format()).getTime() && parseInt(data.created_at, 10) * 1000 <= new Date(new Date(moment(filter.range.endDate).format()).setHours(23, 59, 59)).getTime();\n    }).sort(function (a, b) {\n      // Sorting based on unique fields\n      if (filter.sortData.name.sort) {\n        var x = a.workflow_name;\n        var y = b.workflow_name;\n        return filter.sortData.name.ascending ? sortAlphaAsc(x, y) : sortAlphaDesc(x, y);\n      }\n\n      if (filter.sortData.startDate.sort) {\n        var _x = parseInt(a.created_at, 10);\n\n        var _y = parseInt(b.created_at, 10);\n\n        return filter.sortData.startDate.ascending ? sortNumAsc(_y, _x) : sortNumDesc(_y, _x);\n      }\n\n      if (filter.sortData.cluster.sort) {\n        var _x2 = a.cluster_name;\n        var _y2 = b.cluster_name;\n        return filter.sortData.cluster.ascending ? sortAlphaAsc(_x2, _y2) : sortAlphaDesc(_x2, _y2);\n      }\n\n      return 0;\n    });\n    setDisplayData(payload);\n    setShowAll(false);\n    getClusters(searchingDataRetriever());\n  }, [filter, compare]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    id: \"analytics\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WorkflowGraphs, {\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.analyticsDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 11\n    }\n  }, ' ', compare === true ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"back\",\n    \"aria-haspopup\": \"true\",\n    onClick: function onClick() {\n      return setCompare(false);\n    },\n    className: classes.buttonBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreTwoToneIcon, {\n    htmlColor: palette.primary.main,\n    className: classes.buttonBackStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 15\n    }\n  }), ' ', \"Workflow comparison\")), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 9\n    }\n  }, compare === true ? 'Choose the right workflows and get comparative results' : 'Choose workflows to compare their resilience scores'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tableFix,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"Heading section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableToolBar, {\n    numSelected: selected.length,\n    searchToken: filter.searchTokens[0],\n    handleSearch: function handleSearch(event, token) {\n      return setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        searchTokens: (event !== undefined ? event.target.value : token || '').toLowerCase().split(' ').filter(function (s) {\n          return s !== '';\n        })\n      }));\n    },\n    clusters: clusters,\n    callbackToSetCluster: function callbackToSetCluster(clusterName) {\n      setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        selectedCluster: clusterName\n      }));\n    },\n    callbackToSetRange: function callbackToSetRange(selectedStartDate, selectedEndDate) {\n      setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        range: {\n          startDate: selectedStartDate,\n          endDate: selectedEndDate\n        }\n      }));\n    },\n    callbackToCompare: CallbackForComparing,\n    callbackToExport: function callbackToExport() {\n      return generatePDF();\n    },\n    comparisonState: compare,\n    reInitialize: compare === false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"table section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.tableBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: compare === false && selected.length <= 2 ? classes.tableMain : compare === false && selected.length > 2 ? classes.tableMainShowAll : showAll === true && selected.length <= 3 ? classes.tableMainShowAll : showAll === true && selected.length > 3 ? classes.tableMain : classes.tableMainCompare,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"simple table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    onSelectAllClick: handleSelectAllClick,\n    numSelected: selected.length,\n    rowCount: displayData.length,\n    comparisonState: compare,\n    callBackToSort: function callBackToSort(sortConfigurations) {\n      setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        sortData: sortConfigurations\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 19\n    }\n  }, loading ? /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 27\n    }\n  }))) : error ? /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    className: classes.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 27\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.unableToFetch')))) : displayData.length ? displayData.slice(0).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (data, index) {\n    var isItemSelected = isSelected(data.workflow_id);\n    var labelId = \"enhanced-table-checkbox-\".concat(index);\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      onClick: function onClick() {\n        if (compare === false) {\n          handleClick(data.workflow_id);\n        }\n      },\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: data.workflow_id,\n      selected: isItemSelected,\n      classes: {\n        selected: classes.tableRowSelected\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableData, {\n      data: data,\n      itemSelectionStatus: isItemSelected,\n      labelIdentifier: labelId,\n      comparisonState: compare,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 31\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    className: classes.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 27\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.noRecords')))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: '20rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 25\n    }\n  }))))), !compare || showAll ? /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 50],\n    component: \"div\",\n    count: displayData.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    className: classes.pagination,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    className: classes.seeAllPaper,\n    onClick: function onClick() {\n      return setShowAll(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.seeAllText,\n    variant: \"body2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 19\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 21\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.showSelectedWorkflows'), ' ', \"(\", selected.length, \")\", ' '), ' ')))))), isDataAvailable === true ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 9\n    }\n  }, compare === true ? /*#__PURE__*/React.createElement(Paper, {\n    variant: \"outlined\",\n    className: classes.backgroundFix,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.comparisonHeadingFix,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 19\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.resilienceScoreComparison'))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 17\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.comparativeResults')), plotDataForComparison ? /*#__PURE__*/React.createElement(ResilienceScoreComparisonPlot, {\n    xData: plotDataForComparison.xData,\n    yData: plotDataForComparison.yData,\n    labels: plotDataForComparison.labels,\n    colors: plotDataForComparison.colors,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 19\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Paper, {\n    variant: \"outlined\",\n    className: classes.noData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    className: classes.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 11\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.noRuns')), ' '));\n};\n\nexport default WorkflowComparisonTable;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowComparisonTable/index.tsx"],"names":["useQuery","IconButton","Paper","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Typography","useTheme","ExpandMoreTwoToneIcon","html2canvas","jsPDF","autoTable","_","moment","React","useEffect","useState","useTranslation","Loader","WORKFLOW_LIST_DETAILS","getProjectID","sortAlphaAsc","sortAlphaDesc","sortNumAsc","sortNumDesc","ResilienceScoreComparisonPlot","WorkflowGraphs","useStyles","TableData","TableHeader","TableToolBar","WorkflowComparisonTable","classes","palette","t","range","startDate","endDate","selectedCluster","sortData","name","sort","ascending","cluster","searchTokens","filter","setFilter","displayData","setDisplayData","clusters","setClusters","page","setPage","rowsPerPage","setRowsPerPage","selected","setSelected","isSelected","indexOf","emptyRows","Math","min","length","compare","setCompare","isDataAvailable","setIsDataAvailable","showAll","setShowAll","plotDataForComparison","setPlotDataForComparison","totalValidWorkflowRuns","setTotalValidWorkflowRuns","totalValidWorkflowRunsCount","setTotalValidWorkflowRunsCount","projectID","variables","workflowInput","project_id","fetchPolicy","data","loading","error","getClusters","searchingData","uniqueList","forEach","includes","cluster_name","push","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleSelectAllClick","checked","newSelecteds","map","n","workflow_id","handleClick","selectedIndex","newSelected","concat","slice","searchingDataRetriever","ListWorkflow","workflows","searchedData","workflowID","workflow","randomColor","floor","random","toString","formatDate","date","updated","Date","resDate","format","generateDataForComparing","plotData","xData","Hourly","Daily","Monthly","yData","labels","colors","totalValidRuns","timeSeriesArray","workflowData","match","wkf","runs","workflow_runs","workflowTimeSeriesData","isWorkflowValid","executionData","JSON","parse","execution_data","nodes","experimentTestResultsArrayPerWorkflowRun","totalExperimentsPassed","weightsSum","testDetails","testNames","testWeights","testResults","isValid","Object","keys","key","node","chaosData","experimentVerdict","weightageMap","weightages","weightage","experiment_name","experimentName","probeSuccessPercentage","event_type","workflow_name","run_date","creationTimestamp","tests_passed","tests_failed","resilience_score","parseFloat","reduce","a","b","toFixed","test_details","last_updated","console","index","hourlyGroupedResults","groupBy","unix","startOf","dailyGroupedResults","monthlyGroupedResults","hour","total","day","month","CallbackForComparing","compareWorkflows","payload","displayWorkflow","i","generatePDF","document","getElementById","heads","test_details_string","rows","run","detail_string","experiment","input","then","canvas","imgWidth","imgHeight","height","width","contentDataURL","toDataURL","doc","position","version","process","env","REACT_APP_KB_CHAOS_VERSION","setFillColor","setFontSize","setTextColor","setDrawColor","text","img","Image","src","addImage","line","setLineWidth","head","body","startY","margin","horizontal","styles","overflow","font","lineColor","bodyStyles","valign","fillColor","textColor","lineWidth","tableLineColor","tableLineWidth","headStyles","alternateRowStyles","theme","showHead","err","addPage","save","every","s","toLowerCase","undefined","created_at","getTime","setHours","x","y","root","analyticsDiv","heading","buttonBack","primary","main","buttonBackStyle","description","tableFix","token","split","clusterName","selectedStartDate","selectedEndDate","tableBody","tableMain","tableMainShowAll","tableMainCompare","sortConfigurations","isItemSelected","labelId","tableRowSelected","pagination","seeAllPaper","seeAllText","backgroundFix","comparisonHeadingFix","noData"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-loop-func */\nimport { useQuery } from '@apollo/client';\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as _ from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../../components/Loader';\nimport { WORKFLOW_LIST_DETAILS } from '../../../../graphql/queries';\nimport {\n  ExecutionData,\n  ListWorkflowsInput,\n  ScheduledWorkflow,\n  ScheduledWorkflows,\n  WeightageMap,\n} from '../../../../models/graphql/workflowListData';\nimport { getProjectID } from '../../../../utils/getSearchParams';\nimport {\n  sortAlphaAsc,\n  sortAlphaDesc,\n  sortNumAsc,\n  sortNumDesc,\n} from '../../../../utils/sort';\nimport ResilienceScoreComparisonPlot from '../WorkflowComparisonPlot/index';\nimport WorkflowGraphs from '../WorkflowGraphs';\nimport useStyles from './styles';\nimport TableData from './TableData';\nimport TableHeader from './TableHeader';\nimport TableToolBar from './TableToolbar';\n\ninterface RangeType {\n  startDate: string;\n  endDate: string;\n}\n\ninterface SortData {\n  startDate: { sort: boolean; ascending: boolean };\n  name: { sort: boolean; ascending: boolean };\n  cluster: { sort: boolean; ascending: boolean };\n}\n\ninterface Filter {\n  range: RangeType;\n  selectedCluster: string;\n  sortData: SortData;\n  searchTokens: string[];\n}\n\ninterface ResilienceScoreComparisonPlotProps {\n  xData: { Hourly: string[][]; Daily: string[][]; Monthly: string[][] };\n  yData: { Hourly: number[][]; Daily: number[][]; Monthly: number[][] };\n  labels: string[];\n  colors: string[];\n}\n\ninterface DatedResilienceScore {\n  date: string;\n  value: number;\n}\n\ninterface TestDetails {\n  testNames: string[];\n  testWeights: number[];\n  testResults: string[];\n}\n\ninterface WorkflowDataForExport {\n  cluster_name: string;\n  workflow_name: string;\n  run_date: string;\n  tests_passed: number | string;\n  tests_failed: number | string;\n  resilience_score: number | string;\n  test_details?: TestDetails;\n  test_details_string?: string;\n}\n\nconst WorkflowComparisonTable = () => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n  const { t } = useTranslation();\n  const [filter, setFilter] = React.useState<Filter>({\n    range: { startDate: 'all', endDate: 'all' },\n    selectedCluster: 'All',\n    sortData: {\n      name: { sort: false, ascending: true },\n      startDate: { sort: true, ascending: true },\n      cluster: { sort: false, ascending: true },\n    },\n    searchTokens: [''],\n  });\n  const [displayData, setDisplayData] = useState<ScheduledWorkflow[]>([]);\n  const [clusters, setClusters] = React.useState<string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, displayData.length - page * rowsPerPage);\n  const [compare, setCompare] = React.useState<Boolean>(false);\n  const [isDataAvailable, setIsDataAvailable] = React.useState<Boolean>(true);\n  const [showAll, setShowAll] = React.useState<Boolean>(true);\n  const [plotDataForComparison, setPlotDataForComparison] =\n    React.useState<ResilienceScoreComparisonPlotProps>();\n  const [totalValidWorkflowRuns, setTotalValidWorkflowRuns] = React.useState<\n    WorkflowDataForExport[]\n  >([]);\n  const [totalValidWorkflowRunsCount, setTotalValidWorkflowRunsCount] =\n    React.useState<number>(0);\n\n  const projectID = getProjectID();\n\n  // Apollo query to get the scheduled workflow data\n  const { data, loading, error } = useQuery<\n    ScheduledWorkflows,\n    ListWorkflowsInput\n  >(WORKFLOW_LIST_DETAILS, {\n    variables: { workflowInput: { project_id: projectID } },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const getClusters = (searchingData: ScheduledWorkflow[]) => {\n    const uniqueList: string[] = [];\n    searchingData.forEach((data) => {\n      if (!uniqueList.includes(data.cluster_name)) {\n        uniqueList.push(data.cluster_name);\n      }\n    });\n    setClusters(uniqueList);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = displayData.map(\n        (n: ScheduledWorkflow) => n.workflow_id\n      );\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const searchingDataRetriever = () => {\n    let searchingData: ScheduledWorkflow[] = [];\n    if (compare === false) {\n      searchingData = data?.ListWorkflow.workflows ?? [];\n    } else {\n      const searchedData: ScheduledWorkflow[] = [];\n      selected.forEach((workflowID) => {\n        data?.ListWorkflow.workflows.forEach((workflow) => {\n          if (workflow.workflow_id === workflowID) {\n            searchedData.push(workflow);\n          }\n        });\n      });\n      searchingData = searchedData;\n    }\n    return searchingData;\n  };\n\n  const randomColor = () => Math.floor(Math.random() * 16777215).toString(16);\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('dddd DD/MM/YYYY HH:mm:ss Z');\n    return resDate;\n  };\n\n  const generateDataForComparing = () => {\n    const plotData: ResilienceScoreComparisonPlotProps = {\n      xData: {\n        Hourly: [[]],\n        Daily: [[]],\n        Monthly: [[]],\n      },\n      yData: {\n        Hourly: [[]],\n        Daily: [[]],\n        Monthly: [[]],\n      },\n      labels: [],\n      colors: [],\n    };\n    let totalValidRuns: number = 0;\n    const totalValidWorkflowRuns: WorkflowDataForExport[] = [];\n    const timeSeriesArray: DatedResilienceScore[][] = [];\n    selected.forEach((workflow) => {\n      const workflowData = data?.ListWorkflow.workflows.filter(function match(\n        wkf\n      ) {\n        return wkf.workflow_id === workflow;\n      });\n      const runs = workflowData ? workflowData[0].workflow_runs : [];\n      const workflowTimeSeriesData: DatedResilienceScore[] = [];\n      let isWorkflowValid: boolean = false;\n      try {\n        runs?.forEach((data) => {\n          try {\n            const executionData: ExecutionData = JSON.parse(\n              data.execution_data\n            );\n            const { nodes } = executionData;\n            const experimentTestResultsArrayPerWorkflowRun: number[] = [];\n            let totalExperimentsPassed: number = 0;\n            let weightsSum: number = 0;\n            const testDetails: TestDetails = {\n              testNames: [],\n              testWeights: [],\n              testResults: [],\n            };\n            let isValid: boolean = false;\n            for (const key of Object.keys(nodes)) {\n              const node = nodes[key];\n              if (node.chaosData) {\n                const { chaosData } = node;\n                if (\n                  chaosData.experimentVerdict === 'Pass' ||\n                  chaosData.experimentVerdict === 'Fail'\n                ) {\n                  const weightageMap: WeightageMap[] = workflowData\n                    ? workflowData[0].weightages\n                    : [];\n                  weightageMap.forEach((weightage) => {\n                    if (\n                      weightage.experiment_name === chaosData.experimentName\n                    ) {\n                      if (chaosData.experimentVerdict === 'Pass') {\n                        experimentTestResultsArrayPerWorkflowRun.push(\n                          (weightage.weightage *\n                            parseInt(chaosData.probeSuccessPercentage, 10)) /\n                            100\n                        );\n                        totalExperimentsPassed += 1;\n                      }\n                      if (chaosData.experimentVerdict === 'Fail') {\n                        experimentTestResultsArrayPerWorkflowRun.push(0);\n                      }\n                      if (\n                        chaosData.experimentVerdict === 'Pass' ||\n                        chaosData.experimentVerdict === 'Fail'\n                      ) {\n                        weightsSum += weightage.weightage;\n                        testDetails.testNames.push(weightage.experiment_name);\n                        testDetails.testWeights.push(weightage.weightage);\n                        testDetails.testResults.push(\n                          chaosData.experimentVerdict\n                        );\n                        isValid = true;\n                        isWorkflowValid = true;\n                      }\n                    }\n                  });\n                }\n              }\n            }\n            if (executionData.event_type === 'UPDATE' && isValid) {\n              totalValidRuns += 1;\n              totalValidWorkflowRuns.push({\n                cluster_name: workflowData ? workflowData[0].cluster_name : '',\n                workflow_name: workflowData\n                  ? workflowData[0].workflow_name\n                  : '',\n                run_date: formatDate(executionData.creationTimestamp),\n                tests_passed: totalExperimentsPassed,\n                tests_failed:\n                  experimentTestResultsArrayPerWorkflowRun.length -\n                  totalExperimentsPassed,\n                resilience_score:\n                  experimentTestResultsArrayPerWorkflowRun.length\n                    ? parseFloat(\n                        (\n                          (experimentTestResultsArrayPerWorkflowRun.reduce(\n                            (a, b) => a + b,\n                            0\n                          ) /\n                            weightsSum) *\n                          100\n                        ).toFixed(2)\n                      )\n                    : 0,\n                test_details: testDetails,\n              });\n              workflowTimeSeriesData.push({\n                date: data.last_updated,\n                value: experimentTestResultsArrayPerWorkflowRun.length\n                  ? parseFloat(\n                      (\n                        (experimentTestResultsArrayPerWorkflowRun.reduce(\n                          (a, b) => a + b,\n                          0\n                        ) /\n                          weightsSum) *\n                        100\n                      ).toFixed(2)\n                    )\n                  : 0,\n              });\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        });\n        if (isWorkflowValid) {\n          plotData.labels.push(\n            workflowData ? workflowData[0].workflow_name : ''\n          );\n          plotData.colors.push(`#${randomColor()}`);\n          timeSeriesArray.push(workflowTimeSeriesData);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n\n    if (plotData.labels.length === 0) {\n      setIsDataAvailable(false);\n    }\n\n    timeSeriesArray.forEach((workflowTimeSeriesData, index) => {\n      const hourlyGroupedResults = _.groupBy(workflowTimeSeriesData, (data) =>\n        moment\n          .unix(parseInt(data.date, 10))\n          .startOf('hour')\n          .format('YYYY-MM-DD HH:mm:ss')\n      );\n      const dailyGroupedResults = _.groupBy(workflowTimeSeriesData, (data) =>\n        moment.unix(parseInt(data.date, 10)).startOf('day').format('YYYY-MM-DD')\n      );\n      const monthlyGroupedResults = _.groupBy(workflowTimeSeriesData, (data) =>\n        moment.unix(parseInt(data.date, 10)).startOf('month').format('YYYY-MM')\n      );\n      plotData.xData.Hourly[index] = [];\n      plotData.yData.Hourly[index] = [];\n      Object.keys(hourlyGroupedResults).forEach((hour) => {\n        let total = 0;\n        hourlyGroupedResults[hour].forEach((data) => {\n          total += data.value;\n        });\n        plotData.xData.Hourly[index].push(hour);\n        plotData.yData.Hourly[index].push(\n          total / hourlyGroupedResults[hour].length\n        );\n      });\n      plotData.xData.Daily[index] = [];\n      plotData.yData.Daily[index] = [];\n      Object.keys(dailyGroupedResults).forEach((day) => {\n        let total = 0;\n        dailyGroupedResults[day].forEach((data) => {\n          total += data.value;\n        });\n        plotData.xData.Daily[index].push(day);\n        plotData.yData.Daily[index].push(\n          total / dailyGroupedResults[day].length\n        );\n      });\n      plotData.xData.Monthly[index] = [];\n      plotData.yData.Monthly[index] = [];\n      Object.keys(monthlyGroupedResults).forEach((month) => {\n        let total = 0;\n        monthlyGroupedResults[month].forEach((data) => {\n          total += data.value;\n        });\n        plotData.xData.Monthly[index].push(month);\n        plotData.yData.Monthly[index].push(\n          total / monthlyGroupedResults[month].length\n        );\n      });\n    });\n    setPlotDataForComparison(plotData);\n    setTotalValidWorkflowRuns(totalValidWorkflowRuns);\n    setTotalValidWorkflowRunsCount(totalValidRuns);\n  };\n\n  const CallbackForComparing = (compareWorkflows: boolean) => {\n    setCompare(compareWorkflows);\n    const payload: ScheduledWorkflow[] = [];\n    selected.forEach((workflow) => {\n      displayData.forEach((displayWorkflow, i) => {\n        if (displayWorkflow.workflow_id === workflow && data) {\n          payload.push(data?.ListWorkflow.workflows[i]);\n        }\n      });\n    });\n    generateDataForComparing();\n    setDisplayData(payload);\n  };\n\n  const generatePDF = () => {\n    if (document.getElementById('analytics')) {\n      const heads = [\n        {\n          cluster_name: 'Cluster Name',\n          workflow_name: 'Workflow Name',\n          run_date: 'Date-Time',\n          tests_passed: '#Expts. Passed',\n          tests_failed: '#Expts. Failed',\n          resilience_score: 'Reliability Score',\n          test_details_string: 'Experiment Details\\nName\\nWeight / Verdict',\n        },\n      ];\n      const rows: any[] = [];\n      totalValidWorkflowRuns.forEach((run) => {\n        let detail_string = '';\n        run.test_details?.testNames.forEach((experiment, index) => {\n          detail_string += `${experiment}\\n${run.test_details?.testWeights[index]} / ${run.test_details?.testResults[index]}\\n`;\n        });\n        rows.push({\n          cluster_name: run.cluster_name,\n          workflow_name: run.workflow_name,\n          run_date: run.run_date,\n          tests_passed: run.tests_passed.toString(),\n          tests_failed: run.tests_failed.toString(),\n          resilience_score: `${parseFloat(run.resilience_score as string)\n            .toFixed(2)\n            .toString()}%`,\n          test_details_string: detail_string,\n        });\n      });\n\n      const input: HTMLElement | null = document.getElementById('analytics');\n      html2canvas(input as HTMLElement).then((canvas) => {\n        const imgWidth = 206;\n        const imgHeight = (canvas.height * imgWidth) / canvas.width;\n        const contentDataURL = canvas.toDataURL('image/png');\n        const doc = new jsPDF('p', 'mm', 'a4'); // A4 size page of PDF\n        const position = -54;\n        const version = process.env.REACT_APP_KB_CHAOS_VERSION;\n        doc.setFillColor(255, 255, 255);\n        doc.setFontSize(10);\n        doc.setTextColor(0, 0, 0);\n        doc.setDrawColor(0, 0, 0);\n        doc.text(`Litmus Portal Report Version: ${version}`, 10, 10);\n        doc.text('Time of Generation:', 10, 15);\n        doc.text(new Date().toString(), 42, 15);\n        doc.text(\n          'Total Number of Chaos Workflow Schedules under consideration:',\n          10,\n          20\n        );\n        doc.text(\n          plotDataForComparison\n            ? plotDataForComparison.labels.length.toString()\n            : '0',\n          114,\n          20\n        );\n        doc.text(\n          'Total Number of Chaos Workflow Runs under consideration:',\n          10,\n          25\n        );\n        doc.text(totalValidWorkflowRunsCount.toString(), 105, 25);\n        const img = new Image();\n        img.src = '/icons/LitmusLogo.png';\n        doc.addImage(img, 'png', 165, 10, 30, 12.5);\n        doc.line(0, 33, 300, 33);\n        doc.setLineWidth(5.0);\n        doc.text(\n          'Workflow Run Details Table & Workflow Schedules Table with Resilience Score Comparison Graph',\n          27.5,\n          39\n        );\n        try {\n          autoTable(doc, {\n            head: heads,\n            body: rows,\n            startY: 44,\n            margin: {\n              horizontal: 2,\n            },\n            styles: {\n              overflow: 'linebreak',\n              font: 'Ubuntu',\n              lineColor: [0, 0, 0],\n            },\n            bodyStyles: {\n              valign: 'top',\n              fillColor: [245, 246, 255],\n              textColor: [0, 0, 0],\n              lineWidth: 0.05,\n            },\n            tableLineColor: [0, 0, 0],\n            tableLineWidth: 0.05,\n            headStyles: {\n              fillColor: [245, 246, 255],\n              textColor: [0, 0, 0],\n              lineWidth: 0.05,\n              lineColor: [0, 0, 0],\n            },\n            alternateRowStyles: {\n              fillColor: [245, 246, 255],\n            },\n            theme: 'striped',\n            showHead: 'firstPage',\n          });\n        } catch (err) {\n          console.error(err);\n        }\n        doc.addPage();\n        doc.addImage(\n          contentDataURL,\n          'PNG',\n          2,\n          showAll ? position : -55,\n          imgWidth,\n          imgHeight\n        );\n        doc.save('litmus-portal-analytics.pdf'); // Generated PDF\n      });\n    }\n  };\n\n  useEffect(() => {\n    setDisplayData(data ? data.ListWorkflow.workflows : []);\n    getClusters(data ? data.ListWorkflow.workflows : []);\n  }, [data]);\n\n  useEffect(() => {\n    const payload = searchingDataRetriever()\n      .filter((wkf) => {\n        return filter.searchTokens.every(\n          (s: string) =>\n            wkf.workflow_name.toLowerCase().includes(s) ||\n            (wkf.cluster_name !== undefined\n              ? wkf.cluster_name.toLowerCase().includes(s)\n              : false)\n        );\n      })\n      .filter((data) => {\n        return filter.selectedCluster === 'All'\n          ? true\n          : data.cluster_name === filter.selectedCluster;\n      })\n      .filter((data) => {\n        return filter.range.startDate === 'all' ||\n          (filter.range.startDate && filter.range.endDate === undefined)\n          ? true\n          : parseInt(data.created_at, 10) * 1000 >=\n              new Date(moment(filter.range.startDate).format()).getTime() &&\n              parseInt(data.created_at, 10) * 1000 <=\n                new Date(\n                  new Date(moment(filter.range.endDate).format()).setHours(\n                    23,\n                    59,\n                    59\n                  )\n                ).getTime();\n      })\n      .sort((a, b) => {\n        // Sorting based on unique fields\n        if (filter.sortData.name.sort) {\n          const x = a.workflow_name;\n          const y = b.workflow_name;\n\n          return filter.sortData.name.ascending\n            ? sortAlphaAsc(x, y)\n            : sortAlphaDesc(x, y);\n        }\n        if (filter.sortData.startDate.sort) {\n          const x = parseInt(a.created_at, 10);\n\n          const y = parseInt(b.created_at, 10);\n\n          return filter.sortData.startDate.ascending\n            ? sortNumAsc(y, x)\n            : sortNumDesc(y, x);\n        }\n        if (filter.sortData.cluster.sort) {\n          const x = a.cluster_name;\n          const y = b.cluster_name;\n\n          return filter.sortData.cluster.ascending\n            ? sortAlphaAsc(x, y)\n            : sortAlphaDesc(x, y);\n        }\n        return 0;\n      });\n    setDisplayData(payload);\n    setShowAll(false);\n    getClusters(searchingDataRetriever());\n  }, [filter, compare]);\n\n  return (\n    <div className={classes.root} id=\"analytics\">\n      <WorkflowGraphs data={data} />\n      <div className={classes.analyticsDiv}>\n        <Typography className={classes.heading}>\n          <strong>\n            {' '}\n            {compare === true ? (\n              <IconButton\n                aria-label=\"back\"\n                aria-haspopup=\"true\"\n                onClick={() => setCompare(false)}\n                className={classes.buttonBack}\n              >\n                <ExpandMoreTwoToneIcon\n                  htmlColor={palette.primary.main}\n                  className={classes.buttonBackStyle}\n                />\n              </IconButton>\n            ) : (\n              <div />\n            )}{' '}\n            Workflow comparison\n          </strong>\n        </Typography>\n        <Typography className={classes.description}>\n          {compare === true\n            ? 'Choose the right workflows and get comparative results'\n            : 'Choose workflows to compare their resilience scores'}\n        </Typography>\n        <br />\n      </div>\n      <div className={classes.tableFix}>\n        <div>\n          <section className=\"Heading section\">\n            <TableToolBar\n              numSelected={selected.length}\n              searchToken={filter.searchTokens[0]}\n              handleSearch={(\n                event: React.ChangeEvent<{ value: unknown }> | undefined,\n                token: string | undefined\n              ) =>\n                setFilter({\n                  ...filter,\n                  searchTokens: (event !== undefined\n                    ? ((event.target as HTMLInputElement).value as string)\n                    : token || ''\n                  )\n                    .toLowerCase()\n                    .split(' ')\n                    .filter((s) => s !== ''),\n                })\n              }\n              clusters={clusters}\n              callbackToSetCluster={(clusterName: string) => {\n                setFilter({\n                  ...filter,\n                  selectedCluster: clusterName,\n                });\n              }}\n              callbackToSetRange={(\n                selectedStartDate: string,\n                selectedEndDate: string\n              ) => {\n                setFilter({\n                  ...filter,\n                  range: {\n                    startDate: selectedStartDate,\n                    endDate: selectedEndDate,\n                  },\n                });\n              }}\n              callbackToCompare={CallbackForComparing}\n              callbackToExport={() => generatePDF()}\n              comparisonState={compare}\n              reInitialize={compare === false}\n            />\n          </section>\n          <section className=\"table section\">\n            <Paper className={classes.tableBody}>\n              <TableContainer\n                className={\n                  compare === false && selected.length <= 2\n                    ? classes.tableMain\n                    : compare === false && selected.length > 2\n                    ? classes.tableMainShowAll\n                    : showAll === true && selected.length <= 3\n                    ? classes.tableMainShowAll\n                    : showAll === true && selected.length > 3\n                    ? classes.tableMain\n                    : classes.tableMainCompare\n                }\n              >\n                <Table stickyHeader aria-label=\"simple table\">\n                  <TableHeader\n                    onSelectAllClick={handleSelectAllClick}\n                    numSelected={selected.length}\n                    rowCount={displayData.length}\n                    comparisonState={compare}\n                    callBackToSort={(sortConfigurations: SortData) => {\n                      setFilter({\n                        ...filter,\n                        sortData: sortConfigurations,\n                      });\n                    }}\n                  />\n                  <TableBody>\n                    {loading ? (\n                      <TableRow>\n                        <TableCell colSpan={6}>\n                          <Loader />\n                        </TableCell>\n                      </TableRow>\n                    ) : error ? (\n                      <TableRow>\n                        <TableCell colSpan={6}>\n                          <Typography align=\"center\" className={classes.error}>\n                            {t(\n                              'chaosWorkflows.browseAnalytics.workFlowComparisonTable.unableToFetch'\n                            )}\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                    ) : displayData.length ? (\n                      displayData\n                        .slice(0)\n                        .slice(\n                          page * rowsPerPage,\n                          page * rowsPerPage + rowsPerPage\n                        )\n                        .map((data, index) => {\n                          const isItemSelected = isSelected(data.workflow_id);\n                          const labelId = `enhanced-table-checkbox-${index}`;\n                          return (\n                            <TableRow\n                              hover\n                              onClick={() => {\n                                if (compare === false) {\n                                  handleClick(data.workflow_id);\n                                }\n                              }}\n                              role=\"checkbox\"\n                              aria-checked={isItemSelected}\n                              tabIndex={-1}\n                              key={data.workflow_id}\n                              selected={isItemSelected}\n                              classes={{ selected: classes.tableRowSelected }}\n                            >\n                              <TableData\n                                data={data}\n                                itemSelectionStatus={isItemSelected}\n                                labelIdentifier={labelId}\n                                comparisonState={compare}\n                              />\n                            </TableRow>\n                          );\n                        })\n                    ) : (\n                      <TableRow>\n                        <TableCell colSpan={6} className={classes.error}>\n                          <Typography align=\"center\">\n                            {t(\n                              'chaosWorkflows.browseAnalytics.workFlowComparisonTable.noRecords'\n                            )}\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    {emptyRows > 0 && (\n                      <TableRow style={{ height: '20rem' }}>\n                        <TableCell colSpan={6} />\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              {/* </MuiThemeProvider> */}\n              {!compare || showAll ? (\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25, 50]}\n                  component=\"div\"\n                  count={displayData.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  className={classes.pagination}\n                />\n              ) : (\n                <Paper\n                  elevation={0}\n                  className={classes.seeAllPaper}\n                  onClick={() => setShowAll(true)}\n                >\n                  <Typography className={classes.seeAllText} variant=\"body2\">\n                    {' '}\n                    <strong>\n                      {t(\n                        'chaosWorkflows.browseAnalytics.workFlowComparisonTable.showSelectedWorkflows'\n                      )}{' '}\n                      ({selected.length}){' '}\n                    </strong>{' '}\n                  </Typography>\n                </Paper>\n              )}\n            </Paper>\n          </section>\n        </div>\n      </div>\n      {isDataAvailable === true ? (\n        <div>\n          {compare === true ? (\n            <Paper variant=\"outlined\" className={classes.backgroundFix}>\n              <div className={classes.comparisonHeadingFix}>\n                <Typography className={classes.heading}>\n                  <strong>\n                    {t(\n                      'chaosWorkflows.browseAnalytics.workFlowComparisonTable.resilienceScoreComparison'\n                    )}\n                  </strong>\n                </Typography>\n                <Typography className={classes.description}>\n                  {t(\n                    'chaosWorkflows.browseAnalytics.workFlowComparisonTable.comparativeResults'\n                  )}\n                </Typography>\n                {plotDataForComparison ? (\n                  <ResilienceScoreComparisonPlot\n                    xData={plotDataForComparison.xData}\n                    yData={plotDataForComparison.yData}\n                    labels={plotDataForComparison.labels}\n                    colors={plotDataForComparison.colors}\n                  />\n                ) : (\n                  <div />\n                )}\n              </div>\n            </Paper>\n          ) : (\n            <div />\n          )}\n        </div>\n      ) : (\n        <Paper variant=\"outlined\" className={classes.noData}>\n          <Typography variant=\"h5\" align=\"center\" className={classes.error}>\n            {t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.noRuns')}\n          </Typography>{' '}\n        </Paper>\n      )}\n    </div>\n  );\n};\n\nexport default WorkflowComparisonTable;\n"]},"metadata":{},"sourceType":"module"}