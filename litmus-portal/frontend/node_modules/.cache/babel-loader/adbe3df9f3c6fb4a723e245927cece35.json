{"ast":null,"code":"import _regeneratorRuntime from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable jsx-a11y/label-has-associated-control */import{Button,Paper,Typography}from'@material-ui/core';import React,{useState}from'react';import{useTranslation}from'react-i18next';import useActions from'../../../../../../../redux/actions';import*as DashboardActions from'../../../../../../../redux/actions/dashboards';import useStyles from'./styles';var UploadJSON=function UploadJSON(_ref){var successHandler=_ref.successHandler,errorHandler=_ref.errorHandler;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),uploadedJSON=_useState2[0],setUploadedJSON=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),fileName=_useState6[0],setFileName=_useState6[1];var dashboard=useActions(DashboardActions);// Function to handle when a File is dragged on the upload field\nvar handleDrag=function handleDrag(e){Array.from(e.dataTransfer.files).filter(function(file){return file.name.split('.')[1]==='json';}).forEach(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(file){var readFile,parsedDashboard;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return file.text();case 2:readFile=_context.sent;setUploadedJSON(readFile);setFileName(file.name);_context.prev=5;parsedDashboard=JSON.parse(readFile);dashboard.selectDashboard({selectedDashboardID:'upload',dashboardJSON:parsedDashboard});if(!parsedDashboard.panelGroups[0].panels[0].prom_queries[0].prom_query_name){_context.next=12;break;}successHandler();_context.next=13;break;case 12:throw new Error('Invalid dashboard.');case 13:_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](5);setError(_context.t0.toString());errorHandler();case 19:case\"end\":return _context.stop();}}},_callee,null,[[5,15]]);}));return function(_x){return _ref2.apply(this,arguments);};}());};// Function to handle File upload on button click\nvar handleFileUpload=function handleFileUpload(e){var readFile=e.target.files&&e.target.files[0];setFileName(readFile&&readFile.name);var extension=readFile===null||readFile===void 0?void 0:readFile.name.substring(readFile.name.lastIndexOf('.')+1);if(extension==='json'&&readFile){readFile.text().then(function(response){setUploadedJSON(response);try{var parsedDashboard=JSON.parse(response);dashboard.selectDashboard({selectedDashboardID:'upload',dashboardJSON:parsedDashboard});if(parsedDashboard.panelGroups[0].panels[0].prom_queries[0].prom_query_name){successHandler();}else{throw new Error('Invalid dashboard.');}}catch(err){setError(err.toString());errorHandler();}});}};return/*#__PURE__*/React.createElement(Paper,{elevation:3,component:\"div\",onDragOver:function onDragOver(e){e.preventDefault();},onDrop:function onDrop(e){e.preventDefault();handleDrag(e);},className:classes.uploadJSONDiv},uploadedJSON===''||error!==''?/*#__PURE__*/React.createElement(\"div\",{className:classes.uploadJSONText},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/upload-dashboard.svg\",alt:\"upload json\",className:classes.uploadImage}),/*#__PURE__*/React.createElement(Typography,{variant:\"h6\"},t('analyticsDashboard.applicationDashboards.chooseADashboardType.uploadModal.option1')),/*#__PURE__*/React.createElement(Typography,{className:classes.orText},t('analyticsDashboard.applicationDashboards.chooseADashboardType.uploadModal.or')),/*#__PURE__*/React.createElement(\"input\",{accept:\".json\",style:{display:'none'},id:\"contained-button-file\",type:\"file\",onChange:function onChange(e){handleFileUpload(e);}}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"contained-button-file\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"contained-button-file\"},/*#__PURE__*/React.createElement(Button,{variant:\"outlined\",className:classes.uploadBtn,component:\"span\"},t('analyticsDashboard.applicationDashboards.chooseADashboardType.uploadModal.option2'))))):/*#__PURE__*/React.createElement(\"div\",{className:classes.uploadSuccessDiv},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/upload-success.svg\",alt:\"checkmark\",className:classes.uploadSuccessImg}),/*#__PURE__*/React.createElement(Typography,{className:classes.uploadSuccessText},t('analyticsDashboard.applicationDashboards.chooseADashboardType.uploadModal.successMessage'),' ',fileName)));};export default UploadJSON;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/ChooseADashboardType/Cards/UploadDashboard/index.tsx"],"names":["Button","Paper","Typography","React","useState","useTranslation","useActions","DashboardActions","useStyles","UploadJSON","successHandler","errorHandler","classes","t","uploadedJSON","setUploadedJSON","error","setError","fileName","setFileName","dashboard","handleDrag","e","Array","from","dataTransfer","files","filter","file","name","split","forEach","text","readFile","parsedDashboard","JSON","parse","selectDashboard","selectedDashboardID","dashboardJSON","panelGroups","panels","prom_queries","prom_query_name","Error","toString","handleFileUpload","target","extension","substring","lastIndexOf","then","response","err","preventDefault","uploadJSONDiv","uploadJSONText","uploadImage","orText","display","uploadBtn","uploadSuccessDiv","uploadSuccessImg","uploadSuccessText"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { Button, Paper, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ApplicationDashboard } from '../../../../../../../models/redux/dashboards';\nimport useActions from '../../../../../../../redux/actions';\nimport * as DashboardActions from '../../../../../../../redux/actions/dashboards';\nimport useStyles from './styles';\n\ninterface UploadJSONProps {\n  successHandler: () => void;\n  errorHandler: () => void;\n}\nconst UploadJSON: React.FC<UploadJSONProps> = ({\n  successHandler,\n  errorHandler,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [uploadedJSON, setUploadedJSON] = useState('');\n  const [error, setError] = useState('');\n  const [fileName, setFileName] = useState<string | null>('');\n  const dashboard = useActions(DashboardActions);\n\n  // Function to handle when a File is dragged on the upload field\n  const handleDrag = (e: React.DragEvent<HTMLDivElement>) => {\n    Array.from(e.dataTransfer.files)\n      .filter((file) => file.name.split('.')[1] === 'json')\n      .forEach(async (file) => {\n        const readFile = await file.text();\n        setUploadedJSON(readFile);\n        setFileName(file.name);\n        try {\n          const parsedDashboard: ApplicationDashboard = JSON.parse(readFile);\n          dashboard.selectDashboard({\n            selectedDashboardID: 'upload',\n            dashboardJSON: parsedDashboard,\n          });\n          if (\n            parsedDashboard.panelGroups[0].panels[0].prom_queries[0]\n              .prom_query_name\n          ) {\n            successHandler();\n          } else {\n            throw new Error('Invalid dashboard.');\n          }\n        } catch (err) {\n          setError((err as any).toString());\n          errorHandler();\n        }\n      });\n  };\n\n  // Function to handle File upload on button click\n  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const readFile = e.target.files && e.target.files[0];\n    setFileName(readFile && readFile.name);\n    const extension = readFile?.name.substring(\n      readFile.name.lastIndexOf('.') + 1\n    );\n    if (extension === 'json' && readFile) {\n      readFile.text().then((response) => {\n        setUploadedJSON(response);\n        try {\n          const parsedDashboard: ApplicationDashboard = JSON.parse(response);\n          dashboard.selectDashboard({\n            selectedDashboardID: 'upload',\n            dashboardJSON: parsedDashboard,\n          });\n          if (\n            parsedDashboard.panelGroups[0].panels[0].prom_queries[0]\n              .prom_query_name\n          ) {\n            successHandler();\n          } else {\n            throw new Error('Invalid dashboard.');\n          }\n        } catch (err) {\n          setError((err as any).toString());\n          errorHandler();\n        }\n      });\n    }\n  };\n\n  return (\n    <Paper\n      elevation={3}\n      component=\"div\"\n      onDragOver={(e) => {\n        e.preventDefault();\n      }}\n      onDrop={(e) => {\n        e.preventDefault();\n        handleDrag(e);\n      }}\n      className={classes.uploadJSONDiv}\n    >\n      {uploadedJSON === '' || error !== '' ? (\n        <div className={classes.uploadJSONText}>\n          <img\n            src=\"/icons/upload-dashboard.svg\"\n            alt=\"upload json\"\n            className={classes.uploadImage}\n          />\n          <Typography variant=\"h6\">\n            {t(\n              'analyticsDashboard.applicationDashboards.chooseADashboardType.uploadModal.option1'\n            )}\n          </Typography>\n          <Typography className={classes.orText}>\n            {t(\n              'analyticsDashboard.applicationDashboards.chooseADashboardType.uploadModal.or'\n            )}\n          </Typography>\n          <input\n            accept=\".json\"\n            style={{ display: 'none' }}\n            id=\"contained-button-file\"\n            type=\"file\"\n            onChange={(e) => {\n              handleFileUpload(e);\n            }}\n          />\n          <label htmlFor=\"contained-button-file\">\n            <label htmlFor=\"contained-button-file\">\n              <Button\n                variant=\"outlined\"\n                className={classes.uploadBtn}\n                component=\"span\"\n              >\n                {t(\n                  'analyticsDashboard.applicationDashboards.chooseADashboardType.uploadModal.option2'\n                )}\n              </Button>\n            </label>\n          </label>\n        </div>\n      ) : (\n        <div className={classes.uploadSuccessDiv}>\n          <img\n            src=\"/icons/upload-success.svg\"\n            alt=\"checkmark\"\n            className={classes.uploadSuccessImg}\n          />\n          <Typography className={classes.uploadSuccessText}>\n            {t(\n              'analyticsDashboard.applicationDashboards.chooseADashboardType.uploadModal.successMessage'\n            )}{' '}\n            {fileName}\n          </Typography>\n        </div>\n      )}\n    </Paper>\n  );\n};\nexport default UploadJSON;\n"]},"metadata":{},"sourceType":"module"}