{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/TuneWorkflowSteps/SteadyState.tsx\";\n\nimport { Button, IconButton, Paper, Popover, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\nimport { ButtonOutlined } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport useActions from '../../../../redux/actions';\nimport * as WorkflowActions from '../../../../redux/actions/workflow';\nimport AddProbe from '../AddProbe';\nimport useStyles from './styles';\n\nvar SteadyState = function SteadyState(_ref) {\n  var engineIndex = _ref.engineIndex,\n      gotoStep = _ref.gotoStep,\n      closeStepper = _ref.closeStepper;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var workflow = useActions(WorkflowActions);\n  var manifest = useSelector(function (state) {\n    return state.workflowManifest;\n  });\n  var chaosEngine = YAML.parse(manifest.engineYAML);\n\n  var _useState = useState(chaosEngine.spec.experiments[0].spec.probe && chaosEngine.spec.experiments[0].spec.probe.length ? chaosEngine.spec.experiments[0].spec.probe : []),\n      _useState2 = _slicedToArray(_useState, 2),\n      probesData = _useState2[0],\n      setProbesData = _useState2[1]; // State varible to handle the Probe Modal\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addProbe = _useState4[0],\n      setAddProbe = _useState4[1];\n\n  var handleClose = function handleClose() {\n    setAddProbe(false);\n  }; // handleManiYAMLChange allows to update the main manifest\n  // with the changes in individual Chaos Engines\n\n\n  var handleMainYAMLChange = function handleMainYAMLChange() {\n    var mainManifest = YAML.parse(manifest.manifest);\n    mainManifest.spec.templates[engineIndex].inputs.artifacts[0].raw.data = YAML.stringify(chaosEngine);\n    workflow.setWorkflowManifest({\n      manifest: YAML.stringify(mainManifest),\n      engineYAML: YAML.stringify(chaosEngine)\n    });\n  }; // State variable to store Probe Data\n\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      probeDetails = _useState6[0],\n      setProbeDetails = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      probeProperties = _useState8[0],\n      setProbeProperties = _useState8[1]; // State variable to handle the Probe Details Popover\n\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      popAnchorEl = _React$useState2[0],\n      setPopAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      propertyAnchorEl = _React$useState4[0],\n      setPropertyPopAnchorEl = _React$useState4[1];\n\n  var isOpen = Boolean(popAnchorEl);\n  var isPropertyOpen = Boolean(propertyAnchorEl);\n  var id = isOpen ? 'simple-popover' : undefined;\n  var propertyid = isPropertyOpen ? 'simple-popover' : undefined; // Event handler for Details and Properties PopOvers\n\n  var handlePopOverClick = function handlePopOverClick(event) {\n    setPopAnchorEl(event.currentTarget);\n  };\n\n  var handlePropertyPopOverClick = function handlePropertyPopOverClick(event) {\n    setPropertyPopAnchorEl(event.currentTarget);\n  }; // Funtion to handle delete probe operation\n\n\n  var deleteProbe = function deleteProbe(index) {\n    probesData.splice(index, 1);\n    chaosEngine.spec.experiments[0].spec.probe = probesData;\n    setProbesData(probesData);\n    handleMainYAMLChange();\n  }; // Function to handle add probes operation\n\n\n  var handleAddProbe = function handleAddProbe(probes) {\n    setProbesData(probes);\n    setAddProbe(false);\n  };\n\n  var handleStepperClose = function handleStepperClose() {\n    chaosEngine.spec.experiments[0].spec.probe = probesData;\n    handleMainYAMLChange();\n    return closeStepper();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.table,\n    component: Paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.steadyState.name')), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.steadyState.type')), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.steadyState.mode')), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.steadyState.details')), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.steadyState.properties')), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, (probesData === null || probesData === void 0 ? void 0 : probesData.length) ? probesData.map(function (probe, index) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: probe.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, probe.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        cursor: 'pointer'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, probe.type), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, probe.mode), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: function onClick(event) {\n        setProbeDetails(probe[\"\".concat(probe.type, \"/inputs\")]);\n        handlePopOverClick(event);\n      },\n      className: classes.btn1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 23\n      }\n    }, t('createWorkflow.tuneWorkflow.steadyState.showDetails')))), /*#__PURE__*/React.createElement(Popover, {\n      id: id,\n      open: isOpen,\n      anchorEl: popAnchorEl,\n      onClose: function onClose() {\n        return setPopAnchorEl(null);\n      },\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      className: classes.probePopOver,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.popOverDiv,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.probeText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, YAML.stringify(probeDetails))))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: function onClick(event) {\n        setProbeProperties(probe.runProperties);\n        handlePropertyPopOverClick(event);\n      },\n      className: classes.btn1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }\n    }, t('createWorkflow.tuneWorkflow.steadyState.showProp')))), /*#__PURE__*/React.createElement(Popover, {\n      id: propertyid,\n      open: isPropertyOpen,\n      anchorEl: propertyAnchorEl,\n      onClose: function onClose() {\n        return setPropertyPopAnchorEl(null);\n      },\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      className: classes.probePopOver,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.popOverDiv,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.probeText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, YAML.stringify(probeProperties))))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        deleteProbe(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/icons/bin-red-delete.svg\",\n      alt: \"delete\",\n      className: classes.deleteIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 23\n      }\n    }))));\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.tuneWorkflow.steadyState.addProbe'))))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ButtonOutlined, {\n    onClick: function onClick() {\n      setAddProbe(true);\n    },\n    className: classes.btn1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, t('createWorkflow.tuneWorkflow.steadyState.addNewProbe'))), /*#__PURE__*/React.createElement(AddProbe, {\n    probesValue: probesData,\n    addProbe: function addProbe(probes) {\n      return handleAddProbe(probes);\n    },\n    handleClose: handleClose,\n    open: addProbe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return gotoStep(1);\n    },\n    className: classes.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, t('createWorkflow.tuneWorkflow.steadyState.back')), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return handleStepperClose();\n    },\n    className: classes.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, t('createWorkflow.tuneWorkflow.steadyState.finish'))));\n};\n\nexport default SteadyState;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/TuneWorkflowSteps/SteadyState.tsx"],"names":["Button","IconButton","Paper","Popover","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","ButtonOutlined","React","useState","useTranslation","useSelector","YAML","useActions","WorkflowActions","AddProbe","useStyles","SteadyState","engineIndex","gotoStep","closeStepper","classes","t","workflow","manifest","state","workflowManifest","chaosEngine","parse","engineYAML","spec","experiments","probe","length","probesData","setProbesData","addProbe","setAddProbe","handleClose","handleMainYAMLChange","mainManifest","templates","inputs","artifacts","raw","data","stringify","setWorkflowManifest","probeDetails","setProbeDetails","probeProperties","setProbeProperties","popAnchorEl","setPopAnchorEl","propertyAnchorEl","setPropertyPopAnchorEl","isOpen","Boolean","isPropertyOpen","id","undefined","propertyid","handlePopOverClick","event","currentTarget","handlePropertyPopOverClick","deleteProbe","index","splice","handleAddProbe","probes","handleStepperClose","table","map","name","cursor","type","mode","btn1","vertical","horizontal","probePopOver","popOverDiv","probeText","runProperties","deleteIcon","button"],"mappings":"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","sourcesContent":["import {\n  Button,\n  IconButton,\n  Paper,\n  Popover,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport { ButtonOutlined } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport { WorkflowManifest } from '../../../../models/redux/workflow';\nimport useActions from '../../../../redux/actions';\nimport * as WorkflowActions from '../../../../redux/actions/workflow';\nimport { RootState } from '../../../../redux/reducers';\nimport AddProbe from '../AddProbe';\nimport useStyles from './styles';\n\ninterface SteadyStateProps {\n  engineIndex: number;\n  gotoStep: (page: number) => void;\n  closeStepper: () => void;\n}\n\nconst SteadyState: React.FC<SteadyStateProps> = ({\n  engineIndex,\n  gotoStep,\n  closeStepper,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const workflow = useActions(WorkflowActions);\n\n  const manifest: WorkflowManifest = useSelector(\n    (state: RootState) => state.workflowManifest\n  );\n  const chaosEngine = YAML.parse(manifest.engineYAML);\n  const [probesData, setProbesData] = useState(\n    chaosEngine.spec.experiments[0].spec.probe &&\n      chaosEngine.spec.experiments[0].spec.probe.length\n      ? chaosEngine.spec.experiments[0].spec.probe\n      : []\n  );\n\n  // State varible to handle the Probe Modal\n  const [addProbe, setAddProbe] = useState<boolean>(false);\n  const handleClose = () => {\n    setAddProbe(false);\n  };\n\n  // handleManiYAMLChange allows to update the main manifest\n  // with the changes in individual Chaos Engines\n  const handleMainYAMLChange = () => {\n    const mainManifest = YAML.parse(manifest.manifest);\n    mainManifest.spec.templates[engineIndex].inputs.artifacts[0].raw.data =\n      YAML.stringify(chaosEngine);\n    workflow.setWorkflowManifest({\n      manifest: YAML.stringify(mainManifest),\n      engineYAML: YAML.stringify(chaosEngine),\n    });\n  };\n\n  // State variable to store Probe Data\n  const [probeDetails, setProbeDetails] = useState<object>();\n  const [probeProperties, setProbeProperties] = useState({});\n\n  // State variable to handle the Probe Details Popover\n  const [popAnchorEl, setPopAnchorEl] = React.useState<null | HTMLElement>(\n    null\n  );\n  const [propertyAnchorEl, setPropertyPopAnchorEl] =\n    React.useState<null | HTMLElement>(null);\n  const isOpen = Boolean(popAnchorEl);\n  const isPropertyOpen = Boolean(propertyAnchorEl);\n  const id = isOpen ? 'simple-popover' : undefined;\n  const propertyid = isPropertyOpen ? 'simple-popover' : undefined;\n\n  // Event handler for Details and Properties PopOvers\n  const handlePopOverClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPopAnchorEl(event.currentTarget);\n  };\n  const handlePropertyPopOverClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPropertyPopAnchorEl(event.currentTarget);\n  };\n\n  // Funtion to handle delete probe operation\n  const deleteProbe = (index: number) => {\n    probesData.splice(index, 1);\n    chaosEngine.spec.experiments[0].spec.probe = probesData;\n    setProbesData(probesData);\n    handleMainYAMLChange();\n  };\n  // Function to handle add probes operation\n  const handleAddProbe = (probes: any) => {\n    setProbesData(probes);\n    setAddProbe(false);\n  };\n\n  const handleStepperClose = () => {\n    chaosEngine.spec.experiments[0].spec.probe = probesData;\n    handleMainYAMLChange();\n    return closeStepper();\n  };\n\n  return (\n    <div>\n      <TableContainer className={classes.table} component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                {t('createWorkflow.tuneWorkflow.steadyState.name')}\n              </TableCell>\n              <TableCell align=\"left\">\n                {t('createWorkflow.tuneWorkflow.steadyState.type')}\n              </TableCell>\n              <TableCell align=\"left\">\n                {t('createWorkflow.tuneWorkflow.steadyState.mode')}\n              </TableCell>\n              <TableCell align=\"left\">\n                {t('createWorkflow.tuneWorkflow.steadyState.details')}\n              </TableCell>\n              <TableCell align=\"left\">\n                {t('createWorkflow.tuneWorkflow.steadyState.properties')}\n              </TableCell>\n              <TableCell align=\"left\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {probesData?.length ? (\n              probesData.map((probe: any, index: number) => (\n                <TableRow key={probe.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {probe.name}\n                  </TableCell>\n                  <TableCell align=\"left\" style={{ cursor: 'pointer' }}>\n                    {probe.type}\n                  </TableCell>\n                  <TableCell align=\"left\">{probe.mode}</TableCell>\n                  <TableCell align=\"left\">\n                    <ButtonOutlined\n                      onClick={(event) => {\n                        setProbeDetails(probe[`${probe.type}/inputs`]);\n                        handlePopOverClick(event);\n                      }}\n                      className={classes.btn1}\n                    >\n                      <Typography>\n                        {t(\n                          'createWorkflow.tuneWorkflow.steadyState.showDetails'\n                        )}\n                      </Typography>\n                    </ButtonOutlined>\n                  </TableCell>\n\n                  {/* Probe Details PopOver */}\n                  <Popover\n                    id={id}\n                    open={isOpen}\n                    anchorEl={popAnchorEl}\n                    onClose={() => setPopAnchorEl(null)}\n                    anchorOrigin={{\n                      vertical: 'bottom',\n                      horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'center',\n                    }}\n                    className={classes.probePopOver}\n                  >\n                    <div className={classes.popOverDiv}>\n                      <Typography className={classes.probeText}>\n                        <pre>{YAML.stringify(probeDetails)}</pre>\n                      </Typography>\n                    </div>\n                  </Popover>\n                  <TableCell align=\"left\">\n                    <ButtonOutlined\n                      onClick={(event) => {\n                        setProbeProperties(probe.runProperties);\n                        handlePropertyPopOverClick(event);\n                      }}\n                      className={classes.btn1}\n                    >\n                      <Typography>\n                        {t('createWorkflow.tuneWorkflow.steadyState.showProp')}\n                      </Typography>\n                    </ButtonOutlined>\n                  </TableCell>\n\n                  {/* Probe Properties PopOver */}\n                  <Popover\n                    id={propertyid}\n                    open={isPropertyOpen}\n                    anchorEl={propertyAnchorEl}\n                    onClose={() => setPropertyPopAnchorEl(null)}\n                    anchorOrigin={{\n                      vertical: 'bottom',\n                      horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'center',\n                    }}\n                    className={classes.probePopOver}\n                  >\n                    <div className={classes.popOverDiv}>\n                      <Typography className={classes.probeText}>\n                        <pre>{YAML.stringify(probeProperties)}</pre>\n                      </Typography>\n                    </div>\n                  </Popover>\n                  <TableCell>\n                    <IconButton\n                      onClick={() => {\n                        deleteProbe(index);\n                      }}\n                    >\n                      <img\n                        src=\"/icons/bin-red-delete.svg\"\n                        alt=\"delete\"\n                        className={classes.deleteIcon}\n                      />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={5}>\n                  <Typography align=\"center\">\n                    {t('createWorkflow.tuneWorkflow.steadyState.addProbe')}\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <br />\n      <ButtonOutlined\n        onClick={() => {\n          setAddProbe(true);\n        }}\n        className={classes.btn1}\n      >\n        <Typography>\n          {t('createWorkflow.tuneWorkflow.steadyState.addNewProbe')}\n        </Typography>\n      </ButtonOutlined>\n      <AddProbe\n        probesValue={probesData}\n        addProbe={(probes: any) => handleAddProbe(probes)}\n        handleClose={handleClose}\n        open={addProbe}\n      />\n      <div>\n        <Button onClick={() => gotoStep(1)} className={classes.button}>\n          {t('createWorkflow.tuneWorkflow.steadyState.back')}\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleStepperClose()}\n          className={classes.button}\n        >\n          {t('createWorkflow.tuneWorkflow.steadyState.finish')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default SteadyState;\n"]},"metadata":{},"sourceType":"module"}