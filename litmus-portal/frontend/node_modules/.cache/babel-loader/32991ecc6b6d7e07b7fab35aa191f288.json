{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ChooseWorkflow/index.tsx\";\n\nimport { Accordion, AccordionSummary, RadioGroup, Typography } from '@material-ui/core';\nimport { RadioButton } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport useActions from '../../../redux/actions';\nimport * as AlertActions from '../../../redux/actions/alert';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport ChoosePreDefinedExperiments from './choosePreDefinedExperiments';\nimport ChooseWorkflowFromExisting from './ChooseWorkflowFromExisting';\nimport SelectMyHub from './SelectMyHub';\nimport useStyles from './styles';\nimport UploadYAML from './uploadYAML';\nvar ChooseWorkflow = forwardRef(function (_, ref) {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var alert = useActions(AlertActions);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      id = _useState4[0],\n      setSelectedID = _useState4[1];\n\n  var workflowDetails = useSelector(function (state) {\n    return state.workflowManifest.manifest;\n  });\n  var workflowAction = useActions(WorkflowActions);\n\n  var handleChange = function handleChange(event) {\n    setSelected(event.target.value);\n    localforage.setItem('selectedScheduleOption', {\n      selected: event.target.value\n    });\n\n    if (event.target.value === 'C' || event.target.value === 'D') {\n      workflowAction.setWorkflowManifest({\n        isCustomWorkflow: true\n      });\n    } else {\n      workflowAction.setWorkflowManifest({\n        isCustomWorkflow: false\n      });\n    }\n  };\n\n  useEffect(function () {\n    workflowAction.setWorkflowManifest({\n      manifest: ''\n    });\n  }, []);\n\n  function onNext() {\n    if (selected === '') {\n      alert.changeAlertState(true); // No Workflow Type has been selected and user clicked on Next\n\n      return false;\n    }\n\n    if (selected === 'A' || selected === 'B') {\n      if (id === undefined) {\n        alert.changeAlertState(true);\n        return false;\n      }\n    }\n\n    if (selected === 'D' && workflowDetails === '') {\n      alert.changeAlertState(true);\n      return false;\n    }\n\n    alert.changeAlertState(false);\n    return true;\n  }\n\n  var pickedExperiment = function pickedExperiment(subExpNumber) {\n    setSelectedID(subExpNumber);\n  };\n\n  useImperativeHandle(ref, function () {\n    return {\n      onNext: onNext\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": \"header\",\n    className: classes.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": \"headerLeft\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.chooseWorkflow.title')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subtitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.chooseWorkflow.subtitle')))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.m5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(RadioGroup, {\n    \"data-testid\": \"workflowRadioButtons\",\n    \"data-cy\": \"WorkflowsRadioGroup\",\n    value: selected,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    expanded: selected === 'A',\n    className: classes.accordion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RadioButton, {\n    value: \"A\",\n    \"data-cy\": \"PredefinedWorkflowsRadioButton\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"option\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.chooseWorkflow.optionA')))), /*#__PURE__*/React.createElement(ChoosePreDefinedExperiments, {\n    selectedExp: pickedExperiment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Accordion, {\n    expanded: selected === 'B',\n    classes: {\n      root: classes.MuiAccordionroot\n    },\n    className: classes.accordion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RadioButton, {\n    value: \"B\",\n    \"data-cy\": \"templateWorkflowsRadioButton\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"option\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.chooseWorkflow.optionB')))), /*#__PURE__*/React.createElement(ChooseWorkflowFromExisting, {\n    selectedExp: pickedExperiment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Accordion, {\n    expanded: selected === 'C',\n    classes: {\n      root: classes.MuiAccordionroot\n    },\n    className: classes.accordion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RadioButton, {\n    value: \"C\",\n    \"data-cy\": \"myHubsRadioButton\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"option\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.chooseWorkflow.optionC')), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.chooseWorkflow.myHubs')))), /*#__PURE__*/React.createElement(SelectMyHub, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Accordion, {\n    expanded: selected === 'D',\n    classes: {\n      root: classes.MuiAccordionroot\n    },\n    className: classes.accordion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RadioButton, {\n    value: \"D\",\n    \"data-cy\": \"uploadYAMLRadioButton\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"option\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.chooseWorkflow.optionD')))), /*#__PURE__*/React.createElement(UploadYAML, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  })))));\n});\nexport default ChooseWorkflow;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ChooseWorkflow/index.tsx"],"names":["Accordion","AccordionSummary","RadioGroup","Typography","RadioButton","localforage","React","forwardRef","useEffect","useImperativeHandle","useState","useTranslation","useSelector","useActions","AlertActions","WorkflowActions","ChoosePreDefinedExperiments","ChooseWorkflowFromExisting","SelectMyHub","useStyles","UploadYAML","ChooseWorkflow","_","ref","classes","t","alert","selected","setSelected","undefined","id","setSelectedID","workflowDetails","state","workflowManifest","manifest","workflowAction","handleChange","event","target","value","setItem","setWorkflowManifest","isCustomWorkflow","onNext","changeAlertState","pickedExperiment","subExpNumber","root","innerContainer","header","title","subtitle","divider","m5","accordion","e","MuiAccordionroot","bold"],"mappings":"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","sourcesContent":["import {\n  Accordion,\n  AccordionSummary,\n  RadioGroup,\n  Typography,\n} from '@material-ui/core';\nimport { RadioButton } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport useActions from '../../../redux/actions';\nimport * as AlertActions from '../../../redux/actions/alert';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { RootState } from '../../../redux/reducers';\nimport ChoosePreDefinedExperiments from './choosePreDefinedExperiments';\nimport ChooseWorkflowFromExisting from './ChooseWorkflowFromExisting';\nimport SelectMyHub from './SelectMyHub';\nimport useStyles from './styles';\nimport UploadYAML from './uploadYAML';\n\nconst ChooseWorkflow = forwardRef((_, ref) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const alert = useActions(AlertActions);\n  const [selected, setSelected] = useState<string>('');\n  const [id, setSelectedID] = useState<string | undefined>(undefined);\n  const workflowDetails = useSelector(\n    (state: RootState) => state.workflowManifest.manifest\n  );\n  const workflowAction = useActions(WorkflowActions);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelected(event.target.value);\n    localforage.setItem('selectedScheduleOption', {\n      selected: event.target.value,\n    });\n    if (event.target.value === 'C' || event.target.value === 'D') {\n      workflowAction.setWorkflowManifest({\n        isCustomWorkflow: true,\n      });\n    } else {\n      workflowAction.setWorkflowManifest({\n        isCustomWorkflow: false,\n      });\n    }\n  };\n\n  useEffect(() => {\n    workflowAction.setWorkflowManifest({ manifest: '' });\n  }, []);\n\n  function onNext() {\n    if (selected === '') {\n      alert.changeAlertState(true); // No Workflow Type has been selected and user clicked on Next\n      return false;\n    }\n    if (selected === 'A' || selected === 'B') {\n      if (id === undefined) {\n        alert.changeAlertState(true);\n        return false;\n      }\n    }\n    if (selected === 'D' && workflowDetails === '') {\n      alert.changeAlertState(true);\n      return false;\n    }\n    alert.changeAlertState(false);\n    return true;\n  }\n\n  const pickedExperiment = (subExpNumber: string) => {\n    setSelectedID(subExpNumber);\n  };\n\n  useImperativeHandle(ref, () => ({\n    onNext,\n  }));\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.innerContainer}>\n        {/* Header */}\n        <div aria-label=\"header\" className={classes.header}>\n          <div aria-label=\"headerLeft\">\n            <Typography className={classes.title}>\n              {t('createWorkflow.chooseWorkflow.title')}\n            </Typography>\n            <Typography className={classes.subtitle}>\n              {t('createWorkflow.chooseWorkflow.subtitle')}\n            </Typography>\n          </div>\n        </div>\n\n        <hr className={classes.divider} />\n\n        {/* Selection Radio Buttons */}\n        <div className={classes.m5} />\n\n        <RadioGroup\n          data-testid=\"workflowRadioButtons\"\n          data-cy=\"WorkflowsRadioGroup\"\n          value={selected}\n          onChange={handleChange}\n        >\n          <Accordion expanded={selected === 'A'} className={classes.accordion}>\n            <AccordionSummary>\n              <RadioButton\n                value=\"A\"\n                data-cy=\"PredefinedWorkflowsRadioButton\"\n                onChange={(e) => handleChange(e)}\n              >\n                <span data-testid=\"option\">\n                  {t('createWorkflow.chooseWorkflow.optionA')}\n                </span>\n              </RadioButton>\n            </AccordionSummary>\n            <ChoosePreDefinedExperiments selectedExp={pickedExperiment} />\n          </Accordion>\n\n          <Accordion\n            expanded={selected === 'B'}\n            classes={{\n              root: classes.MuiAccordionroot,\n            }}\n            className={classes.accordion}\n          >\n            <AccordionSummary>\n              <RadioButton\n                value=\"B\"\n                data-cy=\"templateWorkflowsRadioButton\"\n                onChange={(e) => handleChange(e)}\n              >\n                <span data-testid=\"option\">\n                  {t('createWorkflow.chooseWorkflow.optionB')}\n                </span>\n              </RadioButton>\n            </AccordionSummary>\n            <ChooseWorkflowFromExisting selectedExp={pickedExperiment} />\n          </Accordion>\n\n          <Accordion\n            expanded={selected === 'C'}\n            classes={{\n              root: classes.MuiAccordionroot,\n            }}\n            className={classes.accordion}\n          >\n            <AccordionSummary>\n              <RadioButton\n                value=\"C\"\n                data-cy=\"myHubsRadioButton\"\n                onChange={(e) => handleChange(e)}\n              >\n                <span data-testid=\"option\">\n                  {t('createWorkflow.chooseWorkflow.optionC')}\n                </span>{' '}\n                <span className={classes.bold}>\n                  {t('createWorkflow.chooseWorkflow.myHubs')}\n                </span>\n              </RadioButton>\n            </AccordionSummary>\n            <SelectMyHub />\n          </Accordion>\n\n          <Accordion\n            expanded={selected === 'D'}\n            classes={{\n              root: classes.MuiAccordionroot,\n            }}\n            className={classes.accordion}\n          >\n            <AccordionSummary>\n              <RadioButton\n                value=\"D\"\n                data-cy=\"uploadYAMLRadioButton\"\n                onChange={(e) => handleChange(e)}\n              >\n                <span data-testid=\"option\">\n                  {t('createWorkflow.chooseWorkflow.optionD')}\n                </span>\n              </RadioButton>\n            </AccordionSummary>\n            <UploadYAML />\n          </Accordion>\n        </RadioGroup>\n      </div>\n    </div>\n  );\n});\n\nexport default ChooseWorkflow;\n"]},"metadata":{},"sourceType":"module"}