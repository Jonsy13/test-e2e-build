{"ast":null,"code":"import{Button,Typography}from'@material-ui/core';import React from'react';import useStyles from'./styles';var GitHubToggleButton=function GitHubToggleButton(_ref){var isToggled=_ref.isToggled,setIsToggled=_ref.setIsToggled;var classes=useStyles();var setFilledButtonState=function setFilledButtonState(buttonName){return/*#__PURE__*/React.createElement(Button,{className:classes.toggleActive,onClick:function onClick(){return isToggled.isPublicToggled?setIsToggled({isPublicToggled:true,isPrivateToggled:false}):isToggled.isPrivateToggled?setIsToggled({isPublicToggled:false,isPrivateToggled:true}):setIsToggled({isPublicToggled:false,isPrivateToggled:false});}},/*#__PURE__*/React.createElement(Typography,{className:classes.toggleFont},buttonName));};var setButtonOutlinedState=function setButtonOutlinedState(buttonName,setIsToggleValues){return/*#__PURE__*/React.createElement(Button,{className:classes.toggleInactive,onClick:function onClick(){return setIsToggled(setIsToggleValues);}},/*#__PURE__*/React.createElement(Typography,{className:classes.toggleFont},buttonName));};var PublicButton=function PublicButton(){return isToggled.isPublicToggled?setFilledButtonState('Public'):setButtonOutlinedState('Public',{isPublicToggled:true,isPrivateToggled:false});};var PrivateButton=function PrivateButton(){return isToggled.isPrivateToggled?setFilledButtonState('Private'):setButtonOutlinedState('Private',{isPublicToggled:false,isPrivateToggled:true});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,PublicButton(),PrivateButton()));};export default GitHubToggleButton;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/GitHubComponents/GitHubToggleButtons/GitHubToggleButton.tsx"],"names":["Button","Typography","React","useStyles","GitHubToggleButton","isToggled","setIsToggled","classes","setFilledButtonState","buttonName","toggleActive","isPublicToggled","isPrivateToggled","toggleFont","setButtonOutlinedState","setIsToggleValues","toggleInactive","PublicButton","PrivateButton"],"mappings":"AAAA,OAASA,MAAT,CAAiBC,UAAjB,KAAmC,mBAAnC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAYA,GAAMC,CAAAA,kBAAmC,CAAG,QAAtCA,CAAAA,kBAAsC,MAAiC,IAA9BC,CAAAA,SAA8B,MAA9BA,SAA8B,CAAnBC,YAAmB,MAAnBA,YAAmB,CAC3E,GAAMC,CAAAA,OAAO,CAAGJ,SAAS,EAAzB,CACA,GAAMK,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,UAAD,CAAwB,CACnD,mBACE,oBAAC,MAAD,EACE,SAAS,CAAEF,OAAO,CAACG,YADrB,CAEE,OAAO,CAAE,yBACPL,CAAAA,SAAS,CAACM,eAAV,CACIL,YAAY,CAAC,CACXK,eAAe,CAAE,IADN,CAEXC,gBAAgB,CAAE,KAFP,CAAD,CADhB,CAKIP,SAAS,CAACO,gBAAV,CACAN,YAAY,CAAC,CACXK,eAAe,CAAE,KADN,CAEXC,gBAAgB,CAAE,IAFP,CAAD,CADZ,CAKAN,YAAY,CAAC,CACXK,eAAe,CAAE,KADN,CAEXC,gBAAgB,CAAE,KAFP,CAAD,CAXT,EAFX,eAmBE,oBAAC,UAAD,EAAY,SAAS,CAAEL,OAAO,CAACM,UAA/B,EAA4CJ,UAA5C,CAnBF,CADF,CAuBD,CAxBD,CA0BA,GAAMK,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAC7BL,UAD6B,CAE7BM,iBAF6B,CAG1B,CACH,mBACE,oBAAC,MAAD,EACE,SAAS,CAAER,OAAO,CAACS,cADrB,CAEE,OAAO,CAAE,yBAAMV,CAAAA,YAAY,CAACS,iBAAD,CAAlB,EAFX,eAIE,oBAAC,UAAD,EAAY,SAAS,CAAER,OAAO,CAACM,UAA/B,EAA4CJ,UAA5C,CAJF,CADF,CAQD,CAZD,CAcA,GAAMQ,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SACnBZ,CAAAA,SAAS,CAACM,eAAV,CACIH,oBAAoB,CAAC,QAAD,CADxB,CAEIM,sBAAsB,CAAC,QAAD,CAAW,CAC/BH,eAAe,CAAE,IADc,CAE/BC,gBAAgB,CAAE,KAFa,CAAX,CAHP,EAArB,CAQA,GAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SACpBb,CAAAA,SAAS,CAACO,gBAAV,CACIJ,oBAAoB,CAAC,SAAD,CADxB,CAEIM,sBAAsB,CAAC,SAAD,CAAY,CAChCH,eAAe,CAAE,KADe,CAEhCC,gBAAgB,CAAE,IAFc,CAAZ,CAHN,EAAtB,CAQA,mBACE,4CACE,+BACGK,YAAY,EADf,CAEGC,aAAa,EAFhB,CADF,CADF,CAQD,CAlED,CAoEA,cAAed,CAAAA,kBAAf","sourcesContent":["import { Button, Typography } from '@material-ui/core';\nimport React from 'react';\nimport useStyles from './styles';\n\ninterface MyHubToggleProps {\n  isPublicToggled: boolean;\n  isPrivateToggled: boolean;\n}\n\ninterface Props {\n  isToggled: MyHubToggleProps;\n  setIsToggled: React.Dispatch<React.SetStateAction<MyHubToggleProps>>;\n}\n\nconst GitHubToggleButton: React.FC<Props> = ({ isToggled, setIsToggled }) => {\n  const classes = useStyles();\n  const setFilledButtonState = (buttonName: string) => {\n    return (\n      <Button\n        className={classes.toggleActive}\n        onClick={() =>\n          isToggled.isPublicToggled\n            ? setIsToggled({\n                isPublicToggled: true,\n                isPrivateToggled: false,\n              })\n            : isToggled.isPrivateToggled\n            ? setIsToggled({\n                isPublicToggled: false,\n                isPrivateToggled: true,\n              })\n            : setIsToggled({\n                isPublicToggled: false,\n                isPrivateToggled: false,\n              })\n        }\n      >\n        <Typography className={classes.toggleFont}>{buttonName}</Typography>\n      </Button>\n    );\n  };\n\n  const setButtonOutlinedState = (\n    buttonName: string,\n    setIsToggleValues: MyHubToggleProps\n  ) => {\n    return (\n      <Button\n        className={classes.toggleInactive}\n        onClick={() => setIsToggled(setIsToggleValues)}\n      >\n        <Typography className={classes.toggleFont}>{buttonName}</Typography>\n      </Button>\n    );\n  };\n\n  const PublicButton = () =>\n    isToggled.isPublicToggled\n      ? setFilledButtonState('Public')\n      : setButtonOutlinedState('Public', {\n          isPublicToggled: true,\n          isPrivateToggled: false,\n        });\n\n  const PrivateButton = () =>\n    isToggled.isPrivateToggled\n      ? setFilledButtonState('Private')\n      : setButtonOutlinedState('Private', {\n          isPublicToggled: false,\n          isPrivateToggled: true,\n        });\n\n  return (\n    <div>\n      <div>\n        {PublicButton()}\n        {PrivateButton()}\n      </div>\n    </div>\n  );\n};\n\nexport default GitHubToggleButton;\n"]},"metadata":{},"sourceType":"module"}