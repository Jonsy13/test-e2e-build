{"ast":null,"code":"import _defineProperty from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Divider,Typography}from'@material-ui/core';import{ButtonFilled,ButtonOutlined,InputField,Modal}from'litmus-ui';import React,{useRef,useState}from'react';import{useTranslation}from'react-i18next';import Loader from'../../../../components/Loader';import config from'../../../../config';import{getToken}from'../../../../utils/auth';import{validateConfirmPassword,validateStartEmptySpacing}from'../../../../utils/validate';import PersonalDetails from'../PersonalDetails';import useStyles from'./styles';// used for password field\n// AccountSettings displays the starting page of \"Accounts\" tab\nvar AccountSettings=function AccountSettings(){var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;// used for modal\nvar _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var isSuccess=useRef(false);var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),loading=_React$useState4[0],setLoading=_React$useState4[1];var handleClose=function handleClose(){setOpen(false);};// states for the three password fields\nvar _React$useState5=React.useState({newPassword:'',currPassword:'',confNewPassword:''}),_React$useState6=_slicedToArray(_React$useState5,2),password=_React$useState6[0],setPassword=_React$useState6[1];// handleCurrPassword handles password for first password field\nvar handleCurrPassword=function handleCurrPassword(prop){return function(event){setPassword(_objectSpread(_objectSpread({},password),{},_defineProperty({},prop,event.target.value)));};};// handleNewPassword handles password for second password field\nvar handleNewPassword=function handleNewPassword(prop){return function(event){setPassword(_objectSpread(_objectSpread({},password),{},_defineProperty({},prop,event.target.value)));};};// handleConfPassword handles password for third password field\nvar handleConfPassword=function handleConfPassword(prop){return function(event){setPassword(_objectSpread(_objectSpread({},password),{},_defineProperty({},prop,event.target.value)));};};if(password.confNewPassword.length>0&&password.newPassword===password.confNewPassword)isSuccess.current=true;else isSuccess.current=false;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var handleChangePassword=function handleChangePassword(){setLoading(true);fetch(\"\".concat(config.auth.url,\"/update/password\"),{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(getToken())},body:JSON.stringify({old_password:password.currPassword,new_password:password.newPassword})}).then(function(response){return response.json();}).then(function(data){if('error'in data){setError(data.error_description);}else{setError('');}setLoading(false);setOpen(true);setPassword({newPassword:'',currPassword:'',confNewPassword:''});}).catch(function(err){setLoading(false);setError(err.message);setOpen(true);});};return/*#__PURE__*/React.createElement(\"div\",{className:classes.container},/*#__PURE__*/React.createElement(PersonalDetails,null),/*#__PURE__*/React.createElement(Divider,{className:classes.divider}),/*#__PURE__*/React.createElement(Typography,{className:classes.headerText},/*#__PURE__*/React.createElement(\"strong\",null,t('settings.accountsTab.accountsSettings.header'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.outerPass},/*#__PURE__*/React.createElement(\"form\",{className:classes.innerPass},/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"currPassword\"},/*#__PURE__*/React.createElement(InputField,{required:true,value:password.currPassword,onChange:handleCurrPassword('currPassword'),type:\"password\",label:t('settings.accountsTab.accountsSettings.label.currPassword'),variant:\"primary\"})),/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'1rem'}}),/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"newPassword\"},/*#__PURE__*/React.createElement(InputField,{required:true,type:\"password\",onChange:handleNewPassword('newPassword'),helperText:validateStartEmptySpacing(password.newPassword)?t('settings.accountsTab.accountsSettings.passwordValidation'):'',label:t('settings.accountsTab.accountsSettings.label.newPassword'),variant:validateStartEmptySpacing(password.newPassword)?'error':isSuccess.current?'success':'primary',value:password.newPassword})),/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'1rem'}}),/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"confPassword\"},/*#__PURE__*/React.createElement(InputField,{helperText:validateConfirmPassword(password.newPassword,password.confNewPassword)?t('settings.accountsTab.accountsSettings.passwordNotSame'):'',required:true,type:\"password\",onChange:handleConfPassword('confNewPassword'),label:t('settings.accountsTab.accountsSettings.label.confNewPassword'),variant:validateConfirmPassword(password.newPassword,password.confNewPassword)?'error':isSuccess.current?'success':'primary',value:password.confNewPassword})),/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"change-password\",className:classes.buttonModal},/*#__PURE__*/React.createElement(ButtonFilled,{\"data-cy\":\"button\",disabled:!(password.newPassword.length>0&&password.newPassword===password.confNewPassword&&password.currPassword.length>0&&!loading),onClick:handleChangePassword},loading?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Loader,{size:20})):/*#__PURE__*/React.createElement(React.Fragment,null,t('settings.accountsTab.accountsSettings.button.changePass')))),/*#__PURE__*/React.createElement(Modal,{open:open,onClose:handleClose,modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:handleClose},\"\\u2715\")},error.length?/*#__PURE__*/React.createElement(\"div\",{className:classes.errDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.textError},/*#__PURE__*/React.createElement(Typography,{className:classes.typo,align:\"center\"},/*#__PURE__*/React.createElement(\"strong\",null,t('settings.accountsTab.accountsSettings.modal.headerErrStrong'),\":\"),' ',t('settings.accountsTab.accountsSettings.modal.headerErr'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.textSecondError},/*#__PURE__*/React.createElement(Typography,{className:classes.typoSub},t('settings.accountsTab.accountsSettings.modal.headerErrStrong'),\": \",error)),/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"done\",className:classes.buttonModal},/*#__PURE__*/React.createElement(ButtonFilled,{disabled:false,onClick:handleClose},/*#__PURE__*/React.createElement(React.Fragment,null,t('settings.accountsTab.accountsSettings.button.done'))))):/*#__PURE__*/React.createElement(\"div\",{className:classes.body},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/lock.svg\",alt:\"lock\"}),/*#__PURE__*/React.createElement(\"div\",{className:classes.text},/*#__PURE__*/React.createElement(Typography,{className:classes.typo,align:\"center\"},t('settings.accountsTab.accountsSettings.modal.header'),' ',/*#__PURE__*/React.createElement(\"strong\",null,t('settings.accountsTab.accountsSettings.modal.headerStrong')))),/*#__PURE__*/React.createElement(\"div\",{className:classes.text1},/*#__PURE__*/React.createElement(Typography,{className:classes.typo1},t('settings.accountsTab.accountsSettings.modal.info'))),/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"done\",className:classes.buttonModal},/*#__PURE__*/React.createElement(ButtonFilled,{disabled:false,onClick:handleClose},/*#__PURE__*/React.createElement(React.Fragment,null,t('settings.accountsTab.accountsSettings.button.done'))))))),/*#__PURE__*/React.createElement(\"div\",{className:classes.col2},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/pass.svg\",\"data-cy\":\"lock\",alt:\"lockIcon\"}))));};export default AccountSettings;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/AccountsTab/AccountSettings/index.tsx"],"names":["Divider","Typography","ButtonFilled","ButtonOutlined","InputField","Modal","React","useRef","useState","useTranslation","Loader","config","getToken","validateConfirmPassword","validateStartEmptySpacing","PersonalDetails","useStyles","AccountSettings","classes","t","open","setOpen","isSuccess","loading","setLoading","handleClose","newPassword","currPassword","confNewPassword","password","setPassword","handleCurrPassword","prop","event","target","value","handleNewPassword","handleConfPassword","length","current","error","setError","handleChangePassword","fetch","auth","url","method","headers","Authorization","body","JSON","stringify","old_password","new_password","then","response","json","data","error_description","catch","err","message","container","divider","headerText","outerPass","innerPass","marginTop","buttonModal","errDiv","textError","typo","textSecondError","typoSub","text","text1","typo1","col2"],"mappings":"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","sourcesContent":["import { Divider, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, InputField, Modal } from 'litmus-ui';\nimport React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../../components/Loader';\nimport config from '../../../../config';\nimport { getToken } from '../../../../utils/auth';\nimport {\n  validateConfirmPassword,\n  validateStartEmptySpacing,\n} from '../../../../utils/validate';\nimport PersonalDetails from '../PersonalDetails';\nimport useStyles from './styles';\n\n// used for password field\ninterface Password {\n  currPassword: string;\n  newPassword: string;\n  confNewPassword: string;\n}\n\n// AccountSettings displays the starting page of \"Accounts\" tab\nconst AccountSettings: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  // used for modal\n  const [open, setOpen] = React.useState(false);\n  const isSuccess = useRef<boolean>(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // states for the three password fields\n  const [password, setPassword] = React.useState<Password>({\n    newPassword: '',\n    currPassword: '',\n    confNewPassword: '',\n  });\n\n  // handleCurrPassword handles password for first password field\n  const handleCurrPassword =\n    (prop: keyof Password) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword({\n        ...password,\n        [prop]: event.target.value,\n      });\n    };\n\n  // handleNewPassword handles password for second password field\n  const handleNewPassword =\n    (prop: keyof Password) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword({\n        ...password,\n        [prop]: event.target.value,\n      });\n    };\n\n  // handleConfPassword handles password for third password field\n  const handleConfPassword =\n    (prop: keyof Password) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword({\n        ...password,\n        [prop]: event.target.value,\n      });\n    };\n\n  if (\n    password.confNewPassword.length > 0 &&\n    password.newPassword === password.confNewPassword\n  )\n    isSuccess.current = true;\n  else isSuccess.current = false;\n  const [error, setError] = useState<string>('');\n  const handleChangePassword = () => {\n    setLoading(true);\n    fetch(`${config.auth.url}/update/password`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${getToken()}`,\n      },\n      body: JSON.stringify({\n        old_password: password.currPassword,\n        new_password: password.newPassword,\n      }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if ('error' in data) {\n          setError(data.error_description as string);\n        } else {\n          setError('');\n        }\n        setLoading(false);\n        setOpen(true);\n        setPassword({\n          newPassword: '',\n          currPassword: '',\n          confNewPassword: '',\n        });\n      })\n      .catch((err) => {\n        setLoading(false);\n        setError(err.message as string);\n        setOpen(true);\n      });\n  };\n\n  return (\n    <div className={classes.container}>\n      {/* Below component renders the upper section of the page, displays personal details */}\n      <PersonalDetails />\n      <Divider className={classes.divider} />\n\n      {/* Displays the lower segment containing the password details */}\n      <Typography className={classes.headerText}>\n        <strong>{t('settings.accountsTab.accountsSettings.header')}</strong>\n      </Typography>\n      <div className={classes.outerPass}>\n        <form className={classes.innerPass}>\n          {/* Current Password */}\n          <div data-cy=\"currPassword\">\n            <InputField\n              required\n              value={password.currPassword}\n              onChange={handleCurrPassword('currPassword')}\n              type=\"password\"\n              label={t(\n                'settings.accountsTab.accountsSettings.label.currPassword'\n              )}\n              variant=\"primary\"\n            />\n          </div>\n          {/* New Password */}\n          <div style={{ marginTop: '1rem' }} />\n          <div data-cy=\"newPassword\">\n            <InputField\n              required\n              type=\"password\"\n              onChange={handleNewPassword('newPassword')}\n              helperText={\n                validateStartEmptySpacing(password.newPassword)\n                  ? t(\n                      'settings.accountsTab.accountsSettings.passwordValidation'\n                    )\n                  : ''\n              }\n              label={t(\n                'settings.accountsTab.accountsSettings.label.newPassword'\n              )}\n              variant={\n                validateStartEmptySpacing(password.newPassword)\n                  ? 'error'\n                  : isSuccess.current\n                  ? 'success'\n                  : 'primary'\n              }\n              value={password.newPassword}\n            />\n          </div>\n          {/* Confirm new password */}\n          <div style={{ marginTop: '1rem' }} />\n          <div data-cy=\"confPassword\">\n            <InputField\n              helperText={\n                validateConfirmPassword(\n                  password.newPassword,\n                  password.confNewPassword\n                )\n                  ? t('settings.accountsTab.accountsSettings.passwordNotSame')\n                  : ''\n              }\n              required\n              type=\"password\"\n              onChange={handleConfPassword('confNewPassword')}\n              label={t(\n                'settings.accountsTab.accountsSettings.label.confNewPassword'\n              )}\n              variant={\n                validateConfirmPassword(\n                  password.newPassword,\n                  password.confNewPassword\n                )\n                  ? 'error'\n                  : isSuccess.current\n                  ? 'success'\n                  : 'primary'\n              }\n              value={password.confNewPassword}\n            />\n          </div>\n          <div data-cy=\"change-password\" className={classes.buttonModal}>\n            <ButtonFilled\n              data-cy=\"button\"\n              disabled={\n                !(\n                  password.newPassword.length > 0 &&\n                  password.newPassword === password.confNewPassword &&\n                  password.currPassword.length > 0 &&\n                  !loading\n                )\n              }\n              onClick={handleChangePassword}\n            >\n              {loading ? (\n                <div>\n                  <Loader size={20} />\n                </div>\n              ) : (\n                <>\n                  {t('settings.accountsTab.accountsSettings.button.changePass')}\n                </>\n              )}\n            </ButtonFilled>\n          </div>\n          <Modal\n            open={open}\n            onClose={handleClose}\n            modalActions={\n              <ButtonOutlined onClick={handleClose}>&#x2715;</ButtonOutlined>\n            }\n          >\n            {error.length ? (\n              <div className={classes.errDiv}>\n                <div className={classes.textError}>\n                  <Typography className={classes.typo} align=\"center\">\n                    <strong>\n                      {t(\n                        'settings.accountsTab.accountsSettings.modal.headerErrStrong'\n                      )}\n                      :\n                    </strong>{' '}\n                    {t('settings.accountsTab.accountsSettings.modal.headerErr')}\n                  </Typography>\n                </div>\n                <div className={classes.textSecondError}>\n                  <Typography className={classes.typoSub}>\n                    {t(\n                      'settings.accountsTab.accountsSettings.modal.headerErrStrong'\n                    )}\n                    : {error}\n                  </Typography>\n                </div>\n                <div data-cy=\"done\" className={classes.buttonModal}>\n                  <ButtonFilled disabled={false} onClick={handleClose}>\n                    <>\n                      {t('settings.accountsTab.accountsSettings.button.done')}\n                    </>\n                  </ButtonFilled>\n                </div>\n              </div>\n            ) : (\n              <div className={classes.body}>\n                <img src=\"./icons/lock.svg\" alt=\"lock\" />\n                <div className={classes.text}>\n                  <Typography className={classes.typo} align=\"center\">\n                    {t('settings.accountsTab.accountsSettings.modal.header')}{' '}\n                    <strong>\n                      {t(\n                        'settings.accountsTab.accountsSettings.modal.headerStrong'\n                      )}\n                    </strong>\n                  </Typography>\n                </div>\n                <div className={classes.text1}>\n                  <Typography className={classes.typo1}>\n                    {t('settings.accountsTab.accountsSettings.modal.info')}\n                  </Typography>\n                </div>\n                <div data-cy=\"done\" className={classes.buttonModal}>\n                  <ButtonFilled disabled={false} onClick={handleClose}>\n                    <>\n                      {t('settings.accountsTab.accountsSettings.button.done')}\n                    </>\n                  </ButtonFilled>\n                </div>\n              </div>\n            )}\n          </Modal>\n        </form>\n        <div className={classes.col2}>\n          <img src=\"./icons/pass.svg\" data-cy=\"lock\" alt=\"lockIcon\" />\n          {/*  <Typography className={classes.txt1}>\n                Your new password <strong>must</strong> be:\n              </Typography>\n              <Typography className={classes.txt2}>\n                1. Be at least 8 characters in length\n              </Typography>\n              <Typography className={classes.txt2}>\n                2. Not be same as your current password\n              </Typography>\n              <Typography className={classes.txt2}>\n                3. Be a combination of letters, numbers and special characters\n              </Typography> */}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default AccountSettings;\n"]},"metadata":{},"sourceType":"module"}