{"ast":null,"code":"import _defineProperty from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/AddProbe/index.tsx\";\n\nimport { Modal, ButtonOutlined, ButtonFilled, InputField } from 'litmus-ui';\nimport { MenuItem, Select, InputLabel } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport React from 'react';\nimport useStyles from './styles';\nimport ProbeDetails from './ProbeDetails';\nimport { validateProbeName } from '../../../../utils/validate';\n\nvar AddProbe = function AddProbe(_ref) {\n  var probesValue = _ref.probesValue,\n      addProbe = _ref.addProbe,\n      handleClose = _ref.handleClose,\n      open = _ref.open;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _React$useState = React.useState(probesValue && probesValue.length ? probesValue : []),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      allProbes = _React$useState2[0],\n      setAllProbes = _React$useState2[1];\n\n  var _React$useState3 = React.useState('httpProbe/inputs'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      probeType = _React$useState4[0],\n      setProbeType = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    probeTimeout: '',\n    retry: '',\n    interval: '',\n    probePollingInterval: '',\n    initialDelaySeconds: ''\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      runProperties = _React$useState6[0],\n      setRunProperties = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    name: '',\n    type: 'httpProbe',\n    mode: 'Continuous',\n    runProperties: {},\n    'httpProbe/inputs': {}\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      probeData = _React$useState8[0],\n      setProbeData = _React$useState8[1];\n\n  var handleRunProps = function handleRunProps(e) {\n    setRunProperties(_objectSpread(_objectSpread({}, runProperties), {}, _defineProperty({}, e.target.name, parseInt(e.target.value, 10))));\n  };\n\n  var renameKey = function renameKey(object, key, newKey) {\n    var clonedObj = _objectSpread({}, object);\n\n    var targetKey = clonedObj[key];\n    delete clonedObj[key];\n    clonedObj[newKey] = targetKey;\n    return clonedObj;\n  };\n\n  var onTypeChange = function onTypeChange(e) {\n    var newProbe = \"\".concat(e.target.value, \"/inputs\");\n    var a = renameKey(probeData, probeType, newProbe);\n    setProbeData(_objectSpread(_objectSpread({}, a), {}, {\n      type: e.target.value\n    }));\n    setProbeType(newProbe);\n  }; // Reset all input data on clicking close button or cancel button\n\n\n  var clearData = function clearData() {\n    setProbeData({\n      name: '',\n      type: 'httpProbe',\n      mode: 'Continuous',\n      runProperties: {},\n      'httpProbe/inputs': {}\n    });\n    setRunProperties({\n      probeTimeout: '',\n      retry: '',\n      interval: '',\n      probePollingInterval: '',\n      initialDelaySeconds: ''\n    });\n    setProbeType('httpProbe/inputs');\n  };\n\n  var handleAddProbe = function handleAddProbe() {\n    var properties = runProperties;\n\n    if (Number.isNaN(parseInt(properties.initialDelaySeconds, 10))) {\n      delete properties.initialDelaySeconds;\n    }\n\n    if (Number.isNaN(parseInt(properties.probePollingInterval, 10))) {\n      delete properties.probePollingInterval;\n    }\n\n    allProbes.push(_objectSpread(_objectSpread({}, probeData), {}, {\n      runProperties: _objectSpread({}, properties)\n    }));\n    setAllProbes(allProbes);\n    addProbe(allProbes);\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: function onClose() {\n      clearData();\n      handleClose();\n    },\n    width: \"60%\",\n    className: classes.modal,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    modalActions: /*#__PURE__*/React.createElement(ButtonOutlined, {\n      className: classes.closeButton,\n      onClick: function onClick() {\n        clearData();\n        handleClose();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \"\\u2715\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleAddProbe,\n    className: classes.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.heading'), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, ' ', t('createWorkflow.tuneWorkflow.addProbe.headingStrong'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"name\",\n    className: classes.formLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.labels.probeName')), /*#__PURE__*/React.createElement(InputField, {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    required: true,\n    value: probeData.name,\n    helperText: validateProbeName(allProbes, probeData.name) ? t('createWorkflow.tuneWorkflow.addProbe.validate') : '',\n    variant: validateProbeName(allProbes, probeData.name) ? 'error' : 'primary',\n    onChange: function onChange(e) {\n      return setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        name: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"type\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.labels.probeType')), /*#__PURE__*/React.createElement(Select, {\n    value: probeData.type,\n    className: classes.select,\n    variant: \"outlined\",\n    onChange: onTypeChange,\n    inputProps: {\n      id: 'type',\n      name: 'type'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"httpProbe\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.select.http')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"cmdProbe\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.select.cmd')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"k8sProbe\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.select.k8s')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"promProbe\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.select.prom')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"mode\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.labels.probeMode')), /*#__PURE__*/React.createElement(Select, {\n    value: probeData.mode,\n    className: classes.select,\n    variant: \"outlined\",\n    onChange: function onChange(e) {\n      return setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        mode: e.target.value\n      }));\n    },\n    inputProps: {\n      id: 'mode',\n      name: 'mode'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"SOT\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.select.sot')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"EOT\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.select.eot')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Edge\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.select.edge')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Continuous\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.select.continuous')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"OnChaos\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.select.onchaos')))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.subHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.labels.probeProp')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.detailContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"timeout\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.labels.timeout'), \"(sec)\"), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"timeout\",\n    name: \"probeTimeout\",\n    required: true,\n    type: \"number\",\n    value: runProperties.probeTimeout,\n    onChange: handleRunProps,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"retry\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.labels.retry'), \"(times)\"), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"retry\",\n    name: \"retry\",\n    required: true,\n    type: \"number\",\n    value: runProperties.retry,\n    onChange: handleRunProps,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.detailContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"interval\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.labels.interval'), \"(sec)\"), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"interval\",\n    required: true,\n    name: \"interval\",\n    type: \"number\",\n    value: runProperties.interval,\n    onChange: handleRunProps,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"polling\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.labels.polling'), \"(sec)\"), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"polling\",\n    name: \"probePollingInterval\",\n    type: \"number\",\n    value: runProperties.probePollingInterval,\n    onChange: handleRunProps,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"initial-delay\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.labels.initialDelay'), \"(sec)\"), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"70%\",\n    id: \"initial-delay\",\n    name: \"initialDelaySeconds\",\n    type: \"number\",\n    value: runProperties.initialDelaySeconds,\n    onChange: handleRunProps,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.subHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.labels.probeDetails')), /*#__PURE__*/React.createElement(ProbeDetails, {\n    setProbeData: setProbeData,\n    probeData: probeData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n    onClick: function onClick() {\n      clearData();\n      handleClose();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.button.cancel')), /*#__PURE__*/React.createElement(ButtonFilled, {\n    type: \"submit\",\n    disabled: validateProbeName(allProbes, probeData.name) || probeData.name.trim().length === 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.button.addProbe'))))));\n};\n\nexport default AddProbe;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/AddProbe/index.tsx"],"names":["Modal","ButtonOutlined","ButtonFilled","InputField","MenuItem","Select","InputLabel","useTranslation","React","useStyles","ProbeDetails","validateProbeName","AddProbe","probesValue","addProbe","handleClose","open","classes","t","useState","length","allProbes","setAllProbes","probeType","setProbeType","probeTimeout","retry","interval","probePollingInterval","initialDelaySeconds","runProperties","setRunProperties","name","type","mode","probeData","setProbeData","handleRunProps","e","target","parseInt","value","renameKey","object","key","newKey","clonedObj","targetKey","onTypeChange","newProbe","a","clearData","handleAddProbe","properties","Number","isNaN","push","modal","closeButton","form","heading","formField","formLabel","select","id","line","subHeading","detailContainer","buttonDiv","trim"],"mappings":"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","sourcesContent":["import { Modal, ButtonOutlined, ButtonFilled, InputField } from 'litmus-ui';\nimport { MenuItem, Select, InputLabel } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport React from 'react';\nimport useStyles from './styles';\nimport ProbeDetails from './ProbeDetails';\nimport { validateProbeName } from '../../../../utils/validate';\n\ninterface AddProbeProps {\n  probesValue: any;\n  addProbe: (probes: any) => void;\n  handleClose: () => void;\n  open: boolean;\n}\n\ninterface RunProperties {\n  probeTimeout: string;\n  retry: string;\n  interval: string;\n  probePollingInterval?: string;\n  initialDelaySeconds?: string;\n}\n\nconst AddProbe: React.FC<AddProbeProps> = ({\n  probesValue,\n  addProbe,\n  handleClose,\n  open,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [allProbes, setAllProbes] = React.useState(\n    probesValue && probesValue.length ? probesValue : []\n  );\n  const [probeType, setProbeType] = React.useState('httpProbe/inputs');\n  const [runProperties, setRunProperties] = React.useState<RunProperties>({\n    probeTimeout: '',\n    retry: '',\n    interval: '',\n    probePollingInterval: '',\n    initialDelaySeconds: '',\n  });\n  const [probeData, setProbeData] = React.useState({\n    name: '',\n    type: 'httpProbe',\n    mode: 'Continuous',\n    runProperties: {},\n    'httpProbe/inputs': {},\n  });\n  const handleRunProps = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setRunProperties({\n      ...runProperties,\n      [e.target.name]: parseInt(e.target.value, 10),\n    });\n  };\n\n  const renameKey = (object: any, key: string, newKey: string) => {\n    const clonedObj = { ...object };\n    const targetKey = clonedObj[key];\n    delete clonedObj[key];\n    clonedObj[newKey] = targetKey;\n    return clonedObj;\n  };\n\n  const onTypeChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    const newProbe = `${e.target.value}/inputs`;\n    const a = renameKey(probeData, probeType, newProbe);\n    setProbeData({\n      ...a,\n      type: e.target.value as string,\n    });\n    setProbeType(newProbe);\n  };\n\n  // Reset all input data on clicking close button or cancel button\n  const clearData = () => {\n    setProbeData({\n      name: '',\n      type: 'httpProbe',\n      mode: 'Continuous',\n      runProperties: {},\n      'httpProbe/inputs': {},\n    });\n    setRunProperties({\n      probeTimeout: '',\n      retry: '',\n      interval: '',\n      probePollingInterval: '',\n      initialDelaySeconds: '',\n    });\n    setProbeType('httpProbe/inputs');\n  };\n\n  const handleAddProbe = () => {\n    const properties = runProperties;\n    if (Number.isNaN(parseInt(properties.initialDelaySeconds as string, 10))) {\n      delete properties.initialDelaySeconds;\n    }\n    if (Number.isNaN(parseInt(properties.probePollingInterval as string, 10))) {\n      delete properties.probePollingInterval;\n    }\n    allProbes.push({\n      ...probeData,\n      runProperties: {\n        ...properties,\n      },\n    });\n    setAllProbes(allProbes);\n    addProbe(allProbes);\n  };\n\n  return (\n    <Modal\n      open={open}\n      onClose={() => {\n        clearData();\n        handleClose();\n      }}\n      width=\"60%\"\n      className={classes.modal}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      modalActions={\n        <ButtonOutlined\n          className={classes.closeButton}\n          onClick={() => {\n            clearData();\n            handleClose();\n          }}\n        >\n          &#x2715;\n        </ButtonOutlined>\n      }\n    >\n      <div className={classes.modal}>\n        <form onSubmit={handleAddProbe} className={classes.form}>\n          <div className={classes.heading}>\n            {t('createWorkflow.tuneWorkflow.addProbe.heading')}\n            <strong>\n              {' '}\n              {t('createWorkflow.tuneWorkflow.addProbe.headingStrong')}\n            </strong>\n          </div>\n          <div className={classes.formField}>\n            <InputLabel htmlFor=\"name\" className={classes.formLabel}>\n              {t('createWorkflow.tuneWorkflow.addProbe.labels.probeName')}\n            </InputLabel>\n            <InputField\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              required\n              value={probeData.name}\n              helperText={\n                validateProbeName(allProbes, probeData.name)\n                  ? t('createWorkflow.tuneWorkflow.addProbe.validate')\n                  : ''\n              }\n              variant={\n                validateProbeName(allProbes, probeData.name)\n                  ? 'error'\n                  : 'primary'\n              }\n              onChange={(e) =>\n                setProbeData({ ...probeData, name: e.target.value })\n              }\n            />\n          </div>\n          <div className={classes.formField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"type\">\n              {t('createWorkflow.tuneWorkflow.addProbe.labels.probeType')}\n            </InputLabel>\n            <Select\n              value={probeData.type}\n              className={classes.select}\n              variant=\"outlined\"\n              onChange={onTypeChange}\n              inputProps={{\n                id: 'type',\n                name: 'type',\n              }}\n            >\n              <MenuItem value=\"httpProbe\">\n                {t('createWorkflow.tuneWorkflow.addProbe.select.http')}\n              </MenuItem>\n              <MenuItem value=\"cmdProbe\">\n                {t('createWorkflow.tuneWorkflow.addProbe.select.cmd')}\n              </MenuItem>\n              <MenuItem value=\"k8sProbe\">\n                {t('createWorkflow.tuneWorkflow.addProbe.select.k8s')}\n              </MenuItem>\n              <MenuItem value=\"promProbe\">\n                {t('createWorkflow.tuneWorkflow.addProbe.select.prom')}\n              </MenuItem>\n            </Select>\n          </div>\n          <div className={classes.formField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"mode\">\n              {t('createWorkflow.tuneWorkflow.addProbe.labels.probeMode')}\n            </InputLabel>\n            <Select\n              value={probeData.mode}\n              className={classes.select}\n              variant=\"outlined\"\n              onChange={(e) =>\n                setProbeData({\n                  ...probeData,\n                  mode: e.target.value as string,\n                })\n              }\n              inputProps={{\n                id: 'mode',\n                name: 'mode',\n              }}\n            >\n              <MenuItem value=\"SOT\">\n                {t('createWorkflow.tuneWorkflow.addProbe.select.sot')}\n              </MenuItem>\n              <MenuItem value=\"EOT\">\n                {t('createWorkflow.tuneWorkflow.addProbe.select.eot')}\n              </MenuItem>\n              <MenuItem value=\"Edge\">\n                {t('createWorkflow.tuneWorkflow.addProbe.select.edge')}\n              </MenuItem>\n              <MenuItem value=\"Continuous\">\n                {t('createWorkflow.tuneWorkflow.addProbe.select.continuous')}\n              </MenuItem>\n              <MenuItem value=\"OnChaos\">\n                {t('createWorkflow.tuneWorkflow.addProbe.select.onchaos')}\n              </MenuItem>\n            </Select>\n          </div>\n          <hr className={classes.line} />\n\n          <div className={classes.subHeading}>\n            {t('createWorkflow.tuneWorkflow.addProbe.labels.probeProp')}\n          </div>\n\n          <div className={classes.detailContainer}>\n            <div className={classes.formField}>\n              <InputLabel className={classes.formLabel} htmlFor=\"timeout\">\n                {t('createWorkflow.tuneWorkflow.addProbe.labels.timeout')}(sec)\n              </InputLabel>\n              <InputField\n                variant=\"primary\"\n                width=\"50%\"\n                id=\"timeout\"\n                name=\"probeTimeout\"\n                required\n                type=\"number\"\n                value={runProperties.probeTimeout}\n                onChange={handleRunProps}\n              />\n            </div>\n            <div className={classes.formField}>\n              <InputLabel className={classes.formLabel} htmlFor=\"retry\">\n                {t('createWorkflow.tuneWorkflow.addProbe.labels.retry')}(times)\n              </InputLabel>\n              <InputField\n                variant=\"primary\"\n                width=\"50%\"\n                id=\"retry\"\n                name=\"retry\"\n                required\n                type=\"number\"\n                value={runProperties.retry}\n                onChange={handleRunProps}\n              />\n            </div>\n          </div>\n          <div className={classes.detailContainer}>\n            <div className={classes.formField}>\n              <InputLabel className={classes.formLabel} htmlFor=\"interval\">\n                {t('createWorkflow.tuneWorkflow.addProbe.labels.interval')}(sec)\n              </InputLabel>\n              <InputField\n                variant=\"primary\"\n                width=\"50%\"\n                id=\"interval\"\n                required\n                name=\"interval\"\n                type=\"number\"\n                value={runProperties.interval}\n                onChange={handleRunProps}\n              />\n            </div>\n            <div className={classes.formField}>\n              <InputLabel className={classes.formLabel} htmlFor=\"polling\">\n                {t('createWorkflow.tuneWorkflow.addProbe.labels.polling')}(sec)\n              </InputLabel>\n              <InputField\n                variant=\"primary\"\n                width=\"50%\"\n                id=\"polling\"\n                name=\"probePollingInterval\"\n                type=\"number\"\n                value={runProperties.probePollingInterval}\n                onChange={handleRunProps}\n              />\n            </div>\n          </div>\n          <div className={classes.formField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"initial-delay\">\n              {t('createWorkflow.tuneWorkflow.addProbe.labels.initialDelay')}\n              (sec)\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"70%\"\n              id=\"initial-delay\"\n              name=\"initialDelaySeconds\"\n              type=\"number\"\n              value={runProperties.initialDelaySeconds}\n              onChange={handleRunProps}\n            />\n          </div>\n          <hr className={classes.line} />\n          <div className={classes.subHeading}>\n            {t('createWorkflow.tuneWorkflow.addProbe.labels.probeDetails')}\n          </div>\n\n          <ProbeDetails setProbeData={setProbeData} probeData={probeData} />\n\n          <div className={classes.buttonDiv}>\n            <ButtonOutlined\n              onClick={() => {\n                clearData();\n                handleClose();\n              }}\n            >\n              {t('createWorkflow.tuneWorkflow.addProbe.button.cancel')}\n            </ButtonOutlined>\n            <ButtonFilled\n              type=\"submit\"\n              disabled={\n                validateProbeName(allProbes, probeData.name) ||\n                probeData.name.trim().length === 0\n              }\n            >\n              {t('createWorkflow.tuneWorkflow.addProbe.button.addProbe')}\n            </ButtonFilled>\n          </div>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default AddProbe;\n"]},"metadata":{},"sourceType":"module"}