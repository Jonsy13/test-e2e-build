{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowComparisonTable/TableData.tsx\";\n\nimport { IconButton, Typography } from '@material-ui/core';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport cronstrue from 'cronstrue';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CheckBox } from '../../../../components/CheckBox';\nimport { history } from '../../../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../../../utils/getSearchParams';\nimport useStyles, { StyledTableCell } from './styles';\n\nvar TableData = function TableData(_ref) {\n  var data = _ref.data,\n      itemSelectionStatus = _ref.itemSelectionStatus,\n      labelIdentifier = _ref.labelIdentifier,\n      comparisonState = _ref.comparisonState;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var projectID = getProjectID();\n  var userRole = getProjectRole(); // Function to convert UNIX time in format of DD MMM YYY\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var resDate = moment(updated).format('DD MMM YYYY');\n    return resDate;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledTableCell, {\n    padding: \"checkbox\",\n    className: classes.checkbox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, comparisonState === false && /*#__PURE__*/React.createElement(CheckBox, {\n    checked: itemSelectionStatus,\n    inputProps: {\n      'aria-labelledby': labelIdentifier\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(StyledTableCell, {\n    className: classes.workflowName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, data.workflow_name))), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.tableObjects,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, formatDate(data.created_at))), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.regularityData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.iconDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/calendarIcon.svg\",\n    alt: \"Calender\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.paddedText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, data.cronSyntax === '' ? t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.once') : cronstrue.toString(data.cronSyntax))))), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.tableObjects,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"\\xA0\", data.cluster_name)), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.tableObjects,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.seeAnalytics')), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"analytics for workflow id\",\n    \"aria-haspopup\": \"true\",\n    onClick: function onClick() {\n      history.push({\n        pathname: \"/workflows/analytics/\".concat(data.workflow_id),\n        search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(userRole)\n      });\n    },\n    className: classes.buttonSeeAnalytics,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreTwoToneIcon, {\n    htmlColor: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default TableData;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowComparisonTable/TableData.tsx"],"names":["IconButton","Typography","ExpandMoreTwoToneIcon","cronstrue","moment","React","useTranslation","CheckBox","history","getProjectID","getProjectRole","useStyles","StyledTableCell","TableData","data","itemSelectionStatus","labelIdentifier","comparisonState","classes","t","projectID","userRole","formatDate","date","updated","Date","parseInt","toString","resDate","format","checkbox","workflowName","workflow_name","tableObjects","created_at","regularityData","iconDiv","paddedText","cronSyntax","cluster_name","push","pathname","workflow_id","search","buttonSeeAnalytics"],"mappings":"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","sourcesContent":["import { IconButton, Typography } from '@material-ui/core';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport cronstrue from 'cronstrue';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CheckBox } from '../../../../components/CheckBox';\nimport { ScheduledWorkflow } from '../../../../models/graphql/workflowListData';\nimport { history } from '../../../../redux/configureStore';\nimport {\n  getProjectID,\n  getProjectRole,\n} from '../../../../utils/getSearchParams';\nimport useStyles, { StyledTableCell } from './styles';\n\ninterface TableDataProps {\n  data: ScheduledWorkflow;\n  itemSelectionStatus: boolean;\n  labelIdentifier: string;\n  comparisonState: Boolean;\n}\n\nconst TableData: React.FC<TableDataProps> = ({\n  data,\n  itemSelectionStatus,\n  labelIdentifier,\n  comparisonState,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const userRole = getProjectRole();\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM YYYY');\n    return resDate;\n  };\n\n  return (\n    <>\n      <StyledTableCell padding=\"checkbox\" className={classes.checkbox}>\n        {comparisonState === false && (\n          <CheckBox\n            checked={itemSelectionStatus}\n            inputProps={{ 'aria-labelledby': labelIdentifier }}\n          />\n        )}\n      </StyledTableCell>\n      <StyledTableCell className={classes.workflowName}>\n        <Typography>\n          <strong>{data.workflow_name}</strong>\n        </Typography>\n      </StyledTableCell>\n      <StyledTableCell>\n        <Typography className={classes.tableObjects}>\n          {formatDate(data.created_at)}\n        </Typography>\n      </StyledTableCell>\n      <StyledTableCell>\n        <div className={classes.regularityData}>\n          <div className={classes.iconDiv}>\n            <img src=\"./icons/calendarIcon.svg\" alt=\"Calender\" />\n            <Typography className={classes.paddedText}>\n              {data.cronSyntax === ''\n                ? t(\n                    'chaosWorkflows.browseAnalytics.workFlowComparisonTable.once'\n                  )\n                : cronstrue.toString(data.cronSyntax)}\n            </Typography>\n          </div>\n        </div>\n      </StyledTableCell>\n      <StyledTableCell>\n        <Typography className={classes.tableObjects}>\n          &nbsp;{data.cluster_name}\n        </Typography>\n      </StyledTableCell>\n      <StyledTableCell>\n        <Typography className={classes.tableObjects}>\n          <strong>\n            {t(\n              'chaosWorkflows.browseAnalytics.workFlowComparisonTable.seeAnalytics'\n            )}\n          </strong>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"analytics for workflow id\"\n            aria-haspopup=\"true\"\n            onClick={() => {\n              history.push({\n                pathname: `/workflows/analytics/${data.workflow_id}`,\n                search: `?projectID=${projectID}&projectRole=${userRole}`,\n              });\n            }}\n            className={classes.buttonSeeAnalytics}\n          >\n            <ExpandMoreTwoToneIcon htmlColor=\"black\" />\n          </IconButton>\n        </Typography>\n      </StyledTableCell>\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}