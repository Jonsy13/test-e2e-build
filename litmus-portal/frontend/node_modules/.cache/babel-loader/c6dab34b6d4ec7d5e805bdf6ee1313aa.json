{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/Header/ProjectDropDown.tsx\";\n\nimport { useQuery } from '@apollo/client';\nimport { IconButton, Popover, Typography } from '@material-ui/core';\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\nimport React, { useState } from 'react';\nimport { GET_PROJECT_NAME } from '../../graphql';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport ProjectDropdownItems from './ProjectDropDownItems';\nimport useStyles from './styles';\n\nvar ProjectDropdown = function ProjectDropdown() {\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1]; // Get ProjectID from URL\n\n\n  var projectID = getProjectID(); // Get the projectRole from URL\n\n  var projectRole = getProjectRole(); // Get Project Name\n\n  var _useQuery = useQuery(GET_PROJECT_NAME, {\n    variables: {\n      projectID: projectID\n    }\n  }),\n      data = _useQuery.data; // Handle clicks\n\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'headerProjectDropdown' : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.projectDropdown,\n    \"data-cy\": \"headerProjectDropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, data === null || data === void 0 ? void 0 : data.getProject.name), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \" (\", projectRole, \")\"), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreRoundedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ProjectDropdownItems, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ProjectDropdown;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/Header/ProjectDropDown.tsx"],"names":["useQuery","IconButton","Popover","Typography","ExpandMoreRoundedIcon","React","useState","GET_PROJECT_NAME","getProjectID","getProjectRole","ProjectDropdownItems","useStyles","ProjectDropdown","classes","anchorEl","setAnchorEl","projectID","projectRole","variables","data","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","projectDropdown","getProject","name","vertical","horizontal"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,UAA9B,QAAgD,mBAAhD;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,6BAA7C;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,IAAMC,eAAyB,GAAG,SAA5BA,eAA4B,GAAM;AACtC,MAAMC,OAAO,GAAGF,SAAS,EAAzB;;AAEA,kBAAgCL,QAAQ,CAA2B,IAA3B,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB,iBAHsC,CAKtC;;;AACA,MAAMC,SAAS,GAAGR,YAAY,EAA9B,CANsC,CAQtC;;AACA,MAAMS,WAAW,GAAGR,cAAc,EAAlC,CATsC,CAWtC;;AACA,kBAAiBT,QAAQ,CAAgBO,gBAAhB,EAAkC;AACzDW,IAAAA,SAAS,EAAE;AAAEF,MAAAA,SAAS,EAATA;AAAF;AAD8C,GAAlC,CAAzB;AAAA,MAAQG,IAAR,aAAQA,IAAR,CAZsC,CAgBtC;;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAgD;AAClEN,IAAAA,WAAW,CAACM,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBR,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,MAAMS,IAAI,GAAGC,OAAO,CAACX,QAAD,CAApB;AACA,MAAMY,EAAE,GAAGF,IAAI,GAAG,uBAAH,GAA6BG,SAA5C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEd,OAAO,CAACe,eAAxB;AAAyC,eAAQ,uBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaT,IAAb,aAAaA,IAAb,uBAAaA,IAAI,CAAEU,UAAN,CAAiBC,IAA9B,CADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeb,WAAf,MAFF,eAGE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,KAAjB;AAAuB,IAAA,OAAO,EAAEG,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,eAME,oBAAC,OAAD;AACE,IAAA,EAAE,EAAEM,EADN;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,QAAQ,EAAEV,QAHZ;AAIE,IAAA,OAAO,EAAES,WAJX;AAKE,IAAA,YAAY,EAAE;AACZQ,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KALhB;AASE,IAAA,eAAe,EAAE;AACfD,MAAAA,QAAQ,EAAE,KADK;AAEfC,MAAAA,UAAU,EAAE;AAFG,KATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CANF,CADF;AAyBD,CArDD;;AAuDA,eAAepB,eAAf","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { IconButton, Popover, Typography } from '@material-ui/core';\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\nimport React, { useState } from 'react';\nimport { GET_PROJECT_NAME } from '../../graphql';\nimport { ProjectDetail } from '../../models/graphql/user';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport ProjectDropdownItems from './ProjectDropDownItems';\nimport useStyles from './styles';\n\nconst ProjectDropdown: React.FC = () => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n  // Get ProjectID from URL\n  const projectID = getProjectID();\n\n  // Get the projectRole from URL\n  const projectRole = getProjectRole();\n\n  // Get Project Name\n  const { data } = useQuery<ProjectDetail>(GET_PROJECT_NAME, {\n    variables: { projectID },\n  });\n\n  // Handle clicks\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'headerProjectDropdown' : undefined;\n\n  return (\n    <div className={classes.projectDropdown} data-cy=\"headerProjectDropdown\">\n      <Typography>{data?.getProject.name}</Typography>\n      <Typography> ({projectRole})</Typography>\n      <IconButton edge=\"end\" onClick={handleClick}>\n        <ExpandMoreRoundedIcon />\n      </IconButton>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <ProjectDropdownItems />\n      </Popover>\n    </div>\n  );\n};\n\nexport default ProjectDropdown;\n"]},"metadata":{},"sourceType":"module"}