{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{FormControl,InputLabel,MenuItem,Paper,Select}from'@material-ui/core';import{RadialChart}from'litmus-ui';import React,{useState}from'react';import{Filter}from'../../../../models/graphql/scheduleData';import ScheduleAndRunStats from'./ScheduleAndRunStats';import useStyles from'./styles';var WorkflowGraphs=function WorkflowGraphs(_ref){var data=_ref.data;var classes=useStyles();var completed=0;var running=0;var failed=0;/* eslint-disable no-unused-expressions */data===null||data===void 0?void 0:data.ListWorkflow.workflows.map(function(datarow){var _datarow$workflow_run;return(_datarow$workflow_run=datarow.workflow_runs)===null||_datarow$workflow_run===void 0?void 0:_datarow$workflow_run.map(function(runs){if(JSON.parse(runs.execution_data).phase==='Succeeded')completed++;else if(JSON.parse(runs.execution_data).phase==='Running')running++;else if(JSON.parse(runs.execution_data).phase==='Failed')failed++;});});// States for filters\nvar _useState=useState(Filter.monthly),_useState2=_slicedToArray(_useState,2),filters=_useState2[0],setFilters=_useState2[1];var graphData=[{value:completed,label:'Completed',baseColor:'#00CC9A'},{value:running,label:'Running',baseColor:'#5252F6'},{value:failed,label:'Failed',baseColor:'#CA2C2C'}];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formControl,focused:true},/*#__PURE__*/React.createElement(InputLabel,{className:classes.selectText}),/*#__PURE__*/React.createElement(Select,{value:filters,onChange:function onChange(event){setFilters(event.target.value);},className:classes.selectText},/*#__PURE__*/React.createElement(MenuItem,{value:Filter.monthly},\"Monthly\"),/*#__PURE__*/React.createElement(MenuItem,{value:Filter.weekly},\"Weekly\"),/*#__PURE__*/React.createElement(MenuItem,{value:Filter.hourly},\"Hourly\"))),/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(ScheduleAndRunStats,{filter:filters}),/*#__PURE__*/React.createElement(Paper,{className:classes.radialChartContainer},/*#__PURE__*/React.createElement(RadialChart,{radialData:graphData,heading:\"Workflows\",showCenterHeading:true})))));};export default WorkflowGraphs;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowGraphs/index.tsx"],"names":["FormControl","InputLabel","MenuItem","Paper","Select","RadialChart","React","useState","Filter","ScheduleAndRunStats","useStyles","WorkflowGraphs","data","classes","completed","running","failed","ListWorkflow","workflows","map","datarow","workflow_runs","runs","JSON","parse","execution_data","phase","monthly","filters","setFilters","graphData","value","label","baseColor","paper","formControl","selectText","event","target","weekly","hourly","root","radialChartContainer"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n} from '@material-ui/core';\nimport { RadialChart, RadialChartMetric } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { Filter } from '../../../../models/graphql/scheduleData';\nimport {\n  ExecutionData,\n  ScheduledWorkflows,\n} from '../../../../models/graphql/workflowListData';\nimport ScheduleAndRunStats from './ScheduleAndRunStats';\nimport useStyles from './styles';\n\ninterface WorkflowGraphsProps {\n  data: ScheduledWorkflows | undefined;\n}\n\nconst WorkflowGraphs: React.FC<WorkflowGraphsProps> = ({ data }) => {\n  const classes = useStyles();\n\n  let completed = 0;\n  let running = 0;\n  let failed = 0;\n\n  /* eslint-disable no-unused-expressions */\n  data?.ListWorkflow.workflows.map((datarow) =>\n    datarow.workflow_runs?.map((runs) => {\n      if (\n        (JSON.parse(runs.execution_data) as ExecutionData).phase === 'Succeeded'\n      )\n        completed++;\n      else if (\n        (JSON.parse(runs.execution_data) as ExecutionData).phase === 'Running'\n      )\n        running++;\n      else if (\n        (JSON.parse(runs.execution_data) as ExecutionData).phase === 'Failed'\n      )\n        failed++;\n    })\n  );\n\n  // States for filters\n  const [filters, setFilters] = useState<Filter>(Filter.monthly);\n\n  const graphData: RadialChartMetric[] = [\n    { value: completed, label: 'Completed', baseColor: '#00CC9A' },\n    { value: running, label: 'Running', baseColor: '#5252F6' },\n    { value: failed, label: 'Failed', baseColor: '#CA2C2C' },\n  ];\n  return (\n    <div>\n      <Paper className={classes.paper}>\n        <FormControl variant=\"outlined\" className={classes.formControl} focused>\n          <InputLabel className={classes.selectText} />\n          <Select\n            value={filters}\n            onChange={(event) => {\n              setFilters(event.target.value as Filter);\n            }}\n            className={classes.selectText}\n          >\n            <MenuItem value={Filter.monthly}>Monthly</MenuItem>\n            <MenuItem value={Filter.weekly}>Weekly</MenuItem>\n            <MenuItem value={Filter.hourly}>Hourly</MenuItem>\n          </Select>\n        </FormControl>\n        <div className={classes.root}>\n          <ScheduleAndRunStats filter={filters} />\n          <Paper className={classes.radialChartContainer}>\n            <RadialChart\n              radialData={graphData}\n              heading=\"Workflows\"\n              showCenterHeading\n            />\n          </Paper>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default WorkflowGraphs;\n"]},"metadata":{},"sourceType":"module"}