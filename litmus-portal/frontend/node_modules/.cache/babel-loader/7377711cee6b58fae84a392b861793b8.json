{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/Header/ProfileDropDown.tsx\";\n\nimport { useQuery } from '@apollo/client';\nimport { Avatar, IconButton, Popover, Typography } from '@material-ui/core';\nimport { ButtonFilled, TextButton } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { GET_USER_INFO } from '../../graphql';\nimport useActions from '../../redux/actions';\nimport * as TabActions from '../../redux/actions/tabs';\nimport { history } from '../../redux/configureStore';\nimport { getUserEmail, getUsername, logout } from '../../utils/auth';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport { userInitials } from '../../utils/userInitials';\nimport useStyles from './styles';\n\nvar ProfileDropdown = function ProfileDropdown() {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var tabs = useActions(TabActions);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1]; // Get username from JWT\n\n\n  var username = getUsername(); // Get the userEmail from JWT\n\n  var userEmailToken = getUserEmail();\n  var projectID = getProjectID();\n  var projectRole = getProjectRole();\n\n  var _useState3 = useState(userEmailToken),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userEmail = _useState4[0],\n      setuserEmail = _useState4[1]; // Run query to get the data in case it is not present in the JWT\n\n\n  useQuery(GET_USER_INFO, {\n    skip: userEmail !== undefined && userEmail !== '',\n    variables: {\n      username: username\n    },\n    onCompleted: function onCompleted(data) {\n      setuserEmail(data.getUser.email);\n    }\n  }); // Handle clicks\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'headerProfileDropdown' : undefined;\n  var initials = userInitials(username);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profileDropdown,\n    \"data-cy\": \"headerProfileDropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatarBackground,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, initials)), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profileDropdownPopover,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, t('header.profileDropdown.signedIn')), userEmail ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.profileSet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, userEmail)) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.profileDropdownRow, \" \").concat(classes.profileUnset),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.emailUnset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, t('header.profileDropdown.emailUnset')), projectRole === 'Owner' ? /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: '/settings',\n      search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n    },\n    onClick: function onClick() {\n      return tabs.changeSettingsTabs(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    title: \"Go to settings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, t('header.profileDropdown.emailSet'))) : /*#__PURE__*/React.createElement(Typography, {\n    className: classes.projectRoleHint,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, t('header.profileDropdown.switchProject'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.profileDropdownRow, \" \").concat(classes.profileButtons),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"logoutButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    title: \"Logout from the portal\",\n    onClick: function onClick() {\n      return logout();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, t('header.profileDropdown.logout'), /*#__PURE__*/React.createElement(\"img\", {\n    id: \"logoutIcon\",\n    src: \"./icons/logout.svg\",\n    alt: \"logout\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(TextButton, {\n    title: \"Edit your profile\",\n    variant: \"highlight\",\n    disabled: projectRole !== 'Owner',\n    onClick: function onClick() {\n      tabs.changeSettingsTabs(0);\n      history.push({\n        pathname: '/settings',\n        search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, t('header.profileDropdown.editProfile'))))));\n};\n\nexport default ProfileDropdown;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/Header/ProfileDropDown.tsx"],"names":["useQuery","Avatar","IconButton","Popover","Typography","ButtonFilled","TextButton","React","useState","useTranslation","Link","GET_USER_INFO","useActions","TabActions","history","getUserEmail","getUsername","logout","getProjectID","getProjectRole","userInitials","useStyles","ProfileDropdown","classes","t","tabs","anchorEl","setAnchorEl","username","userEmailToken","projectID","projectRole","userEmail","setuserEmail","skip","undefined","variables","onCompleted","data","getUser","email","handleClick","event","currentTarget","handleClose","open","Boolean","id","initials","profileDropdown","avatarBackground","vertical","horizontal","profileDropdownPopover","profileSet","profileDropdownRow","profileUnset","emailUnset","pathname","search","changeSettingsTabs","projectRoleHint","profileButtons","push"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Avatar, IconButton, Popover, Typography } from '@material-ui/core';\nimport { ButtonFilled, TextButton } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { GET_USER_INFO } from '../../graphql';\nimport { CurrentUserDetails } from '../../models/graphql/user';\nimport useActions from '../../redux/actions';\nimport * as TabActions from '../../redux/actions/tabs';\nimport { history } from '../../redux/configureStore';\nimport { getUserEmail, getUsername, logout } from '../../utils/auth';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport { userInitials } from '../../utils/userInitials';\nimport useStyles from './styles';\n\nconst ProfileDropdown: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const tabs = useActions(TabActions);\n\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n  // Get username from JWT\n  const username = getUsername();\n\n  // Get the userEmail from JWT\n  const userEmailToken = getUserEmail();\n\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n\n  const [userEmail, setuserEmail] = useState<string>(userEmailToken);\n\n  // Run query to get the data in case it is not present in the JWT\n  useQuery<CurrentUserDetails>(GET_USER_INFO, {\n    skip: userEmail !== undefined && userEmail !== '',\n    variables: { username },\n    onCompleted: (data) => {\n      setuserEmail(data.getUser.email);\n    },\n  });\n\n  // Handle clicks\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'headerProfileDropdown' : undefined;\n\n  const initials = userInitials(username);\n\n  return (\n    <div className={classes.profileDropdown} data-cy=\"headerProfileDropdown\">\n      <IconButton edge=\"end\" onClick={handleClick}>\n        <Avatar className={classes.avatarBackground}>{initials}</Avatar>\n      </IconButton>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <div className={classes.profileDropdownPopover}>\n          <Typography>{t('header.profileDropdown.signedIn')}</Typography>\n          {userEmail ? (\n            <>\n              <Typography className={classes.profileSet}>\n                {userEmail}\n              </Typography>\n            </>\n          ) : (\n            <div\n              className={`${classes.profileDropdownRow} ${classes.profileUnset}`}\n            >\n              <Typography className={classes.emailUnset}>\n                {t('header.profileDropdown.emailUnset')}\n              </Typography>\n              {projectRole === 'Owner' ? (\n                <Link\n                  to={{\n                    pathname: '/settings',\n                    search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                  }}\n                  onClick={() => tabs.changeSettingsTabs(0)}\n                >\n                  <Typography title=\"Go to settings\">\n                    {t('header.profileDropdown.emailSet')}\n                  </Typography>\n                </Link>\n              ) : (\n                <Typography className={classes.projectRoleHint}>\n                  {t('header.profileDropdown.switchProject')}\n                </Typography>\n              )}\n            </div>\n          )}\n          <div\n            className={`${classes.profileDropdownRow} ${classes.profileButtons}`}\n          >\n            <div data-cy=\"logoutButton\">\n              <ButtonFilled\n                title=\"Logout from the portal\"\n                onClick={() => logout()}\n              >\n                {t('header.profileDropdown.logout')}\n                <img id=\"logoutIcon\" src=\"./icons/logout.svg\" alt=\"logout\" />\n              </ButtonFilled>\n            </div>\n\n            <TextButton\n              title=\"Edit your profile\"\n              variant=\"highlight\"\n              disabled={projectRole !== 'Owner'}\n              onClick={() => {\n                tabs.changeSettingsTabs(0);\n                history.push({\n                  pathname: '/settings',\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n              }}\n            >\n              {t('header.profileDropdown.editProfile')}\n            </TextButton>\n          </div>\n        </div>\n      </Popover>\n    </div>\n  );\n};\n\nexport default ProfileDropdown;\n"]},"metadata":{},"sourceType":"module"}