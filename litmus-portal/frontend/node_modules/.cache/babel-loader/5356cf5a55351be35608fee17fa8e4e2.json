{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Community/GeoMap/index.tsx\";\n\nimport React, { useState } from 'react';\nimport BinarySwitch from '../../../components/Button/BinarySwitch';\nimport CityMap from './CityMap';\nimport CountryMap from './CountryMap';\nimport useStyles from './styles';\n\nvar GeoMap = function GeoMap() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showCountry = _useState2[0],\n      setShowCountry = _useState2[1];\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.map,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, showCountry ? /*#__PURE__*/React.createElement(CountryMap, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(CityMap, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.binarySwitch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BinarySwitch, {\n    handleChange: function handleChange() {\n      return setShowCountry(!showCountry);\n    },\n    checked: showCountry,\n    leftLabel: \"City View\",\n    rightLabel: \"Country View\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default GeoMap;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Community/GeoMap/index.tsx"],"names":["React","useState","BinarySwitch","CityMap","CountryMap","useStyles","GeoMap","showCountry","setShowCountry","classes","map","binarySwitch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,kBAAsCL,QAAQ,CAAU,IAAV,CAA9C;AAAA;AAAA,MAAOM,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,sBACE;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,WAAW,gBAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAoB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlC,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACE,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,YAAY,EAAE;AAAA,aAAMH,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,KADhB;AAEE,IAAA,OAAO,EAAEA,WAFX;AAGE,IAAA,SAAS,EAAC,WAHZ;AAIE,IAAA,UAAU,EAAC,cAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAeD,CAlBD;;AAmBA,eAAeD,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport BinarySwitch from '../../../components/Button/BinarySwitch';\nimport CityMap from './CityMap';\nimport CountryMap from './CountryMap';\nimport useStyles from './styles';\n\nconst GeoMap = () => {\n  const [showCountry, setShowCountry] = useState<boolean>(true);\n  const classes = useStyles();\n  return (\n    <div className={classes.map}>\n      {showCountry ? <CountryMap /> : <CityMap />}\n      <br />\n      <br />\n      <div className={classes.binarySwitch}>\n        <BinarySwitch\n          handleChange={() => setShowCountry(!showCountry)}\n          checked={showCountry}\n          leftLabel=\"City View\"\n          rightLabel=\"Country View\"\n        />\n      </div>\n    </div>\n  );\n};\nexport default GeoMap;\n"]},"metadata":{},"sourceType":"module"}