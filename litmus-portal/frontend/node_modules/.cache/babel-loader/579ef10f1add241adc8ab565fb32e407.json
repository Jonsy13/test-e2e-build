{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseSchedule/SaveTemplateModal.tsx\";\n\nimport { useMutation } from '@apollo/client';\nimport { IconButton, Snackbar, Typography } from '@material-ui/core';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport { ButtonFilled, InputField } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport { Alert } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport YamlEditor from '../../../components/YamlEditor/Editor';\nimport { ADD_WORKFLOW_TEMPLATE } from '../../../graphql';\nimport useStyles from './styles';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport Loader from '../../../components/Loader';\nimport { constants } from '../../../constants';\nimport { validateWorkflowName } from '../../../utils/validate';\n\nvar SaveTemplateModal = function SaveTemplateModal(_ref) {\n  var closeTemplate = _ref.closeTemplate,\n      isCustomWorkflow = _ref.isCustomWorkflow;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      templateName = _useState2[0],\n      setTemplateName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      templateDesc = _useState4[0],\n      setTemplateDesc = _useState4[1];\n\n  var manifest = useSelector(function (state) {\n    return state.workflowManifest.manifest;\n  });\n\n  var _useState5 = useState(manifest),\n      _useState6 = _slicedToArray(_useState5, 2),\n      editManifest = _useState6[0],\n      setEditManifest = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      yamlValid = _useState8[0],\n      setYamlValid = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      displayResult = _useState10[0],\n      setDisplayResult = _useState10[1];\n\n  var _useState11 = useState({\n    type: '',\n    message: ''\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cloneResult = _useState12[0],\n      setCloneResult = _useState12[1];\n\n  var _useMutation = useMutation(ADD_WORKFLOW_TEMPLATE, {\n    variables: {\n      data: {\n        manifest: YAML.stringify(editManifest),\n        template_name: templateName,\n        template_description: templateDesc,\n        project_id: getProjectID(),\n        isCustomWorkflow: isCustomWorkflow\n      }\n    },\n    onError: function onError(data) {\n      setDisplayResult(true);\n      setCloneResult({\n        type: constants.error,\n        message: data.message\n      });\n    },\n    onCompleted: function onCompleted() {\n      setDisplayResult(true);\n      setCloneResult({\n        type: constants.success,\n        message: \"\".concat(t('chaosWorkflows.browseSchedules.savedSuccessfully'))\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addWorkflowTemplate = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  var handleAlertOnClose = function handleAlertOnClose() {\n    setDisplayResult(false);\n    if (cloneResult.type === constants.success) closeTemplate();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.saveTemplateRoot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.SaveTemplateTxt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, t('chaosWorkflows.browseSchedules.saveTemplate')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.NoteTxt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, t('chaosWorkflows.browseSchedules.updateEngine')), /*#__PURE__*/React.createElement(InputField, {\n    label: \"Name of the template\",\n    value: templateName,\n    \"data-cy\": \"WorkflowName\",\n    required: true,\n    onChange: function onChange(e) {\n      return setTemplateName(e.target.value.toLowerCase());\n    },\n    helperText: validateWorkflowName(templateName) ? t('createWorkflow.chooseWorkflow.validate') : '',\n    variant: validateWorkflowName(templateName) ? 'error' : 'primary',\n    className: classes.InputFieldTemplate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputField, {\n    label: \"Description of the template\",\n    value: templateDesc,\n    \"data-cy\": \"WorkflowDescription\",\n    helperText: \"\",\n    required: true,\n    onChange: function onChange(e) {\n      return setTemplateDesc(e.target.value);\n    },\n    className: classes.InputFieldTemplate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.editor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(YamlEditor, {\n    content: editManifest,\n    filename: \"Workflow Template\",\n    readOnly: false,\n    setButtonState: function setButtonState(btnState) {\n      setYamlValid(btnState);\n    },\n    saveWorkflowChange: function saveWorkflowChange(updatedManifest) {\n      setEditManifest(updatedManifest);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.footerTemplateDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.templateButtonsDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: closeTemplate,\n    className: classes.cancelIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, t('chaosWorkflows.browseSchedules.cancel')), /*#__PURE__*/React.createElement(ButtonFilled, {\n    \"data-cy\": \"saveTemplateButton\",\n    onClick: function onClick() {\n      addWorkflowTemplate();\n    },\n    disabled: loading || cloneResult.type === constants.success || templateName.trim().length === 0 || templateDesc.trim().length === 0 || validateWorkflowName(templateName) || !yamlValid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CheckOutlinedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.saveButtonTemplate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, t('chaosWorkflows.browseSchedules.saveChanges')))))), /*#__PURE__*/React.createElement(Snackbar, {\n    open: displayResult,\n    autoHideDuration: 6000,\n    onClose: handleAlertOnClose,\n    \"data-cy\": \"templateAlert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleAlertOnClose,\n    severity: cloneResult.type === constants.error ? 'error' : 'success',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, cloneResult.message)));\n};\n\nexport default SaveTemplateModal;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseSchedule/SaveTemplateModal.tsx"],"names":["useMutation","IconButton","Snackbar","Typography","CheckOutlinedIcon","ButtonFilled","InputField","React","useState","useSelector","YAML","Alert","useTranslation","YamlEditor","ADD_WORKFLOW_TEMPLATE","useStyles","getProjectID","Loader","constants","validateWorkflowName","SaveTemplateModal","closeTemplate","isCustomWorkflow","t","classes","templateName","setTemplateName","templateDesc","setTemplateDesc","manifest","state","workflowManifest","editManifest","setEditManifest","yamlValid","setYamlValid","displayResult","setDisplayResult","type","message","cloneResult","setCloneResult","variables","data","stringify","template_name","template_description","project_id","onError","error","onCompleted","success","addWorkflowTemplate","loading","handleAlertOnClose","saveTemplateRoot","SaveTemplateTxt","NoteTxt","e","target","value","toLowerCase","InputFieldTemplate","editor","btnState","updatedManifest","footerTemplateDiv","templateButtonsDiv","cancelIcon","trim","length","saveButtonTemplate"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\nimport { IconButton, Snackbar, Typography } from '@material-ui/core';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport { ButtonFilled, InputField } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport { Alert } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport YamlEditor from '../../../components/YamlEditor/Editor';\nimport { ADD_WORKFLOW_TEMPLATE } from '../../../graphql';\nimport { RootState } from '../../../redux/reducers';\nimport useStyles from './styles';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport Loader from '../../../components/Loader';\nimport { constants } from '../../../constants';\nimport { validateWorkflowName } from '../../../utils/validate';\n\ninterface SaveTemplateModalProps {\n  closeTemplate: () => void;\n  isCustomWorkflow: boolean;\n}\n\ninterface CloneTemplateResult {\n  type: string;\n  message: string;\n}\n\nconst SaveTemplateModal: React.FC<SaveTemplateModalProps> = ({\n  closeTemplate,\n  isCustomWorkflow,\n}) => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const [templateName, setTemplateName] = useState<string>('');\n  const [templateDesc, setTemplateDesc] = useState<string>('');\n  const manifest: string = useSelector(\n    (state: RootState) => state.workflowManifest.manifest\n  );\n  const [editManifest, setEditManifest] = useState(manifest);\n  const [yamlValid, setYamlValid] = useState(true);\n  const [displayResult, setDisplayResult] = useState<boolean>(false);\n  const [cloneResult, setCloneResult] = useState<CloneTemplateResult>({\n    type: '',\n    message: '',\n  });\n  const [addWorkflowTemplate, { loading }] = useMutation(\n    ADD_WORKFLOW_TEMPLATE,\n    {\n      variables: {\n        data: {\n          manifest: YAML.stringify(editManifest),\n          template_name: templateName,\n          template_description: templateDesc,\n          project_id: getProjectID(),\n          isCustomWorkflow,\n        },\n      },\n      onError: (data) => {\n        setDisplayResult(true);\n        setCloneResult({\n          type: constants.error,\n          message: data.message,\n        });\n      },\n      onCompleted: () => {\n        setDisplayResult(true);\n        setCloneResult({\n          type: constants.success,\n          message: `${t('chaosWorkflows.browseSchedules.savedSuccessfully')}`,\n        });\n      },\n    }\n  );\n\n  const handleAlertOnClose = () => {\n    setDisplayResult(false);\n    if (cloneResult.type === constants.success) closeTemplate();\n  };\n\n  return (\n    <div className={classes.saveTemplateRoot}>\n      <Typography className={classes.SaveTemplateTxt}>\n        {t('chaosWorkflows.browseSchedules.saveTemplate')}\n      </Typography>\n      <Typography className={classes.NoteTxt}>\n        {t('chaosWorkflows.browseSchedules.updateEngine')}\n      </Typography>\n      <InputField\n        label=\"Name of the template\"\n        value={templateName}\n        data-cy=\"WorkflowName\"\n        required\n        onChange={(e) => setTemplateName(e.target.value.toLowerCase())}\n        helperText={\n          validateWorkflowName(templateName)\n            ? t('createWorkflow.chooseWorkflow.validate')\n            : ''\n        }\n        variant={validateWorkflowName(templateName) ? 'error' : 'primary'}\n        className={classes.InputFieldTemplate}\n      />\n      <br />\n      <InputField\n        label=\"Description of the template\"\n        value={templateDesc}\n        data-cy=\"WorkflowDescription\"\n        helperText=\"\"\n        required\n        onChange={(e) => setTemplateDesc(e.target.value)}\n        className={classes.InputFieldTemplate}\n      />\n      <br />\n      <div className={classes.editor}>\n        <YamlEditor\n          content={editManifest}\n          filename=\"Workflow Template\"\n          readOnly={false}\n          setButtonState={(btnState: boolean) => {\n            setYamlValid(btnState);\n          }}\n          saveWorkflowChange={(updatedManifest: string) => {\n            setEditManifest(updatedManifest);\n          }}\n        />\n      </div>\n      <div className={classes.footerTemplateDiv}>\n        <div className={classes.templateButtonsDiv}>\n          <IconButton onClick={closeTemplate} className={classes.cancelIcon}>\n            {t('chaosWorkflows.browseSchedules.cancel')}\n          </IconButton>\n          <ButtonFilled\n            data-cy=\"saveTemplateButton\"\n            onClick={() => {\n              addWorkflowTemplate();\n            }}\n            disabled={\n              loading ||\n              cloneResult.type === constants.success ||\n              templateName.trim().length === 0 ||\n              templateDesc.trim().length === 0 ||\n              validateWorkflowName(templateName) ||\n              !yamlValid\n            }\n          >\n            {loading ? (\n              <Loader size={20} />\n            ) : (\n              <>\n                <CheckOutlinedIcon />\n                <Typography className={classes.saveButtonTemplate}>\n                  {t('chaosWorkflows.browseSchedules.saveChanges')}\n                </Typography>\n              </>\n            )}\n          </ButtonFilled>\n        </div>\n      </div>\n      <Snackbar\n        open={displayResult}\n        autoHideDuration={6000}\n        onClose={handleAlertOnClose}\n        data-cy=\"templateAlert\"\n      >\n        <Alert\n          onClose={handleAlertOnClose}\n          severity={cloneResult.type === constants.error ? 'error' : 'success'}\n        >\n          {cloneResult.message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\nexport default SaveTemplateModal;\n"]},"metadata":{},"sourceType":"module"}