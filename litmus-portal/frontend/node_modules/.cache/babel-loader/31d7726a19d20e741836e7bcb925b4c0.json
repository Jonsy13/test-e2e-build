{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/GetStartedPage/index.tsx\";\n\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport { ButtonFilled, InputField } from 'litmus-ui';\nimport React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport config from '../../config';\nimport Center from '../../containers/layouts/Center';\nimport { CREATE_PROJECT, CREATE_USER, GET_USER_INFO } from '../../graphql';\nimport { getToken, getUserEmail, getUserFullName, getUserId, getUsername, getUserRole } from '../../utils/auth';\nimport { validateConfirmPassword } from '../../utils/validate';\nimport useStyles from './styles';\n\nvar GetStarted = function GetStarted() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    password: '',\n    confirmPassword: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var isError = useRef(true);\n  var isSuccess = useRef(false);\n\n  if (values.password.length && values.confirmPassword.length && !validateConfirmPassword(values.password, values.confirmPassword)) {\n    isError.current = false;\n    isSuccess.current = true;\n  } else {\n    isError.current = true;\n    isSuccess.current = false;\n  }\n\n  var username = getUsername();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setIsLoading = _useState2[1]; // Mutation to create project for a user\n\n\n  var _useMutation = useMutation(CREATE_PROJECT, {\n    onCompleted: function onCompleted() {\n      setIsLoading(false);\n      window.location.assign('/home');\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      CreateProject = _useMutation2[0]; // Mutation to create a user in litmusDB\n\n\n  var _useMutation3 = useMutation(CREATE_USER, {\n    onCompleted: function onCompleted() {\n      CreateProject({\n        variables: {\n          projectName: \"\".concat(username, \"'s project\")\n        }\n      });\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      CreateUser = _useMutation4[0]; // Query to fetch user details of user from litmusDB\n\n\n  var _useLazyQuery = useLazyQuery(GET_USER_INFO, {\n    variables: {\n      username: username\n    },\n    // Adding the user to litmusDB if user does not exists\n    onError: function onError(err) {\n      if (err.message === 'mongo: no documents in result') CreateUser({\n        variables: {\n          user: {\n            username: username,\n            email: getUserEmail(),\n            name: getUserFullName(),\n            role: getUserRole(),\n            userID: getUserId()\n          }\n        }\n      });else console.error(err.message);\n    },\n    // Creating project for the user\n    onCompleted: function onCompleted() {\n      CreateProject({\n        variables: {\n          projectName: \"\".concat(username, \"'s project\")\n        }\n      });\n    }\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 1),\n      getUserInfo = _useLazyQuery2[0]; // Submit entered data to /update endpoint\n\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    fetch(\"\".concat(config.auth.url, \"/update/details\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \".concat(getToken())\n      },\n      body: JSON.stringify({\n        username: username,\n        email: getUserEmail(),\n        name: getUserFullName(),\n        password: values.password\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if ('error' in data) {\n        isError.current = true;\n      } else {\n        getUserInfo();\n      }\n    }).catch(function (err) {\n      isError.current = true;\n      console.error(err);\n    });\n  };\n\n  var loaderSize = 20;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rootContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Center, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rootDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rootLitmusText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"icons/LitmusLogoLight.svg\",\n    alt: \"litmus logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.HeaderText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, ' ', t('getStarted.welcome'), \" \", username, \"!\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.HeaderText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, t('getStarted.password.info')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.litmusText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, t('getStarted.password.desc'))), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"login-form\",\n    className: classes.inputDiv,\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    \"data-cy\": \"inputPassword\",\n    className: classes.inputValue,\n    label: t('getStarted.password.label'),\n    type: \"password\",\n    filled: true,\n    required: true,\n    value: values.password,\n    onChange: function onChange(event) {\n      setValues({\n        password: event.target.value,\n        confirmPassword: values.confirmPassword\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputField, {\n    \"data-cy\": \"confirmInputPassword\",\n    className: classes.inputValue,\n    label: t('getStarted.password.cnfLabel'),\n    type: \"password\",\n    required: true,\n    value: values.confirmPassword,\n    helperText: validateConfirmPassword(values.password, values.confirmPassword) ? t('settings.accountsTab.accountsSettings.passwordNotSame') : '',\n    filled: true,\n    onChange: function onChange(event) {\n      return setValues({\n        password: values.password,\n        confirmPassword: event.target.value\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"finishButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    className: classes.submitButton,\n    type: \"submit\",\n    disabled: isError.current,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    size: loaderSize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, t('getStarted.button.finish')))))))));\n};\n\nexport default GetStarted;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/GetStartedPage/index.tsx"],"names":["useLazyQuery","useMutation","Typography","ButtonFilled","InputField","React","useRef","useState","useTranslation","Loader","config","Center","CREATE_PROJECT","CREATE_USER","GET_USER_INFO","getToken","getUserEmail","getUserFullName","getUserId","getUsername","getUserRole","validateConfirmPassword","useStyles","GetStarted","t","classes","password","confirmPassword","values","setValues","isError","isSuccess","length","current","username","loading","setIsLoading","onCompleted","window","location","assign","CreateProject","variables","projectName","CreateUser","onError","err","message","user","email","name","role","userID","console","error","getUserInfo","handleSubmit","event","preventDefault","fetch","auth","url","method","headers","Authorization","body","JSON","stringify","then","response","json","data","catch","loaderSize","rootContainer","rootDiv","rootLitmusText","HeaderText","litmusText","inputDiv","inputValue","target","value","buttonGroup","submitButton"],"mappings":"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","sourcesContent":["import { useLazyQuery, useMutation } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport { ButtonFilled, InputField } from 'litmus-ui';\nimport React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport config from '../../config';\nimport Center from '../../containers/layouts/Center';\nimport { CREATE_PROJECT, CREATE_USER, GET_USER_INFO } from '../../graphql';\nimport {\n  CreateUserData,\n  CurrentUserDetails,\n  Project,\n} from '../../models/graphql/user';\nimport {\n  getToken,\n  getUserEmail,\n  getUserFullName,\n  getUserId,\n  getUsername,\n  getUserRole,\n} from '../../utils/auth';\nimport { validateConfirmPassword } from '../../utils/validate';\nimport useStyles from './styles';\n\ninterface PasswordReset {\n  password: string;\n  confirmPassword: string;\n}\n\nconst GetStarted: React.FC = () => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const [values, setValues] = React.useState<PasswordReset>({\n    password: '',\n    confirmPassword: '',\n  });\n  const isError = useRef(true);\n  const isSuccess = useRef(false);\n  if (\n    values.password.length &&\n    values.confirmPassword.length &&\n    !validateConfirmPassword(values.password, values.confirmPassword)\n  ) {\n    isError.current = false;\n    isSuccess.current = true;\n  } else {\n    isError.current = true;\n    isSuccess.current = false;\n  }\n  const username = getUsername();\n\n  const [loading, setIsLoading] = useState<boolean>(false);\n\n  // Mutation to create project for a user\n  const [CreateProject] = useMutation<Project>(CREATE_PROJECT, {\n    onCompleted: () => {\n      setIsLoading(false);\n      window.location.assign('/home');\n    },\n  });\n\n  // Mutation to create a user in litmusDB\n  const [CreateUser] = useMutation<CreateUserData>(CREATE_USER, {\n    onCompleted: () => {\n      CreateProject({\n        variables: {\n          projectName: `${username}'s project`,\n        },\n      });\n    },\n  });\n\n  // Query to fetch user details of user from litmusDB\n  const [getUserInfo] = useLazyQuery<CurrentUserDetails>(GET_USER_INFO, {\n    variables: { username },\n    // Adding the user to litmusDB if user does not exists\n    onError: (err) => {\n      if (err.message === 'mongo: no documents in result')\n        CreateUser({\n          variables: {\n            user: {\n              username,\n              email: getUserEmail(),\n              name: getUserFullName(),\n              role: getUserRole(),\n              userID: getUserId(),\n            },\n          },\n        });\n      else console.error(err.message);\n    },\n    // Creating project for the user\n    onCompleted: () => {\n      CreateProject({\n        variables: {\n          projectName: `${username}'s project`,\n        },\n      });\n    },\n  });\n\n  // Submit entered data to /update endpoint\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n    fetch(`${config.auth.url}/update/details`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${getToken()}`,\n      },\n      body: JSON.stringify({\n        username,\n        email: getUserEmail(),\n        name: getUserFullName(),\n        password: values.password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if ('error' in data) {\n          isError.current = true;\n        } else {\n          getUserInfo();\n        }\n      })\n      .catch((err) => {\n        isError.current = true;\n        console.error(err);\n      });\n  };\n\n  const loaderSize = 20;\n\n  return (\n    <div className={classes.rootContainer}>\n      <Center>\n        <div className={classes.rootDiv}>\n          <div className={classes.rootLitmusText}>\n            <img src=\"icons/LitmusLogoLight.svg\" alt=\"litmus logo\" />\n            <Typography className={classes.HeaderText}>\n              {' '}\n              {t('getStarted.welcome')} {username}!\n            </Typography>\n            <Typography className={classes.HeaderText}>\n              {t('getStarted.password.info')}\n            </Typography>\n            <Typography className={classes.litmusText}>\n              {t('getStarted.password.desc')}\n            </Typography>\n          </div>\n          <form\n            id=\"login-form\"\n            className={classes.inputDiv}\n            onSubmit={handleSubmit}\n          >\n            <InputField\n              data-cy=\"inputPassword\"\n              className={classes.inputValue}\n              label={t('getStarted.password.label')}\n              type=\"password\"\n              filled\n              required\n              value={values.password}\n              onChange={(event) => {\n                setValues({\n                  password: event.target.value,\n                  confirmPassword: values.confirmPassword,\n                });\n              }}\n            />\n            <InputField\n              data-cy=\"confirmInputPassword\"\n              className={classes.inputValue}\n              label={t('getStarted.password.cnfLabel')}\n              type=\"password\"\n              required\n              value={values.confirmPassword}\n              helperText={\n                validateConfirmPassword(values.password, values.confirmPassword)\n                  ? t('settings.accountsTab.accountsSettings.passwordNotSame')\n                  : ''\n              }\n              filled\n              onChange={(event) =>\n                setValues({\n                  password: values.password,\n                  confirmPassword: event.target.value,\n                })\n              }\n            />\n            <div className={classes.buttonGroup}>\n              <div data-cy=\"finishButton\">\n                <ButtonFilled\n                  className={classes.submitButton}\n                  type=\"submit\"\n                  disabled={isError.current}\n                >\n                  {loading ? (\n                    <Loader size={loaderSize} />\n                  ) : (\n                    <>{t('getStarted.button.finish')}</>\n                  )}\n                </ButtonFilled>\n              </div>\n            </div>\n          </form>\n        </div>\n      </Center>\n    </div>\n  );\n};\n\nexport default GetStarted;\n"]},"metadata":{},"sourceType":"module"}