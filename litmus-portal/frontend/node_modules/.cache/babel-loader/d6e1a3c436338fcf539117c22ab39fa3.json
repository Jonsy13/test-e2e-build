{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import ClickAwayListener from'@material-ui/core/ClickAwayListener';import IconButton from'@material-ui/core/IconButton';import{makeStyles}from'@material-ui/core/styles';import Tooltip from'@material-ui/core/Tooltip';import React from'react';var useStyles=makeStyles(function(){return{infoImg:{height:'1.15rem',width:'1.15rem'}};});var InfoTooltip=function InfoTooltip(_ref){var value=_ref.value,className=_ref.className;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var classes=useStyles();var handleTooltipClose=function handleTooltipClose(){setOpen(false);};var handleTooltipOpen=function handleTooltipOpen(){setOpen(true);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ClickAwayListener,{onClickAway:handleTooltipClose},/*#__PURE__*/React.createElement(\"div\",{className:className},/*#__PURE__*/React.createElement(Tooltip,{PopperProps:{disablePortal:true},onClose:handleTooltipClose,open:open,disableFocusListener:true,disableHoverListener:true,disableTouchListener:true,title:value,placement:\"top\"},/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"info icon\",component:\"span\",size:\"small\",onClick:handleTooltipOpen},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/info.svg\",className:classes.infoImg,alt:\"info tooltip\"}))))));};export default InfoTooltip;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/InfoTooltip/index.tsx"],"names":["ClickAwayListener","IconButton","makeStyles","Tooltip","React","useStyles","infoImg","height","width","InfoTooltip","value","className","useState","open","setOpen","classes","handleTooltipClose","handleTooltipOpen","disablePortal"],"mappings":"mLAAA,MAAOA,CAAAA,iBAAP,KAA8B,qCAA9B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,SAAS,CAAGH,UAAU,CAAC,iBAAO,CAClCI,OAAO,CAAE,CACPC,MAAM,CAAE,SADD,CAEPC,KAAK,CAAE,SAFA,CADyB,CAAP,EAAD,CAA5B,CAYA,GAAMC,CAAAA,WAAuC,CAAG,QAA1CA,CAAAA,WAA0C,MAA0B,IAAvBC,CAAAA,KAAuB,MAAvBA,KAAuB,CAAhBC,SAAgB,MAAhBA,SAAgB,CACxE,oBAAwBP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAxB,oDAAOC,IAAP,qBAAaC,OAAb,qBACA,GAAMC,CAAAA,OAAO,CAAGV,SAAS,EAAzB,CACA,GAAMW,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/BF,OAAO,CAAC,KAAD,CAAP,CACD,CAFD,CAIA,GAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BH,OAAO,CAAC,IAAD,CAAP,CACD,CAFD,CAIA,mBACE,qDACE,oBAAC,iBAAD,EAAmB,WAAW,CAAEE,kBAAhC,eACE,2BAAK,SAAS,CAAEL,SAAhB,eACE,oBAAC,OAAD,EACE,WAAW,CAAE,CACXO,aAAa,CAAE,IADJ,CADf,CAIE,OAAO,CAAEF,kBAJX,CAKE,IAAI,CAAEH,IALR,CAME,oBAAoB,KANtB,CAOE,oBAAoB,KAPtB,CAQE,oBAAoB,KARtB,CASE,KAAK,CAAEH,KATT,CAUE,SAAS,CAAC,KAVZ,eAYE,oBAAC,UAAD,EACE,aAAW,WADb,CAEE,SAAS,CAAC,MAFZ,CAGE,IAAI,CAAC,OAHP,CAIE,OAAO,CAAEO,iBAJX,eAME,2BACE,GAAG,CAAC,iBADN,CAEE,SAAS,CAAEF,OAAO,CAACT,OAFrB,CAGE,GAAG,CAAC,cAHN,EANF,CAZF,CADF,CADF,CADF,CADF,CAiCD,CA5CD,CA6CA,cAAeG,CAAAA,WAAf","sourcesContent":["import ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport React from 'react';\n\nconst useStyles = makeStyles(() => ({\n  infoImg: {\n    height: '1.15rem',\n    width: '1.15rem',\n  },\n}));\n\ninterface InfoTooltipProps {\n  value: string;\n  className?: string;\n}\n\nconst InfoTooltip: React.FC<InfoTooltipProps> = ({ value, className }) => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const handleTooltipClose = () => {\n    setOpen(false);\n  };\n\n  const handleTooltipOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <ClickAwayListener onClickAway={handleTooltipClose}>\n        <div className={className}>\n          <Tooltip\n            PopperProps={{\n              disablePortal: true,\n            }}\n            onClose={handleTooltipClose}\n            open={open}\n            disableFocusListener\n            disableHoverListener\n            disableTouchListener\n            title={value}\n            placement=\"top\"\n          >\n            <IconButton\n              aria-label=\"info icon\"\n              component=\"span\"\n              size=\"small\"\n              onClick={handleTooltipOpen}\n            >\n              <img\n                src=\"/icons/info.svg\"\n                className={classes.infoImg}\n                alt=\"info tooltip\"\n              />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </ClickAwayListener>\n    </>\n  );\n};\nexport default InfoTooltip;\n"]},"metadata":{},"sourceType":"module"}