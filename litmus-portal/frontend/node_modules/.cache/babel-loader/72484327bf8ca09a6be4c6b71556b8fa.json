{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{AppBar,Avatar,FormControlLabel,Switch,Tabs,TextField,Typography,useTheme}from'@material-ui/core';import{Autocomplete}from'@material-ui/lab';import{ButtonFilled,ButtonOutlined,EditableText}from'litmus-ui';import moment from'moment';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import{v4 as uuidv4}from'uuid';import{StyledTab,TabPanel}from'../../../../../../../components/Tabs';import{ReactComponent as AddQueryIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../../../svg/add-query.svg\";import{ReactComponent as SwitchIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../../../svg/switch-checked.svg\";import{getPromQueryInput}from'../../../../../../../utils/promUtils';import Graph from'./Graph';import QueryEditor from'./QueryEditor';import useStyles from'./styles';var QueryEditingWizard=function QueryEditingWizard(_ref){var _panelInfo$ds_url,_panelInfo$panel_grou;var panelVars=_ref.panelVars,selectedApps=_ref.selectedApps,seriesList=_ref.seriesList,panelGroupsList=_ref.panelGroupsList,index=_ref.index,handleUpdatePanel=_ref.handleUpdatePanel,handleDeletePanel=_ref.handleDeletePanel,handleDiscardChanges=_ref.handleDiscardChanges;var classes=useStyles();var theme=useTheme();var _useTranslation=useTranslation(),t=_useTranslation.t;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),tabValue=_React$useState2[0],setTabValue=_React$useState2[1];var _useState=useState(_objectSpread({},panelVars)),_useState2=_slicedToArray(_useState,2),panelInfo=_useState2[0],setPanelInfo=_useState2[1];var _useState3=useState({triggerUpdate:false,graph:false}),_useState4=_slicedToArray(_useState3,2),update=_useState4[0],setUpdate=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),settings=_useState6[0],setSettings=_useState6[1];var _React$useState3=React.useState({ds_details:{url:(_panelInfo$ds_url=panelInfo.ds_url)!==null&&_panelInfo$ds_url!==void 0?_panelInfo$ds_url:'',start:\"\".concat(new Date(moment.unix(Math.round(new Date().getTime()/1000)-900).format()).getTime()/1000),end:\"\".concat(new Date(moment.unix(Math.round(new Date().getTime()/1000)).format()).getTime()/1000)},queries:getPromQueryInput(panelInfo.prom_queries.filter(function(query){return!query.hidden;}),900,false)}),_React$useState4=_slicedToArray(_React$useState3,2),prometheusQueryData=_React$useState4[0],setPrometheusQueryData=_React$useState4[1];useEffect(function(){if(update.triggerUpdate){handleUpdatePanel(panelInfo,index);if(update.graph){var _panelInfo$ds_url2;setPrometheusQueryData({ds_details:{url:(_panelInfo$ds_url2=panelInfo.ds_url)!==null&&_panelInfo$ds_url2!==void 0?_panelInfo$ds_url2:'',start:\"\".concat(new Date(moment.unix(Math.round(new Date().getTime()/1000)-900).format()).getTime()/1000),end:\"\".concat(new Date(moment.unix(Math.round(new Date().getTime()/1000)).format()).getTime()/1000)},queries:getPromQueryInput(panelInfo.prom_queries.filter(function(query){return!query.hidden;}),900,false)});}setUpdate({triggerUpdate:false,graph:false});}},[update]);var handleAddQuery=function handleAddQuery(){var existingQueries=panelInfo.prom_queries;existingQueries.push({hidden:false,queryid:uuidv4(),prom_query_name:'',legend:'',resolution:'1/2',minstep:'5',line:true,close_area:false});setPanelInfo(_objectSpread(_objectSpread({},panelInfo),{},{prom_queries:existingQueries}));setUpdate({triggerUpdate:true,graph:true});};var handleDeleteQuery=function handleDeleteQuery(index){var existingQueries=panelInfo.prom_queries;if(index!==0||existingQueries.length>1){existingQueries.splice(index,1);setPanelInfo(_objectSpread(_objectSpread({},panelInfo),{},{prom_queries:existingQueries}));setUpdate({triggerUpdate:true,graph:true});}};var handleShowAndHideQuery=function handleShowAndHideQuery(index){var existingQueries=panelInfo.prom_queries;existingQueries[index].hidden=!existingQueries[index].hidden;setPanelInfo(_objectSpread(_objectSpread({},panelInfo),{},{prom_queries:existingQueries}));setUpdate({triggerUpdate:true,graph:true});};var handleUpdateQuery=function handleUpdateQuery(query,index){var existingQueries=panelInfo.prom_queries;existingQueries[index]=query;setPanelInfo(_objectSpread(_objectSpread({},panelInfo),{},{prom_queries:existingQueries}));setUpdate({triggerUpdate:true,graph:true});};var handleChange=function handleChange(event,newValue){setTabValue(newValue);};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.flexBetween,\" \").concat(classes.header)},/*#__PURE__*/React.createElement(\"div\",{className:classes.flex},/*#__PURE__*/React.createElement(Autocomplete,{defaultValue:{name:(_panelInfo$panel_grou=panelInfo.panel_group_name)!==null&&_panelInfo$panel_grou!==void 0?_panelInfo$panel_grou:''},freeSolo:true,id:\"pg-\".concat(panelInfo.panel_group_name),options:panelGroupsList,getOptionLabel:function getOptionLabel(option){return option.name;},style:{width:'10.3rem'},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{variant:\"standard\",size:\"small\"}));},onChange:function onChange(event,value,reason){var _panelInfo$panel_grou2;setPanelInfo(_objectSpread(_objectSpread({},panelInfo),{},{panel_group_name:value?reason==='create-option'?value:value.name:'',panel_group_id:reason==='create-option'?'':(_panelInfo$panel_grou2=panelInfo.panel_group_id)!==null&&_panelInfo$panel_grou2!==void 0?_panelInfo$panel_grou2:''}));setUpdate({triggerUpdate:true,graph:false});}}),/*#__PURE__*/React.createElement(Typography,{className:classes.divider},\" / \"),/*#__PURE__*/React.createElement(EditableText,{defaultValue:panelInfo.panel_name,id:\"name\",onSave:function onSave(value){setPanelInfo(_objectSpread(_objectSpread({},panelInfo),{},{panel_name:value}));setUpdate({triggerUpdate:true,graph:false});}})),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.flex,\" \").concat(classes.controlButtons),style:{gap:'1rem'}},/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){setSettings(!settings);},className:classes.iconButton},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/query-settings.svg\",alt:\"Settings icon\",className:classes.icon})),/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){handleDeletePanel(index);},className:\"\".concat(classes.iconButton,\" \").concat(classes.deleteButton)},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/delete.svg\",alt:\"Delete icon\",className:classes.icon})))),/*#__PURE__*/React.createElement(Graph,{panelVars:panelVars,prometheusQueryData:prometheusQueryData}),settings&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.editSection},/*#__PURE__*/React.createElement(AppBar,{position:\"static\",color:\"default\",className:classes.appBar},/*#__PURE__*/React.createElement(Tabs,{value:tabValue,onChange:handleChange,TabIndicatorProps:{style:{backgroundColor:theme.palette.primary.main}},variant:\"scrollable\",scrollButtons:\"auto\"},/*#__PURE__*/React.createElement(StyledTab,{label:panelInfo.prom_queries.length>1?t('analyticsDashboard.applicationDashboards.tuneTheQueries.queries'):t('analyticsDashboard.applicationDashboards.tuneTheQueries.query'),icon:/*#__PURE__*/React.createElement(Avatar,{className:classes.avatar},/*#__PURE__*/React.createElement(Typography,{className:classes.queryCount},panelInfo.prom_queries.length))}),/*#__PURE__*/React.createElement(StyledTab,{label:t('analyticsDashboard.applicationDashboards.tuneTheQueries.visualization')}))),/*#__PURE__*/React.createElement(TabPanel,{value:tabValue,index:0},panelInfo.prom_queries.map(function(prom_query,index){var _panelInfo$ds_url3;return/*#__PURE__*/React.createElement(QueryEditor,{index:index,key:\"query-editor-\".concat(prom_query.queryid),promQuery:prom_query,selectedApps:selectedApps,dsURL:(_panelInfo$ds_url3=panelInfo.ds_url)!==null&&_panelInfo$ds_url3!==void 0?_panelInfo$ds_url3:'',seriesList:seriesList,handleDeleteQuery:handleDeleteQuery,handleShowAndHideQuery:handleShowAndHideQuery,handleUpdateQuery:handleUpdateQuery});})),/*#__PURE__*/React.createElement(TabPanel,{value:tabValue,index:1},/*#__PURE__*/React.createElement(\"div\",{className:classes.switches},/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Switch,{checked:panelInfo.panel_options.points,onChange:function onChange(event){var updatedPanelOptions=_objectSpread(_objectSpread({},panelInfo.panel_options),{},{points:event.target.checked});setPanelInfo(_objectSpread(_objectSpread({},panelInfo),{},{panel_options:updatedPanelOptions}));setUpdate({triggerUpdate:true,graph:true});},name:\"\".concat(t('analyticsDashboard.applicationDashboards.tuneTheQueries.points')),icon:/*#__PURE__*/React.createElement(SwitchIcon,null),checkedIcon:/*#__PURE__*/React.createElement(SwitchIcon,null)}),label:\"\".concat(t('analyticsDashboard.applicationDashboards.tuneTheQueries.points')),labelPlacement:\"start\"}),/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Switch,{checked:panelInfo.panel_options.grids,onChange:function onChange(event){var updatedPanelOptions=_objectSpread(_objectSpread({},panelInfo.panel_options),{},{grids:event.target.checked});setPanelInfo(_objectSpread(_objectSpread({},panelInfo),{},{panel_options:updatedPanelOptions}));setUpdate({triggerUpdate:true,graph:true});},name:\"\".concat(t('analyticsDashboard.applicationDashboards.tuneTheQueries.grids')),icon:/*#__PURE__*/React.createElement(SwitchIcon,null),checkedIcon:/*#__PURE__*/React.createElement(SwitchIcon,null)}),label:\"\".concat(t('analyticsDashboard.applicationDashboards.tuneTheQueries.grids')),labelPlacement:\"start\"})))),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.flexBetween,\" \").concat(classes.topMargin,\" \").concat(tabValue===0?'':classes.flexEnd)},tabValue===0&&/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:handleAddQuery,startIcon:/*#__PURE__*/React.createElement(AddQueryIcon,null)},/*#__PURE__*/React.createElement(Typography,null,t('analyticsDashboard.applicationDashboards.tuneTheQueries.addQuery'))),/*#__PURE__*/React.createElement(ButtonFilled,{onClick:function onClick(){handleDiscardChanges(index);},className:classes.discardButton},/*#__PURE__*/React.createElement(Typography,null,t('analyticsDashboard.applicationDashboards.tuneTheQueries.discardChanges'))))));};export default QueryEditingWizard;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/TuneTheQueries/EditPanelsWizard/QueryEditingWizard/index.tsx"],"names":["AppBar","Avatar","FormControlLabel","Switch","Tabs","TextField","Typography","useTheme","Autocomplete","ButtonFilled","ButtonOutlined","EditableText","moment","React","useEffect","useState","useTranslation","v4","uuidv4","StyledTab","TabPanel","getPromQueryInput","Graph","QueryEditor","useStyles","QueryEditingWizard","panelVars","selectedApps","seriesList","panelGroupsList","index","handleUpdatePanel","handleDeletePanel","handleDiscardChanges","classes","theme","t","tabValue","setTabValue","panelInfo","setPanelInfo","triggerUpdate","graph","update","setUpdate","settings","setSettings","ds_details","url","ds_url","start","Date","unix","Math","round","getTime","format","end","queries","prom_queries","filter","query","hidden","prometheusQueryData","setPrometheusQueryData","handleAddQuery","existingQueries","push","queryid","prom_query_name","legend","resolution","minstep","line","close_area","handleDeleteQuery","length","splice","handleShowAndHideQuery","handleUpdateQuery","handleChange","event","newValue","root","flexBetween","header","flex","name","panel_group_name","option","width","params","value","reason","panel_group_id","divider","panel_name","controlButtons","gap","iconButton","icon","deleteButton","editSection","appBar","style","backgroundColor","palette","primary","main","avatar","queryCount","map","prom_query","switches","panel_options","points","updatedPanelOptions","target","checked","grids","topMargin","flexEnd","discardButton"],"mappings":"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","sourcesContent":["import {\n  AppBar,\n  Avatar,\n  FormControlLabel,\n  Switch,\n  Tabs,\n  TextField,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { ButtonFilled, ButtonOutlined, EditableText } from 'litmus-ui';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { v4 as uuidv4 } from 'uuid';\nimport { StyledTab, TabPanel } from '../../../../../../../components/Tabs';\nimport {\n  PanelDetails,\n  PromQueryDetails,\n} from '../../../../../../../models/dashboardsData';\nimport {\n  ApplicationMetadata,\n  PanelOption,\n} from '../../../../../../../models/graphql/dashboardsDetails';\nimport { promInput } from '../../../../../../../models/graphql/prometheus';\nimport { ReactComponent as AddQueryIcon } from '../../../../../../../svg/add-query.svg';\nimport { ReactComponent as SwitchIcon } from '../../../../../../../svg/switch-checked.svg';\nimport { getPromQueryInput } from '../../../../../../../utils/promUtils';\nimport Graph from './Graph';\nimport QueryEditor from './QueryEditor';\nimport useStyles from './styles';\n\ninterface Option {\n  name: string;\n  [index: string]: any;\n}\n\ninterface QueryEditingWizardProps {\n  panelVars: PanelDetails;\n  selectedApps: ApplicationMetadata[];\n  seriesList: Array<Option>;\n  panelGroupsList: Array<Option>;\n  index: number;\n  handleUpdatePanel: (panelVars: PanelDetails, index: number) => void;\n  handleDeletePanel: (index: number) => void;\n  handleDiscardChanges: (index: number) => void;\n}\n\ninterface Update {\n  triggerUpdate: boolean;\n  graph: boolean;\n}\n\nconst QueryEditingWizard: React.FC<QueryEditingWizardProps> = ({\n  panelVars,\n  selectedApps,\n  seriesList,\n  panelGroupsList,\n  index,\n  handleUpdatePanel,\n  handleDeletePanel,\n  handleDiscardChanges,\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [tabValue, setTabValue] = React.useState<number>(0);\n  const [panelInfo, setPanelInfo] = useState<PanelDetails>({ ...panelVars });\n  const [update, setUpdate] = useState<Update>({\n    triggerUpdate: false,\n    graph: false,\n  });\n  const [settings, setSettings] = useState<boolean>(true);\n  const [prometheusQueryData, setPrometheusQueryData] =\n    React.useState<promInput>({\n      ds_details: {\n        url: panelInfo.ds_url ?? '',\n        start: `${\n          new Date(\n            moment.unix(Math.round(new Date().getTime() / 1000) - 900).format()\n          ).getTime() / 1000\n        }`,\n        end: `${\n          new Date(\n            moment.unix(Math.round(new Date().getTime() / 1000)).format()\n          ).getTime() / 1000\n        }`,\n      },\n      queries: getPromQueryInput(\n        panelInfo.prom_queries.filter((query) => !query.hidden),\n        900,\n        false\n      ),\n    });\n\n  useEffect(() => {\n    if (update.triggerUpdate) {\n      handleUpdatePanel(panelInfo, index);\n      if (update.graph) {\n        setPrometheusQueryData({\n          ds_details: {\n            url: panelInfo.ds_url ?? '',\n            start: `${\n              new Date(\n                moment\n                  .unix(Math.round(new Date().getTime() / 1000) - 900)\n                  .format()\n              ).getTime() / 1000\n            }`,\n            end: `${\n              new Date(\n                moment.unix(Math.round(new Date().getTime() / 1000)).format()\n              ).getTime() / 1000\n            }`,\n          },\n          queries: getPromQueryInput(\n            panelInfo.prom_queries.filter((query) => !query.hidden),\n            900,\n            false\n          ),\n        });\n      }\n      setUpdate({ triggerUpdate: false, graph: false });\n    }\n  }, [update]);\n\n  const handleAddQuery = () => {\n    const existingQueries: PromQueryDetails[] = panelInfo.prom_queries;\n    existingQueries.push({\n      hidden: false,\n      queryid: uuidv4(),\n      prom_query_name: '',\n      legend: '',\n      resolution: '1/2',\n      minstep: '5',\n      line: true,\n      close_area: false,\n    });\n    setPanelInfo({ ...panelInfo, prom_queries: existingQueries });\n    setUpdate({ triggerUpdate: true, graph: true });\n  };\n\n  const handleDeleteQuery = (index: number) => {\n    const existingQueries: PromQueryDetails[] = panelInfo.prom_queries;\n    if (index !== 0 || existingQueries.length > 1) {\n      existingQueries.splice(index, 1);\n      setPanelInfo({ ...panelInfo, prom_queries: existingQueries });\n      setUpdate({ triggerUpdate: true, graph: true });\n    }\n  };\n\n  const handleShowAndHideQuery = (index: number) => {\n    const existingQueries: PromQueryDetails[] = panelInfo.prom_queries;\n    existingQueries[index].hidden = !existingQueries[index].hidden;\n    setPanelInfo({ ...panelInfo, prom_queries: existingQueries });\n    setUpdate({ triggerUpdate: true, graph: true });\n  };\n\n  const handleUpdateQuery = (query: PromQueryDetails, index: number) => {\n    const existingQueries: PromQueryDetails[] = panelInfo.prom_queries;\n    existingQueries[index] = query;\n    setPanelInfo({ ...panelInfo, prom_queries: existingQueries });\n    setUpdate({ triggerUpdate: true, graph: true });\n  };\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={`${classes.flexBetween} ${classes.header}`}>\n        <div className={classes.flex}>\n          <Autocomplete\n            defaultValue={{ name: panelInfo.panel_group_name ?? '' }}\n            freeSolo\n            id={`pg-${panelInfo.panel_group_name}`}\n            options={panelGroupsList}\n            getOptionLabel={(option: Option) => option.name}\n            style={{ width: '10.3rem' }}\n            renderInput={(params) => (\n              <TextField {...params} variant=\"standard\" size=\"small\" />\n            )}\n            onChange={(event, value, reason) => {\n              setPanelInfo({\n                ...panelInfo,\n                panel_group_name: value\n                  ? reason === 'create-option'\n                    ? (value as string)\n                    : (value as Option).name\n                  : '',\n                panel_group_id:\n                  reason === 'create-option'\n                    ? ''\n                    : panelInfo.panel_group_id ?? '',\n              });\n              setUpdate({ triggerUpdate: true, graph: false });\n            }}\n          />\n          <Typography className={classes.divider}> / </Typography>\n          <EditableText\n            defaultValue={panelInfo.panel_name}\n            id=\"name\"\n            onSave={(value) => {\n              setPanelInfo({ ...panelInfo, panel_name: value });\n              setUpdate({ triggerUpdate: true, graph: false });\n            }}\n          />\n        </div>\n        <div\n          className={`${classes.flex} ${classes.controlButtons}`}\n          style={{ gap: '1rem' }}\n        >\n          <ButtonOutlined\n            onClick={() => {\n              setSettings(!settings);\n            }}\n            className={classes.iconButton}\n          >\n            <img\n              src=\"/icons/query-settings.svg\"\n              alt=\"Settings icon\"\n              className={classes.icon}\n            />\n          </ButtonOutlined>\n          <ButtonOutlined\n            onClick={() => {\n              handleDeletePanel(index);\n            }}\n            className={`${classes.iconButton} ${classes.deleteButton}`}\n          >\n            <img\n              src=\"/icons/delete.svg\"\n              alt=\"Delete icon\"\n              className={classes.icon}\n            />\n          </ButtonOutlined>\n        </div>\n      </div>\n      <Graph panelVars={panelVars} prometheusQueryData={prometheusQueryData} />\n      {settings && (\n        <>\n          <div className={classes.editSection}>\n            <AppBar\n              position=\"static\"\n              color=\"default\"\n              className={classes.appBar}\n            >\n              <Tabs\n                value={tabValue}\n                onChange={handleChange}\n                TabIndicatorProps={{\n                  style: {\n                    backgroundColor: theme.palette.primary.main,\n                  },\n                }}\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <StyledTab\n                  label={\n                    panelInfo.prom_queries.length > 1\n                      ? t(\n                          'analyticsDashboard.applicationDashboards.tuneTheQueries.queries'\n                        )\n                      : t(\n                          'analyticsDashboard.applicationDashboards.tuneTheQueries.query'\n                        )\n                  }\n                  icon={\n                    <Avatar className={classes.avatar}>\n                      <Typography className={classes.queryCount}>\n                        {panelInfo.prom_queries.length}\n                      </Typography>\n                    </Avatar>\n                  }\n                />\n\n                <StyledTab\n                  label={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.visualization'\n                  )}\n                />\n              </Tabs>\n            </AppBar>\n\n            <TabPanel value={tabValue} index={0}>\n              {panelInfo.prom_queries.map((prom_query, index) => (\n                <QueryEditor\n                  index={index}\n                  key={`query-editor-${prom_query.queryid}`}\n                  promQuery={prom_query}\n                  selectedApps={selectedApps}\n                  dsURL={panelInfo.ds_url ?? ''}\n                  seriesList={seriesList}\n                  handleDeleteQuery={handleDeleteQuery}\n                  handleShowAndHideQuery={handleShowAndHideQuery}\n                  handleUpdateQuery={handleUpdateQuery}\n                />\n              ))}\n            </TabPanel>\n\n            <TabPanel value={tabValue} index={1}>\n              <div className={classes.switches}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={panelInfo.panel_options.points}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>\n                      ) => {\n                        const updatedPanelOptions: PanelOption = {\n                          ...panelInfo.panel_options,\n                          points: event.target.checked,\n                        };\n                        setPanelInfo({\n                          ...panelInfo,\n                          panel_options: updatedPanelOptions,\n                        });\n                        setUpdate({ triggerUpdate: true, graph: true });\n                      }}\n                      name={`${t(\n                        'analyticsDashboard.applicationDashboards.tuneTheQueries.points'\n                      )}`}\n                      icon={<SwitchIcon />}\n                      checkedIcon={<SwitchIcon />}\n                    />\n                  }\n                  label={`${t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.points'\n                  )}`}\n                  labelPlacement=\"start\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={panelInfo.panel_options.grids}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>\n                      ) => {\n                        const updatedPanelOptions: PanelOption = {\n                          ...panelInfo.panel_options,\n                          grids: event.target.checked,\n                        };\n                        setPanelInfo({\n                          ...panelInfo,\n                          panel_options: updatedPanelOptions,\n                        });\n                        setUpdate({ triggerUpdate: true, graph: true });\n                      }}\n                      name={`${t(\n                        'analyticsDashboard.applicationDashboards.tuneTheQueries.grids'\n                      )}`}\n                      icon={<SwitchIcon />}\n                      checkedIcon={<SwitchIcon />}\n                    />\n                  }\n                  label={`${t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.grids'\n                  )}`}\n                  labelPlacement=\"start\"\n                />\n              </div>\n            </TabPanel>\n          </div>\n          <div\n            className={`${classes.flexBetween} ${classes.topMargin} ${\n              tabValue === 0 ? '' : classes.flexEnd\n            }`}\n          >\n            {tabValue === 0 && (\n              <ButtonOutlined\n                onClick={handleAddQuery}\n                startIcon={<AddQueryIcon />}\n              >\n                <Typography>\n                  {t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.addQuery'\n                  )}\n                </Typography>\n              </ButtonOutlined>\n            )}\n\n            <ButtonFilled\n              onClick={() => {\n                handleDiscardChanges(index);\n              }}\n              className={classes.discardButton}\n            >\n              <Typography>\n                {t(\n                  'analyticsDashboard.applicationDashboards.tuneTheQueries.discardChanges'\n                )}\n              </Typography>\n            </ButtonFilled>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\nexport default QueryEditingWizard;\n"]},"metadata":{},"sourceType":"module"}