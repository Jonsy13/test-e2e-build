{"ast":null,"code":"function timeDifference(current,previous){var milliSecondsPerMinute=60*1000;var milliSecondsPerHour=milliSecondsPerMinute*60;var milliSecondsPerDay=milliSecondsPerHour*24;var milliSecondsPerMonth=milliSecondsPerDay*30;var milliSecondsPerYear=milliSecondsPerDay*365;var elapsed=current-previous;if(elapsed<milliSecondsPerMinute/3){return'Just now';}if(elapsed<milliSecondsPerMinute){return'less than 1 min ago';}if(elapsed<milliSecondsPerHour){return\"\".concat(Math.round(elapsed/milliSecondsPerMinute),\" mins ago\");}if(elapsed<milliSecondsPerDay){return\"\".concat(Math.round(elapsed/milliSecondsPerHour),\" hours ago\");}if(elapsed<milliSecondsPerMonth){return\"\".concat(Math.round(elapsed/milliSecondsPerDay),\" days ago\");}if(elapsed<milliSecondsPerYear){return\"\".concat(Math.round(elapsed/milliSecondsPerMonth),\" months ago\");}return\"\".concat(Math.round(elapsed/milliSecondsPerYear),\" years ago\");}var timeDifferenceForDate=function timeDifferenceForDate(date){var now=new Date().getTime();var updated=date*1000;return timeDifference(now,updated);};export default timeDifferenceForDate;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/utils/datesModifier.ts"],"names":["timeDifference","current","previous","milliSecondsPerMinute","milliSecondsPerHour","milliSecondsPerDay","milliSecondsPerMonth","milliSecondsPerYear","elapsed","Math","round","timeDifferenceForDate","date","now","Date","getTime","updated"],"mappings":"AAAA,QAASA,CAAAA,cAAT,CAAwBC,OAAxB,CAAyCC,QAAzC,CAA2D,CACzD,GAAMC,CAAAA,qBAAqB,CAAG,GAAK,IAAnC,CACA,GAAMC,CAAAA,mBAAmB,CAAGD,qBAAqB,CAAG,EAApD,CACA,GAAME,CAAAA,kBAAkB,CAAGD,mBAAmB,CAAG,EAAjD,CACA,GAAME,CAAAA,oBAAoB,CAAGD,kBAAkB,CAAG,EAAlD,CACA,GAAME,CAAAA,mBAAmB,CAAGF,kBAAkB,CAAG,GAAjD,CAEA,GAAMG,CAAAA,OAAO,CAAGP,OAAO,CAAGC,QAA1B,CAEA,GAAIM,OAAO,CAAGL,qBAAqB,CAAG,CAAtC,CAAyC,CACvC,MAAO,UAAP,CACD,CAED,GAAIK,OAAO,CAAGL,qBAAd,CAAqC,CACnC,MAAO,qBAAP,CACD,CACD,GAAIK,OAAO,CAAGJ,mBAAd,CAAmC,CACjC,gBAAUK,IAAI,CAACC,KAAL,CAAWF,OAAO,CAAGL,qBAArB,CAAV,cACD,CACD,GAAIK,OAAO,CAAGH,kBAAd,CAAkC,CAChC,gBAAUI,IAAI,CAACC,KAAL,CAAWF,OAAO,CAAGJ,mBAArB,CAAV,eACD,CACD,GAAII,OAAO,CAAGF,oBAAd,CAAoC,CAClC,gBAAUG,IAAI,CAACC,KAAL,CAAWF,OAAO,CAAGH,kBAArB,CAAV,cACD,CACD,GAAIG,OAAO,CAAGD,mBAAd,CAAmC,CACjC,gBAAUE,IAAI,CAACC,KAAL,CAAWF,OAAO,CAAGF,oBAArB,CAAV,gBACD,CACD,gBAAUG,IAAI,CAACC,KAAL,CAAWF,OAAO,CAAGD,mBAArB,CAAV,eACD,CAED,GAAMI,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,IAAD,CAAe,CAC3C,GAAMC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAAZ,CACA,GAAMC,CAAAA,OAAO,CAAGJ,IAAI,CAAG,IAAvB,CACA,MAAOZ,CAAAA,cAAc,CAACa,GAAD,CAAMG,OAAN,CAArB,CACD,CAJD,CAMA,cAAeL,CAAAA,qBAAf","sourcesContent":["function timeDifference(current: number, previous: number) {\n  const milliSecondsPerMinute = 60 * 1000;\n  const milliSecondsPerHour = milliSecondsPerMinute * 60;\n  const milliSecondsPerDay = milliSecondsPerHour * 24;\n  const milliSecondsPerMonth = milliSecondsPerDay * 30;\n  const milliSecondsPerYear = milliSecondsPerDay * 365;\n\n  const elapsed = current - previous;\n\n  if (elapsed < milliSecondsPerMinute / 3) {\n    return 'Just now';\n  }\n\n  if (elapsed < milliSecondsPerMinute) {\n    return 'less than 1 min ago';\n  }\n  if (elapsed < milliSecondsPerHour) {\n    return `${Math.round(elapsed / milliSecondsPerMinute)} mins ago`;\n  }\n  if (elapsed < milliSecondsPerDay) {\n    return `${Math.round(elapsed / milliSecondsPerHour)} hours ago`;\n  }\n  if (elapsed < milliSecondsPerMonth) {\n    return `${Math.round(elapsed / milliSecondsPerDay)} days ago`;\n  }\n  if (elapsed < milliSecondsPerYear) {\n    return `${Math.round(elapsed / milliSecondsPerMonth)} months ago`;\n  }\n  return `${Math.round(elapsed / milliSecondsPerYear)} years ago`;\n}\n\nconst timeDifferenceForDate = (date: any) => {\n  const now = new Date().getTime();\n  const updated = date * 1000;\n  return timeDifference(now, updated);\n};\n\nexport default timeDifferenceForDate;\n"]},"metadata":{},"sourceType":"module"}