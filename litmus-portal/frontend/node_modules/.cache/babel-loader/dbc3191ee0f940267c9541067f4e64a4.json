{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useLazyQuery}from'@apollo/client';import{useTheme}from'@material-ui/core';import{LineAreaGraph}from'litmus-ui';import React,{useEffect,useState}from'react';import{PROM_QUERY}from'../../../../../../../../graphql';import{DataParserForPrometheus}from'../../../../../../../../utils/promUtils';import useStyles from'./styles';var Graph=function Graph(_ref){var prometheusQueryData=_ref.prometheusQueryData,panelVars=_ref.panelVars;var _useTheme=useTheme(),palette=_useTheme.palette;var classes=useStyles();var lineGraph=palette.graph.line;var areaGraph=palette.graph.area;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),firstLoad=_useState2[0],setFirstLoad=_useState2[1];var _React$useState=React.useState({seriesData:[],closedAreaData:[],chaosData:[]}),_React$useState2=_slicedToArray(_React$useState,2),graphData=_React$useState2[0],setGraphData=_React$useState2[1];var _useLazyQuery=useLazyQuery(PROM_QUERY,{variables:{prometheusInput:prometheusQueryData},fetchPolicy:'no-cache',onCompleted:function onCompleted(prometheusData){if(prometheusData){var parsedData=DataParserForPrometheus(prometheusData,lineGraph,areaGraph,panelVars.prom_queries.filter(function(query){return query.close_area;}).map(function(query){return query.queryid;}));setGraphData(parsedData);}}}),_useLazyQuery2=_slicedToArray(_useLazyQuery,1),getGraphData=_useLazyQuery2[0];useEffect(function(){var _prometheusQueryData$;if(firstLoad&&(prometheusQueryData===null||prometheusQueryData===void 0?void 0:prometheusQueryData.ds_details.url)!==''&&(prometheusQueryData===null||prometheusQueryData===void 0?void 0:(_prometheusQueryData$=prometheusQueryData.queries)===null||_prometheusQueryData$===void 0?void 0:_prometheusQueryData$.length)!==0){getGraphData();setFirstLoad(false);}},[firstLoad]);return/*#__PURE__*/React.createElement(\"div\",{className:classes.graph},/*#__PURE__*/React.createElement(LineAreaGraph,{legendTableHeight:120,openSeries:graphData.seriesData,closedSeries:graphData.closedAreaData,showGrid:panelVars.panel_options.grids,showPoints:panelVars.panel_options.points,showLegendTable:true,showTips:false,unit:panelVars.unit,yLabel:panelVars.y_axis_left,yLabelOffset:55,margin:{left:80,right:20,top:20,bottom:10}}));};export default Graph;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/TuneTheQueries/EditPanelsWizard/QueryEditingWizard/Graph/index.tsx"],"names":["useLazyQuery","useTheme","LineAreaGraph","React","useEffect","useState","PROM_QUERY","DataParserForPrometheus","useStyles","Graph","prometheusQueryData","panelVars","palette","classes","lineGraph","graph","line","areaGraph","area","firstLoad","setFirstLoad","seriesData","closedAreaData","chaosData","graphData","setGraphData","variables","prometheusInput","fetchPolicy","onCompleted","prometheusData","parsedData","prom_queries","filter","query","close_area","map","queryid","getGraphData","ds_details","url","queries","length","panel_options","grids","points","unit","y_axis_left","left","right","top","bottom"],"mappings":"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","sourcesContent":["import { useLazyQuery } from '@apollo/client';\nimport { useTheme } from '@material-ui/core';\nimport { LineAreaGraph } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { PROM_QUERY } from '../../../../../../../../graphql';\nimport {\n  PanelDetails,\n  ParsedPrometheusData,\n} from '../../../../../../../../models/dashboardsData';\nimport {\n  PrometheusQueryVars,\n  PrometheusResponse,\n  promInput,\n} from '../../../../../../../../models/graphql/prometheus';\nimport { DataParserForPrometheus } from '../../../../../../../../utils/promUtils';\nimport useStyles from './styles';\n\ninterface GraphProps {\n  prometheusQueryData: promInput;\n  panelVars: PanelDetails;\n}\n\nconst Graph: React.FC<GraphProps> = ({ prometheusQueryData, panelVars }) => {\n  const { palette } = useTheme();\n  const classes = useStyles();\n  const lineGraph: string[] = palette.graph.line;\n  const areaGraph: string[] = palette.graph.area;\n  const [firstLoad, setFirstLoad] = useState<boolean>(true);\n  const [graphData, setGraphData] = React.useState<ParsedPrometheusData>({\n    seriesData: [],\n    closedAreaData: [],\n    chaosData: [],\n  });\n\n  const [getGraphData] = useLazyQuery<PrometheusResponse, PrometheusQueryVars>(\n    PROM_QUERY,\n    {\n      variables: {\n        prometheusInput: prometheusQueryData,\n      },\n      fetchPolicy: 'no-cache',\n      onCompleted: (prometheusData) => {\n        if (prometheusData) {\n          const parsedData: ParsedPrometheusData = DataParserForPrometheus(\n            prometheusData,\n            lineGraph,\n            areaGraph,\n            panelVars.prom_queries\n              .filter((query) => query.close_area)\n              .map((query) => query.queryid)\n          );\n          setGraphData(parsedData);\n        }\n      },\n    }\n  );\n\n  useEffect(() => {\n    if (\n      firstLoad &&\n      prometheusQueryData?.ds_details.url !== '' &&\n      prometheusQueryData?.queries?.length !== 0\n    ) {\n      getGraphData();\n      setFirstLoad(false);\n    }\n  }, [firstLoad]);\n\n  return (\n    <div className={classes.graph}>\n      <LineAreaGraph\n        legendTableHeight={120}\n        openSeries={graphData.seriesData}\n        closedSeries={graphData.closedAreaData}\n        showGrid={panelVars.panel_options.grids}\n        showPoints={panelVars.panel_options.points}\n        showLegendTable\n        showTips={false}\n        unit={panelVars.unit}\n        yLabel={panelVars.y_axis_left}\n        yLabelOffset={55}\n        margin={{ left: 80, right: 20, top: 20, bottom: 10 }}\n      />\n    </div>\n  );\n};\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}