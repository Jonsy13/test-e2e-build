{"ast":null,"code":"import _regeneratorRuntime from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable no-unused-expressions */import{useMutation}from'@apollo/client';import{Typography}from'@material-ui/core';import React,{forwardRef,useImperativeHandle,useState}from'react';import{useTranslation}from'react-i18next';import{CREATE_DASHBOARD,UPDATE_DASHBOARD}from'../../../../../graphql';import{DEFAULT_DASHBOARD_REFRESH_RATE_STRING,DEFAULT_RELATIVE_TIME_RANGE}from'../../../../../pages/ApplicationDashboard/constants';import useActions from'../../../../../redux/actions';import*as AlertActions from'../../../../../redux/actions/alert';import*as DashboardActions from'../../../../../redux/actions/dashboards';import*as DataSourceActions from'../../../../../redux/actions/dataSource';import{history}from'../../../../../redux/configureStore';import{getProjectID,getProjectRole}from'../../../../../utils/getSearchParams';import EditPanelsWizard from'./EditPanelsWizard';import useStyles from'./styles';var TuneTheQueries=forwardRef(function(_ref,ref){var isLoading=_ref.isLoading,configure=_ref.configure,activeEditPanelID=_ref.activeEditPanelID,dashboardVars=_ref.dashboardVars;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var projectID=getProjectID();var projectRole=getProjectRole();var alert=useActions(AlertActions);var dashboard=useActions(DashboardActions);var dataSource=useActions(DataSourceActions);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),proceed=_React$useState2[0],setProceed=_React$useState2[1];var _useState=useState({selectedPanels:[]}),_useState2=_slicedToArray(_useState,2),updatedDashboardDetails=_useState2[0],setUpdatedDashboardDetails=_useState2[1];var onDashboardLoadRoutine=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dbID){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dashboard.selectDashboard({selectedDashboardID:dbID,refreshRate:0});dataSource.selectDataSource({selectedDataSourceURL:'',selectedDataSourceID:'',selectedDataSourceName:''});return _context.abrupt(\"return\",true);case 3:case\"end\":return _context.stop();}}},_callee);}));return function onDashboardLoadRoutine(_x){return _ref2.apply(this,arguments);};}();var _useMutation=useMutation(CREATE_DASHBOARD,{onCompleted:function onCompleted(data){var _data$createDashBoard,_data$createDashBoard2;isLoading(false);setProceed(true);onDashboardLoadRoutine((_data$createDashBoard=(_data$createDashBoard2=data.createDashBoard)===null||_data$createDashBoard2===void 0?void 0:_data$createDashBoard2.db_id)!==null&&_data$createDashBoard!==void 0?_data$createDashBoard:'').then(function(){history.push({pathname:'/analytics/application-dashboard',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});});},onError:function onError(){alert.changeAlertState(true);isLoading(false);setProceed(false);}}),_useMutation2=_slicedToArray(_useMutation,1),createDashboard=_useMutation2[0];var _useMutation3=useMutation(UPDATE_DASHBOARD,{onCompleted:function onCompleted(){var _dashboardVars$id;isLoading(false);setProceed(true);onDashboardLoadRoutine((_dashboardVars$id=dashboardVars.id)!==null&&_dashboardVars$id!==void 0?_dashboardVars$id:'').then(function(){history.push({pathname:'/analytics/application-dashboard',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});});},onError:function onError(){alert.changeAlertState(true);isLoading(false);setProceed(false);}}),_useMutation4=_slicedToArray(_useMutation3,1),updateDashboard=_useMutation4[0];var getPanelGroups=function getPanelGroups(){var _updatedDashboardDeta2;if(configure===false){var _updatedDashboardDeta;var _panelGroups=[];(_updatedDashboardDeta=updatedDashboardDetails.selectedPanels)===null||_updatedDashboardDeta===void 0?void 0:_updatedDashboardDeta.forEach(function(panelDetails){var panelQueries=[];panelDetails.prom_queries.forEach(function(query){panelQueries.push({queryid:query.queryid,prom_query_name:query.prom_query_name,legend:query.legend,resolution:query.resolution,minstep:query.minstep,line:query.line,close_area:query.close_area});});var panel={prom_queries:panelQueries,panel_options:panelDetails.panel_options,panel_name:panelDetails.panel_name,y_axis_left:panelDetails.y_axis_left,y_axis_right:panelDetails.y_axis_right,x_axis_down:panelDetails.x_axis_down,unit:panelDetails.unit};var panelGroupFound=false;_panelGroups.forEach(function(panelGroup,index){if(panelGroup.panel_group_name===panelDetails.panel_group_name){_panelGroups[index].panels.push(panel);panelGroupFound=true;}});if(!panelGroupFound){var _panelDetails$panel_g;_panelGroups.push({panel_group_name:(_panelDetails$panel_g=panelDetails.panel_group_name)!==null&&_panelDetails$panel_g!==void 0?_panelDetails$panel_g:'',panels:[panel]});}});return _panelGroups;}var panelGroups=[];(_updatedDashboardDeta2=updatedDashboardDetails.selectedPanels)===null||_updatedDashboardDeta2===void 0?void 0:_updatedDashboardDeta2.forEach(function(panelDetails){var _panelDetails$panel_i,_panelDetails$created,_panelDetails$panel_g2;var panelQueries=[];panelDetails.prom_queries.forEach(function(query){panelQueries.push({queryid:query.queryid,prom_query_name:query.prom_query_name,legend:query.legend,resolution:query.resolution,minstep:query.minstep,line:query.line,close_area:query.close_area});});var panel={panel_id:(_panelDetails$panel_i=panelDetails.panel_id)!==null&&_panelDetails$panel_i!==void 0?_panelDetails$panel_i:'',created_at:(_panelDetails$created=panelDetails.created_at)!==null&&_panelDetails$created!==void 0?_panelDetails$created:'',panel_group_id:(_panelDetails$panel_g2=panelDetails.panel_group_id)!==null&&_panelDetails$panel_g2!==void 0?_panelDetails$panel_g2:'',prom_queries:panelQueries,panel_options:panelDetails.panel_options,panel_name:panelDetails.panel_name,y_axis_left:panelDetails.y_axis_left,y_axis_right:panelDetails.y_axis_right,x_axis_down:panelDetails.x_axis_down,unit:panelDetails.unit};var panelGroupFound=false;panelGroups.forEach(function(panelGroup,index){if(panelGroup.panel_group_name===panelDetails.panel_group_name){if(panelDetails.panel_group_id!==panelGroup.panel_group_id){panel.panel_group_id=panelGroup.panel_group_id;}panelGroups[index].panels.push(panel);panelGroupFound=true;}});if(!panelGroupFound){var _panelDetails$panel_g3,_panelDetails$panel_g4;panelGroups.push({panel_group_id:(_panelDetails$panel_g3=panelDetails.panel_group_id)!==null&&_panelDetails$panel_g3!==void 0?_panelDetails$panel_g3:'',panel_group_name:(_panelDetails$panel_g4=panelDetails.panel_group_name)!==null&&_panelDetails$panel_g4!==void 0?_panelDetails$panel_g4:'',panels:[panel]});}});return panelGroups;};var handleCreateMutation=function handleCreateMutation(){var _dashboardVars$dataSo,_dashboardVars$name,_dashboardVars$dashbo,_dashboardVars$dashbo2,_dashboardVars$inform,_dashboardVars$chaosE,_dashboardVars$chaosV,_dashboardVars$applic,_dashboardVars$agentI;isLoading(true);var dashboardInput={ds_id:(_dashboardVars$dataSo=dashboardVars.dataSourceID)!==null&&_dashboardVars$dataSo!==void 0?_dashboardVars$dataSo:'',db_name:(_dashboardVars$name=dashboardVars.name)!==null&&_dashboardVars$name!==void 0?_dashboardVars$name:'',db_type_id:(_dashboardVars$dashbo=dashboardVars.dashboardTypeID)!==null&&_dashboardVars$dashbo!==void 0?_dashboardVars$dashbo:'',db_type_name:(_dashboardVars$dashbo2=dashboardVars.dashboardTypeName)!==null&&_dashboardVars$dashbo2!==void 0?_dashboardVars$dashbo2:'',db_information:(_dashboardVars$inform=dashboardVars.information)!==null&&_dashboardVars$inform!==void 0?_dashboardVars$inform:'',chaos_event_query_template:(_dashboardVars$chaosE=dashboardVars.chaosEventQueryTemplate)!==null&&_dashboardVars$chaosE!==void 0?_dashboardVars$chaosE:'',chaos_verdict_query_template:(_dashboardVars$chaosV=dashboardVars.chaosVerdictQueryTemplate)!==null&&_dashboardVars$chaosV!==void 0?_dashboardVars$chaosV:'',application_metadata_map:(_dashboardVars$applic=dashboardVars.applicationMetadataMap)!==null&&_dashboardVars$applic!==void 0?_dashboardVars$applic:[],panel_groups:getPanelGroups(),end_time:\"\".concat(Math.round(new Date().getTime()/1000)),start_time:\"\".concat(Math.round(new Date().getTime()/1000)-DEFAULT_RELATIVE_TIME_RANGE),project_id:projectID,cluster_id:(_dashboardVars$agentI=dashboardVars.agentID)!==null&&_dashboardVars$agentI!==void 0?_dashboardVars$agentI:'',refresh_rate:DEFAULT_DASHBOARD_REFRESH_RATE_STRING};createDashboard({variables:{createDBInput:dashboardInput}});};var handleUpdateMutation=function handleUpdateMutation(){var _dashboardVars$id2,_dashboardVars$dataSo2,_dashboardVars$name2,_dashboardVars$dashbo3,_dashboardVars$dashbo4,_dashboardVars$inform2,_dashboardVars$chaosE2,_dashboardVars$chaosV2,_dashboardVars$applic2,_dashboardVars$agentI2;isLoading(true);var dashboardInput={db_id:(_dashboardVars$id2=dashboardVars.id)!==null&&_dashboardVars$id2!==void 0?_dashboardVars$id2:'',ds_id:(_dashboardVars$dataSo2=dashboardVars.dataSourceID)!==null&&_dashboardVars$dataSo2!==void 0?_dashboardVars$dataSo2:'',db_name:(_dashboardVars$name2=dashboardVars.name)!==null&&_dashboardVars$name2!==void 0?_dashboardVars$name2:'',db_type_id:(_dashboardVars$dashbo3=dashboardVars.dashboardTypeID)!==null&&_dashboardVars$dashbo3!==void 0?_dashboardVars$dashbo3:'',db_type_name:(_dashboardVars$dashbo4=dashboardVars.dashboardTypeName)!==null&&_dashboardVars$dashbo4!==void 0?_dashboardVars$dashbo4:'',db_information:(_dashboardVars$inform2=dashboardVars.information)!==null&&_dashboardVars$inform2!==void 0?_dashboardVars$inform2:'',chaos_event_query_template:(_dashboardVars$chaosE2=dashboardVars.chaosEventQueryTemplate)!==null&&_dashboardVars$chaosE2!==void 0?_dashboardVars$chaosE2:'',chaos_verdict_query_template:(_dashboardVars$chaosV2=dashboardVars.chaosVerdictQueryTemplate)!==null&&_dashboardVars$chaosV2!==void 0?_dashboardVars$chaosV2:'',application_metadata_map:(_dashboardVars$applic2=dashboardVars.applicationMetadataMap)!==null&&_dashboardVars$applic2!==void 0?_dashboardVars$applic2:[],panel_groups:getPanelGroups(),end_time:\"\".concat(Math.round(new Date().getTime()/1000)),start_time:\"\".concat(Math.round(new Date().getTime()/1000)-DEFAULT_RELATIVE_TIME_RANGE),refresh_rate:DEFAULT_DASHBOARD_REFRESH_RATE_STRING,cluster_id:(_dashboardVars$agentI2=dashboardVars.agentID)!==null&&_dashboardVars$agentI2!==void 0?_dashboardVars$agentI2:''};updateDashboard({variables:{updateDBInput:dashboardInput}});};function onNext(){if(configure){handleUpdateMutation();}else{handleCreateMutation();}return proceed;}useImperativeHandle(ref,function(){return{onNext:onNext};});var CallbackToSetPanels=function CallbackToSetPanels(panels){setUpdatedDashboardDetails({selectedPanels:panels});};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Typography,{className:classes.heading},t('analyticsDashboard.applicationDashboards.tuneTheQueries.header')),/*#__PURE__*/React.createElement(Typography,{className:classes.description},t('analyticsDashboard.applicationDashboards.tuneTheQueries.description')),/*#__PURE__*/React.createElement(\"div\",{className:classes.editPanelsWizard},/*#__PURE__*/React.createElement(EditPanelsWizard,{configure:configure,activeEditPanelID:activeEditPanelID,dashboardVars:dashboardVars,CallbackToSetPanels:CallbackToSetPanels})));});export default TuneTheQueries;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/TuneTheQueries/index.tsx"],"names":["useMutation","Typography","React","forwardRef","useImperativeHandle","useState","useTranslation","CREATE_DASHBOARD","UPDATE_DASHBOARD","DEFAULT_DASHBOARD_REFRESH_RATE_STRING","DEFAULT_RELATIVE_TIME_RANGE","useActions","AlertActions","DashboardActions","DataSourceActions","history","getProjectID","getProjectRole","EditPanelsWizard","useStyles","TuneTheQueries","ref","isLoading","configure","activeEditPanelID","dashboardVars","classes","t","projectID","projectRole","alert","dashboard","dataSource","proceed","setProceed","selectedPanels","updatedDashboardDetails","setUpdatedDashboardDetails","onDashboardLoadRoutine","dbID","selectDashboard","selectedDashboardID","refreshRate","selectDataSource","selectedDataSourceURL","selectedDataSourceID","selectedDataSourceName","onCompleted","data","createDashBoard","db_id","then","push","pathname","search","onError","changeAlertState","createDashboard","id","updateDashboard","getPanelGroups","panelGroups","forEach","panelDetails","panelQueries","prom_queries","query","queryid","prom_query_name","legend","resolution","minstep","line","close_area","panel","panel_options","panel_name","y_axis_left","y_axis_right","x_axis_down","unit","panelGroupFound","panelGroup","index","panel_group_name","panels","panel_id","created_at","panel_group_id","handleCreateMutation","dashboardInput","ds_id","dataSourceID","db_name","name","db_type_id","dashboardTypeID","db_type_name","dashboardTypeName","db_information","information","chaos_event_query_template","chaosEventQueryTemplate","chaos_verdict_query_template","chaosVerdictQueryTemplate","application_metadata_map","applicationMetadataMap","panel_groups","end_time","Math","round","Date","getTime","start_time","project_id","cluster_id","agentID","refresh_rate","variables","createDBInput","handleUpdateMutation","updateDBInput","onNext","CallbackToSetPanels","root","heading","description","editPanelsWizard"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { useMutation } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CREATE_DASHBOARD, UPDATE_DASHBOARD } from '../../../../../graphql';\nimport {\n  DashboardDetails,\n  PanelDetails,\n} from '../../../../../models/dashboardsData';\nimport {\n  CreateDashboardInput,\n  Panel,\n  PanelGroup,\n  PromQuery,\n  UpdateDashboardInput,\n  updatePanelGroupInput,\n} from '../../../../../models/graphql/dashboardsDetails';\nimport {\n  DEFAULT_DASHBOARD_REFRESH_RATE_STRING,\n  DEFAULT_RELATIVE_TIME_RANGE,\n} from '../../../../../pages/ApplicationDashboard/constants';\nimport useActions from '../../../../../redux/actions';\nimport * as AlertActions from '../../../../../redux/actions/alert';\nimport * as DashboardActions from '../../../../../redux/actions/dashboards';\nimport * as DataSourceActions from '../../../../../redux/actions/dataSource';\nimport { history } from '../../../../../redux/configureStore';\nimport {\n  getProjectID,\n  getProjectRole,\n} from '../../../../../utils/getSearchParams';\nimport EditPanelsWizard from './EditPanelsWizard';\nimport useStyles from './styles';\n\ninterface TuneTheQueriesProps {\n  isLoading: (status: boolean) => void;\n  configure: boolean;\n  activeEditPanelID: string;\n  dashboardVars: DashboardDetails;\n}\n\nconst TuneTheQueries = forwardRef(\n  (\n    {\n      isLoading,\n      configure,\n      activeEditPanelID,\n      dashboardVars,\n    }: TuneTheQueriesProps,\n    ref\n  ) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const projectID = getProjectID();\n    const projectRole = getProjectRole();\n    const alert = useActions(AlertActions);\n    const dashboard = useActions(DashboardActions);\n    const dataSource = useActions(DataSourceActions);\n    const [proceed, setProceed] = React.useState<boolean>(false);\n\n    const [updatedDashboardDetails, setUpdatedDashboardDetails] =\n      useState<DashboardDetails>({\n        selectedPanels: [],\n      });\n\n    const onDashboardLoadRoutine = async (dbID: string) => {\n      dashboard.selectDashboard({\n        selectedDashboardID: dbID,\n        refreshRate: 0,\n      });\n      dataSource.selectDataSource({\n        selectedDataSourceURL: '',\n        selectedDataSourceID: '',\n        selectedDataSourceName: '',\n      });\n      return true;\n    };\n\n    const [createDashboard] = useMutation<CreateDashboardInput>(\n      CREATE_DASHBOARD,\n      {\n        onCompleted: (data) => {\n          isLoading(false);\n          setProceed(true);\n          onDashboardLoadRoutine(data.createDashBoard?.db_id ?? '').then(() => {\n            history.push({\n              pathname: '/analytics/application-dashboard',\n              search: `?projectID=${projectID}&projectRole=${projectRole}`,\n            });\n          });\n        },\n        onError: () => {\n          alert.changeAlertState(true);\n          isLoading(false);\n          setProceed(false);\n        },\n      }\n    );\n    const [updateDashboard] = useMutation<UpdateDashboardInput>(\n      UPDATE_DASHBOARD,\n      {\n        onCompleted: () => {\n          isLoading(false);\n          setProceed(true);\n          onDashboardLoadRoutine(dashboardVars.id ?? '').then(() => {\n            history.push({\n              pathname: '/analytics/application-dashboard',\n              search: `?projectID=${projectID}&projectRole=${projectRole}`,\n            });\n          });\n        },\n        onError: () => {\n          alert.changeAlertState(true);\n          isLoading(false);\n          setProceed(false);\n        },\n      }\n    );\n\n    const getPanelGroups = () => {\n      if (configure === false) {\n        const panelGroups: PanelGroup[] = [];\n        updatedDashboardDetails.selectedPanels?.forEach((panelDetails) => {\n          const panelQueries: PromQuery[] = [];\n          panelDetails.prom_queries.forEach((query) => {\n            panelQueries.push({\n              queryid: query.queryid,\n              prom_query_name: query.prom_query_name,\n              legend: query.legend,\n              resolution: query.resolution,\n              minstep: query.minstep,\n              line: query.line,\n              close_area: query.close_area,\n            });\n          });\n          const panel: Panel = {\n            prom_queries: panelQueries,\n            panel_options: panelDetails.panel_options,\n            panel_name: panelDetails.panel_name,\n            y_axis_left: panelDetails.y_axis_left,\n            y_axis_right: panelDetails.y_axis_right,\n            x_axis_down: panelDetails.x_axis_down,\n            unit: panelDetails.unit,\n          };\n          let panelGroupFound = false;\n          panelGroups.forEach((panelGroup, index) => {\n            if (panelGroup.panel_group_name === panelDetails.panel_group_name) {\n              panelGroups[index].panels.push(panel);\n              panelGroupFound = true;\n            }\n          });\n          if (!panelGroupFound) {\n            panelGroups.push({\n              panel_group_name: panelDetails.panel_group_name ?? '',\n              panels: [panel],\n            });\n          }\n        });\n        return panelGroups;\n      }\n      const panelGroups: updatePanelGroupInput[] = [];\n      updatedDashboardDetails.selectedPanels?.forEach((panelDetails) => {\n        const panelQueries: PromQuery[] = [];\n        panelDetails.prom_queries.forEach((query) => {\n          panelQueries.push({\n            queryid: query.queryid,\n            prom_query_name: query.prom_query_name,\n            legend: query.legend,\n            resolution: query.resolution,\n            minstep: query.minstep,\n            line: query.line,\n            close_area: query.close_area,\n          });\n        });\n        const panel: Panel = {\n          panel_id: panelDetails.panel_id ?? '',\n          created_at: panelDetails.created_at ?? '',\n          panel_group_id: panelDetails.panel_group_id ?? '',\n          prom_queries: panelQueries,\n          panel_options: panelDetails.panel_options,\n          panel_name: panelDetails.panel_name,\n          y_axis_left: panelDetails.y_axis_left,\n          y_axis_right: panelDetails.y_axis_right,\n          x_axis_down: panelDetails.x_axis_down,\n          unit: panelDetails.unit,\n        };\n        let panelGroupFound = false;\n        panelGroups.forEach((panelGroup, index) => {\n          if (panelGroup.panel_group_name === panelDetails.panel_group_name) {\n            if (panelDetails.panel_group_id !== panelGroup.panel_group_id) {\n              panel.panel_group_id = panelGroup.panel_group_id;\n            }\n            panelGroups[index].panels.push(panel);\n            panelGroupFound = true;\n          }\n        });\n        if (!panelGroupFound) {\n          panelGroups.push({\n            panel_group_id: panelDetails.panel_group_id ?? '',\n            panel_group_name: panelDetails.panel_group_name ?? '',\n            panels: [panel],\n          });\n        }\n      });\n      return panelGroups;\n    };\n\n    const handleCreateMutation = () => {\n      isLoading(true);\n      const dashboardInput = {\n        ds_id: dashboardVars.dataSourceID ?? '',\n        db_name: dashboardVars.name ?? '',\n        db_type_id: dashboardVars.dashboardTypeID ?? '',\n        db_type_name: dashboardVars.dashboardTypeName ?? '',\n        db_information: dashboardVars.information ?? '',\n        chaos_event_query_template: dashboardVars.chaosEventQueryTemplate ?? '',\n        chaos_verdict_query_template:\n          dashboardVars.chaosVerdictQueryTemplate ?? '',\n        application_metadata_map: dashboardVars.applicationMetadataMap ?? [],\n        panel_groups: getPanelGroups(),\n        end_time: `${Math.round(new Date().getTime() / 1000)}`,\n        start_time: `${\n          Math.round(new Date().getTime() / 1000) - DEFAULT_RELATIVE_TIME_RANGE\n        }`,\n        project_id: projectID,\n        cluster_id: dashboardVars.agentID ?? '',\n        refresh_rate: DEFAULT_DASHBOARD_REFRESH_RATE_STRING,\n      };\n      createDashboard({\n        variables: { createDBInput: dashboardInput },\n      });\n    };\n\n    const handleUpdateMutation = () => {\n      isLoading(true);\n      const dashboardInput = {\n        db_id: dashboardVars.id ?? '',\n        ds_id: dashboardVars.dataSourceID ?? '',\n        db_name: dashboardVars.name ?? '',\n        db_type_id: dashboardVars.dashboardTypeID ?? '',\n        db_type_name: dashboardVars.dashboardTypeName ?? '',\n        db_information: dashboardVars.information ?? '',\n        chaos_event_query_template: dashboardVars.chaosEventQueryTemplate ?? '',\n        chaos_verdict_query_template:\n          dashboardVars.chaosVerdictQueryTemplate ?? '',\n        application_metadata_map: dashboardVars.applicationMetadataMap ?? [],\n        panel_groups: getPanelGroups(),\n        end_time: `${Math.round(new Date().getTime() / 1000)}`,\n        start_time: `${\n          Math.round(new Date().getTime() / 1000) - DEFAULT_RELATIVE_TIME_RANGE\n        }`,\n        refresh_rate: DEFAULT_DASHBOARD_REFRESH_RATE_STRING,\n        cluster_id: dashboardVars.agentID ?? '',\n      };\n      updateDashboard({\n        variables: { updateDBInput: dashboardInput },\n      });\n    };\n\n    function onNext() {\n      if (configure) {\n        handleUpdateMutation();\n      } else {\n        handleCreateMutation();\n      }\n      return proceed;\n    }\n\n    useImperativeHandle(ref, () => ({\n      onNext,\n    }));\n\n    const CallbackToSetPanels = (panels: PanelDetails[]) => {\n      setUpdatedDashboardDetails({ selectedPanels: panels });\n    };\n\n    return (\n      <div className={classes.root}>\n        <Typography className={classes.heading}>\n          {t('analyticsDashboard.applicationDashboards.tuneTheQueries.header')}\n        </Typography>\n        <Typography className={classes.description}>\n          {t(\n            'analyticsDashboard.applicationDashboards.tuneTheQueries.description'\n          )}\n        </Typography>\n        <div className={classes.editPanelsWizard}>\n          <EditPanelsWizard\n            configure={configure}\n            activeEditPanelID={activeEditPanelID}\n            dashboardVars={dashboardVars}\n            CallbackToSetPanels={CallbackToSetPanels}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default TuneTheQueries;\n"]},"metadata":{},"sourceType":"module"}