{"ast":null,"code":"import{Avatar,Paper,Typography}from'@material-ui/core';import CancelSharpIcon from'@material-ui/icons/CancelSharp';import CheckCircleSharpIcon from'@material-ui/icons/CheckCircleSharp';import TimelineSharpIcon from'@material-ui/icons/TimelineSharp';import moment from'moment';import React from'react';import useStyles from'./styles';var PopOver=function PopOver(_ref){var testsPassed=_ref.testsPassed,testsFailed=_ref.testsFailed,resilienceScore=_ref.resilienceScore,testDate=_ref.testDate,xLoc=_ref.xLoc,yLoc=_ref.yLoc;var styleProps={xLoc:xLoc,yLoc:yLoc};var classes=useStyles(styleProps);// Function to convert UNIX time in format of DD MMM YYY\nvar formatDate=function formatDate(date){var updated=new Date(parseInt(date,10)*1000).toString();var dateTime={date:moment(updated).format('DD MMM YYYY'),time:moment(updated).format('HH:mm')};return dateTime;};return/*#__PURE__*/React.createElement(\"div\",{className:classes.modalContainer},/*#__PURE__*/React.createElement(Paper,{elevation:3,className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.date},/*#__PURE__*/React.createElement(Typography,{className:classes.testDate},/*#__PURE__*/React.createElement(Avatar,{className:\"\".concat(classes.miniIcons,\" \").concat(classes.dateIcon)},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/calenderAnalytics.svg\",alt:\"Calender\"})),\"Tests date: \",formatDate(testDate).date,\" \",/*#__PURE__*/React.createElement(\"br\",null),\"Tests time: \",formatDate(testDate).time)),/*#__PURE__*/React.createElement(Typography,{className:classes.resilienceScore},/*#__PURE__*/React.createElement(Avatar,{className:\"\".concat(classes.miniIcons,\" \").concat(classes.resilienceScoreIcon)},/*#__PURE__*/React.createElement(TimelineSharpIcon,{className:classes.timeLineIcon})),\"Resilience score - \",resilienceScore.toFixed(2),\"%\"),/*#__PURE__*/React.createElement(Typography,{className:classes.testsPassed},/*#__PURE__*/React.createElement(Avatar,{className:\"\".concat(classes.miniIcons,\" \").concat(classes.passedIcon)},/*#__PURE__*/React.createElement(CheckCircleSharpIcon,{className:classes.checkMarkIcon})),\"Passed tests - \",testsPassed),/*#__PURE__*/React.createElement(Typography,{className:classes.testsFailed},/*#__PURE__*/React.createElement(Avatar,{className:\"\".concat(classes.miniIcons,\" \").concat(classes.failedIcon)},/*#__PURE__*/React.createElement(CancelSharpIcon,{className:classes.cancelMarkIcon})),\"Failed tests - \",testsFailed)));};export default PopOver;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/PopOver/index.tsx"],"names":["Avatar","Paper","Typography","CancelSharpIcon","CheckCircleSharpIcon","TimelineSharpIcon","moment","React","useStyles","PopOver","testsPassed","testsFailed","resilienceScore","testDate","xLoc","yLoc","styleProps","classes","formatDate","date","updated","Date","parseInt","toString","dateTime","format","time","modalContainer","root","miniIcons","dateIcon","resilienceScoreIcon","timeLineIcon","toFixed","passedIcon","checkMarkIcon","failedIcon","cancelMarkIcon"],"mappings":"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","sourcesContent":["import { Avatar, Paper, Typography } from '@material-ui/core';\nimport CancelSharpIcon from '@material-ui/icons/CancelSharp';\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\nimport TimelineSharpIcon from '@material-ui/icons/TimelineSharp';\nimport moment from 'moment';\nimport React from 'react';\nimport useStyles from './styles';\n\ninterface PopOverProps {\n  testsPassed: number;\n  testsFailed: number;\n  resilienceScore: number;\n  testDate: string;\n  xLoc: number;\n  yLoc: number;\n}\n\nconst PopOver: React.FC<PopOverProps> = ({\n  testsPassed,\n  testsFailed,\n  resilienceScore,\n  testDate,\n  xLoc,\n  yLoc,\n}) => {\n  const styleProps = { xLoc, yLoc };\n  const classes = useStyles(styleProps);\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const dateTime = {\n      date: moment(updated).format('DD MMM YYYY'),\n      time: moment(updated).format('HH:mm'),\n    };\n    return dateTime;\n  };\n\n  return (\n    <div className={classes.modalContainer}>\n      <Paper elevation={3} className={classes.root}>\n        <div className={classes.date}>\n          <Typography className={classes.testDate}>\n            <Avatar className={`${classes.miniIcons} ${classes.dateIcon}`}>\n              <img src=\"/icons/calenderAnalytics.svg\" alt=\"Calender\" />\n            </Avatar>\n            Tests date: {formatDate(testDate).date} <br />\n            Tests time: {formatDate(testDate).time}\n          </Typography>\n        </div>\n        <Typography className={classes.resilienceScore}>\n          <Avatar\n            className={`${classes.miniIcons} ${classes.resilienceScoreIcon}`}\n          >\n            <TimelineSharpIcon className={classes.timeLineIcon} />\n          </Avatar>\n          Resilience score - {resilienceScore.toFixed(2)}%\n        </Typography>\n        <Typography className={classes.testsPassed}>\n          <Avatar className={`${classes.miniIcons} ${classes.passedIcon}`}>\n            <CheckCircleSharpIcon className={classes.checkMarkIcon} />\n          </Avatar>\n          Passed tests - {testsPassed}\n        </Typography>\n        <Typography className={classes.testsFailed}>\n          <Avatar className={`${classes.miniIcons} ${classes.failedIcon}`}>\n            <CancelSharpIcon className={classes.cancelMarkIcon} />\n          </Avatar>\n          Failed tests - {testsFailed}\n        </Typography>\n      </Paper>\n    </div>\n  );\n};\n\nexport default PopOver;\n"]},"metadata":{},"sourceType":"module"}