{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useMutation,useQuery}from'@apollo/client';import Typography from'@material-ui/core/Typography';import EditIcon from'@material-ui/icons/Edit';import cronstrue from'cronstrue';import{ButtonFilled,ButtonOutlined,Modal}from'litmus-ui';import localforage from'localforage';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import{useSelector}from'react-redux';import{useParams}from'react-router-dom';import YAML from'yaml';import AdjustedWeights from'../../components/AdjustedWeights';import BackButton from'../../components/Button/BackButton';import Loader from'../../components/Loader';import YamlEditor from'../../components/YamlEditor/Editor';import{parseYamlValidations}from'../../components/YamlEditor/Validations';import Scaffold from'../../containers/layouts/Scaffold';import{UPDATE_SCHEDULE}from'../../graphql/mutations';import{WORKFLOW_LIST_DETAILS}from'../../graphql/queries';import useActions from'../../redux/actions';import*as TabActions from'../../redux/actions/tabs';import*as TemplateSelectionActions from'../../redux/actions/template';import*as WorkflowActions from'../../redux/actions/workflow';import{history}from'../../redux/configureStore';import{getProjectID,getProjectRole}from'../../utils/getSearchParams';import{fetchWorkflowNameFromManifest}from'../../utils/yamlUtils';import useStyles from'./styles';var EditSchedule=function EditSchedule(){var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState({name:'',description:''}),_useState2=_slicedToArray(_useState,2),workflow=_useState2[0],setWorkflow=_useState2[1];var _useState3=useState([{experimentName:'',weight:0}]),_useState4=_slicedToArray(_useState3,2),weights=_useState4[0],setWeights=_useState4[1];var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),finishModalOpen=_useState6[0],setFinishModalOpen=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),errorModal=_useState8[0],setErrorModal=_useState8[1];var template=useActions(TemplateSelectionActions);var workflowData=useSelector(function(state){return state.workflowData;});var workflowAction=useActions(WorkflowActions);// Get Parameters from URL\nvar paramData=useParams();var projectID=getProjectID();var userRole=getProjectRole();var _useQuery=useQuery(WORKFLOW_LIST_DETAILS,{variables:{workflowInput:{project_id:projectID,filter:{workflow_name:paramData.workflowName}}},fetchPolicy:'cache-and-network'}),data=_useQuery.data,loading=_useQuery.loading;var manifest=useSelector(function(state){return state.workflowManifest.manifest;});var wfDetails=data&&data.ListWorkflow.workflows[0];var doc=new YAML.Document();var w=[];var cronSyntax=workflowData.cronSyntax,clusterid=workflowData.clusterid,clustername=workflowData.clustername;var _useMutation=useMutation(UPDATE_SCHEDULE,{onCompleted:function onCompleted(){setFinishModalOpen(true);}}),_useMutation2=_slicedToArray(_useMutation,2),createChaosWorkFlow=_useMutation2[0],workflowError=_useMutation2[1].error;var handleMutation=function handleMutation(){if(workflow.name.length!==0&&workflow.description.length!==0&&weights.length!==0){var weightData=[];weights.forEach(function(data){weightData.push({experiment_name:data.experimentName,weightage:data.weight});});/* JSON.stringify takes 3 parameters [object to be converted,\n      a function to alter the conversion, spaces to be shown in final result for indentation ] */var yml=YAML.parse(manifest);var yamlJson=JSON.stringify(yml,null,2);// Converted to Stringified JSON\nvar chaosWorkFlowInputs={workflow_id:wfDetails===null||wfDetails===void 0?void 0:wfDetails.workflow_id,workflow_manifest:yamlJson,cronSyntax:cronSyntax,workflow_name:fetchWorkflowNameFromManifest(manifest),workflow_description:workflow.description,isCustomWorkflow:false,weightages:weightData,project_id:projectID,cluster_id:clusterid};createChaosWorkFlow({variables:{ChaosWorkFlowInput:chaosWorkFlowInputs}});}};useEffect(function(){localforage.getItem('editSchedule').then(function(isCronEdited){if(wfDetails!==undefined){for(var i=0;i<(wfDetails===null||wfDetails===void 0?void 0:wfDetails.weightages.length);i++){w.push({experimentName:wfDetails===null||wfDetails===void 0?void 0:wfDetails.weightages[i].experiment_name,weight:wfDetails===null||wfDetails===void 0?void 0:wfDetails.weightages[i].weightage});}doc.contents=JSON.parse(wfDetails===null||wfDetails===void 0?void 0:wfDetails.workflow_manifest);workflowAction.setWorkflowManifest({manifest:isCronEdited===null?doc.toString():manifest});setWorkflow({name:wfDetails===null||wfDetails===void 0?void 0:wfDetails.workflow_name,description:wfDetails===null||wfDetails===void 0?void 0:wfDetails.workflow_description});localforage.setItem('weights',w);workflowAction.setWorkflowDetails({workflow_id:wfDetails===null||wfDetails===void 0?void 0:wfDetails.workflow_id,clusterid:wfDetails===null||wfDetails===void 0?void 0:wfDetails.cluster_id,cronSyntax:isCronEdited===null?wfDetails===null||wfDetails===void 0?void 0:wfDetails.cronSyntax:cronSyntax,scheduleType:{scheduleOnce:(wfDetails===null||wfDetails===void 0?void 0:wfDetails.cronSyntax)===''?'now':'recurringSchedule',recurringSchedule:''},scheduleInput:{hour_interval:0,day:1,weekday:'Monday',time:new Date(),date:new Date()}});}});template.selectTemplate({selectTemplateID:0,isDisable:false});setWeights(w);},[data]);var tabs=useActions(TabActions);var _React$useState3=React.useState(\"\".concat(t('createWorkflow.verifyCommit.codeIsFine'))),_React$useState4=_slicedToArray(_React$useState3,2),yamlStatus=_React$useState4[0],setYamlStatus=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),modified=_React$useState6[0],setModified=_React$useState6[1];var handleEditOpen=function handleEditOpen(){setModified(false);setOpen(true);};var handleEditClose=function handleEditClose(){setModified(true);setOpen(false);};var handleNext=function handleNext(){handleMutation();};useEffect(function(){var editorValidations=parseYamlValidations(manifest,classes);var stateObject={markers:editorValidations.markers,annotations:editorValidations.annotations};if(stateObject.annotations.length>0){setYamlStatus(\"\".concat(t('createWorkflow.verifyCommit.errYaml')));}else{setYamlStatus(\"\".concat(t('createWorkflow.verifyCommit.codeIsFine')));}},[modified]);var handleFinishModal=function handleFinishModal(){history.push({pathname:\"/workflows\",search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(userRole)});setFinishModalOpen(false);};var handleErrorModalClose=function handleErrorModalClose(){setErrorModal(false);};return/*#__PURE__*/React.createElement(Scaffold,null,loading||!manifest?/*#__PURE__*/React.createElement(Loader,null):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BackButton,null),/*#__PURE__*/React.createElement(Typography,{className:classes.title},t('editSchedule.title')),/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.innerContainer},/*#__PURE__*/React.createElement(Typography,{className:classes.sumText},t('createWorkflow.verifyCommit.summary.header')),/*#__PURE__*/React.createElement(\"div\",{className:classes.outerSum},/*#__PURE__*/React.createElement(\"div\",{className:classes.summaryDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.innerSumDiv},/*#__PURE__*/React.createElement(Typography,{className:classes.col1},t('createWorkflow.verifyCommit.summary.workflowName'),\":\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.col2,\"data-cy\":\"WorkflowName\"},/*#__PURE__*/React.createElement(Typography,null,fetchWorkflowNameFromManifest(manifest)))),/*#__PURE__*/React.createElement(\"div\",{className:classes.summaryDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.innerSumDiv},/*#__PURE__*/React.createElement(Typography,{className:classes.col1},t('createWorkflow.verifyCommit.summary.clustername'),\":\")),/*#__PURE__*/React.createElement(Typography,{className:classes.schCol2},clustername)),/*#__PURE__*/React.createElement(\"div\",{className:classes.summaryDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.innerSumDiv},/*#__PURE__*/React.createElement(Typography,{className:classes.col1},t('createWorkflow.verifyCommit.summary.desc'),\":\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.col2},/*#__PURE__*/React.createElement(Typography,null,workflow.description))),/*#__PURE__*/React.createElement(\"div\",{className:classes.summaryDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.innerSumDiv},/*#__PURE__*/React.createElement(Typography,{className:classes.col1},t('createWorkflow.verifyCommit.summary.schedule'),\":\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.schCol2},cronSyntax===''?/*#__PURE__*/React.createElement(Typography,null,t('createWorkflow.verifyCommit.summary.schedulingNow')):/*#__PURE__*/React.createElement(Typography,null,cronstrue.toString(cronSyntax)),/*#__PURE__*/React.createElement(ButtonOutlined,{className:classes.editButton,onClick:function onClick(){return history.push({pathname:\"/workflows/schedule/\".concat(projectID,\"/\").concat(fetchWorkflowNameFromManifest(manifest),\"/set\"),search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(userRole)});}},/*#__PURE__*/React.createElement(EditIcon,{className:classes.editIcon,\"data-cy\":\"edit\"}),t('editSchedule.edit')))),/*#__PURE__*/React.createElement(\"div\",{className:classes.summaryDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.innerSumDiv},/*#__PURE__*/React.createElement(Typography,{className:classes.col1},t('createWorkflow.verifyCommit.summary.adjustedWeights'),\":\")),weights.length===0?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:classes.col2},t('createWorkflow.verifyCommit.error'))):/*#__PURE__*/React.createElement(\"div\",{className:classes.adjWeights},/*#__PURE__*/React.createElement(\"div\",{className:classes.progress},weights.map(function(Test){return/*#__PURE__*/React.createElement(AdjustedWeights,{key:Test.weight,testName:\"\".concat(Test.experimentName,\" \").concat(t('createWorkflow.verifyCommit.test')),testValue:Test.weight,spacing:false,icon:false});})))),/*#__PURE__*/React.createElement(\"div\",{className:classes.summaryDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.innerSumDiv},/*#__PURE__*/React.createElement(Typography,{className:classes.col1},t('createWorkflow.verifyCommit.YAML'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.yamlFlex},weights.length===0?/*#__PURE__*/React.createElement(Typography,{className:classes.spacingHorizontal},t('createWorkflow.verifyCommit.errYaml')):/*#__PURE__*/React.createElement(Typography,null,/*#__PURE__*/React.createElement(\"b\",null,yamlStatus),/*#__PURE__*/React.createElement(\"span\",{className:classes.spacingHorizontal},t('createWorkflow.verifyCommit.youCanMoveOn'))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(ButtonFilled,{className:classes.verifyYAMLButton,onClick:handleEditOpen},t('createWorkflow.verifyCommit.button.viewYaml'))))))),/*#__PURE__*/React.createElement(\"div\",{className:classes.buttonDiv,\"aria-label\":\"buttons\"},/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){history.push({pathname:\"/workflows/\",search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(userRole)});}},t('editSchedule.cancel')),/*#__PURE__*/React.createElement(ButtonFilled,{onClick:function onClick(){return handleNext();}},t('editSchedule.save'))),/*#__PURE__*/React.createElement(Modal,{open:open,onClose:handleEditClose,width:\"60%\",modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:handleEditClose,className:classes.closeBtn},\"\\u2715\")},/*#__PURE__*/React.createElement(YamlEditor,{content:manifest,filename:workflow.name,readOnly:true})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{\"data-cy\":\"FinishModal\",open:finishModalOpen,onClose:handleFinishModal,width:\"60%\",\"aria-labelledby\":\"simple-modal-title\",\"aria-describedby\":\"simple-modal-description\",modalActions:/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"GoToWorkflowButton\"},/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:handleFinishModal},\"\\u2715\"))},/*#__PURE__*/React.createElement(\"div\",{className:classes.modal},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/finish.svg\",alt:\"mark\"}),/*#__PURE__*/React.createElement(\"div\",{className:classes.heading},t('editSchedule.theSchedule'),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:classes.successful},workflow.name),\",\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:classes.bold},t('editSchedule.successfullyCreated'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.headWorkflow},t('workflowStepper.congratulationsSub1'),\" \",/*#__PURE__*/React.createElement(\"br\",null),' ',t('workflowStepper.congratulationsSub2')),/*#__PURE__*/React.createElement(\"div\",{className:classes.button},/*#__PURE__*/React.createElement(ButtonFilled,{\"data-cy\":\"selectFinish\",onClick:function onClick(){handleFinishModal();tabs.changeWorkflowsTabs(0);history.push({pathname:'/workflows',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(userRole)});}},/*#__PURE__*/React.createElement(\"div\",null,t('workflowStepper.workflowBtn')))))),/*#__PURE__*/React.createElement(Modal,{open:errorModal,onClose:handleErrorModalClose,width:\"60%\",modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:handleErrorModalClose},\"\\u2715\")},/*#__PURE__*/React.createElement(\"div\",{className:classes.modal},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/red-cross.svg\",alt:\"mark\"}),/*#__PURE__*/React.createElement(\"div\",{className:classes.heading},/*#__PURE__*/React.createElement(\"strong\",null,t('workflowStepper.workflowFailed'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.headWorkflow},/*#__PURE__*/React.createElement(Typography,null,t('workflowStepper.error'),\" : \",workflowError===null||workflowError===void 0?void 0:workflowError.message)),/*#__PURE__*/React.createElement(\"div\",{className:classes.button},/*#__PURE__*/React.createElement(ButtonFilled,{\"data-cy\":\"selectFinish\",onClick:function onClick(){setErrorModal(false);}},/*#__PURE__*/React.createElement(\"div\",null,t('workflowStepper.back')))))))));};export default EditSchedule;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/EditSchedule/index.tsx"],"names":["useMutation","useQuery","Typography","EditIcon","cronstrue","ButtonFilled","ButtonOutlined","Modal","localforage","React","useEffect","useState","useTranslation","useSelector","useParams","YAML","AdjustedWeights","BackButton","Loader","YamlEditor","parseYamlValidations","Scaffold","UPDATE_SCHEDULE","WORKFLOW_LIST_DETAILS","useActions","TabActions","TemplateSelectionActions","WorkflowActions","history","getProjectID","getProjectRole","fetchWorkflowNameFromManifest","useStyles","EditSchedule","classes","t","name","description","workflow","setWorkflow","experimentName","weight","weights","setWeights","open","setOpen","finishModalOpen","setFinishModalOpen","errorModal","setErrorModal","template","workflowData","state","workflowAction","paramData","projectID","userRole","variables","workflowInput","project_id","filter","workflow_name","workflowName","fetchPolicy","data","loading","manifest","workflowManifest","wfDetails","ListWorkflow","workflows","doc","Document","w","cronSyntax","clusterid","clustername","onCompleted","createChaosWorkFlow","workflowError","error","handleMutation","length","weightData","forEach","push","experiment_name","weightage","yml","parse","yamlJson","JSON","stringify","chaosWorkFlowInputs","workflow_id","workflow_manifest","workflow_description","isCustomWorkflow","weightages","cluster_id","ChaosWorkFlowInput","getItem","then","isCronEdited","undefined","i","contents","setWorkflowManifest","toString","setItem","setWorkflowDetails","scheduleType","scheduleOnce","recurringSchedule","scheduleInput","hour_interval","day","weekday","time","Date","date","selectTemplate","selectTemplateID","isDisable","tabs","yamlStatus","setYamlStatus","modified","setModified","handleEditOpen","handleEditClose","handleNext","editorValidations","stateObject","markers","annotations","handleFinishModal","pathname","search","handleErrorModalClose","title","root","innerContainer","sumText","outerSum","summaryDiv","innerSumDiv","col1","col2","schCol2","editButton","editIcon","adjWeights","progress","map","Test","yamlFlex","spacingHorizontal","verifyYAMLButton","buttonDiv","closeBtn","modal","heading","successful","bold","headWorkflow","button","changeWorkflowsTabs","message"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport cronstrue from 'cronstrue';\nimport { ButtonFilled, ButtonOutlined, Modal } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport YAML from 'yaml';\nimport AdjustedWeights from '../../components/AdjustedWeights';\nimport BackButton from '../../components/Button/BackButton';\nimport Loader from '../../components/Loader';\nimport YamlEditor from '../../components/YamlEditor/Editor';\nimport { parseYamlValidations } from '../../components/YamlEditor/Validations';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { UPDATE_SCHEDULE } from '../../graphql/mutations';\nimport { WORKFLOW_LIST_DETAILS } from '../../graphql/queries';\nimport {\n  CreateWorkFlowInput,\n  UpdateWorkflowResponse,\n  WeightMap,\n} from '../../models/graphql/createWorkflowData';\nimport {\n  ListWorkflowsInput,\n  ScheduledWorkflows,\n} from '../../models/graphql/workflowListData';\nimport { experimentMap, WorkflowData } from '../../models/redux/workflow';\nimport useActions from '../../redux/actions';\nimport * as TabActions from '../../redux/actions/tabs';\nimport * as TemplateSelectionActions from '../../redux/actions/template';\nimport * as WorkflowActions from '../../redux/actions/workflow';\nimport { history } from '../../redux/configureStore';\nimport { RootState } from '../../redux/reducers';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport { fetchWorkflowNameFromManifest } from '../../utils/yamlUtils';\nimport useStyles from './styles';\n\ninterface URLParams {\n  workflowName: string;\n  scheduleProjectID: string;\n}\n\ninterface Weights {\n  experimentName: string;\n  weight: number;\n}\n\ninterface WorkflowProps {\n  name: string;\n  description: string;\n}\n\nconst EditSchedule: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [workflow, setWorkflow] = useState<WorkflowProps>({\n    name: '',\n    description: '',\n  });\n  const [weights, setWeights] = useState<experimentMap[]>([\n    {\n      experimentName: '',\n      weight: 0,\n    },\n  ]);\n\n  const [open, setOpen] = React.useState(false);\n  const [finishModalOpen, setFinishModalOpen] = useState(false);\n  const [errorModal, setErrorModal] = useState(false);\n\n  const template = useActions(TemplateSelectionActions);\n  const workflowData: WorkflowData = useSelector(\n    (state: RootState) => state.workflowData\n  );\n  const workflowAction = useActions(WorkflowActions);\n  // Get Parameters from URL\n  const paramData: URLParams = useParams();\n  const projectID = getProjectID();\n  const userRole = getProjectRole();\n\n  const { data, loading } = useQuery<ScheduledWorkflows, ListWorkflowsInput>(\n    WORKFLOW_LIST_DETAILS,\n    {\n      variables: {\n        workflowInput: {\n          project_id: projectID,\n          filter: {\n            workflow_name: paramData.workflowName,\n          },\n        },\n      },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  const manifest = useSelector(\n    (state: RootState) => state.workflowManifest.manifest\n  );\n\n  const wfDetails = data && data.ListWorkflow.workflows[0];\n  const doc = new YAML.Document();\n  const w: Weights[] = [];\n  const { cronSyntax, clusterid, clustername } = workflowData;\n\n  const [createChaosWorkFlow, { error: workflowError }] = useMutation<\n    UpdateWorkflowResponse,\n    CreateWorkFlowInput\n  >(UPDATE_SCHEDULE, {\n    onCompleted: () => {\n      setFinishModalOpen(true);\n    },\n  });\n\n  const handleMutation = () => {\n    if (\n      workflow.name.length !== 0 &&\n      workflow.description.length !== 0 &&\n      weights.length !== 0\n    ) {\n      const weightData: WeightMap[] = [];\n\n      weights.forEach((data) => {\n        weightData.push({\n          experiment_name: data.experimentName,\n          weightage: data.weight,\n        });\n      });\n\n      /* JSON.stringify takes 3 parameters [object to be converted,\n      a function to alter the conversion, spaces to be shown in final result for indentation ] */\n      const yml = YAML.parse(manifest);\n      const yamlJson = JSON.stringify(yml, null, 2); // Converted to Stringified JSON\n\n      const chaosWorkFlowInputs = {\n        workflow_id: wfDetails?.workflow_id,\n        workflow_manifest: yamlJson,\n        cronSyntax,\n        workflow_name: fetchWorkflowNameFromManifest(manifest),\n        workflow_description: workflow.description,\n        isCustomWorkflow: false,\n        weightages: weightData,\n        project_id: projectID,\n        cluster_id: clusterid,\n      };\n\n      createChaosWorkFlow({\n        variables: { ChaosWorkFlowInput: chaosWorkFlowInputs },\n      });\n    }\n  };\n\n  useEffect(() => {\n    localforage.getItem('editSchedule').then((isCronEdited) => {\n      if (wfDetails !== undefined) {\n        for (let i = 0; i < wfDetails?.weightages.length; i++) {\n          w.push({\n            experimentName: wfDetails?.weightages[i].experiment_name,\n            weight: wfDetails?.weightages[i].weightage,\n          });\n        }\n        doc.contents = JSON.parse(wfDetails?.workflow_manifest);\n        workflowAction.setWorkflowManifest({\n          manifest: isCronEdited === null ? doc.toString() : manifest,\n        });\n        setWorkflow({\n          name: wfDetails?.workflow_name,\n          description: wfDetails?.workflow_description,\n        });\n        localforage.setItem('weights', w);\n        workflowAction.setWorkflowDetails({\n          workflow_id: wfDetails?.workflow_id,\n          clusterid: wfDetails?.cluster_id,\n          cronSyntax:\n            isCronEdited === null ? wfDetails?.cronSyntax : cronSyntax,\n          scheduleType: {\n            scheduleOnce:\n              wfDetails?.cronSyntax === '' ? 'now' : 'recurringSchedule',\n            recurringSchedule: '',\n          },\n          scheduleInput: {\n            hour_interval: 0,\n            day: 1,\n            weekday: 'Monday',\n            time: new Date(),\n            date: new Date(),\n          },\n        });\n      }\n    });\n\n    template.selectTemplate({ selectTemplateID: 0, isDisable: false });\n    setWeights(w);\n  }, [data]);\n\n  const tabs = useActions(TabActions);\n\n  const [yamlStatus, setYamlStatus] = React.useState(\n    `${t('createWorkflow.verifyCommit.codeIsFine')}`\n  );\n  const [modified, setModified] = React.useState(false);\n\n  const handleEditOpen = () => {\n    setModified(false);\n    setOpen(true);\n  };\n\n  const handleEditClose = () => {\n    setModified(true);\n    setOpen(false);\n  };\n\n  const handleNext = () => {\n    handleMutation();\n  };\n\n  useEffect(() => {\n    const editorValidations = parseYamlValidations(manifest, classes);\n    const stateObject = {\n      markers: editorValidations.markers,\n      annotations: editorValidations.annotations,\n    };\n    if (stateObject.annotations.length > 0) {\n      setYamlStatus(`${t('createWorkflow.verifyCommit.errYaml')}`);\n    } else {\n      setYamlStatus(`${t('createWorkflow.verifyCommit.codeIsFine')}`);\n    }\n  }, [modified]);\n\n  const handleFinishModal = () => {\n    history.push({\n      pathname: `/workflows`,\n      search: `?projectID=${projectID}&projectRole=${userRole}`,\n    });\n    setFinishModalOpen(false);\n  };\n\n  const handleErrorModalClose = () => {\n    setErrorModal(false);\n  };\n\n  return (\n    <Scaffold>\n      {loading || !manifest ? (\n        <Loader />\n      ) : (\n        <>\n          <BackButton />\n          <Typography className={classes.title}>\n            {t('editSchedule.title')}\n          </Typography>\n          <div className={classes.root}>\n            <div className={classes.innerContainer}>\n              <Typography className={classes.sumText}>\n                {t('createWorkflow.verifyCommit.summary.header')}\n              </Typography>\n\n              <div className={classes.outerSum}>\n                <div className={classes.summaryDiv}>\n                  <div className={classes.innerSumDiv}>\n                    <Typography className={classes.col1}>\n                      {t('createWorkflow.verifyCommit.summary.workflowName')}:\n                    </Typography>\n                  </div>\n                  <div className={classes.col2} data-cy=\"WorkflowName\">\n                    <Typography>\n                      {fetchWorkflowNameFromManifest(manifest)}\n                    </Typography>\n                  </div>\n                </div>\n\n                <div className={classes.summaryDiv}>\n                  <div className={classes.innerSumDiv}>\n                    <Typography className={classes.col1}>\n                      {t('createWorkflow.verifyCommit.summary.clustername')}:\n                    </Typography>\n                  </div>\n                  <Typography className={classes.schCol2}>\n                    {clustername}\n                  </Typography>\n                </div>\n\n                <div className={classes.summaryDiv}>\n                  <div className={classes.innerSumDiv}>\n                    <Typography className={classes.col1}>\n                      {t('createWorkflow.verifyCommit.summary.desc')}:\n                    </Typography>\n                  </div>\n                  <div className={classes.col2}>\n                    <Typography>{workflow.description}</Typography>\n                  </div>\n                </div>\n                <div className={classes.summaryDiv}>\n                  <div className={classes.innerSumDiv}>\n                    <Typography className={classes.col1}>\n                      {t('createWorkflow.verifyCommit.summary.schedule')}:\n                    </Typography>\n                  </div>\n                  <div className={classes.schCol2}>\n                    {cronSyntax === '' ? (\n                      <Typography>\n                        {t('createWorkflow.verifyCommit.summary.schedulingNow')}\n                      </Typography>\n                    ) : (\n                      <Typography>{cronstrue.toString(cronSyntax)}</Typography>\n                    )}\n\n                    <ButtonOutlined\n                      className={classes.editButton}\n                      onClick={() =>\n                        history.push({\n                          pathname: `/workflows/schedule/${projectID}/${fetchWorkflowNameFromManifest(\n                            manifest\n                          )}/set`,\n                          search: `?projectID=${projectID}&projectRole=${userRole}`,\n                        })\n                      }\n                    >\n                      <EditIcon className={classes.editIcon} data-cy=\"edit\" />\n                      {t('editSchedule.edit')}\n                    </ButtonOutlined>\n                  </div>\n                </div>\n                <div className={classes.summaryDiv}>\n                  <div className={classes.innerSumDiv}>\n                    <Typography className={classes.col1}>\n                      {t('createWorkflow.verifyCommit.summary.adjustedWeights')}\n                      :\n                    </Typography>\n                  </div>\n                  {weights.length === 0 ? (\n                    <div>\n                      <Typography className={classes.col2}>\n                        {t('createWorkflow.verifyCommit.error')}\n                      </Typography>\n                    </div>\n                  ) : (\n                    <div className={classes.adjWeights}>\n                      <div className={classes.progress}>\n                        {weights.map((Test) => (\n                          <AdjustedWeights\n                            key={Test.weight}\n                            testName={`${Test.experimentName} ${t(\n                              'createWorkflow.verifyCommit.test'\n                            )}`}\n                            testValue={Test.weight}\n                            spacing={false}\n                            icon={false}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className={classes.summaryDiv}>\n                  <div className={classes.innerSumDiv}>\n                    <Typography className={classes.col1}>\n                      {t('createWorkflow.verifyCommit.YAML')}\n                    </Typography>\n                  </div>\n                  <div className={classes.yamlFlex}>\n                    {weights.length === 0 ? (\n                      <Typography className={classes.spacingHorizontal}>\n                        {t('createWorkflow.verifyCommit.errYaml')}\n                      </Typography>\n                    ) : (\n                      <Typography>\n                        <b>{yamlStatus}</b>\n                        <span className={classes.spacingHorizontal}>\n                          {t('createWorkflow.verifyCommit.youCanMoveOn')}\n                        </span>\n                      </Typography>\n                    )}\n                    <br />\n                    <ButtonFilled\n                      className={classes.verifyYAMLButton}\n                      onClick={handleEditOpen}\n                    >\n                      {t('createWorkflow.verifyCommit.button.viewYaml')}\n                    </ButtonFilled>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Cancel and Save Button */}\n          <div className={classes.buttonDiv} aria-label=\"buttons\">\n            <ButtonOutlined\n              onClick={() => {\n                history.push({\n                  pathname: `/workflows/`,\n                  search: `?projectID=${projectID}&projectRole=${userRole}`,\n                });\n              }}\n            >\n              {t('editSchedule.cancel')}\n            </ButtonOutlined>\n            <ButtonFilled onClick={() => handleNext()}>\n              {t('editSchedule.save')}\n            </ButtonFilled>\n          </div>\n\n          <Modal\n            open={open}\n            onClose={handleEditClose}\n            width=\"60%\"\n            modalActions={\n              <ButtonOutlined\n                onClick={handleEditClose}\n                className={classes.closeBtn}\n              >\n                &#x2715;\n              </ButtonOutlined>\n            }\n          >\n            <YamlEditor content={manifest} filename={workflow.name} readOnly />\n          </Modal>\n\n          {/* Finish Modal */}\n          <div>\n            <Modal\n              data-cy=\"FinishModal\"\n              open={finishModalOpen}\n              onClose={handleFinishModal}\n              width=\"60%\"\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              modalActions={\n                <div data-cy=\"GoToWorkflowButton\">\n                  <ButtonOutlined onClick={handleFinishModal}>\n                    &#x2715;\n                  </ButtonOutlined>\n                </div>\n              }\n            >\n              <div className={classes.modal}>\n                <img src=\"/icons/finish.svg\" alt=\"mark\" />\n                <div className={classes.heading}>\n                  {t('editSchedule.theSchedule')}\n                  <br />\n                  <span className={classes.successful}>{workflow.name}</span>,\n                  <br />\n                  <span className={classes.bold}>\n                    {t('editSchedule.successfullyCreated')}\n                  </span>\n                </div>\n                <div className={classes.headWorkflow}>\n                  {t('workflowStepper.congratulationsSub1')} <br />{' '}\n                  {t('workflowStepper.congratulationsSub2')}\n                </div>\n                <div className={classes.button}>\n                  <ButtonFilled\n                    data-cy=\"selectFinish\"\n                    onClick={() => {\n                      handleFinishModal();\n                      tabs.changeWorkflowsTabs(0);\n                      history.push({\n                        pathname: '/workflows',\n                        search: `?projectID=${projectID}&projectRole=${userRole}`,\n                      });\n                    }}\n                  >\n                    <div>{t('workflowStepper.workflowBtn')}</div>\n                  </ButtonFilled>\n                </div>\n              </div>\n            </Modal>\n            <Modal\n              open={errorModal}\n              onClose={handleErrorModalClose}\n              width=\"60%\"\n              modalActions={\n                <ButtonOutlined onClick={handleErrorModalClose}>\n                  &#x2715;\n                </ButtonOutlined>\n              }\n            >\n              <div className={classes.modal}>\n                <img src=\"/icons/red-cross.svg\" alt=\"mark\" />\n                <div className={classes.heading}>\n                  <strong>{t('workflowStepper.workflowFailed')}</strong>\n                </div>\n                <div className={classes.headWorkflow}>\n                  <Typography>\n                    {t('workflowStepper.error')} : {workflowError?.message}\n                  </Typography>\n                </div>\n                <div className={classes.button}>\n                  <ButtonFilled\n                    data-cy=\"selectFinish\"\n                    onClick={() => {\n                      setErrorModal(false);\n                    }}\n                  >\n                    <div>{t('workflowStepper.back')}</div>\n                  </ButtonFilled>\n                </div>\n              </div>\n            </Modal>\n          </div>\n        </>\n      )}\n    </Scaffold>\n  );\n};\n\nexport default EditSchedule;\n"]},"metadata":{},"sourceType":"module"}