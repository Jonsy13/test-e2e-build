{"ast":null,"code":"import _defineProperty from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/DataSources/Forms/prometheus.tsx\";\n\n/* eslint-disable no-unused-expressions */\nimport { useQuery } from '@apollo/client';\nimport { FormControlLabel, FormGroup, Typography } from '@material-ui/core';\nimport { InputField, RadioButton, TextButton } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LIST_DATASOURCE } from '../../../../graphql';\nimport { ReactComponent as ExternalLinkIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/externalLink.svg\";\nimport { ReactComponent as DocsIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/prometheusDocs.svg\";\nimport { getProjectID } from '../../../../utils/getSearchParams';\nimport { isValidWebUrl, validateTextEmpty, validateTimeInSeconds } from '../../../../utils/validate';\nimport useStyles from './styles';\n\nvar ConfigurePrometheus = function ConfigurePrometheus(_ref) {\n  var configure = _ref.configure,\n      dataSourceID = _ref.dataSourceID,\n      page = _ref.page,\n      CallbackToSetVars = _ref.CallbackToSetVars;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var projectID = getProjectID();\n\n  var _useState = useState({\n    id: '',\n    name: '',\n    dataSourceType: 'Prometheus',\n    url: 'http://localhost:9090',\n    access: 'Server (Default)',\n    basicAuth: false,\n    username: '',\n    password: '',\n    noAuth: true,\n    withCredentials: false,\n    tlsClientAuth: false,\n    withCACert: false,\n    scrapeInterval: '15s',\n    queryTimeout: '30s',\n    httpMethod: 'POST'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataSourceDetails = _useState2[0],\n      setDataSourceDetails = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      update = _useState4[0],\n      setUpdate = _useState4[1]; // Apollo query to get the datasource data\n\n\n  var _useQuery = useQuery(LIST_DATASOURCE, {\n    variables: {\n      projectID: projectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery.data;\n\n  var nameChangeHandler = function nameChangeHandler(event) {\n    setDataSourceDetails(_objectSpread(_objectSpread({}, dataSourceDetails), {}, {\n      name: event.target.value\n    }));\n    setUpdate(true);\n  };\n\n  var urlChangeHandler = function urlChangeHandler(event) {\n    setDataSourceDetails(_objectSpread(_objectSpread({}, dataSourceDetails), {}, {\n      url: event.target.value\n    }));\n    setUpdate(true);\n  };\n\n  var usernameChangeHandler = function usernameChangeHandler(event) {\n    setDataSourceDetails(_objectSpread(_objectSpread({}, dataSourceDetails), {}, {\n      username: event.target.value\n    }));\n    setUpdate(true);\n  };\n\n  var passwordChangeHandler = function passwordChangeHandler(event) {\n    setDataSourceDetails(_objectSpread(_objectSpread({}, dataSourceDetails), {}, {\n      password: event.target.value\n    }));\n    setUpdate(true);\n  };\n\n  var scrapeIntervalChangeHandler = function scrapeIntervalChangeHandler(event) {\n    setDataSourceDetails(_objectSpread(_objectSpread({}, dataSourceDetails), {}, {\n      scrapeInterval: event.target.value\n    }));\n    setUpdate(true);\n  };\n\n  var queryTimeoutChangeHandler = function queryTimeoutChangeHandler(event) {\n    setDataSourceDetails(_objectSpread(_objectSpread({}, dataSourceDetails), {}, {\n      queryTimeout: event.target.value\n    }));\n    setUpdate(true);\n  };\n\n  var handleAuthChange = function handleAuthChange(event) {\n    if (event.target.checked) {\n      setDataSourceDetails(_objectSpread(_objectSpread({}, dataSourceDetails), {}, _defineProperty({\n        basicAuth: false,\n        noAuth: false,\n        withCredentials: false,\n        tlsClientAuth: false,\n        withCACert: false\n      }, event.target.name, event.target.checked)));\n    } else if (dataSourceDetails.noAuth === false) {\n      setDataSourceDetails(_objectSpread(_objectSpread({}, dataSourceDetails), {}, _defineProperty({\n        noAuth: true\n      }, event.target.name, event.target.checked)));\n    }\n\n    setUpdate(true);\n  };\n\n  useEffect(function () {\n    if (configure === true) {\n      data === null || data === void 0 ? void 0 : data.ListDataSource.forEach(function (dataSourceDetail) {\n        if (dataSourceDetail.ds_id === dataSourceID) {\n          setDataSourceDetails(_objectSpread(_objectSpread({}, dataSourceDetails), {}, {\n            id: dataSourceDetail.ds_id,\n            name: dataSourceDetail.ds_name,\n            dataSourceType: dataSourceDetail.ds_type,\n            url: dataSourceDetail.ds_url,\n            access: dataSourceDetail.access_type,\n            basicAuth: dataSourceDetail.auth_type === 'basic auth',\n            username: dataSourceDetail.basic_auth_username,\n            password: dataSourceDetail.basic_auth_password,\n            noAuth: dataSourceDetail.auth_type === 'no auth',\n            withCredentials: false,\n            tlsClientAuth: false,\n            withCACert: false,\n            scrapeInterval: \"\".concat(dataSourceDetail.scrape_interval.toString(), \"s\"),\n            queryTimeout: \"\".concat(dataSourceDetail.query_timeout.toString(), \"s\"),\n            httpMethod: dataSourceDetail.http_method\n          }));\n          setUpdate(true);\n        }\n      });\n    }\n  }, [data]);\n  useEffect(function () {\n    if (update === true) {\n      CallbackToSetVars(dataSourceDetails);\n      setUpdate(false);\n    }\n  }, [update]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }, page === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.dataSourceForm.general')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.dataSourceForm.generalInfo')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexDisplay,\n    style: {\n      width: '80%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: t('analyticsDashboard.dataSourceForm.name'),\n    \"data-cy\": \"inputDataSourceName\",\n    width: \"22.5rem\",\n    variant: validateTextEmpty(dataSourceDetails.name) ? 'error' : 'primary',\n    onChange: nameChangeHandler,\n    value: dataSourceDetails.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: t('analyticsDashboard.dataSourceForm.dataSourceType'),\n    \"data-cy\": \"inputDataSourceType\",\n    width: \"22.5rem\",\n    variant: validateTextEmpty(dataSourceDetails.dataSourceType) ? 'error' : 'primary',\n    disabled: true,\n    value: dataSourceDetails.dataSourceType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(TextButton, {\n    className: classes.button,\n    onClick: function onClick() {\n      return window.open('https://github.com/litmuschaos/litmus/tree/master/monitoring#model-1-optional-prometheus-scrape-config-model');\n    },\n    startIcon: /*#__PURE__*/React.createElement(DocsIcon, {\n      className: classes.inlineIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 24\n      }\n    }),\n    endIcon: /*#__PURE__*/React.createElement(ExternalLinkIcon, {\n      className: classes.inlineIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 22\n      }\n    }),\n    classes: {\n      label: classes.buttonLabel\n    },\n    variant: \"highlight\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.infoValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, t('analyticsDashboard.dataSourceForm.docsAndSetup'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.horizontalLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.dataSourceForm.endPoint')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.dataSourceForm.endPointInfo')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexDisplay,\n    style: {\n      width: '80%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: t('analyticsDashboard.dataSourceForm.url'),\n    \"data-cy\": \"inputDataSourceURL\",\n    width: \"22.5rem\",\n    variant: isValidWebUrl(dataSourceDetails.url) ? 'primary' : 'error',\n    onChange: urlChangeHandler,\n    value: dataSourceDetails.url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: t('analyticsDashboard.dataSourceForm.access'),\n    \"data-cy\": \"inputDataSourceAccess\",\n    width: \"22.5rem\",\n    variant: validateTextEmpty(dataSourceDetails.access) ? 'error' : 'primary',\n    disabled: true,\n    value: dataSourceDetails.access,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.horizontalLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.dataSourceForm.authentication')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.dataSourceForm.authenticationInfo')), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDivRadioButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(RadioButton, {\n      color: \"primary\",\n      checked: dataSourceDetails.noAuth,\n      onChange: handleAuthChange,\n      name: \"noAuth\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    }),\n    label: t('analyticsDashboard.dataSourceForm.noAuth'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.basicAuth,\n    control: /*#__PURE__*/React.createElement(RadioButton, {\n      color: \"primary\",\n      checked: dataSourceDetails.basicAuth,\n      onChange: handleAuthChange,\n      name: \"basicAuth\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 19\n      }\n    }),\n    label: t('analyticsDashboard.dataSourceForm.basicAuth'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.withCredentials,\n    control: /*#__PURE__*/React.createElement(RadioButton, {\n      color: \"primary\",\n      disabled: true,\n      checked: dataSourceDetails.withCredentials,\n      onChange: handleAuthChange,\n      name: \"withCredentials\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 19\n      }\n    }),\n    label: t('analyticsDashboard.dataSourceForm.withCredentials'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDivRadioButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(RadioButton, {\n      color: \"primary\",\n      disabled: true,\n      checked: dataSourceDetails.tlsClientAuth,\n      onChange: handleAuthChange,\n      name: \"tlsClientAuth\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }),\n    label: t('analyticsDashboard.dataSourceForm.tlsClientAuth'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.withCACert,\n    control: /*#__PURE__*/React.createElement(RadioButton, {\n      color: \"primary\",\n      disabled: true,\n      checked: dataSourceDetails.withCACert,\n      onChange: handleAuthChange,\n      name: \"withCACert\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 19\n      }\n    }),\n    label: t('analyticsDashboard.dataSourceForm.withCACert'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.horizontalLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }), dataSourceDetails.basicAuth ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexDisplay,\n    style: {\n      width: '55%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: t('analyticsDashboard.dataSourceForm.username'),\n    \"data-cy\": \"inputPrometheusUsername\",\n    width: \"14rem\",\n    variant: validateTextEmpty(dataSourceDetails.username) ? 'error' : 'primary',\n    onChange: usernameChangeHandler,\n    value: dataSourceDetails.username,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: t('analyticsDashboard.dataSourceForm.password'),\n    type: \"password\",\n    \"data-cy\": \"inputPrometheusPassword\",\n    width: \"14rem\",\n    variant: validateTextEmpty(dataSourceDetails.password) ? 'error' : 'primary',\n    onChange: passwordChangeHandler,\n    value: dataSourceDetails.password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.horizontalLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.dataSourceForm.configuration')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.dataSourceForm.configurationInfo')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexDisplay,\n    style: {\n      width: '80%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: t('analyticsDashboard.dataSourceForm.scrapeInterval'),\n    \"data-cy\": \"inputScrapeInterval\",\n    width: \"13.5rem\",\n    variant: validateTimeInSeconds(dataSourceDetails.scrapeInterval) ? 'primary' : 'error',\n    onChange: scrapeIntervalChangeHandler,\n    value: dataSourceDetails.scrapeInterval,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: t('analyticsDashboard.dataSourceForm.queryTimeOut'),\n    \"data-cy\": \"inputQueryTimeout\",\n    width: \"13.5rem\",\n    variant: validateTimeInSeconds(dataSourceDetails.queryTimeout) ? 'primary' : 'error',\n    onChange: queryTimeoutChangeHandler,\n    value: dataSourceDetails.queryTimeout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: t('analyticsDashboard.dataSourceForm.httpMethod'),\n    \"data-cy\": \"inputHTTPMethod\",\n    width: \"13.5rem\",\n    variant: validateTextEmpty(dataSourceDetails.httpMethod) ? 'error' : 'primary',\n    disabled: true,\n    value: dataSourceDetails.httpMethod,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default ConfigurePrometheus;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/DataSources/Forms/prometheus.tsx"],"names":["useQuery","FormControlLabel","FormGroup","Typography","InputField","RadioButton","TextButton","React","useEffect","useState","useTranslation","LIST_DATASOURCE","getProjectID","isValidWebUrl","validateTextEmpty","validateTimeInSeconds","useStyles","ConfigurePrometheus","configure","dataSourceID","page","CallbackToSetVars","classes","t","projectID","id","name","dataSourceType","url","access","basicAuth","username","password","noAuth","withCredentials","tlsClientAuth","withCACert","scrapeInterval","queryTimeout","httpMethod","dataSourceDetails","setDataSourceDetails","update","setUpdate","variables","fetchPolicy","data","nameChangeHandler","event","target","value","urlChangeHandler","usernameChangeHandler","passwordChangeHandler","scrapeIntervalChangeHandler","queryTimeoutChangeHandler","handleAuthChange","checked","ListDataSource","forEach","dataSourceDetail","ds_id","ds_name","ds_type","ds_url","access_type","auth_type","basic_auth_username","basic_auth_password","scrape_interval","toString","query_timeout","http_method","root","heading","subHeading","flexDisplay","width","inputDiv","button","window","open","inlineIcon","label","buttonLabel","infoValue","horizontalLine","inputDivRadioButton"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { useQuery } from '@apollo/client';\nimport { FormControlLabel, FormGroup, Typography } from '@material-ui/core';\nimport { InputField, RadioButton, TextButton } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LIST_DATASOURCE } from '../../../../graphql';\nimport { DataSourceDetails } from '../../../../models/dataSourceData';\nimport {\n  DataSourceList,\n  ListDataSourceResponse,\n  ListDataSourceVars,\n} from '../../../../models/graphql/dataSourceDetails';\nimport { ReactComponent as ExternalLinkIcon } from '../../../../svg/externalLink.svg';\nimport { ReactComponent as DocsIcon } from '../../../../svg/prometheusDocs.svg';\nimport { getProjectID } from '../../../../utils/getSearchParams';\nimport {\n  isValidWebUrl,\n  validateTextEmpty,\n  validateTimeInSeconds,\n} from '../../../../utils/validate';\nimport useStyles from './styles';\n\ninterface ConfigurePrometheusProps {\n  configure: boolean;\n  dataSourceID?: string;\n  page: number;\n  CallbackToSetVars: (vars: DataSourceDetails) => void;\n}\n\nconst ConfigurePrometheus: React.FC<ConfigurePrometheusProps> = ({\n  configure,\n  dataSourceID,\n  page,\n  CallbackToSetVars,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const [dataSourceDetails, setDataSourceDetails] = useState<DataSourceDetails>(\n    {\n      id: '',\n      name: '',\n      dataSourceType: 'Prometheus',\n      url: 'http://localhost:9090',\n      access: 'Server (Default)',\n      basicAuth: false,\n      username: '',\n      password: '',\n      noAuth: true,\n      withCredentials: false,\n      tlsClientAuth: false,\n      withCACert: false,\n      scrapeInterval: '15s',\n      queryTimeout: '30s',\n      httpMethod: 'POST',\n    }\n  );\n  const [update, setUpdate] = useState(false);\n\n  // Apollo query to get the datasource data\n  const { data } = useQuery<DataSourceList, ListDataSourceVars>(\n    LIST_DATASOURCE,\n    {\n      variables: { projectID },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  const nameChangeHandler = (event: React.ChangeEvent<{ value: string }>) => {\n    setDataSourceDetails({\n      ...dataSourceDetails,\n      name: (event.target as HTMLInputElement).value,\n    });\n    setUpdate(true);\n  };\n\n  const urlChangeHandler = (event: React.ChangeEvent<{ value: string }>) => {\n    setDataSourceDetails({\n      ...dataSourceDetails,\n      url: (event.target as HTMLInputElement).value,\n    });\n    setUpdate(true);\n  };\n\n  const usernameChangeHandler = (\n    event: React.ChangeEvent<{ value: string }>\n  ) => {\n    setDataSourceDetails({\n      ...dataSourceDetails,\n      username: (event.target as HTMLInputElement).value,\n    });\n    setUpdate(true);\n  };\n\n  const passwordChangeHandler = (\n    event: React.ChangeEvent<{ value: string }>\n  ) => {\n    setDataSourceDetails({\n      ...dataSourceDetails,\n      password: (event.target as HTMLInputElement).value,\n    });\n    setUpdate(true);\n  };\n\n  const scrapeIntervalChangeHandler = (\n    event: React.ChangeEvent<{ value: string }>\n  ) => {\n    setDataSourceDetails({\n      ...dataSourceDetails,\n      scrapeInterval: (event.target as HTMLInputElement).value,\n    });\n    setUpdate(true);\n  };\n\n  const queryTimeoutChangeHandler = (\n    event: React.ChangeEvent<{ value: string }>\n  ) => {\n    setDataSourceDetails({\n      ...dataSourceDetails,\n      queryTimeout: (event.target as HTMLInputElement).value,\n    });\n    setUpdate(true);\n  };\n\n  const handleAuthChange = (\n    event: React.ChangeEvent<{ name: string; checked: boolean }>\n  ) => {\n    if (event.target.checked) {\n      setDataSourceDetails({\n        ...dataSourceDetails,\n        basicAuth: false,\n        noAuth: false,\n        withCredentials: false,\n        tlsClientAuth: false,\n        withCACert: false,\n        [event.target.name]: event.target.checked,\n      });\n    } else if (dataSourceDetails.noAuth === false) {\n      setDataSourceDetails({\n        ...dataSourceDetails,\n        noAuth: true,\n        [event.target.name]: event.target.checked,\n      });\n    }\n    setUpdate(true);\n  };\n\n  useEffect(() => {\n    if (configure === true) {\n      data?.ListDataSource.forEach(\n        (dataSourceDetail: ListDataSourceResponse) => {\n          if (dataSourceDetail.ds_id === dataSourceID) {\n            setDataSourceDetails({\n              ...dataSourceDetails,\n              id: dataSourceDetail.ds_id,\n              name: dataSourceDetail.ds_name,\n              dataSourceType: dataSourceDetail.ds_type,\n              url: dataSourceDetail.ds_url,\n              access: dataSourceDetail.access_type,\n              basicAuth: dataSourceDetail.auth_type === 'basic auth',\n              username: dataSourceDetail.basic_auth_username,\n              password: dataSourceDetail.basic_auth_password,\n              noAuth: dataSourceDetail.auth_type === 'no auth',\n              withCredentials: false,\n              tlsClientAuth: false,\n              withCACert: false,\n              scrapeInterval: `${dataSourceDetail.scrape_interval.toString()}s`,\n              queryTimeout: `${dataSourceDetail.query_timeout.toString()}s`,\n              httpMethod: dataSourceDetail.http_method,\n            });\n            setUpdate(true);\n          }\n        }\n      );\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (update === true) {\n      CallbackToSetVars(dataSourceDetails);\n      setUpdate(false);\n    }\n  }, [update]);\n\n  return (\n    <div className={classes.root}>\n      {page === 1 ? (\n        <div>\n          <Typography className={classes.heading}>\n            {t('analyticsDashboard.dataSourceForm.general')}\n          </Typography>\n          <Typography className={classes.subHeading}>\n            {t('analyticsDashboard.dataSourceForm.generalInfo')}\n          </Typography>\n          <div className={classes.flexDisplay} style={{ width: '80%' }}>\n            <div className={classes.inputDiv}>\n              <InputField\n                label={t('analyticsDashboard.dataSourceForm.name')}\n                data-cy=\"inputDataSourceName\"\n                width=\"22.5rem\"\n                variant={\n                  validateTextEmpty(dataSourceDetails.name)\n                    ? 'error'\n                    : 'primary'\n                }\n                onChange={nameChangeHandler}\n                value={dataSourceDetails.name}\n              />\n            </div>\n            <div className={classes.inputDiv}>\n              <InputField\n                label={t('analyticsDashboard.dataSourceForm.dataSourceType')}\n                data-cy=\"inputDataSourceType\"\n                width=\"22.5rem\"\n                variant={\n                  validateTextEmpty(dataSourceDetails.dataSourceType)\n                    ? 'error'\n                    : 'primary'\n                }\n                disabled\n                value={dataSourceDetails.dataSourceType}\n              />\n            </div>\n          </div>\n          <TextButton\n            className={classes.button}\n            onClick={() =>\n              window.open(\n                'https://github.com/litmuschaos/litmus/tree/master/monitoring#model-1-optional-prometheus-scrape-config-model'\n              )\n            }\n            startIcon={<DocsIcon className={classes.inlineIcon} />}\n            endIcon={<ExternalLinkIcon className={classes.inlineIcon} />}\n            classes={{ label: classes.buttonLabel }}\n            variant=\"highlight\"\n          >\n            <Typography className={classes.infoValue}>\n              {t('analyticsDashboard.dataSourceForm.docsAndSetup')}\n            </Typography>\n          </TextButton>\n          <div className={classes.horizontalLine} />\n          <Typography className={classes.heading}>\n            {t('analyticsDashboard.dataSourceForm.endPoint')}\n          </Typography>\n          <Typography className={classes.subHeading}>\n            {t('analyticsDashboard.dataSourceForm.endPointInfo')}\n          </Typography>\n          <div className={classes.flexDisplay} style={{ width: '80%' }}>\n            <div className={classes.inputDiv}>\n              <InputField\n                label={t('analyticsDashboard.dataSourceForm.url')}\n                data-cy=\"inputDataSourceURL\"\n                width=\"22.5rem\"\n                variant={\n                  isValidWebUrl(dataSourceDetails.url) ? 'primary' : 'error'\n                }\n                onChange={urlChangeHandler}\n                value={dataSourceDetails.url}\n              />\n            </div>\n            <div className={classes.inputDiv}>\n              <InputField\n                label={t('analyticsDashboard.dataSourceForm.access')}\n                data-cy=\"inputDataSourceAccess\"\n                width=\"22.5rem\"\n                variant={\n                  validateTextEmpty(dataSourceDetails.access)\n                    ? 'error'\n                    : 'primary'\n                }\n                disabled\n                value={dataSourceDetails.access}\n              />\n            </div>\n          </div>\n          <div className={classes.horizontalLine} />\n        </div>\n      ) : (\n        <div>\n          <Typography className={classes.heading}>\n            {t('analyticsDashboard.dataSourceForm.authentication')}\n          </Typography>\n          <Typography className={classes.subHeading}>\n            {t('analyticsDashboard.dataSourceForm.authenticationInfo')}\n          </Typography>\n          <FormGroup>\n            <div className={classes.inputDivRadioButton}>\n              <FormControlLabel\n                control={\n                  <RadioButton\n                    color=\"primary\"\n                    checked={dataSourceDetails.noAuth}\n                    onChange={handleAuthChange}\n                    name=\"noAuth\"\n                  />\n                }\n                label={t('analyticsDashboard.dataSourceForm.noAuth')}\n              />\n              <FormControlLabel\n                className={classes.basicAuth}\n                control={\n                  <RadioButton\n                    color=\"primary\"\n                    checked={dataSourceDetails.basicAuth}\n                    onChange={handleAuthChange}\n                    name=\"basicAuth\"\n                  />\n                }\n                label={t('analyticsDashboard.dataSourceForm.basicAuth')}\n              />\n              <FormControlLabel\n                className={classes.withCredentials}\n                control={\n                  <RadioButton\n                    color=\"primary\"\n                    disabled\n                    checked={dataSourceDetails.withCredentials}\n                    onChange={handleAuthChange}\n                    name=\"withCredentials\"\n                  />\n                }\n                label={t('analyticsDashboard.dataSourceForm.withCredentials')}\n              />\n            </div>\n            <div className={classes.inputDivRadioButton}>\n              <FormControlLabel\n                control={\n                  <RadioButton\n                    color=\"primary\"\n                    disabled\n                    checked={dataSourceDetails.tlsClientAuth}\n                    onChange={handleAuthChange}\n                    name=\"tlsClientAuth\"\n                  />\n                }\n                label={t('analyticsDashboard.dataSourceForm.tlsClientAuth')}\n              />\n              <FormControlLabel\n                className={classes.withCACert}\n                control={\n                  <RadioButton\n                    color=\"primary\"\n                    disabled\n                    checked={dataSourceDetails.withCACert}\n                    onChange={handleAuthChange}\n                    name=\"withCACert\"\n                  />\n                }\n                label={t('analyticsDashboard.dataSourceForm.withCACert')}\n              />\n            </div>\n          </FormGroup>\n          <div className={classes.horizontalLine} />\n          {dataSourceDetails.basicAuth ? (\n            <div>\n              <div className={classes.flexDisplay} style={{ width: '55%' }}>\n                <div className={classes.inputDiv}>\n                  <InputField\n                    label={t('analyticsDashboard.dataSourceForm.username')}\n                    data-cy=\"inputPrometheusUsername\"\n                    width=\"14rem\"\n                    variant={\n                      validateTextEmpty(dataSourceDetails.username)\n                        ? 'error'\n                        : 'primary'\n                    }\n                    onChange={usernameChangeHandler}\n                    value={dataSourceDetails.username}\n                  />\n                </div>\n                <div className={classes.inputDiv}>\n                  <InputField\n                    label={t('analyticsDashboard.dataSourceForm.password')}\n                    type=\"password\"\n                    data-cy=\"inputPrometheusPassword\"\n                    width=\"14rem\"\n                    variant={\n                      validateTextEmpty(dataSourceDetails.password)\n                        ? 'error'\n                        : 'primary'\n                    }\n                    onChange={passwordChangeHandler}\n                    value={dataSourceDetails.password}\n                  />\n                </div>\n              </div>\n              <div className={classes.horizontalLine} />\n            </div>\n          ) : (\n            <div />\n          )}\n          <Typography className={classes.heading}>\n            {t('analyticsDashboard.dataSourceForm.configuration')}\n          </Typography>\n          <Typography className={classes.subHeading}>\n            {t('analyticsDashboard.dataSourceForm.configurationInfo')}\n          </Typography>\n          <div className={classes.flexDisplay} style={{ width: '80%' }}>\n            <div className={classes.inputDiv}>\n              <InputField\n                label={t('analyticsDashboard.dataSourceForm.scrapeInterval')}\n                data-cy=\"inputScrapeInterval\"\n                width=\"13.5rem\"\n                variant={\n                  validateTimeInSeconds(dataSourceDetails.scrapeInterval)\n                    ? 'primary'\n                    : 'error'\n                }\n                onChange={scrapeIntervalChangeHandler}\n                value={dataSourceDetails.scrapeInterval}\n              />\n            </div>\n            <div className={classes.inputDiv}>\n              <InputField\n                label={t('analyticsDashboard.dataSourceForm.queryTimeOut')}\n                data-cy=\"inputQueryTimeout\"\n                width=\"13.5rem\"\n                variant={\n                  validateTimeInSeconds(dataSourceDetails.queryTimeout)\n                    ? 'primary'\n                    : 'error'\n                }\n                onChange={queryTimeoutChangeHandler}\n                value={dataSourceDetails.queryTimeout}\n              />\n            </div>\n            <div className={classes.inputDiv}>\n              <InputField\n                label={t('analyticsDashboard.dataSourceForm.httpMethod')}\n                data-cy=\"inputHTTPMethod\"\n                width=\"13.5rem\"\n                variant={\n                  validateTextEmpty(dataSourceDetails.httpMethod)\n                    ? 'error'\n                    : 'primary'\n                }\n                disabled\n                value={dataSourceDetails.httpMethod}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ConfigurePrometheus;\n"]},"metadata":{},"sourceType":"module"}