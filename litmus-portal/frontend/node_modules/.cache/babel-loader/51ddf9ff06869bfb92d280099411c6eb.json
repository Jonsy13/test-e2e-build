{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/ChaosHub/customMyHubCard.tsx\";\n\nimport { CardContent, CardHeader, IconButton, Menu, MenuItem, Typography, useTheme } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { LitmusCard } from 'litmus-ui';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport Center from '../../containers/layouts/Center';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport useStyles from './styles';\n\nvar CustomMyHubCard = function CustomMyHubCard(_ref) {\n  var hub = _ref.hub,\n      keyValue = _ref.keyValue,\n      refreshLoader = _ref.refreshLoader,\n      handleDelete = _ref.handleDelete,\n      handleRefresh = _ref.handleRefresh,\n      handleEditHub = _ref.handleEditHub;\n  var classes = useStyles();\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette; // States for PopOver to display Experiment Weights\n\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var open = Boolean(anchorEl);\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var projectID = getProjectID();\n  var userRole = getProjectRole(); // Function to convert UNIX time in format of DD MMM YYY\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var resDate = moment(updated).format('DD MMM YYYY hh:mm A');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  return /*#__PURE__*/React.createElement(LitmusCard, {\n    width: \"220px\",\n    height: \"320px\",\n    borderColor: palette.border.main,\n    key: hub.id,\n    className: classes.cardDivChart,\n    \"data-cy\": \"myhubCard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.cardHeader,\n    action: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainCardDiv,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: hub.IsAvailable ? classes.connected : classes.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Center, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.statusText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, hub.IsAvailable ? 'Connected' : 'Error'))), userRole !== 'Viewer' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"more\",\n      \"aria-controls\": \"long-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleClick,\n      \"data-cy\": \"myHubCardOption\",\n      className: classes.iconButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n      className: classes.cardOption,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Menu, {\n      id: \"long-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: open,\n      onClose: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      \"data-cy\": \"myHubRefresh\",\n      value: \"Refresh\",\n      onClick: function onClick() {\n        handleRefresh(hub.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cardMenu,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./icons/refresh.svg\",\n      alt: \"Refresh\",\n      className: classes.refreshImg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      \"data-cy\": \"viewHub\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }\n    }, t('myhub.refresh')))), /*#__PURE__*/React.createElement(MenuItem, {\n      \"data-cy\": \"myHubEdit\",\n      value: \"View\",\n      onClick: function onClick() {\n        handleEditHub(hub.HubName);\n        handleClose();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cardMenu,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./icons/Edit.svg\",\n      alt: \"Edit\",\n      className: classes.editImg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      \"data-cy\": \"viewHub\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, t('myhub.edit')))), /*#__PURE__*/React.createElement(MenuItem, {\n      \"data-cy\": \"myHubDelete\",\n      value: \"Delete\",\n      onClick: function onClick() {\n        handleDelete(hub.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cardMenu,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./icons/bin-red.svg\",\n      alt: \"disconnect\",\n      className: classes.disconnectImg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.disconnectText,\n      \"data-cy\": \"viewHub\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, t('myhub.disconnect'))))))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    onClick: function onClick() {\n      history.push({\n        pathname: \"/myhub/\".concat(hub.HubName),\n        search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(userRole)\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cardContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/\".concat(hub.HubName === 'Chaos Hub' ? 'myhub-litmus.svg' : 'my-hub-charts.svg'),\n    alt: \"add-hub\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    className: classes.hubName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, hub.HubName), \"/\", hub.RepoBranch), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.totalExp,\n    gutterBottom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, parseInt(hub.TotalExp, 10) > 0 ? \"\".concat(hub.TotalExp, \" experiments\") : t('myhub.error'))), keyValue === hub.id && refreshLoader ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.syncText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, t('myhub.mainPage.sync'))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.lastSyncDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.lastSyncText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, t('myhub.lastSync')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.lastSyncText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, formatDate(hub.LastSyncedAt)))));\n};\n\nexport default CustomMyHubCard;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/ChaosHub/customMyHubCard.tsx"],"names":["CardContent","CardHeader","IconButton","Menu","MenuItem","Typography","useTheme","MoreVertIcon","LitmusCard","moment","React","useTranslation","Loader","Center","history","getProjectID","getProjectRole","useStyles","CustomMyHubCard","hub","keyValue","refreshLoader","handleDelete","handleRefresh","handleEditHub","classes","palette","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","t","projectID","userRole","formatDate","date","updated","Date","parseInt","toString","resDate","format","border","main","id","cardDivChart","cardHeader","mainCardDiv","IsAvailable","connected","error","statusText","iconButton","cardOption","cardMenu","refreshImg","HubName","editImg","disconnectImg","disconnectText","push","pathname","search","cardContent","hubName","RepoBranch","totalExp","TotalExp","syncText","lastSyncDiv","lastSyncText","LastSyncedAt"],"mappings":"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","sourcesContent":["import {\n  CardContent,\n  CardHeader,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { LitmusCard } from 'litmus-ui';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport Center from '../../containers/layouts/Center';\nimport { HubDetails } from '../../models/redux/myhub';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface customMyHubCardProp {\n  hub: HubDetails;\n  keyValue: string;\n  handleDelete: (hubId: string) => void;\n  handleRefresh: (hubId: string) => void;\n  refreshLoader: boolean;\n  handleEditHub: (hubName: string) => void;\n}\n\nconst CustomMyHubCard: React.FC<customMyHubCardProp> = ({\n  hub,\n  keyValue,\n  refreshLoader,\n  handleDelete,\n  handleRefresh,\n  handleEditHub,\n}) => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n  // States for PopOver to display Experiment Weights\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const userRole = getProjectRole();\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM YYYY hh:mm A');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  return (\n    <LitmusCard\n      width=\"220px\"\n      height=\"320px\"\n      borderColor={palette.border.main}\n      key={hub.id}\n      className={classes.cardDivChart}\n      data-cy=\"myhubCard\"\n    >\n      {/* Card Header for Status and Menu Option */}\n      <CardHeader\n        className={classes.cardHeader}\n        action={\n          <div className={classes.mainCardDiv}>\n            <div\n              className={hub.IsAvailable ? classes.connected : classes.error}\n            >\n              <Center>\n                <Typography className={classes.statusText}>\n                  {hub.IsAvailable ? 'Connected' : 'Error'}\n                </Typography>\n              </Center>\n            </div>\n\n            {userRole !== 'Viewer' && (\n              <>\n                <IconButton\n                  aria-label=\"more\"\n                  aria-controls=\"long-menu\"\n                  aria-haspopup=\"true\"\n                  onClick={handleClick}\n                  data-cy=\"myHubCardOption\"\n                  className={classes.iconButton}\n                >\n                  <MoreVertIcon className={classes.cardOption} />\n                </IconButton>\n                <Menu\n                  id=\"long-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={open}\n                  onClose={handleClose}\n                >\n                  <MenuItem\n                    data-cy=\"myHubRefresh\"\n                    value=\"Refresh\"\n                    onClick={() => {\n                      handleRefresh(hub.id);\n                    }}\n                  >\n                    <div className={classes.cardMenu}>\n                      <img\n                        src=\"./icons/refresh.svg\"\n                        alt=\"Refresh\"\n                        className={classes.refreshImg}\n                      />\n                      <Typography data-cy=\"viewHub\">\n                        {t('myhub.refresh')}\n                      </Typography>\n                    </div>\n                  </MenuItem>\n                  <MenuItem\n                    data-cy=\"myHubEdit\"\n                    value=\"View\"\n                    onClick={() => {\n                      handleEditHub(hub.HubName);\n                      handleClose();\n                    }}\n                  >\n                    <div className={classes.cardMenu}>\n                      <img\n                        src=\"./icons/Edit.svg\"\n                        alt=\"Edit\"\n                        className={classes.editImg}\n                      />\n                      <Typography data-cy=\"viewHub\">\n                        {t('myhub.edit')}\n                      </Typography>\n                    </div>\n                  </MenuItem>\n\n                  <MenuItem\n                    data-cy=\"myHubDelete\"\n                    value=\"Delete\"\n                    onClick={() => {\n                      handleDelete(hub.id);\n                    }}\n                  >\n                    <div className={classes.cardMenu}>\n                      <img\n                        src=\"./icons/bin-red.svg\"\n                        alt=\"disconnect\"\n                        className={classes.disconnectImg}\n                      />\n                      <Typography\n                        className={classes.disconnectText}\n                        data-cy=\"viewHub\"\n                      >\n                        {t('myhub.disconnect')}\n                      </Typography>\n                    </div>\n                  </MenuItem>\n                </Menu>\n              </>\n            )}\n          </div>\n        }\n      />\n      {/* Card Content */}\n      <CardContent\n        onClick={() => {\n          history.push({\n            pathname: `/myhub/${hub.HubName}`,\n            search: `?projectID=${projectID}&projectRole=${userRole}`,\n          });\n        }}\n      >\n        <div className={classes.cardContent}>\n          <img\n            src={`./icons/${\n              hub.HubName === 'Chaos Hub'\n                ? 'myhub-litmus.svg'\n                : 'my-hub-charts.svg'\n            }`}\n            alt=\"add-hub\"\n          />\n          <Typography variant=\"h6\" align=\"center\" className={classes.hubName}>\n            <strong>{hub.HubName}</strong>/{hub.RepoBranch}\n          </Typography>\n          <Typography className={classes.totalExp} gutterBottom>\n            {parseInt(hub.TotalExp, 10) > 0\n              ? `${hub.TotalExp} experiments`\n              : t('myhub.error')}\n          </Typography>\n        </div>\n        {keyValue === hub.id && refreshLoader ? (\n          <div>\n            <Loader />\n            <Typography className={classes.syncText}>\n              {t('myhub.mainPage.sync')}\n            </Typography>\n          </div>\n        ) : (\n          <div className={classes.lastSyncDiv}>\n            <Typography className={classes.lastSyncText}>\n              {t('myhub.lastSync')}\n            </Typography>\n            <Typography className={classes.lastSyncText}>\n              {formatDate(hub.LastSyncedAt)}\n            </Typography>\n          </div>\n        )}\n      </CardContent>\n    </LitmusCard>\n  );\n};\n\nexport default CustomMyHubCard;\n"]},"metadata":{},"sourceType":"module"}