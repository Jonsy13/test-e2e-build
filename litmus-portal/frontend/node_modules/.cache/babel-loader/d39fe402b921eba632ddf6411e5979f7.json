{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Community/GeoMap/CountryMap.tsx\";\n\nimport { useTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport Chart from 'react-google-charts';\nimport { useSelector } from 'react-redux';\nimport useStyles from './styles';\n/* Country geo Map is used for location of users with Country and \nrespective count of users wise to present it on map */\n\nvar CountryMap = function CountryMap() {\n  var _useSelector = useSelector(function (state) {\n    return state.communityData;\n  }),\n      communityData = _useSelector.communityData;\n\n  var classes = useStyles();\n  var theme = useTheme();\n  var data = communityData.google.geoCountry;\n  var parsedData = data.map(function (item) {\n    return [item[0], parseInt(item[1], 10)];\n  });\n  parsedData.unshift(['Country', 'Count']);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.countryMapchartStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    className: classes.countryMapchartContentStyle,\n    chartType: \"GeoChart\",\n    data: parsedData,\n    options: {\n      colorAxis: {\n        colors: [theme.palette.primary.main, theme.palette.primary.dark]\n      },\n      backgroundColor: theme.palette.cards.background,\n      // White Theme\n      datalessRegionColor: theme.palette.primary.light,\n      defaultColor: theme.palette.background.default\n    },\n    rootProps: {\n      'data-testid': '1'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CountryMap;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Community/GeoMap/CountryMap.tsx"],"names":["useTheme","React","Chart","useSelector","useStyles","CountryMap","state","communityData","classes","theme","data","google","geoCountry","parsedData","map","item","parseInt","unshift","countryMapchartStyle","countryMapchartContentStyle","colorAxis","colors","palette","primary","main","dark","backgroundColor","cards","background","datalessRegionColor","light","defaultColor","default"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,0BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP,MAAsB,UAAtB;AACA;AACA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,qBAA0BF,WAAW,CACnC,UAACG,KAAD;AAAA,WAAsBA,KAAK,CAACC,aAA5B;AAAA,GADmC,CAArC;AAAA,MAAQA,aAAR,gBAAQA,aAAR;;AAGA,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,MAAMK,KAAK,GAAGT,QAAQ,EAAtB;AAEA,MAAMU,IAAI,GAAGH,aAAa,CAACI,MAAd,CAAqBC,UAAlC;AAEA,MAAMC,UAAU,GAAGH,IAAI,CAACI,GAAL,CAAS,UAACC,IAAD;AAAA,WAAU,CAACA,IAAI,CAAC,CAAD,CAAL,EAAUC,QAAQ,CAACD,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAAlB,CAAV;AAAA,GAAT,CAAnB;AACAF,EAAAA,UAAU,CAACI,OAAX,CAAmB,CAAC,SAAD,EAAY,OAAZ,CAAnB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACU,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEV,OAAO,CAACW,2BADrB;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,IAAI,EAAEN,UAHR;AAIE,IAAA,OAAO,EAAE;AACPO,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAE,CAACZ,KAAK,CAACa,OAAN,CAAcC,OAAd,CAAsBC,IAAvB,EAA6Bf,KAAK,CAACa,OAAN,CAAcC,OAAd,CAAsBE,IAAnD;AADC,OADJ;AAIPC,MAAAA,eAAe,EAAEjB,KAAK,CAACa,OAAN,CAAcK,KAAd,CAAoBC,UAJ9B;AAI0C;AACjDC,MAAAA,mBAAmB,EAAEpB,KAAK,CAACa,OAAN,CAAcC,OAAd,CAAsBO,KALpC;AAMPC,MAAAA,YAAY,EAAEtB,KAAK,CAACa,OAAN,CAAcM,UAAd,CAAyBI;AANhC,KAJX;AAYE,IAAA,SAAS,EAAE;AAAE,qBAAe;AAAjB,KAZb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAkBD,CA9BD;;AA+BA,eAAe3B,UAAf","sourcesContent":["import { useTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport Chart from 'react-google-charts';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/reducers';\nimport useStyles from './styles';\n/* Country geo Map is used for location of users with Country and \nrespective count of users wise to present it on map */\n\nconst CountryMap = () => {\n  const { communityData } = useSelector(\n    (state: RootState) => state.communityData\n  );\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = communityData.google.geoCountry;\n\n  const parsedData = data.map((item) => [item[0], parseInt(item[1], 10)]);\n  parsedData.unshift(['Country', 'Count']);\n\n  return (\n    <div className={classes.countryMapchartStyle}>\n      <Chart\n        className={classes.countryMapchartContentStyle}\n        chartType=\"GeoChart\"\n        data={parsedData}\n        options={{\n          colorAxis: {\n            colors: [theme.palette.primary.main, theme.palette.primary.dark],\n          },\n          backgroundColor: theme.palette.cards.background, // White Theme\n          datalessRegionColor: theme.palette.primary.light,\n          defaultColor: theme.palette.background.default,\n        }}\n        rootProps={{ 'data-testid': '1' }}\n      />\n    </div>\n  );\n};\nexport default CountryMap;\n"]},"metadata":{},"sourceType":"module"}