{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/BreadCrumbs/index.tsx\";\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport capitalize from '../../utils/capitalize';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport useStyles from './styles';\n\nvar Breadcrumb = function Breadcrumb() {\n  var pathname = window.location.pathname.split('/');\n  var intermediateRoutes = '/';\n  var classes = useStyles();\n  var projectID = getProjectID();\n  var projectRole = getProjectRole();\n  return /*#__PURE__*/React.createElement(Breadcrumbs, {\n    className: classes.breadCrumb,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, pathname.map(function (path) {\n    if (path) {\n      intermediateRoutes += path; // If Template/Workflow Name is clicked [Workflow / Workflow-name / Template]\n      // it would redirect to /workflows\n\n      if (pathname[2] === 'template' && path === pathname[3]) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: \"path\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 20\n          }\n        }, path);\n      }\n\n      if (pathname[2] === 'schedule' && (path === pathname[3] || path === pathname[4])) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: \"schedule\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 20\n          }\n        }, path);\n      }\n\n      var link = /*#__PURE__*/React.createElement(Link, {\n        key: path,\n        to: {\n          pathname: intermediateRoutes,\n          search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, capitalize(path));\n      intermediateRoutes += '/';\n      return link;\n    }\n\n    return '';\n  }));\n};\n\nexport default Breadcrumb;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/BreadCrumbs/index.tsx"],"names":["Breadcrumbs","React","Link","capitalize","getProjectID","getProjectRole","useStyles","Breadcrumb","pathname","window","location","split","intermediateRoutes","classes","projectID","projectRole","breadCrumb","map","path","link","search"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,+BAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,6BAA7C;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,IAAMC,UAAoB,GAAG,SAAvBA,UAAuB,GAAM;AACjC,MAAMC,QAAkB,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAAhB,CAAyBG,KAAzB,CAA+B,GAA/B,CAA3B;AACA,MAAIC,kBAAkB,GAAG,GAAzB;AACA,MAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,MAAMQ,SAAS,GAAGV,YAAY,EAA9B;AACA,MAAMW,WAAW,GAAGV,cAAc,EAAlC;AAEA,sBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEQ,OAAO,CAACG,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QAAQ,CAACS,GAAT,CAAa,UAACC,IAAD,EAAU;AACtB,QAAIA,IAAJ,EAAU;AACRN,MAAAA,kBAAkB,IAAIM,IAAtB,CADQ,CAER;AACA;;AACA,UAAIV,QAAQ,CAAC,CAAD,CAAR,KAAgB,UAAhB,IAA8BU,IAAI,KAAKV,QAAQ,CAAC,CAAD,CAAnD,EAAwD;AACtD,4BAAO;AAAM,UAAA,GAAG,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBU,IAAlB,CAAP;AACD;;AACD,UACEV,QAAQ,CAAC,CAAD,CAAR,KAAgB,UAAhB,KACCU,IAAI,KAAKV,QAAQ,CAAC,CAAD,CAAjB,IAAwBU,IAAI,KAAKV,QAAQ,CAAC,CAAD,CAD1C,CADF,EAGE;AACA,4BAAO;AAAM,UAAA,GAAG,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBU,IAAtB,CAAP;AACD;;AACD,UAAMC,IAAI,gBACR,oBAAC,IAAD;AACE,QAAA,GAAG,EAAED,IADP;AAEE,QAAA,EAAE,EAAE;AACFV,UAAAA,QAAQ,EAAEI,kBADR;AAEFQ,UAAAA,MAAM,uBAAgBN,SAAhB,0BAAyCC,WAAzC;AAFJ,SAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGZ,UAAU,CAACe,IAAD,CAPb,CADF;AAWAN,MAAAA,kBAAkB,IAAI,GAAtB;AACA,aAAOO,IAAP;AACD;;AACD,WAAO,EAAP;AACD,GA7BA,CADH,CADF;AAkCD,CAzCD;;AA2CA,eAAeZ,UAAf","sourcesContent":["import Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport capitalize from '../../utils/capitalize';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport useStyles from './styles';\n\nconst Breadcrumb: React.FC = () => {\n  const pathname: string[] = window.location.pathname.split('/');\n  let intermediateRoutes = '/';\n  const classes = useStyles();\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n\n  return (\n    <Breadcrumbs className={classes.breadCrumb}>\n      {pathname.map((path) => {\n        if (path) {\n          intermediateRoutes += path;\n          // If Template/Workflow Name is clicked [Workflow / Workflow-name / Template]\n          // it would redirect to /workflows\n          if (pathname[2] === 'template' && path === pathname[3]) {\n            return <span key=\"path\">{path}</span>;\n          }\n          if (\n            pathname[2] === 'schedule' &&\n            (path === pathname[3] || path === pathname[4])\n          ) {\n            return <span key=\"schedule\">{path}</span>;\n          }\n          const link = (\n            <Link\n              key={path}\n              to={{\n                pathname: intermediateRoutes,\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              }}\n            >\n              {capitalize(path)}\n            </Link>\n          );\n          intermediateRoutes += '/';\n          return link;\n        }\n        return '';\n      })}\n    </Breadcrumbs>\n  );\n};\n\nexport default Breadcrumb;\n"]},"metadata":{},"sourceType":"module"}