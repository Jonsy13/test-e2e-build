{"ast":null,"code":"function userInitials(name){/**\n   * Funtion to return the initials of a users name\n   * @param {string} name - The string from which initials need to be extracted\n   * @return {string} instance - The concatenated initials of the @param name\n   */try{// Trim to ensure no trailing whitespaces, and,\n// Split the name based on white spaces in between\nvar nameArray=name.trim().split(' ');// if no last name is entered, return the first name's initial letter\nif(nameArray.length<2){return nameArray[0][0].toUpperCase();}// concatenate first and last word's first letter to ensure\n// middle name, aliases, etc. don't get counted\nreturn nameArray[0][0].toUpperCase()+nameArray[nameArray.length-1][0].toUpperCase();}catch(error){console.error('Error in extracting the user name: ',error,\"returning '' for now...\");return'';}}export{userInitials};","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/utils/userInitials.ts"],"names":["userInitials","name","nameArray","trim","split","length","toUpperCase","error","console"],"mappings":"AAAA,QAASA,CAAAA,YAAT,CAAsBC,IAAtB,CAA4C,CAC1C;AACF;AACA;AACA;AACA,KAEE,GAAI,CACF;AACA;AACA,GAAMC,CAAAA,SAAS,CAAGD,IAAI,CAACE,IAAL,GAAYC,KAAZ,CAAkB,GAAlB,CAAlB,CACA;AACA,GAAIF,SAAS,CAACG,MAAV,CAAmB,CAAvB,CAA0B,CACxB,MAAOH,CAAAA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,EAAgBI,WAAhB,EAAP,CACD,CACD;AACA;AACA,MACEJ,CAAAA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,EAAgBI,WAAhB,GACAJ,SAAS,CAACA,SAAS,CAACG,MAAV,CAAmB,CAApB,CAAT,CAAgC,CAAhC,EAAmCC,WAAnC,EAFF,CAID,CAAC,MAAOC,KAAP,CAAc,CACdC,OAAO,CAACD,KAAR,CACE,qCADF,CAEEA,KAFF,CAGE,yBAHF,EAKA,MAAO,EAAP,CACD,CACF,CAED,OAASP,YAAT","sourcesContent":["function userInitials(name: string): string {\n  /**\n   * Funtion to return the initials of a users name\n   * @param {string} name - The string from which initials need to be extracted\n   * @return {string} instance - The concatenated initials of the @param name\n   */\n\n  try {\n    // Trim to ensure no trailing whitespaces, and,\n    // Split the name based on white spaces in between\n    const nameArray = name.trim().split(' ');\n    // if no last name is entered, return the first name's initial letter\n    if (nameArray.length < 2) {\n      return nameArray[0][0].toUpperCase();\n    }\n    // concatenate first and last word's first letter to ensure\n    // middle name, aliases, etc. don't get counted\n    return (\n      nameArray[0][0].toUpperCase() +\n      nameArray[nameArray.length - 1][0].toUpperCase()\n    );\n  } catch (error) {\n    console.error(\n      'Error in extracting the user name: ',\n      error,\n      \"returning '' for now...\"\n    );\n    return '';\n  }\n}\n\nexport { userInitials };\n"]},"metadata":{},"sourceType":"module"}