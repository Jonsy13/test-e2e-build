{"ast":null,"code":"import{useQuery}from'@apollo/client';import{Link,Typography}from'@material-ui/core';import{ButtonFilled,ButtonOutlined}from'litmus-ui';import React from'react';import{useTranslation}from'react-i18next';import Loader from'../../../components/Loader';import{MainInfoContainer}from'../../../components/MainInfoContainer';import{OverviewContainer}from'../../../components/OverviewContainer';import{RecentOverviewContainer}from'../../../components/RecentOverviewContainer';import{UnconfiguredAgent}from'../../../components/UnconfiguredAgent';import Center from'../../../containers/layouts/Center';import{GET_CLUSTER_LENGTH,LIST_DASHBOARD_OVERVIEW,LIST_DATASOURCE_OVERVIEW,WORKFLOW_DETAILS}from'../../../graphql';import useActions from'../../../redux/actions';import*as TabActions from'../../../redux/actions/tabs';import{history}from'../../../redux/configureStore';import{getProjectID,getProjectRole}from'../../../utils/getSearchParams';import{ApplicationDashboardCard}from'./ApplicationDashboardCard';import useStyles from'./styles';import{WorkflowDashboardCard}from'./WorkflowDashboardCard';var Overview=function Overview(){var _filteredDashboardLis;var classes=useStyles();var projectID=getProjectID();var projectRole=getProjectRole();var _useTranslation=useTranslation(),t=_useTranslation.t;var tabs=useActions(TabActions);var dataSource=false;var workflowDashboardCount=0;var applicationDashboardCount=0;var isAgentPresent=false;// Query to check if agent is present or not\nvar _useQuery=useQuery(GET_CLUSTER_LENGTH,{variables:{project_id:getProjectID()},fetchPolicy:'network-only'}),agentList=_useQuery.data,agentListLoading=_useQuery.loading;// Set boolean to conditionally render agent setup banner\nif(agentList){isAgentPresent=agentList.getCluster.length>0;}// Check for data source being present or not\nvar _useQuery2=useQuery(LIST_DATASOURCE_OVERVIEW,{variables:{projectID:projectID},fetchPolicy:'cache-and-network'}),dataSourceListData=_useQuery2.data,dataSourceListLoading=_useQuery2.loading,dataSourceListError=_useQuery2.error;// Set boolean to conditionally render the banner\nif(dataSourceListData){dataSource=dataSourceListData.ListDataSource.length>0;}// Fetch data to display for the workflow dashboard cards\nvar _useQuery3=useQuery(WORKFLOW_DETAILS,{variables:{workflowRunsInput:{project_id:projectID,pagination:{page:0,limit:3}}},fetchPolicy:'cache-and-network'}),workflowData=_useQuery3.data,workflowLoading=_useQuery3.loading,workflowError=_useQuery3.error;// Get count for workflowData length to render conditionally\nif(workflowData){workflowDashboardCount=workflowData.getWorkflowRuns.workflow_runs.length;}// Fetch data to display for the application dashboard cards\nvar _useQuery4=useQuery(LIST_DASHBOARD_OVERVIEW,{variables:{projectID:projectID},fetchPolicy:'cache-and-network'}),dashboardListData=_useQuery4.data,dashboardListLoading=_useQuery4.loading,dashboardListError=_useQuery4.error;// Get count for dashboardListData length to render conditionally\nif(dashboardListData){var _dashboardListData$Li;applicationDashboardCount=(_dashboardListData$Li=dashboardListData.ListDashboard)===null||_dashboardListData$Li===void 0?void 0:_dashboardListData$Li.length;}// Loader for confirmation of agent presence\nif(agentListLoading){return/*#__PURE__*/React.createElement(\"div\",{style:{height:'50vh'}},/*#__PURE__*/React.createElement(Center,null,/*#__PURE__*/React.createElement(Loader,{message:\"Looking for an agent..\"})));}// Prompt user to setup an agent before continuing\nif(!isAgentPresent){return/*#__PURE__*/React.createElement(UnconfiguredAgent,null);}// Prompt user to create a workflow to view analytics on\nif(!workflowDashboardCount){return/*#__PURE__*/React.createElement(MainInfoContainer,{src:\"./icons/workflowScheduleHome.svg\",alt:\"Schedule a workflow\",heading:t('homeViews.agentConfiguredHome.noWorkflow.heading'),description:t('homeViews.agentConfiguredHome.noWorkflow.description'),button:/*#__PURE__*/React.createElement(ButtonFilled,{onClick:function onClick(){history.push({pathname:'/create-workflow',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});}},/*#__PURE__*/React.createElement(Typography,null,t('homeViews.agentConfiguredHome.noWorkflow.schedule'))),link:/*#__PURE__*/React.createElement(Link,{underline:\"none\",color:\"primary\",onClick:function onClick(){tabs.changeWorkflowsTabs(2);history.push({pathname:'/workflows',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});}},/*#__PURE__*/React.createElement(Typography,null,t('homeViews.agentConfiguredHome.noWorkflow.explore')))});}// Loader for Data source fetching duration\nif(dataSourceListLoading){return/*#__PURE__*/React.createElement(\"div\",{style:{height:'50vh'}},/*#__PURE__*/React.createElement(Center,null,/*#__PURE__*/React.createElement(Loader,{message:\"Loading available data sources\"})));}var filteredDashboardListData;// Select the latest 3 dashboards\nif(applicationDashboardCount>0){filteredDashboardListData=dashboardListData===null||dashboardListData===void 0?void 0:dashboardListData.ListDashboard.slice(-3);}// Generic Apollo error:\nif(dataSourceListError||workflowError||dashboardListError){console.error('Error fetching the data!');return/*#__PURE__*/React.createElement(\"div\",{style:{height:'50vh'}},/*#__PURE__*/React.createElement(Center,null,/*#__PURE__*/React.createElement(Typography,null,\"Error fetching the data!\")));}return/*#__PURE__*/React.createElement(\"div\",null,!dataSource&&/*#__PURE__*/React.createElement(MainInfoContainer,{src:\"./icons/cloud.svg\",alt:\"Schedule a workflow\",heading:\"Connect data source\",description:\"To configure your first Kubernetes dashboard you need to connect a data source. Select \\u201CAdd data source\\u201D to connect.\",button:/*#__PURE__*/React.createElement(ButtonFilled,{onClick:function onClick(){history.push({pathname:'/analytics/datasource/create',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});}},/*#__PURE__*/React.createElement(Typography,null,\"Add data source\")),link:/*#__PURE__*/React.createElement(Link,{underline:\"none\",color:\"primary\",href:\"https://prometheus.io/docs/introduction/overview/\",target:\"_blank\",rel:\"noreferrer\"},/*#__PURE__*/React.createElement(Typography,null,\"Read prometheus doc\"))}),dataSource&&!applicationDashboardCount&&/*#__PURE__*/React.createElement(MainInfoContainer,{src:\"./icons/dashboardCloud.svg\",alt:\"Schedule a workflow\",heading:\"Configure a chaos interleaved dashboard\",description:\"Data source(s) have been found to be connected in this project. Select \\u201CAdd dashboard\\u201D to configure a chaos interleaved dashboard\",button:/*#__PURE__*/React.createElement(ButtonFilled,{onClick:function onClick(){history.push({pathname:'/analytics/dashboard/create',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});}},/*#__PURE__*/React.createElement(Typography,null,\"Add dashboard\"))}),' ',workflowDashboardCount>0?/*#__PURE__*/React.createElement(RecentOverviewContainer,{heading:\"Recent Workflow Dashboards\",buttonLink:\"/create-workflow\",buttonImgSrc:\"./icons/calendarBlank.svg\",buttonImgAlt:\"Schedule workflow\",buttonText:\"Schedule workflow\"},workflowLoading?/*#__PURE__*/React.createElement(Center,null,/*#__PURE__*/React.createElement(Loader,null)):workflowData===null||workflowData===void 0?void 0:workflowData.getWorkflowRuns.workflow_runs.map(function(workflow){return/*#__PURE__*/React.createElement(WorkflowDashboardCard,{key:workflow.workflow_id,data:workflow});})):/*#__PURE__*/React.createElement(OverviewContainer,{count:0,countUnit:\"workflows\",description:\"Create complex chaos workflows, automate them and monitor the variations in resilience levels. You can use this Kubernetes cluster to create new reliability work flows and compliance reports\",maxWidth:\"38.5625rem\",button:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){history.push({pathname:'/create-workflow',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});},className:classes.infoContainerButton},/*#__PURE__*/React.createElement(Typography,null,/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/calendarBlankDark.svg\",alt:\"calendar\"}),t('homeViews.agentConfiguredHome.agentInfoContainer.deploy'))))}),applicationDashboardCount>0&&/*#__PURE__*/React.createElement(RecentOverviewContainer,{heading:\"Recent Application Dashboards\",buttonLink:\"/analytics/dashboard/create\",buttonImgSrc:\"./icons/cloudWhite.svg\",buttonImgAlt:\"Add dashboard\",buttonText:\"Add dashbaord\"},dashboardListLoading?/*#__PURE__*/React.createElement(Center,null,/*#__PURE__*/React.createElement(Loader,null)):(_filteredDashboardLis=filteredDashboardListData)===null||_filteredDashboardLis===void 0?void 0:_filteredDashboardLis.map(function(dashboard){return/*#__PURE__*/React.createElement(ApplicationDashboardCard,{key:dashboard.db_id,data:dashboard});})),dataSource&&/*#__PURE__*/React.createElement(OverviewContainer,{count:1,countUnit:\"Data source\",description:\"Data sources are needed to configure interleaving dashboards\",maxWidth:\"38.5625rem\",button:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ButtonOutlined,{className:classes.infoContainerButton,onClick:function onClick(){history.push({pathname:'/analytics/datasource/create',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});}},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/dataSource.svg\",alt:\"DataSource\"}),/*#__PURE__*/React.createElement(Typography,null,\"Add data source\")))}));};export default Overview;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/Overview/index.tsx"],"names":["useQuery","Link","Typography","ButtonFilled","ButtonOutlined","React","useTranslation","Loader","MainInfoContainer","OverviewContainer","RecentOverviewContainer","UnconfiguredAgent","Center","GET_CLUSTER_LENGTH","LIST_DASHBOARD_OVERVIEW","LIST_DATASOURCE_OVERVIEW","WORKFLOW_DETAILS","useActions","TabActions","history","getProjectID","getProjectRole","ApplicationDashboardCard","useStyles","WorkflowDashboardCard","Overview","classes","projectID","projectRole","t","tabs","dataSource","workflowDashboardCount","applicationDashboardCount","isAgentPresent","variables","project_id","fetchPolicy","agentList","data","agentListLoading","loading","getCluster","length","dataSourceListData","dataSourceListLoading","dataSourceListError","error","ListDataSource","workflowRunsInput","pagination","page","limit","workflowData","workflowLoading","workflowError","getWorkflowRuns","workflow_runs","dashboardListData","dashboardListLoading","dashboardListError","ListDashboard","height","push","pathname","search","changeWorkflowsTabs","filteredDashboardListData","slice","console","map","workflow","workflow_id","infoContainerButton","dashboard","db_id"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Link, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../components/Loader';\nimport { MainInfoContainer } from '../../../components/MainInfoContainer';\nimport { OverviewContainer } from '../../../components/OverviewContainer';\nimport { RecentOverviewContainer } from '../../../components/RecentOverviewContainer';\nimport { UnconfiguredAgent } from '../../../components/UnconfiguredAgent';\nimport Center from '../../../containers/layouts/Center';\nimport {\n  GET_CLUSTER_LENGTH,\n  LIST_DASHBOARD_OVERVIEW,\n  LIST_DATASOURCE_OVERVIEW,\n  WORKFLOW_DETAILS,\n} from '../../../graphql';\nimport { Clusters, ClusterVars } from '../../../models/graphql/clusterData';\nimport {\n  DashboardList,\n  ListDashboardVars,\n} from '../../../models/graphql/dashboardsDetails';\nimport {\n  DataSourceList,\n  ListDataSourceVars,\n} from '../../../models/graphql/dataSourceDetails';\nimport {\n  Workflow,\n  WorkflowDataVars,\n} from '../../../models/graphql/workflowData';\nimport useActions from '../../../redux/actions';\nimport * as TabActions from '../../../redux/actions/tabs';\nimport { history } from '../../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport { ApplicationDashboardCard } from './ApplicationDashboardCard';\nimport useStyles from './styles';\nimport { WorkflowDashboardCard } from './WorkflowDashboardCard';\n\nconst Overview: React.FC = () => {\n  const classes = useStyles();\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n  const { t } = useTranslation();\n\n  const tabs = useActions(TabActions);\n\n  let dataSource = false;\n  let workflowDashboardCount = 0;\n  let applicationDashboardCount = 0;\n  let isAgentPresent = false;\n\n  // Query to check if agent is present or not\n  const { data: agentList, loading: agentListLoading } = useQuery<\n    Clusters,\n    ClusterVars\n  >(GET_CLUSTER_LENGTH, {\n    variables: { project_id: getProjectID() },\n    fetchPolicy: 'network-only',\n  });\n\n  // Set boolean to conditionally render agent setup banner\n  if (agentList) {\n    isAgentPresent = agentList.getCluster.length > 0;\n  }\n\n  // Check for data source being present or not\n  const {\n    data: dataSourceListData,\n    loading: dataSourceListLoading,\n    error: dataSourceListError,\n  } = useQuery<DataSourceList, ListDataSourceVars>(LIST_DATASOURCE_OVERVIEW, {\n    variables: { projectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Set boolean to conditionally render the banner\n  if (dataSourceListData) {\n    dataSource = dataSourceListData.ListDataSource.length > 0;\n  }\n\n  // Fetch data to display for the workflow dashboard cards\n  const {\n    data: workflowData,\n    loading: workflowLoading,\n    error: workflowError,\n  } = useQuery<Workflow, WorkflowDataVars>(WORKFLOW_DETAILS, {\n    variables: {\n      workflowRunsInput: {\n        project_id: projectID,\n        pagination: {\n          page: 0,\n          limit: 3,\n        },\n      },\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Get count for workflowData length to render conditionally\n  if (workflowData) {\n    workflowDashboardCount = workflowData.getWorkflowRuns.workflow_runs.length;\n  }\n\n  // Fetch data to display for the application dashboard cards\n  const {\n    data: dashboardListData,\n    loading: dashboardListLoading,\n    error: dashboardListError,\n  } = useQuery<DashboardList, ListDashboardVars>(LIST_DASHBOARD_OVERVIEW, {\n    variables: { projectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Get count for dashboardListData length to render conditionally\n  if (dashboardListData) {\n    applicationDashboardCount = dashboardListData.ListDashboard?.length;\n  }\n\n  // Loader for confirmation of agent presence\n  if (agentListLoading) {\n    return (\n      <div style={{ height: '50vh' }}>\n        <Center>\n          <Loader message=\"Looking for an agent..\" />\n        </Center>\n      </div>\n    );\n  }\n\n  // Prompt user to setup an agent before continuing\n  if (!isAgentPresent) {\n    return <UnconfiguredAgent />;\n  }\n\n  // Prompt user to create a workflow to view analytics on\n  if (!workflowDashboardCount) {\n    return (\n      <MainInfoContainer\n        src=\"./icons/workflowScheduleHome.svg\"\n        alt=\"Schedule a workflow\"\n        heading={t('homeViews.agentConfiguredHome.noWorkflow.heading')}\n        description={t('homeViews.agentConfiguredHome.noWorkflow.description')}\n        button={\n          <ButtonFilled\n            onClick={() => {\n              history.push({\n                pathname: '/create-workflow',\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              });\n            }}\n          >\n            <Typography>\n              {t('homeViews.agentConfiguredHome.noWorkflow.schedule')}\n            </Typography>\n          </ButtonFilled>\n        }\n        link={\n          <Link\n            underline=\"none\"\n            color=\"primary\"\n            onClick={() => {\n              tabs.changeWorkflowsTabs(2);\n              history.push({\n                pathname: '/workflows',\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              });\n            }}\n          >\n            <Typography>\n              {t('homeViews.agentConfiguredHome.noWorkflow.explore')}\n            </Typography>\n          </Link>\n        }\n      />\n    );\n  }\n\n  // Loader for Data source fetching duration\n  if (dataSourceListLoading) {\n    return (\n      <div style={{ height: '50vh' }}>\n        <Center>\n          <Loader message=\"Loading available data sources\" />\n        </Center>\n      </div>\n    );\n  }\n\n  let filteredDashboardListData;\n  // Select the latest 3 dashboards\n  if (applicationDashboardCount > 0) {\n    filteredDashboardListData = dashboardListData?.ListDashboard.slice(-3);\n  }\n\n  // Generic Apollo error:\n  if (dataSourceListError || workflowError || dashboardListError) {\n    console.error('Error fetching the data!');\n    return (\n      <div style={{ height: '50vh' }}>\n        <Center>\n          <Typography>Error fetching the data!</Typography>\n        </Center>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {!dataSource && (\n        <MainInfoContainer\n          src=\"./icons/cloud.svg\"\n          alt=\"Schedule a workflow\"\n          heading=\"Connect data source\"\n          description=\"To configure your first Kubernetes dashboard you need to connect a data source. Select “Add data source” to connect.\"\n          button={\n            <ButtonFilled\n              onClick={() => {\n                history.push({\n                  pathname: '/analytics/datasource/create',\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n              }}\n            >\n              <Typography>Add data source</Typography>\n            </ButtonFilled>\n          }\n          link={\n            <Link\n              underline=\"none\"\n              color=\"primary\"\n              href=\"https://prometheus.io/docs/introduction/overview/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <Typography>Read prometheus doc</Typography>\n            </Link>\n          }\n        />\n      )}\n      {dataSource && !applicationDashboardCount && (\n        <MainInfoContainer\n          src=\"./icons/dashboardCloud.svg\"\n          alt=\"Schedule a workflow\"\n          heading=\"Configure a chaos interleaved dashboard\"\n          description=\"Data source(s) have been found to be connected in this project. Select “Add dashboard” to configure a chaos interleaved dashboard\"\n          button={\n            <ButtonFilled\n              onClick={() => {\n                history.push({\n                  pathname: '/analytics/dashboard/create',\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n              }}\n            >\n              <Typography>Add dashboard</Typography>\n            </ButtonFilled>\n          }\n        />\n      )}{' '}\n      {workflowDashboardCount > 0 ? (\n        <RecentOverviewContainer\n          heading=\"Recent Workflow Dashboards\"\n          buttonLink=\"/create-workflow\"\n          buttonImgSrc=\"./icons/calendarBlank.svg\"\n          buttonImgAlt=\"Schedule workflow\"\n          buttonText=\"Schedule workflow\"\n        >\n          {workflowLoading ? (\n            <Center>\n              <Loader />\n            </Center>\n          ) : (\n            workflowData?.getWorkflowRuns.workflow_runs.map((workflow) => {\n              return (\n                <WorkflowDashboardCard\n                  key={workflow.workflow_id}\n                  data={workflow}\n                />\n              );\n            })\n          )}\n        </RecentOverviewContainer>\n      ) : (\n        <OverviewContainer\n          count={0}\n          countUnit=\"workflows\"\n          description=\"Create complex chaos workflows, automate them and monitor the variations in resilience levels. You can use this Kubernetes cluster to create new reliability work flows and compliance reports\"\n          maxWidth=\"38.5625rem\"\n          button={\n            <>\n              <ButtonOutlined\n                onClick={() => {\n                  history.push({\n                    pathname: '/create-workflow',\n                    search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                  });\n                }}\n                className={classes.infoContainerButton}\n              >\n                <Typography>\n                  <img src=\"./icons/calendarBlankDark.svg\" alt=\"calendar\" />\n                  {t('homeViews.agentConfiguredHome.agentInfoContainer.deploy')}\n                </Typography>\n              </ButtonOutlined>\n            </>\n          }\n        />\n      )}\n      {applicationDashboardCount > 0 && (\n        <RecentOverviewContainer\n          heading=\"Recent Application Dashboards\"\n          buttonLink=\"/analytics/dashboard/create\"\n          buttonImgSrc=\"./icons/cloudWhite.svg\"\n          buttonImgAlt=\"Add dashboard\"\n          buttonText=\"Add dashbaord\"\n        >\n          {dashboardListLoading ? (\n            <Center>\n              <Loader />\n            </Center>\n          ) : (\n            filteredDashboardListData?.map((dashboard) => {\n              return (\n                <ApplicationDashboardCard\n                  key={dashboard.db_id}\n                  data={dashboard}\n                />\n              );\n            })\n          )}\n        </RecentOverviewContainer>\n      )}\n      {dataSource && (\n        <OverviewContainer\n          count={1}\n          countUnit=\"Data source\"\n          description=\"Data sources are needed to configure interleaving dashboards\"\n          maxWidth=\"38.5625rem\"\n          button={\n            <>\n              <ButtonOutlined\n                className={classes.infoContainerButton}\n                onClick={() => {\n                  history.push({\n                    pathname: '/analytics/datasource/create',\n                    search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                  });\n                }}\n              >\n                <img src=\"./icons/dataSource.svg\" alt=\"DataSource\" />\n                <Typography>Add data source</Typography>\n              </ButtonOutlined>\n            </>\n          }\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Overview;\n"]},"metadata":{},"sourceType":"module"}