{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useLazyQuery,useMutation}from'@apollo/client';import{Typography}from'@material-ui/core';import{ButtonFilled,InputField}from'litmus-ui';import React,{useRef,useState}from'react';import{useTranslation}from'react-i18next';import Loader from'../../components/Loader';import config from'../../config';import Center from'../../containers/layouts/Center';import{CREATE_PROJECT,CREATE_USER,GET_USER_INFO}from'../../graphql';import{getToken,getUserEmail,getUserFullName,getUserId,getUsername,getUserRole}from'../../utils/auth';import{validateConfirmPassword}from'../../utils/validate';import useStyles from'./styles';var GetStarted=function GetStarted(){var _useTranslation=useTranslation(),t=_useTranslation.t;var classes=useStyles();var _React$useState=React.useState({password:'',confirmPassword:''}),_React$useState2=_slicedToArray(_React$useState,2),values=_React$useState2[0],setValues=_React$useState2[1];var isError=useRef(true);var isSuccess=useRef(false);if(values.password.length&&values.confirmPassword.length&&!validateConfirmPassword(values.password,values.confirmPassword)){isError.current=false;isSuccess.current=true;}else{isError.current=true;isSuccess.current=false;}var username=getUsername();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setIsLoading=_useState2[1];// Mutation to create project for a user\nvar _useMutation=useMutation(CREATE_PROJECT,{onCompleted:function onCompleted(){setIsLoading(false);window.location.assign('/home');}}),_useMutation2=_slicedToArray(_useMutation,1),CreateProject=_useMutation2[0];// Mutation to create a user in litmusDB\nvar _useMutation3=useMutation(CREATE_USER,{onCompleted:function onCompleted(){CreateProject({variables:{projectName:\"\".concat(username,\"'s project\")}});}}),_useMutation4=_slicedToArray(_useMutation3,1),CreateUser=_useMutation4[0];// Query to fetch user details of user from litmusDB\nvar _useLazyQuery=useLazyQuery(GET_USER_INFO,{variables:{username:username},// Adding the user to litmusDB if user does not exists\nonError:function onError(err){if(err.message==='mongo: no documents in result')CreateUser({variables:{user:{username:username,email:getUserEmail(),name:getUserFullName(),role:getUserRole(),userID:getUserId()}}});else console.error(err.message);},// Creating project for the user\nonCompleted:function onCompleted(){CreateProject({variables:{projectName:\"\".concat(username,\"'s project\")}});}}),_useLazyQuery2=_slicedToArray(_useLazyQuery,1),getUserInfo=_useLazyQuery2[0];// Submit entered data to /update endpoint\nvar handleSubmit=function handleSubmit(event){event.preventDefault();setIsLoading(true);fetch(\"\".concat(config.auth.url,\"/update/details\"),{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(getToken())},body:JSON.stringify({username:username,email:getUserEmail(),name:getUserFullName(),password:values.password})}).then(function(response){return response.json();}).then(function(data){if('error'in data){isError.current=true;}else{getUserInfo();}}).catch(function(err){isError.current=true;console.error(err);});};var loaderSize=20;return/*#__PURE__*/React.createElement(\"div\",{className:classes.rootContainer},/*#__PURE__*/React.createElement(Center,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.rootDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.rootLitmusText},/*#__PURE__*/React.createElement(\"img\",{src:\"icons/LitmusLogoLight.svg\",alt:\"litmus logo\"}),/*#__PURE__*/React.createElement(Typography,{className:classes.HeaderText},' ',t('getStarted.welcome'),\" \",username,\"!\"),/*#__PURE__*/React.createElement(Typography,{className:classes.HeaderText},t('getStarted.password.info')),/*#__PURE__*/React.createElement(Typography,{className:classes.litmusText},t('getStarted.password.desc'))),/*#__PURE__*/React.createElement(\"form\",{id:\"login-form\",className:classes.inputDiv,onSubmit:handleSubmit},/*#__PURE__*/React.createElement(InputField,{\"data-cy\":\"inputPassword\",className:classes.inputValue,label:t('getStarted.password.label'),type:\"password\",filled:true,required:true,value:values.password,onChange:function onChange(event){setValues({password:event.target.value,confirmPassword:values.confirmPassword});}}),/*#__PURE__*/React.createElement(InputField,{\"data-cy\":\"confirmInputPassword\",className:classes.inputValue,label:t('getStarted.password.cnfLabel'),type:\"password\",required:true,value:values.confirmPassword,helperText:validateConfirmPassword(values.password,values.confirmPassword)?t('settings.accountsTab.accountsSettings.passwordNotSame'):'',filled:true,onChange:function onChange(event){return setValues({password:values.password,confirmPassword:event.target.value});}}),/*#__PURE__*/React.createElement(\"div\",{className:classes.buttonGroup},/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"finishButton\"},/*#__PURE__*/React.createElement(ButtonFilled,{className:classes.submitButton,type:\"submit\",disabled:isError.current},loading?/*#__PURE__*/React.createElement(Loader,{size:loaderSize}):/*#__PURE__*/React.createElement(React.Fragment,null,t('getStarted.button.finish')))))))));};export default GetStarted;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/GetStartedPage/index.tsx"],"names":["useLazyQuery","useMutation","Typography","ButtonFilled","InputField","React","useRef","useState","useTranslation","Loader","config","Center","CREATE_PROJECT","CREATE_USER","GET_USER_INFO","getToken","getUserEmail","getUserFullName","getUserId","getUsername","getUserRole","validateConfirmPassword","useStyles","GetStarted","t","classes","password","confirmPassword","values","setValues","isError","isSuccess","length","current","username","loading","setIsLoading","onCompleted","window","location","assign","CreateProject","variables","projectName","CreateUser","onError","err","message","user","email","name","role","userID","console","error","getUserInfo","handleSubmit","event","preventDefault","fetch","auth","url","method","headers","Authorization","body","JSON","stringify","then","response","json","data","catch","loaderSize","rootContainer","rootDiv","rootLitmusText","HeaderText","litmusText","inputDiv","inputValue","target","value","buttonGroup","submitButton"],"mappings":"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","sourcesContent":["import { useLazyQuery, useMutation } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport { ButtonFilled, InputField } from 'litmus-ui';\nimport React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport config from '../../config';\nimport Center from '../../containers/layouts/Center';\nimport { CREATE_PROJECT, CREATE_USER, GET_USER_INFO } from '../../graphql';\nimport {\n  CreateUserData,\n  CurrentUserDetails,\n  Project,\n} from '../../models/graphql/user';\nimport {\n  getToken,\n  getUserEmail,\n  getUserFullName,\n  getUserId,\n  getUsername,\n  getUserRole,\n} from '../../utils/auth';\nimport { validateConfirmPassword } from '../../utils/validate';\nimport useStyles from './styles';\n\ninterface PasswordReset {\n  password: string;\n  confirmPassword: string;\n}\n\nconst GetStarted: React.FC = () => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const [values, setValues] = React.useState<PasswordReset>({\n    password: '',\n    confirmPassword: '',\n  });\n  const isError = useRef(true);\n  const isSuccess = useRef(false);\n  if (\n    values.password.length &&\n    values.confirmPassword.length &&\n    !validateConfirmPassword(values.password, values.confirmPassword)\n  ) {\n    isError.current = false;\n    isSuccess.current = true;\n  } else {\n    isError.current = true;\n    isSuccess.current = false;\n  }\n  const username = getUsername();\n\n  const [loading, setIsLoading] = useState<boolean>(false);\n\n  // Mutation to create project for a user\n  const [CreateProject] = useMutation<Project>(CREATE_PROJECT, {\n    onCompleted: () => {\n      setIsLoading(false);\n      window.location.assign('/home');\n    },\n  });\n\n  // Mutation to create a user in litmusDB\n  const [CreateUser] = useMutation<CreateUserData>(CREATE_USER, {\n    onCompleted: () => {\n      CreateProject({\n        variables: {\n          projectName: `${username}'s project`,\n        },\n      });\n    },\n  });\n\n  // Query to fetch user details of user from litmusDB\n  const [getUserInfo] = useLazyQuery<CurrentUserDetails>(GET_USER_INFO, {\n    variables: { username },\n    // Adding the user to litmusDB if user does not exists\n    onError: (err) => {\n      if (err.message === 'mongo: no documents in result')\n        CreateUser({\n          variables: {\n            user: {\n              username,\n              email: getUserEmail(),\n              name: getUserFullName(),\n              role: getUserRole(),\n              userID: getUserId(),\n            },\n          },\n        });\n      else console.error(err.message);\n    },\n    // Creating project for the user\n    onCompleted: () => {\n      CreateProject({\n        variables: {\n          projectName: `${username}'s project`,\n        },\n      });\n    },\n  });\n\n  // Submit entered data to /update endpoint\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n    fetch(`${config.auth.url}/update/details`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${getToken()}`,\n      },\n      body: JSON.stringify({\n        username,\n        email: getUserEmail(),\n        name: getUserFullName(),\n        password: values.password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if ('error' in data) {\n          isError.current = true;\n        } else {\n          getUserInfo();\n        }\n      })\n      .catch((err) => {\n        isError.current = true;\n        console.error(err);\n      });\n  };\n\n  const loaderSize = 20;\n\n  return (\n    <div className={classes.rootContainer}>\n      <Center>\n        <div className={classes.rootDiv}>\n          <div className={classes.rootLitmusText}>\n            <img src=\"icons/LitmusLogoLight.svg\" alt=\"litmus logo\" />\n            <Typography className={classes.HeaderText}>\n              {' '}\n              {t('getStarted.welcome')} {username}!\n            </Typography>\n            <Typography className={classes.HeaderText}>\n              {t('getStarted.password.info')}\n            </Typography>\n            <Typography className={classes.litmusText}>\n              {t('getStarted.password.desc')}\n            </Typography>\n          </div>\n          <form\n            id=\"login-form\"\n            className={classes.inputDiv}\n            onSubmit={handleSubmit}\n          >\n            <InputField\n              data-cy=\"inputPassword\"\n              className={classes.inputValue}\n              label={t('getStarted.password.label')}\n              type=\"password\"\n              filled\n              required\n              value={values.password}\n              onChange={(event) => {\n                setValues({\n                  password: event.target.value,\n                  confirmPassword: values.confirmPassword,\n                });\n              }}\n            />\n            <InputField\n              data-cy=\"confirmInputPassword\"\n              className={classes.inputValue}\n              label={t('getStarted.password.cnfLabel')}\n              type=\"password\"\n              required\n              value={values.confirmPassword}\n              helperText={\n                validateConfirmPassword(values.password, values.confirmPassword)\n                  ? t('settings.accountsTab.accountsSettings.passwordNotSame')\n                  : ''\n              }\n              filled\n              onChange={(event) =>\n                setValues({\n                  password: values.password,\n                  confirmPassword: event.target.value,\n                })\n              }\n            />\n            <div className={classes.buttonGroup}>\n              <div data-cy=\"finishButton\">\n                <ButtonFilled\n                  className={classes.submitButton}\n                  type=\"submit\"\n                  disabled={isError.current}\n                >\n                  {loading ? (\n                    <Loader size={loaderSize} />\n                  ) : (\n                    <>{t('getStarted.button.finish')}</>\n                  )}\n                </ButtonFilled>\n              </div>\n            </div>\n          </form>\n        </div>\n      </Center>\n    </div>\n  );\n};\n\nexport default GetStarted;\n"]},"metadata":{},"sourceType":"module"}