{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable no-unused-expressions */ /* eslint-disable no-loop-func */import{useQuery}from'@apollo/client';import{IconButton,Paper,Table,TableBody,TableCell,TableContainer,TablePagination,TableRow,Typography}from'@material-ui/core';import useTheme from'@material-ui/core/styles/useTheme';import ExpandMoreTwoToneIcon from'@material-ui/icons/ExpandMoreTwoTone';import html2canvas from'html2canvas';import jsPDF from'jspdf';import autoTable from'jspdf-autotable';import*as _ from'lodash';import moment from'moment';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import Loader from'../../../../components/Loader';import{WORKFLOW_LIST_DETAILS}from'../../../../graphql/queries';import{getProjectID}from'../../../../utils/getSearchParams';import{sortAlphaAsc,sortAlphaDesc,sortNumAsc,sortNumDesc}from'../../../../utils/sort';import ResilienceScoreComparisonPlot from'../WorkflowComparisonPlot/index';import WorkflowGraphs from'../WorkflowGraphs';import useStyles from'./styles';import TableData from'./TableData';import TableHeader from'./TableHeader';import TableToolBar from'./TableToolbar';var WorkflowComparisonTable=function WorkflowComparisonTable(){var classes=useStyles();var _useTheme=useTheme(),palette=_useTheme.palette;var _useTranslation=useTranslation(),t=_useTranslation.t;var _React$useState=React.useState({range:{startDate:'all',endDate:'all'},selectedCluster:'All',sortData:{name:{sort:false,ascending:true},startDate:{sort:true,ascending:true},cluster:{sort:false,ascending:true}},searchTokens:['']}),_React$useState2=_slicedToArray(_React$useState,2),filter=_React$useState2[0],setFilter=_React$useState2[1];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),displayData=_useState2[0],setDisplayData=_useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),clusters=_React$useState4[0],setClusters=_React$useState4[1];var _React$useState5=React.useState(0),_React$useState6=_slicedToArray(_React$useState5,2),page=_React$useState6[0],setPage=_React$useState6[1];var _React$useState7=React.useState(5),_React$useState8=_slicedToArray(_React$useState7,2),rowsPerPage=_React$useState8[0],setRowsPerPage=_React$useState8[1];var _React$useState9=React.useState([]),_React$useState10=_slicedToArray(_React$useState9,2),selected=_React$useState10[0],setSelected=_React$useState10[1];var isSelected=function isSelected(name){return selected.indexOf(name)!==-1;};var emptyRows=rowsPerPage-Math.min(rowsPerPage,displayData.length-page*rowsPerPage);var _React$useState11=React.useState(false),_React$useState12=_slicedToArray(_React$useState11,2),compare=_React$useState12[0],setCompare=_React$useState12[1];var _React$useState13=React.useState(true),_React$useState14=_slicedToArray(_React$useState13,2),isDataAvailable=_React$useState14[0],setIsDataAvailable=_React$useState14[1];var _React$useState15=React.useState(true),_React$useState16=_slicedToArray(_React$useState15,2),showAll=_React$useState16[0],setShowAll=_React$useState16[1];var _React$useState17=React.useState(),_React$useState18=_slicedToArray(_React$useState17,2),plotDataForComparison=_React$useState18[0],setPlotDataForComparison=_React$useState18[1];var _React$useState19=React.useState([]),_React$useState20=_slicedToArray(_React$useState19,2),totalValidWorkflowRuns=_React$useState20[0],setTotalValidWorkflowRuns=_React$useState20[1];var _React$useState21=React.useState(0),_React$useState22=_slicedToArray(_React$useState21,2),totalValidWorkflowRunsCount=_React$useState22[0],setTotalValidWorkflowRunsCount=_React$useState22[1];var projectID=getProjectID();// Apollo query to get the scheduled workflow data\nvar _useQuery=useQuery(WORKFLOW_LIST_DETAILS,{variables:{workflowInput:{project_id:projectID}},fetchPolicy:'cache-and-network'}),data=_useQuery.data,loading=_useQuery.loading,error=_useQuery.error;var getClusters=function getClusters(searchingData){var uniqueList=[];searchingData.forEach(function(data){if(!uniqueList.includes(data.cluster_name)){uniqueList.push(data.cluster_name);}});setClusters(uniqueList);};var handleChangePage=function handleChangePage(event,newPage){setPage(newPage);};var handleChangeRowsPerPage=function handleChangeRowsPerPage(event){setRowsPerPage(parseInt(event.target.value,10));setPage(0);};var handleSelectAllClick=function handleSelectAllClick(event){if(event.target.checked){var newSelecteds=displayData.map(function(n){return n.workflow_id;});setSelected(newSelecteds);return;}setSelected([]);};var handleClick=function handleClick(name){var selectedIndex=selected.indexOf(name);var newSelected=[];if(selectedIndex===-1){newSelected=newSelected.concat(selected,name);}else if(selectedIndex===0){newSelected=newSelected.concat(selected.slice(1));}else if(selectedIndex===selected.length-1){newSelected=newSelected.concat(selected.slice(0,-1));}else if(selectedIndex>0){newSelected=newSelected.concat(selected.slice(0,selectedIndex),selected.slice(selectedIndex+1));}setSelected(newSelected);};var searchingDataRetriever=function searchingDataRetriever(){var searchingData=[];if(compare===false){var _data$ListWorkflow$wo;searchingData=(_data$ListWorkflow$wo=data===null||data===void 0?void 0:data.ListWorkflow.workflows)!==null&&_data$ListWorkflow$wo!==void 0?_data$ListWorkflow$wo:[];}else{var searchedData=[];selected.forEach(function(workflowID){data===null||data===void 0?void 0:data.ListWorkflow.workflows.forEach(function(workflow){if(workflow.workflow_id===workflowID){searchedData.push(workflow);}});});searchingData=searchedData;}return searchingData;};var randomColor=function randomColor(){return Math.floor(Math.random()*16777215).toString(16);};// Function to convert UNIX time in format of DD MMM YYY\nvar formatDate=function formatDate(date){var updated=new Date(parseInt(date,10)*1000).toString();var resDate=moment(updated).format('dddd DD/MM/YYYY HH:mm:ss Z');return resDate;};var generateDataForComparing=function generateDataForComparing(){var plotData={xData:{Hourly:[[]],Daily:[[]],Monthly:[[]]},yData:{Hourly:[[]],Daily:[[]],Monthly:[[]]},labels:[],colors:[]};var totalValidRuns=0;var totalValidWorkflowRuns=[];var timeSeriesArray=[];selected.forEach(function(workflow){var workflowData=data===null||data===void 0?void 0:data.ListWorkflow.workflows.filter(function match(wkf){return wkf.workflow_id===workflow;});var runs=workflowData?workflowData[0].workflow_runs:[];var workflowTimeSeriesData=[];var isWorkflowValid=false;try{runs===null||runs===void 0?void 0:runs.forEach(function(data){try{(function(){var executionData=JSON.parse(data.execution_data);var nodes=executionData.nodes;var experimentTestResultsArrayPerWorkflowRun=[];var totalExperimentsPassed=0;var weightsSum=0;var testDetails={testNames:[],testWeights:[],testResults:[]};var isValid=false;for(var _i=0,_Object$keys=Object.keys(nodes);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];var node=nodes[key];if(node.chaosData){(function(){var chaosData=node.chaosData;if(chaosData.experimentVerdict==='Pass'||chaosData.experimentVerdict==='Fail'){var weightageMap=workflowData?workflowData[0].weightages:[];weightageMap.forEach(function(weightage){if(weightage.experiment_name===chaosData.experimentName){if(chaosData.experimentVerdict==='Pass'){experimentTestResultsArrayPerWorkflowRun.push(weightage.weightage*parseInt(chaosData.probeSuccessPercentage,10)/100);totalExperimentsPassed+=1;}if(chaosData.experimentVerdict==='Fail'){experimentTestResultsArrayPerWorkflowRun.push(0);}if(chaosData.experimentVerdict==='Pass'||chaosData.experimentVerdict==='Fail'){weightsSum+=weightage.weightage;testDetails.testNames.push(weightage.experiment_name);testDetails.testWeights.push(weightage.weightage);testDetails.testResults.push(chaosData.experimentVerdict);isValid=true;isWorkflowValid=true;}}});}})();}}if(executionData.event_type==='UPDATE'&&isValid){totalValidRuns+=1;totalValidWorkflowRuns.push({cluster_name:workflowData?workflowData[0].cluster_name:'',workflow_name:workflowData?workflowData[0].workflow_name:'',run_date:formatDate(executionData.creationTimestamp),tests_passed:totalExperimentsPassed,tests_failed:experimentTestResultsArrayPerWorkflowRun.length-totalExperimentsPassed,resilience_score:experimentTestResultsArrayPerWorkflowRun.length?parseFloat((experimentTestResultsArrayPerWorkflowRun.reduce(function(a,b){return a+b;},0)/weightsSum*100).toFixed(2)):0,test_details:testDetails});workflowTimeSeriesData.push({date:data.last_updated,value:experimentTestResultsArrayPerWorkflowRun.length?parseFloat((experimentTestResultsArrayPerWorkflowRun.reduce(function(a,b){return a+b;},0)/weightsSum*100).toFixed(2)):0});}})();}catch(error){console.error(error);}});if(isWorkflowValid){plotData.labels.push(workflowData?workflowData[0].workflow_name:'');plotData.colors.push(\"#\".concat(randomColor()));timeSeriesArray.push(workflowTimeSeriesData);}}catch(error){console.error(error);}});if(plotData.labels.length===0){setIsDataAvailable(false);}timeSeriesArray.forEach(function(workflowTimeSeriesData,index){var hourlyGroupedResults=_.groupBy(workflowTimeSeriesData,function(data){return moment.unix(parseInt(data.date,10)).startOf('hour').format('YYYY-MM-DD HH:mm:ss');});var dailyGroupedResults=_.groupBy(workflowTimeSeriesData,function(data){return moment.unix(parseInt(data.date,10)).startOf('day').format('YYYY-MM-DD');});var monthlyGroupedResults=_.groupBy(workflowTimeSeriesData,function(data){return moment.unix(parseInt(data.date,10)).startOf('month').format('YYYY-MM');});plotData.xData.Hourly[index]=[];plotData.yData.Hourly[index]=[];Object.keys(hourlyGroupedResults).forEach(function(hour){var total=0;hourlyGroupedResults[hour].forEach(function(data){total+=data.value;});plotData.xData.Hourly[index].push(hour);plotData.yData.Hourly[index].push(total/hourlyGroupedResults[hour].length);});plotData.xData.Daily[index]=[];plotData.yData.Daily[index]=[];Object.keys(dailyGroupedResults).forEach(function(day){var total=0;dailyGroupedResults[day].forEach(function(data){total+=data.value;});plotData.xData.Daily[index].push(day);plotData.yData.Daily[index].push(total/dailyGroupedResults[day].length);});plotData.xData.Monthly[index]=[];plotData.yData.Monthly[index]=[];Object.keys(monthlyGroupedResults).forEach(function(month){var total=0;monthlyGroupedResults[month].forEach(function(data){total+=data.value;});plotData.xData.Monthly[index].push(month);plotData.yData.Monthly[index].push(total/monthlyGroupedResults[month].length);});});setPlotDataForComparison(plotData);setTotalValidWorkflowRuns(totalValidWorkflowRuns);setTotalValidWorkflowRunsCount(totalValidRuns);};var CallbackForComparing=function CallbackForComparing(compareWorkflows){setCompare(compareWorkflows);var payload=[];selected.forEach(function(workflow){displayData.forEach(function(displayWorkflow,i){if(displayWorkflow.workflow_id===workflow&&data){payload.push(data===null||data===void 0?void 0:data.ListWorkflow.workflows[i]);}});});generateDataForComparing();setDisplayData(payload);};var generatePDF=function generatePDF(){if(document.getElementById('analytics')){var heads=[{cluster_name:'Cluster Name',workflow_name:'Workflow Name',run_date:'Date-Time',tests_passed:'#Expts. Passed',tests_failed:'#Expts. Failed',resilience_score:'Reliability Score',test_details_string:'Experiment Details\\nName\\nWeight / Verdict'}];var rows=[];totalValidWorkflowRuns.forEach(function(run){var _run$test_details;var detail_string='';(_run$test_details=run.test_details)===null||_run$test_details===void 0?void 0:_run$test_details.testNames.forEach(function(experiment,index){var _run$test_details2,_run$test_details3;detail_string+=\"\".concat(experiment,\"\\n\").concat((_run$test_details2=run.test_details)===null||_run$test_details2===void 0?void 0:_run$test_details2.testWeights[index],\" / \").concat((_run$test_details3=run.test_details)===null||_run$test_details3===void 0?void 0:_run$test_details3.testResults[index],\"\\n\");});rows.push({cluster_name:run.cluster_name,workflow_name:run.workflow_name,run_date:run.run_date,tests_passed:run.tests_passed.toString(),tests_failed:run.tests_failed.toString(),resilience_score:\"\".concat(parseFloat(run.resilience_score).toFixed(2).toString(),\"%\"),test_details_string:detail_string});});var input=document.getElementById('analytics');html2canvas(input).then(function(canvas){var imgWidth=206;var imgHeight=canvas.height*imgWidth/canvas.width;var contentDataURL=canvas.toDataURL('image/png');var doc=new jsPDF('p','mm','a4');// A4 size page of PDF\nvar position=-54;var version=process.env.REACT_APP_KB_CHAOS_VERSION;doc.setFillColor(255,255,255);doc.setFontSize(10);doc.setTextColor(0,0,0);doc.setDrawColor(0,0,0);doc.text(\"Litmus Portal Report Version: \".concat(version),10,10);doc.text('Time of Generation:',10,15);doc.text(new Date().toString(),42,15);doc.text('Total Number of Chaos Workflow Schedules under consideration:',10,20);doc.text(plotDataForComparison?plotDataForComparison.labels.length.toString():'0',114,20);doc.text('Total Number of Chaos Workflow Runs under consideration:',10,25);doc.text(totalValidWorkflowRunsCount.toString(),105,25);var img=new Image();img.src='/icons/LitmusLogo.png';doc.addImage(img,'png',165,10,30,12.5);doc.line(0,33,300,33);doc.setLineWidth(5.0);doc.text('Workflow Run Details Table & Workflow Schedules Table with Resilience Score Comparison Graph',27.5,39);try{autoTable(doc,{head:heads,body:rows,startY:44,margin:{horizontal:2},styles:{overflow:'linebreak',font:'Ubuntu',lineColor:[0,0,0]},bodyStyles:{valign:'top',fillColor:[245,246,255],textColor:[0,0,0],lineWidth:0.05},tableLineColor:[0,0,0],tableLineWidth:0.05,headStyles:{fillColor:[245,246,255],textColor:[0,0,0],lineWidth:0.05,lineColor:[0,0,0]},alternateRowStyles:{fillColor:[245,246,255]},theme:'striped',showHead:'firstPage'});}catch(err){console.error(err);}doc.addPage();doc.addImage(contentDataURL,'PNG',2,showAll?position:-55,imgWidth,imgHeight);doc.save('litmus-portal-analytics.pdf');// Generated PDF\n});}};useEffect(function(){setDisplayData(data?data.ListWorkflow.workflows:[]);getClusters(data?data.ListWorkflow.workflows:[]);},[data]);useEffect(function(){var payload=searchingDataRetriever().filter(function(wkf){return filter.searchTokens.every(function(s){return wkf.workflow_name.toLowerCase().includes(s)||(wkf.cluster_name!==undefined?wkf.cluster_name.toLowerCase().includes(s):false);});}).filter(function(data){return filter.selectedCluster==='All'?true:data.cluster_name===filter.selectedCluster;}).filter(function(data){return filter.range.startDate==='all'||filter.range.startDate&&filter.range.endDate===undefined?true:parseInt(data.created_at,10)*1000>=new Date(moment(filter.range.startDate).format()).getTime()&&parseInt(data.created_at,10)*1000<=new Date(new Date(moment(filter.range.endDate).format()).setHours(23,59,59)).getTime();}).sort(function(a,b){// Sorting based on unique fields\nif(filter.sortData.name.sort){var x=a.workflow_name;var y=b.workflow_name;return filter.sortData.name.ascending?sortAlphaAsc(x,y):sortAlphaDesc(x,y);}if(filter.sortData.startDate.sort){var _x=parseInt(a.created_at,10);var _y=parseInt(b.created_at,10);return filter.sortData.startDate.ascending?sortNumAsc(_y,_x):sortNumDesc(_y,_x);}if(filter.sortData.cluster.sort){var _x2=a.cluster_name;var _y2=b.cluster_name;return filter.sortData.cluster.ascending?sortAlphaAsc(_x2,_y2):sortAlphaDesc(_x2,_y2);}return 0;});setDisplayData(payload);setShowAll(false);getClusters(searchingDataRetriever());},[filter,compare]);return/*#__PURE__*/React.createElement(\"div\",{className:classes.root,id:\"analytics\"},/*#__PURE__*/React.createElement(WorkflowGraphs,{data:data}),/*#__PURE__*/React.createElement(\"div\",{className:classes.analyticsDiv},/*#__PURE__*/React.createElement(Typography,{className:classes.heading},/*#__PURE__*/React.createElement(\"strong\",null,' ',compare===true?/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"back\",\"aria-haspopup\":\"true\",onClick:function onClick(){return setCompare(false);},className:classes.buttonBack},/*#__PURE__*/React.createElement(ExpandMoreTwoToneIcon,{htmlColor:palette.primary.main,className:classes.buttonBackStyle})):/*#__PURE__*/React.createElement(\"div\",null),' ',\"Workflow comparison\")),/*#__PURE__*/React.createElement(Typography,{className:classes.description},compare===true?'Choose the right workflows and get comparative results':'Choose workflows to compare their resilience scores'),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"div\",{className:classes.tableFix},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"section\",{className:\"Heading section\"},/*#__PURE__*/React.createElement(TableToolBar,{numSelected:selected.length,searchToken:filter.searchTokens[0],handleSearch:function handleSearch(event,token){return setFilter(_objectSpread(_objectSpread({},filter),{},{searchTokens:(event!==undefined?event.target.value:token||'').toLowerCase().split(' ').filter(function(s){return s!=='';})}));},clusters:clusters,callbackToSetCluster:function callbackToSetCluster(clusterName){setFilter(_objectSpread(_objectSpread({},filter),{},{selectedCluster:clusterName}));},callbackToSetRange:function callbackToSetRange(selectedStartDate,selectedEndDate){setFilter(_objectSpread(_objectSpread({},filter),{},{range:{startDate:selectedStartDate,endDate:selectedEndDate}}));},callbackToCompare:CallbackForComparing,callbackToExport:function callbackToExport(){return generatePDF();},comparisonState:compare,reInitialize:compare===false})),/*#__PURE__*/React.createElement(\"section\",{className:\"table section\"},/*#__PURE__*/React.createElement(Paper,{className:classes.tableBody},/*#__PURE__*/React.createElement(TableContainer,{className:compare===false&&selected.length<=2?classes.tableMain:compare===false&&selected.length>2?classes.tableMainShowAll:showAll===true&&selected.length<=3?classes.tableMainShowAll:showAll===true&&selected.length>3?classes.tableMain:classes.tableMainCompare},/*#__PURE__*/React.createElement(Table,{stickyHeader:true,\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHeader,{onSelectAllClick:handleSelectAllClick,numSelected:selected.length,rowCount:displayData.length,comparisonState:compare,callBackToSort:function callBackToSort(sortConfigurations){setFilter(_objectSpread(_objectSpread({},filter),{},{sortData:sortConfigurations}));}}),/*#__PURE__*/React.createElement(TableBody,null,loading?/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{colSpan:6},/*#__PURE__*/React.createElement(Loader,null))):error?/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{colSpan:6},/*#__PURE__*/React.createElement(Typography,{align:\"center\",className:classes.error},t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.unableToFetch')))):displayData.length?displayData.slice(0).slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(function(data,index){var isItemSelected=isSelected(data.workflow_id);var labelId=\"enhanced-table-checkbox-\".concat(index);return/*#__PURE__*/React.createElement(TableRow,{hover:true,onClick:function onClick(){if(compare===false){handleClick(data.workflow_id);}},role:\"checkbox\",\"aria-checked\":isItemSelected,tabIndex:-1,key:data.workflow_id,selected:isItemSelected,classes:{selected:classes.tableRowSelected}},/*#__PURE__*/React.createElement(TableData,{data:data,itemSelectionStatus:isItemSelected,labelIdentifier:labelId,comparisonState:compare}));}):/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{colSpan:6,className:classes.error},/*#__PURE__*/React.createElement(Typography,{align:\"center\"},t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.noRecords')))),emptyRows>0&&/*#__PURE__*/React.createElement(TableRow,{style:{height:'20rem'}},/*#__PURE__*/React.createElement(TableCell,{colSpan:6}))))),!compare||showAll?/*#__PURE__*/React.createElement(TablePagination,{rowsPerPageOptions:[5,10,25,50],component:\"div\",count:displayData.length,rowsPerPage:rowsPerPage,page:page,onChangePage:handleChangePage,onChangeRowsPerPage:handleChangeRowsPerPage,className:classes.pagination}):/*#__PURE__*/React.createElement(Paper,{elevation:0,className:classes.seeAllPaper,onClick:function onClick(){return setShowAll(true);}},/*#__PURE__*/React.createElement(Typography,{className:classes.seeAllText,variant:\"body2\"},' ',/*#__PURE__*/React.createElement(\"strong\",null,t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.showSelectedWorkflows'),' ',\"(\",selected.length,\")\",' '),' ')))))),isDataAvailable===true?/*#__PURE__*/React.createElement(\"div\",null,compare===true?/*#__PURE__*/React.createElement(Paper,{variant:\"outlined\",className:classes.backgroundFix},/*#__PURE__*/React.createElement(\"div\",{className:classes.comparisonHeadingFix},/*#__PURE__*/React.createElement(Typography,{className:classes.heading},/*#__PURE__*/React.createElement(\"strong\",null,t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.resilienceScoreComparison'))),/*#__PURE__*/React.createElement(Typography,{className:classes.description},t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.comparativeResults')),plotDataForComparison?/*#__PURE__*/React.createElement(ResilienceScoreComparisonPlot,{xData:plotDataForComparison.xData,yData:plotDataForComparison.yData,labels:plotDataForComparison.labels,colors:plotDataForComparison.colors}):/*#__PURE__*/React.createElement(\"div\",null))):/*#__PURE__*/React.createElement(\"div\",null)):/*#__PURE__*/React.createElement(Paper,{variant:\"outlined\",className:classes.noData},/*#__PURE__*/React.createElement(Typography,{variant:\"h5\",align:\"center\",className:classes.error},t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.noRuns')),' '));};export default WorkflowComparisonTable;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowComparisonTable/index.tsx"],"names":["useQuery","IconButton","Paper","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Typography","useTheme","ExpandMoreTwoToneIcon","html2canvas","jsPDF","autoTable","_","moment","React","useEffect","useState","useTranslation","Loader","WORKFLOW_LIST_DETAILS","getProjectID","sortAlphaAsc","sortAlphaDesc","sortNumAsc","sortNumDesc","ResilienceScoreComparisonPlot","WorkflowGraphs","useStyles","TableData","TableHeader","TableToolBar","WorkflowComparisonTable","classes","palette","t","range","startDate","endDate","selectedCluster","sortData","name","sort","ascending","cluster","searchTokens","filter","setFilter","displayData","setDisplayData","clusters","setClusters","page","setPage","rowsPerPage","setRowsPerPage","selected","setSelected","isSelected","indexOf","emptyRows","Math","min","length","compare","setCompare","isDataAvailable","setIsDataAvailable","showAll","setShowAll","plotDataForComparison","setPlotDataForComparison","totalValidWorkflowRuns","setTotalValidWorkflowRuns","totalValidWorkflowRunsCount","setTotalValidWorkflowRunsCount","projectID","variables","workflowInput","project_id","fetchPolicy","data","loading","error","getClusters","searchingData","uniqueList","forEach","includes","cluster_name","push","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleSelectAllClick","checked","newSelecteds","map","n","workflow_id","handleClick","selectedIndex","newSelected","concat","slice","searchingDataRetriever","ListWorkflow","workflows","searchedData","workflowID","workflow","randomColor","floor","random","toString","formatDate","date","updated","Date","resDate","format","generateDataForComparing","plotData","xData","Hourly","Daily","Monthly","yData","labels","colors","totalValidRuns","timeSeriesArray","workflowData","match","wkf","runs","workflow_runs","workflowTimeSeriesData","isWorkflowValid","executionData","JSON","parse","execution_data","nodes","experimentTestResultsArrayPerWorkflowRun","totalExperimentsPassed","weightsSum","testDetails","testNames","testWeights","testResults","isValid","Object","keys","key","node","chaosData","experimentVerdict","weightageMap","weightages","weightage","experiment_name","experimentName","probeSuccessPercentage","event_type","workflow_name","run_date","creationTimestamp","tests_passed","tests_failed","resilience_score","parseFloat","reduce","a","b","toFixed","test_details","last_updated","console","index","hourlyGroupedResults","groupBy","unix","startOf","dailyGroupedResults","monthlyGroupedResults","hour","total","day","month","CallbackForComparing","compareWorkflows","payload","displayWorkflow","i","generatePDF","document","getElementById","heads","test_details_string","rows","run","detail_string","experiment","input","then","canvas","imgWidth","imgHeight","height","width","contentDataURL","toDataURL","doc","position","version","process","env","REACT_APP_KB_CHAOS_VERSION","setFillColor","setFontSize","setTextColor","setDrawColor","text","img","Image","src","addImage","line","setLineWidth","head","body","startY","margin","horizontal","styles","overflow","font","lineColor","bodyStyles","valign","fillColor","textColor","lineWidth","tableLineColor","tableLineWidth","headStyles","alternateRowStyles","theme","showHead","err","addPage","save","every","s","toLowerCase","undefined","created_at","getTime","setHours","x","y","root","analyticsDiv","heading","buttonBack","primary","main","buttonBackStyle","description","tableFix","token","split","clusterName","selectedStartDate","selectedEndDate","tableBody","tableMain","tableMainShowAll","tableMainCompare","sortConfigurations","isItemSelected","labelId","tableRowSelected","pagination","seeAllPaper","seeAllText","backgroundFix","comparisonHeadingFix","noData"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-loop-func */\nimport { useQuery } from '@apollo/client';\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as _ from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../../components/Loader';\nimport { WORKFLOW_LIST_DETAILS } from '../../../../graphql/queries';\nimport {\n  ExecutionData,\n  ListWorkflowsInput,\n  ScheduledWorkflow,\n  ScheduledWorkflows,\n  WeightageMap,\n} from '../../../../models/graphql/workflowListData';\nimport { getProjectID } from '../../../../utils/getSearchParams';\nimport {\n  sortAlphaAsc,\n  sortAlphaDesc,\n  sortNumAsc,\n  sortNumDesc,\n} from '../../../../utils/sort';\nimport ResilienceScoreComparisonPlot from '../WorkflowComparisonPlot/index';\nimport WorkflowGraphs from '../WorkflowGraphs';\nimport useStyles from './styles';\nimport TableData from './TableData';\nimport TableHeader from './TableHeader';\nimport TableToolBar from './TableToolbar';\n\ninterface RangeType {\n  startDate: string;\n  endDate: string;\n}\n\ninterface SortData {\n  startDate: { sort: boolean; ascending: boolean };\n  name: { sort: boolean; ascending: boolean };\n  cluster: { sort: boolean; ascending: boolean };\n}\n\ninterface Filter {\n  range: RangeType;\n  selectedCluster: string;\n  sortData: SortData;\n  searchTokens: string[];\n}\n\ninterface ResilienceScoreComparisonPlotProps {\n  xData: { Hourly: string[][]; Daily: string[][]; Monthly: string[][] };\n  yData: { Hourly: number[][]; Daily: number[][]; Monthly: number[][] };\n  labels: string[];\n  colors: string[];\n}\n\ninterface DatedResilienceScore {\n  date: string;\n  value: number;\n}\n\ninterface TestDetails {\n  testNames: string[];\n  testWeights: number[];\n  testResults: string[];\n}\n\ninterface WorkflowDataForExport {\n  cluster_name: string;\n  workflow_name: string;\n  run_date: string;\n  tests_passed: number | string;\n  tests_failed: number | string;\n  resilience_score: number | string;\n  test_details?: TestDetails;\n  test_details_string?: string;\n}\n\nconst WorkflowComparisonTable = () => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n  const { t } = useTranslation();\n  const [filter, setFilter] = React.useState<Filter>({\n    range: { startDate: 'all', endDate: 'all' },\n    selectedCluster: 'All',\n    sortData: {\n      name: { sort: false, ascending: true },\n      startDate: { sort: true, ascending: true },\n      cluster: { sort: false, ascending: true },\n    },\n    searchTokens: [''],\n  });\n  const [displayData, setDisplayData] = useState<ScheduledWorkflow[]>([]);\n  const [clusters, setClusters] = React.useState<string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, displayData.length - page * rowsPerPage);\n  const [compare, setCompare] = React.useState<Boolean>(false);\n  const [isDataAvailable, setIsDataAvailable] = React.useState<Boolean>(true);\n  const [showAll, setShowAll] = React.useState<Boolean>(true);\n  const [plotDataForComparison, setPlotDataForComparison] =\n    React.useState<ResilienceScoreComparisonPlotProps>();\n  const [totalValidWorkflowRuns, setTotalValidWorkflowRuns] = React.useState<\n    WorkflowDataForExport[]\n  >([]);\n  const [totalValidWorkflowRunsCount, setTotalValidWorkflowRunsCount] =\n    React.useState<number>(0);\n\n  const projectID = getProjectID();\n\n  // Apollo query to get the scheduled workflow data\n  const { data, loading, error } = useQuery<\n    ScheduledWorkflows,\n    ListWorkflowsInput\n  >(WORKFLOW_LIST_DETAILS, {\n    variables: { workflowInput: { project_id: projectID } },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const getClusters = (searchingData: ScheduledWorkflow[]) => {\n    const uniqueList: string[] = [];\n    searchingData.forEach((data) => {\n      if (!uniqueList.includes(data.cluster_name)) {\n        uniqueList.push(data.cluster_name);\n      }\n    });\n    setClusters(uniqueList);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = displayData.map(\n        (n: ScheduledWorkflow) => n.workflow_id\n      );\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const searchingDataRetriever = () => {\n    let searchingData: ScheduledWorkflow[] = [];\n    if (compare === false) {\n      searchingData = data?.ListWorkflow.workflows ?? [];\n    } else {\n      const searchedData: ScheduledWorkflow[] = [];\n      selected.forEach((workflowID) => {\n        data?.ListWorkflow.workflows.forEach((workflow) => {\n          if (workflow.workflow_id === workflowID) {\n            searchedData.push(workflow);\n          }\n        });\n      });\n      searchingData = searchedData;\n    }\n    return searchingData;\n  };\n\n  const randomColor = () => Math.floor(Math.random() * 16777215).toString(16);\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('dddd DD/MM/YYYY HH:mm:ss Z');\n    return resDate;\n  };\n\n  const generateDataForComparing = () => {\n    const plotData: ResilienceScoreComparisonPlotProps = {\n      xData: {\n        Hourly: [[]],\n        Daily: [[]],\n        Monthly: [[]],\n      },\n      yData: {\n        Hourly: [[]],\n        Daily: [[]],\n        Monthly: [[]],\n      },\n      labels: [],\n      colors: [],\n    };\n    let totalValidRuns: number = 0;\n    const totalValidWorkflowRuns: WorkflowDataForExport[] = [];\n    const timeSeriesArray: DatedResilienceScore[][] = [];\n    selected.forEach((workflow) => {\n      const workflowData = data?.ListWorkflow.workflows.filter(function match(\n        wkf\n      ) {\n        return wkf.workflow_id === workflow;\n      });\n      const runs = workflowData ? workflowData[0].workflow_runs : [];\n      const workflowTimeSeriesData: DatedResilienceScore[] = [];\n      let isWorkflowValid: boolean = false;\n      try {\n        runs?.forEach((data) => {\n          try {\n            const executionData: ExecutionData = JSON.parse(\n              data.execution_data\n            );\n            const { nodes } = executionData;\n            const experimentTestResultsArrayPerWorkflowRun: number[] = [];\n            let totalExperimentsPassed: number = 0;\n            let weightsSum: number = 0;\n            const testDetails: TestDetails = {\n              testNames: [],\n              testWeights: [],\n              testResults: [],\n            };\n            let isValid: boolean = false;\n            for (const key of Object.keys(nodes)) {\n              const node = nodes[key];\n              if (node.chaosData) {\n                const { chaosData } = node;\n                if (\n                  chaosData.experimentVerdict === 'Pass' ||\n                  chaosData.experimentVerdict === 'Fail'\n                ) {\n                  const weightageMap: WeightageMap[] = workflowData\n                    ? workflowData[0].weightages\n                    : [];\n                  weightageMap.forEach((weightage) => {\n                    if (\n                      weightage.experiment_name === chaosData.experimentName\n                    ) {\n                      if (chaosData.experimentVerdict === 'Pass') {\n                        experimentTestResultsArrayPerWorkflowRun.push(\n                          (weightage.weightage *\n                            parseInt(chaosData.probeSuccessPercentage, 10)) /\n                            100\n                        );\n                        totalExperimentsPassed += 1;\n                      }\n                      if (chaosData.experimentVerdict === 'Fail') {\n                        experimentTestResultsArrayPerWorkflowRun.push(0);\n                      }\n                      if (\n                        chaosData.experimentVerdict === 'Pass' ||\n                        chaosData.experimentVerdict === 'Fail'\n                      ) {\n                        weightsSum += weightage.weightage;\n                        testDetails.testNames.push(weightage.experiment_name);\n                        testDetails.testWeights.push(weightage.weightage);\n                        testDetails.testResults.push(\n                          chaosData.experimentVerdict\n                        );\n                        isValid = true;\n                        isWorkflowValid = true;\n                      }\n                    }\n                  });\n                }\n              }\n            }\n            if (executionData.event_type === 'UPDATE' && isValid) {\n              totalValidRuns += 1;\n              totalValidWorkflowRuns.push({\n                cluster_name: workflowData ? workflowData[0].cluster_name : '',\n                workflow_name: workflowData\n                  ? workflowData[0].workflow_name\n                  : '',\n                run_date: formatDate(executionData.creationTimestamp),\n                tests_passed: totalExperimentsPassed,\n                tests_failed:\n                  experimentTestResultsArrayPerWorkflowRun.length -\n                  totalExperimentsPassed,\n                resilience_score:\n                  experimentTestResultsArrayPerWorkflowRun.length\n                    ? parseFloat(\n                        (\n                          (experimentTestResultsArrayPerWorkflowRun.reduce(\n                            (a, b) => a + b,\n                            0\n                          ) /\n                            weightsSum) *\n                          100\n                        ).toFixed(2)\n                      )\n                    : 0,\n                test_details: testDetails,\n              });\n              workflowTimeSeriesData.push({\n                date: data.last_updated,\n                value: experimentTestResultsArrayPerWorkflowRun.length\n                  ? parseFloat(\n                      (\n                        (experimentTestResultsArrayPerWorkflowRun.reduce(\n                          (a, b) => a + b,\n                          0\n                        ) /\n                          weightsSum) *\n                        100\n                      ).toFixed(2)\n                    )\n                  : 0,\n              });\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        });\n        if (isWorkflowValid) {\n          plotData.labels.push(\n            workflowData ? workflowData[0].workflow_name : ''\n          );\n          plotData.colors.push(`#${randomColor()}`);\n          timeSeriesArray.push(workflowTimeSeriesData);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n\n    if (plotData.labels.length === 0) {\n      setIsDataAvailable(false);\n    }\n\n    timeSeriesArray.forEach((workflowTimeSeriesData, index) => {\n      const hourlyGroupedResults = _.groupBy(workflowTimeSeriesData, (data) =>\n        moment\n          .unix(parseInt(data.date, 10))\n          .startOf('hour')\n          .format('YYYY-MM-DD HH:mm:ss')\n      );\n      const dailyGroupedResults = _.groupBy(workflowTimeSeriesData, (data) =>\n        moment.unix(parseInt(data.date, 10)).startOf('day').format('YYYY-MM-DD')\n      );\n      const monthlyGroupedResults = _.groupBy(workflowTimeSeriesData, (data) =>\n        moment.unix(parseInt(data.date, 10)).startOf('month').format('YYYY-MM')\n      );\n      plotData.xData.Hourly[index] = [];\n      plotData.yData.Hourly[index] = [];\n      Object.keys(hourlyGroupedResults).forEach((hour) => {\n        let total = 0;\n        hourlyGroupedResults[hour].forEach((data) => {\n          total += data.value;\n        });\n        plotData.xData.Hourly[index].push(hour);\n        plotData.yData.Hourly[index].push(\n          total / hourlyGroupedResults[hour].length\n        );\n      });\n      plotData.xData.Daily[index] = [];\n      plotData.yData.Daily[index] = [];\n      Object.keys(dailyGroupedResults).forEach((day) => {\n        let total = 0;\n        dailyGroupedResults[day].forEach((data) => {\n          total += data.value;\n        });\n        plotData.xData.Daily[index].push(day);\n        plotData.yData.Daily[index].push(\n          total / dailyGroupedResults[day].length\n        );\n      });\n      plotData.xData.Monthly[index] = [];\n      plotData.yData.Monthly[index] = [];\n      Object.keys(monthlyGroupedResults).forEach((month) => {\n        let total = 0;\n        monthlyGroupedResults[month].forEach((data) => {\n          total += data.value;\n        });\n        plotData.xData.Monthly[index].push(month);\n        plotData.yData.Monthly[index].push(\n          total / monthlyGroupedResults[month].length\n        );\n      });\n    });\n    setPlotDataForComparison(plotData);\n    setTotalValidWorkflowRuns(totalValidWorkflowRuns);\n    setTotalValidWorkflowRunsCount(totalValidRuns);\n  };\n\n  const CallbackForComparing = (compareWorkflows: boolean) => {\n    setCompare(compareWorkflows);\n    const payload: ScheduledWorkflow[] = [];\n    selected.forEach((workflow) => {\n      displayData.forEach((displayWorkflow, i) => {\n        if (displayWorkflow.workflow_id === workflow && data) {\n          payload.push(data?.ListWorkflow.workflows[i]);\n        }\n      });\n    });\n    generateDataForComparing();\n    setDisplayData(payload);\n  };\n\n  const generatePDF = () => {\n    if (document.getElementById('analytics')) {\n      const heads = [\n        {\n          cluster_name: 'Cluster Name',\n          workflow_name: 'Workflow Name',\n          run_date: 'Date-Time',\n          tests_passed: '#Expts. Passed',\n          tests_failed: '#Expts. Failed',\n          resilience_score: 'Reliability Score',\n          test_details_string: 'Experiment Details\\nName\\nWeight / Verdict',\n        },\n      ];\n      const rows: any[] = [];\n      totalValidWorkflowRuns.forEach((run) => {\n        let detail_string = '';\n        run.test_details?.testNames.forEach((experiment, index) => {\n          detail_string += `${experiment}\\n${run.test_details?.testWeights[index]} / ${run.test_details?.testResults[index]}\\n`;\n        });\n        rows.push({\n          cluster_name: run.cluster_name,\n          workflow_name: run.workflow_name,\n          run_date: run.run_date,\n          tests_passed: run.tests_passed.toString(),\n          tests_failed: run.tests_failed.toString(),\n          resilience_score: `${parseFloat(run.resilience_score as string)\n            .toFixed(2)\n            .toString()}%`,\n          test_details_string: detail_string,\n        });\n      });\n\n      const input: HTMLElement | null = document.getElementById('analytics');\n      html2canvas(input as HTMLElement).then((canvas) => {\n        const imgWidth = 206;\n        const imgHeight = (canvas.height * imgWidth) / canvas.width;\n        const contentDataURL = canvas.toDataURL('image/png');\n        const doc = new jsPDF('p', 'mm', 'a4'); // A4 size page of PDF\n        const position = -54;\n        const version = process.env.REACT_APP_KB_CHAOS_VERSION;\n        doc.setFillColor(255, 255, 255);\n        doc.setFontSize(10);\n        doc.setTextColor(0, 0, 0);\n        doc.setDrawColor(0, 0, 0);\n        doc.text(`Litmus Portal Report Version: ${version}`, 10, 10);\n        doc.text('Time of Generation:', 10, 15);\n        doc.text(new Date().toString(), 42, 15);\n        doc.text(\n          'Total Number of Chaos Workflow Schedules under consideration:',\n          10,\n          20\n        );\n        doc.text(\n          plotDataForComparison\n            ? plotDataForComparison.labels.length.toString()\n            : '0',\n          114,\n          20\n        );\n        doc.text(\n          'Total Number of Chaos Workflow Runs under consideration:',\n          10,\n          25\n        );\n        doc.text(totalValidWorkflowRunsCount.toString(), 105, 25);\n        const img = new Image();\n        img.src = '/icons/LitmusLogo.png';\n        doc.addImage(img, 'png', 165, 10, 30, 12.5);\n        doc.line(0, 33, 300, 33);\n        doc.setLineWidth(5.0);\n        doc.text(\n          'Workflow Run Details Table & Workflow Schedules Table with Resilience Score Comparison Graph',\n          27.5,\n          39\n        );\n        try {\n          autoTable(doc, {\n            head: heads,\n            body: rows,\n            startY: 44,\n            margin: {\n              horizontal: 2,\n            },\n            styles: {\n              overflow: 'linebreak',\n              font: 'Ubuntu',\n              lineColor: [0, 0, 0],\n            },\n            bodyStyles: {\n              valign: 'top',\n              fillColor: [245, 246, 255],\n              textColor: [0, 0, 0],\n              lineWidth: 0.05,\n            },\n            tableLineColor: [0, 0, 0],\n            tableLineWidth: 0.05,\n            headStyles: {\n              fillColor: [245, 246, 255],\n              textColor: [0, 0, 0],\n              lineWidth: 0.05,\n              lineColor: [0, 0, 0],\n            },\n            alternateRowStyles: {\n              fillColor: [245, 246, 255],\n            },\n            theme: 'striped',\n            showHead: 'firstPage',\n          });\n        } catch (err) {\n          console.error(err);\n        }\n        doc.addPage();\n        doc.addImage(\n          contentDataURL,\n          'PNG',\n          2,\n          showAll ? position : -55,\n          imgWidth,\n          imgHeight\n        );\n        doc.save('litmus-portal-analytics.pdf'); // Generated PDF\n      });\n    }\n  };\n\n  useEffect(() => {\n    setDisplayData(data ? data.ListWorkflow.workflows : []);\n    getClusters(data ? data.ListWorkflow.workflows : []);\n  }, [data]);\n\n  useEffect(() => {\n    const payload = searchingDataRetriever()\n      .filter((wkf) => {\n        return filter.searchTokens.every(\n          (s: string) =>\n            wkf.workflow_name.toLowerCase().includes(s) ||\n            (wkf.cluster_name !== undefined\n              ? wkf.cluster_name.toLowerCase().includes(s)\n              : false)\n        );\n      })\n      .filter((data) => {\n        return filter.selectedCluster === 'All'\n          ? true\n          : data.cluster_name === filter.selectedCluster;\n      })\n      .filter((data) => {\n        return filter.range.startDate === 'all' ||\n          (filter.range.startDate && filter.range.endDate === undefined)\n          ? true\n          : parseInt(data.created_at, 10) * 1000 >=\n              new Date(moment(filter.range.startDate).format()).getTime() &&\n              parseInt(data.created_at, 10) * 1000 <=\n                new Date(\n                  new Date(moment(filter.range.endDate).format()).setHours(\n                    23,\n                    59,\n                    59\n                  )\n                ).getTime();\n      })\n      .sort((a, b) => {\n        // Sorting based on unique fields\n        if (filter.sortData.name.sort) {\n          const x = a.workflow_name;\n          const y = b.workflow_name;\n\n          return filter.sortData.name.ascending\n            ? sortAlphaAsc(x, y)\n            : sortAlphaDesc(x, y);\n        }\n        if (filter.sortData.startDate.sort) {\n          const x = parseInt(a.created_at, 10);\n\n          const y = parseInt(b.created_at, 10);\n\n          return filter.sortData.startDate.ascending\n            ? sortNumAsc(y, x)\n            : sortNumDesc(y, x);\n        }\n        if (filter.sortData.cluster.sort) {\n          const x = a.cluster_name;\n          const y = b.cluster_name;\n\n          return filter.sortData.cluster.ascending\n            ? sortAlphaAsc(x, y)\n            : sortAlphaDesc(x, y);\n        }\n        return 0;\n      });\n    setDisplayData(payload);\n    setShowAll(false);\n    getClusters(searchingDataRetriever());\n  }, [filter, compare]);\n\n  return (\n    <div className={classes.root} id=\"analytics\">\n      <WorkflowGraphs data={data} />\n      <div className={classes.analyticsDiv}>\n        <Typography className={classes.heading}>\n          <strong>\n            {' '}\n            {compare === true ? (\n              <IconButton\n                aria-label=\"back\"\n                aria-haspopup=\"true\"\n                onClick={() => setCompare(false)}\n                className={classes.buttonBack}\n              >\n                <ExpandMoreTwoToneIcon\n                  htmlColor={palette.primary.main}\n                  className={classes.buttonBackStyle}\n                />\n              </IconButton>\n            ) : (\n              <div />\n            )}{' '}\n            Workflow comparison\n          </strong>\n        </Typography>\n        <Typography className={classes.description}>\n          {compare === true\n            ? 'Choose the right workflows and get comparative results'\n            : 'Choose workflows to compare their resilience scores'}\n        </Typography>\n        <br />\n      </div>\n      <div className={classes.tableFix}>\n        <div>\n          <section className=\"Heading section\">\n            <TableToolBar\n              numSelected={selected.length}\n              searchToken={filter.searchTokens[0]}\n              handleSearch={(\n                event: React.ChangeEvent<{ value: unknown }> | undefined,\n                token: string | undefined\n              ) =>\n                setFilter({\n                  ...filter,\n                  searchTokens: (event !== undefined\n                    ? ((event.target as HTMLInputElement).value as string)\n                    : token || ''\n                  )\n                    .toLowerCase()\n                    .split(' ')\n                    .filter((s) => s !== ''),\n                })\n              }\n              clusters={clusters}\n              callbackToSetCluster={(clusterName: string) => {\n                setFilter({\n                  ...filter,\n                  selectedCluster: clusterName,\n                });\n              }}\n              callbackToSetRange={(\n                selectedStartDate: string,\n                selectedEndDate: string\n              ) => {\n                setFilter({\n                  ...filter,\n                  range: {\n                    startDate: selectedStartDate,\n                    endDate: selectedEndDate,\n                  },\n                });\n              }}\n              callbackToCompare={CallbackForComparing}\n              callbackToExport={() => generatePDF()}\n              comparisonState={compare}\n              reInitialize={compare === false}\n            />\n          </section>\n          <section className=\"table section\">\n            <Paper className={classes.tableBody}>\n              <TableContainer\n                className={\n                  compare === false && selected.length <= 2\n                    ? classes.tableMain\n                    : compare === false && selected.length > 2\n                    ? classes.tableMainShowAll\n                    : showAll === true && selected.length <= 3\n                    ? classes.tableMainShowAll\n                    : showAll === true && selected.length > 3\n                    ? classes.tableMain\n                    : classes.tableMainCompare\n                }\n              >\n                <Table stickyHeader aria-label=\"simple table\">\n                  <TableHeader\n                    onSelectAllClick={handleSelectAllClick}\n                    numSelected={selected.length}\n                    rowCount={displayData.length}\n                    comparisonState={compare}\n                    callBackToSort={(sortConfigurations: SortData) => {\n                      setFilter({\n                        ...filter,\n                        sortData: sortConfigurations,\n                      });\n                    }}\n                  />\n                  <TableBody>\n                    {loading ? (\n                      <TableRow>\n                        <TableCell colSpan={6}>\n                          <Loader />\n                        </TableCell>\n                      </TableRow>\n                    ) : error ? (\n                      <TableRow>\n                        <TableCell colSpan={6}>\n                          <Typography align=\"center\" className={classes.error}>\n                            {t(\n                              'chaosWorkflows.browseAnalytics.workFlowComparisonTable.unableToFetch'\n                            )}\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                    ) : displayData.length ? (\n                      displayData\n                        .slice(0)\n                        .slice(\n                          page * rowsPerPage,\n                          page * rowsPerPage + rowsPerPage\n                        )\n                        .map((data, index) => {\n                          const isItemSelected = isSelected(data.workflow_id);\n                          const labelId = `enhanced-table-checkbox-${index}`;\n                          return (\n                            <TableRow\n                              hover\n                              onClick={() => {\n                                if (compare === false) {\n                                  handleClick(data.workflow_id);\n                                }\n                              }}\n                              role=\"checkbox\"\n                              aria-checked={isItemSelected}\n                              tabIndex={-1}\n                              key={data.workflow_id}\n                              selected={isItemSelected}\n                              classes={{ selected: classes.tableRowSelected }}\n                            >\n                              <TableData\n                                data={data}\n                                itemSelectionStatus={isItemSelected}\n                                labelIdentifier={labelId}\n                                comparisonState={compare}\n                              />\n                            </TableRow>\n                          );\n                        })\n                    ) : (\n                      <TableRow>\n                        <TableCell colSpan={6} className={classes.error}>\n                          <Typography align=\"center\">\n                            {t(\n                              'chaosWorkflows.browseAnalytics.workFlowComparisonTable.noRecords'\n                            )}\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    {emptyRows > 0 && (\n                      <TableRow style={{ height: '20rem' }}>\n                        <TableCell colSpan={6} />\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              {/* </MuiThemeProvider> */}\n              {!compare || showAll ? (\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25, 50]}\n                  component=\"div\"\n                  count={displayData.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  className={classes.pagination}\n                />\n              ) : (\n                <Paper\n                  elevation={0}\n                  className={classes.seeAllPaper}\n                  onClick={() => setShowAll(true)}\n                >\n                  <Typography className={classes.seeAllText} variant=\"body2\">\n                    {' '}\n                    <strong>\n                      {t(\n                        'chaosWorkflows.browseAnalytics.workFlowComparisonTable.showSelectedWorkflows'\n                      )}{' '}\n                      ({selected.length}){' '}\n                    </strong>{' '}\n                  </Typography>\n                </Paper>\n              )}\n            </Paper>\n          </section>\n        </div>\n      </div>\n      {isDataAvailable === true ? (\n        <div>\n          {compare === true ? (\n            <Paper variant=\"outlined\" className={classes.backgroundFix}>\n              <div className={classes.comparisonHeadingFix}>\n                <Typography className={classes.heading}>\n                  <strong>\n                    {t(\n                      'chaosWorkflows.browseAnalytics.workFlowComparisonTable.resilienceScoreComparison'\n                    )}\n                  </strong>\n                </Typography>\n                <Typography className={classes.description}>\n                  {t(\n                    'chaosWorkflows.browseAnalytics.workFlowComparisonTable.comparativeResults'\n                  )}\n                </Typography>\n                {plotDataForComparison ? (\n                  <ResilienceScoreComparisonPlot\n                    xData={plotDataForComparison.xData}\n                    yData={plotDataForComparison.yData}\n                    labels={plotDataForComparison.labels}\n                    colors={plotDataForComparison.colors}\n                  />\n                ) : (\n                  <div />\n                )}\n              </div>\n            </Paper>\n          ) : (\n            <div />\n          )}\n        </div>\n      ) : (\n        <Paper variant=\"outlined\" className={classes.noData}>\n          <Typography variant=\"h5\" align=\"center\" className={classes.error}>\n            {t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.noRuns')}\n          </Typography>{' '}\n        </Paper>\n      )}\n    </div>\n  );\n};\n\nexport default WorkflowComparisonTable;\n"]},"metadata":{},"sourceType":"module"}