{"ast":null,"code":"import _defineProperty from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* eslint-disable import/prefer-default-export */import{DashboardSelectionActions}from'../../models/redux/dashboards';import createReducer from'./createReducer';var initialState={selectedDashboardID:'',activePanelID:'',refreshRate:0,range:{startDate:'',endDate:''},forceUpdate:false,dashboardJSON:{}};export var selectDashboard=createReducer(initialState,_defineProperty({},DashboardSelectionActions.SELECT_DASHBOARD,function(state,action){return _objectSpread(_objectSpread({},state),action.payload);}));export default selectDashboard;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/redux/reducers/dashboards.ts"],"names":["DashboardSelectionActions","createReducer","initialState","selectedDashboardID","activePanelID","refreshRate","range","startDate","endDate","forceUpdate","dashboardJSON","selectDashboard","SELECT_DASHBOARD","state","action","payload"],"mappings":"uWAAA,iDACA,OAGEA,yBAHF,KAIO,+BAJP,CAKA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,GAAMC,CAAAA,YAA2B,CAAG,CAClCC,mBAAmB,CAAE,EADa,CAElCC,aAAa,CAAE,EAFmB,CAGlCC,WAAW,CAAE,CAHqB,CAIlCC,KAAK,CAAE,CACLC,SAAS,CAAE,EADN,CAELC,OAAO,CAAE,EAFJ,CAJ2B,CAQlCC,WAAW,CAAE,KARqB,CASlCC,aAAa,CAAE,EATmB,CAApC,CAYA,MAAO,IAAMC,CAAAA,eAAe,CAAGV,aAAa,CAAgBC,YAAhB,oBACzCF,yBAAyB,CAACY,gBADe,UAExCC,KAFwC,CAGxCC,MAHwC,CAIxC,CACA,sCACKD,KADL,EAEKC,MAAM,CAACC,OAFZ,EAID,CATyC,EAArC,CAYP,cAAeJ,CAAAA,eAAf","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport {\n  DashboardData,\n  DashboardSelectionAction,\n  DashboardSelectionActions,\n} from '../../models/redux/dashboards';\nimport createReducer from './createReducer';\n\nconst initialState: DashboardData = {\n  selectedDashboardID: '',\n  activePanelID: '',\n  refreshRate: 0,\n  range: {\n    startDate: '',\n    endDate: '',\n  },\n  forceUpdate: false,\n  dashboardJSON: {},\n};\n\nexport const selectDashboard = createReducer<DashboardData>(initialState, {\n  [DashboardSelectionActions.SELECT_DASHBOARD](\n    state: DashboardData,\n    action: DashboardSelectionAction\n  ) {\n    return {\n      ...state,\n      ...action.payload,\n    };\n  },\n});\n\nexport default selectDashboard;\n"]},"metadata":{},"sourceType":"module"}