{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useMutation,useQuery}from'@apollo/client';import{Drawer,FormControl,FormControlLabel,Radio,RadioGroup,Typography}from'@material-ui/core';import Done from'@material-ui/icons/DoneAllTwoTone';import{ButtonFilled,ButtonOutlined,InputField}from'litmus-ui';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import BackButton from'../../../components/Button/BackButton';import GithubInputFields from'../../../components/GitHubComponents/GithubInputFields/GithubInputFields';import GitHubToggleButton from'../../../components/GitHubComponents/GitHubToggleButtons/GitHubToggleButton';import Loader from'../../../components/Loader';import{ADD_MY_HUB,GENERATE_SSH,SAVE_MY_HUB,UPDATE_MY_HUB}from'../../../graphql/mutations';import{MyHubType}from'../../../models/graphql/user';import{getProjectID}from'../../../utils/getSearchParams';import{isValidWebUrl,validateStartEmptySpacing}from'../../../utils/validate';import useStyles from'./styles';import{constants}from'../../../constants';import{GET_HUB_STATUS}from'../../../graphql/queries';var MyHubConnectDrawer=function MyHubConnectDrawer(_ref){var hubName=_ref.hubName,drawerState=_ref.drawerState,handleDrawerClose=_ref.handleDrawerClose,refetchQuery=_ref.refetchQuery,setAlertState=_ref.setAlertState,setAlertResult=_ref.setAlertResult;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var projectID=getProjectID();var _useState=useState({HubName:'',GitURL:'',GitBranch:''}),_useState2=_slicedToArray(_useState,2),gitHub=_useState2[0],setGitHub=_useState2[1];var _React$useState=React.useState({isPublicToggled:true,isPrivateToggled:false}),_React$useState2=_slicedToArray(_React$useState,2),isToggled=_React$useState2[0],setIsToggled=_React$useState2[1];var _useState3=useState('token'),_useState4=_slicedToArray(_useState3,2),privateHub=_useState4[0],setPrivateHub=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),accessToken=_useState6[0],setAccessToken=_useState6[1];var _useState7=useState({privateKey:'',publicKey:''}),_useState8=_slicedToArray(_useState7,2),sshKey=_useState8[0],setSshKey=_useState8[1];var _useQuery=useQuery(GET_HUB_STATUS,{variables:{data:projectID},fetchPolicy:'network-only'}),data=_useQuery.data;var hubData=data===null||data===void 0?void 0:data.getHubStatus.filter(function(hubs){return hubs.HubName===hubName;})[0];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),saveChanges=_useState10[0],setSaveChanges=_useState10[1];/**\n   * Add MyHub mutation to create a new hub\n   */var _useMutation=useMutation(ADD_MY_HUB,{onCompleted:function onCompleted(){setAlertState(true);setAlertResult({type:constants.success,message:'My Hub was successfully created'});refetchQuery();},onError:function onError(error){setAlertState(true);setAlertResult({type:constants.error,message:\"Error: \".concat(error.message,\". \\n                    You can still save the Hub configuration.\")});setSaveChanges(true);}}),_useMutation2=_slicedToArray(_useMutation,2),addMyHub=_useMutation2[0],loading=_useMutation2[1].loading;/**\n   * Save My Hub mutation to save a hub details for later\n   */var _useMutation3=useMutation(SAVE_MY_HUB,{onCompleted:function onCompleted(){setAlertState(true);setAlertResult({type:constants.success,message:'My Hub was successfully saved'});setSaveChanges(false);refetchQuery();},onError:function onError(){setAlertState(true);setAlertResult({type:constants.error,message:'Error while adding My Hub'});}}),_useMutation4=_slicedToArray(_useMutation3,1),saveMyHub=_useMutation4[0];/**\n   * Update MyHub mutation to edit the myhub configuration\n   */var _useMutation5=useMutation(UPDATE_MY_HUB,{onCompleted:function onCompleted(){setAlertState(true);setAlertResult({type:constants.success,message:'My Hub configurations successfully updated'});refetchQuery();},onError:function onError(error){setAlertState(true);setAlertResult({type:constants.error,message:\"Error:\".concat(error.message)});}}),_useMutation6=_slicedToArray(_useMutation5,2),updateMyHub=_useMutation6[0],updateHubLoader=_useMutation6[1].loading;/**\n   * Mutation to generate SSH key\n   */var _useMutation7=useMutation(GENERATE_SSH,{onCompleted:function onCompleted(data){setSshKey({privateKey:data.generaterSSHKey.privateKey,publicKey:data.generaterSSHKey.publicKey});}}),_useMutation8=_slicedToArray(_useMutation7,2),generateSSHKey=_useMutation8[0],sshLoading=_useMutation8[1].loading;var handleSubmit=function handleSubmit(event){event.preventDefault();/**\n     * If hubName is present, edit myhub mutation will be called\n     */if(hubName===null||hubName===void 0?void 0:hubName.length){updateMyHub({variables:{MyHubDetails:{id:hubData===null||hubData===void 0?void 0:hubData.id,HubName:gitHub.HubName.trim(),RepoURL:gitHub.GitURL,RepoBranch:gitHub.GitBranch,IsPrivate:isToggled.isPublicToggled?false:!!isToggled.isPrivateToggled,AuthType:isToggled.isPublicToggled?MyHubType.basic:privateHub==='token'?MyHubType.token:privateHub==='ssh'?MyHubType.ssh:MyHubType.basic,Token:accessToken,UserName:'user',Password:'user',SSHPrivateKey:sshKey.privateKey,SSHPublicKey:sshKey.publicKey},projectID:projectID}});}else if(saveChanges){/**\n       * Save changes is enabled if add myhub mutation fails.\n       * This will call the save myhub mutation\n       */saveMyHub({variables:{MyHubDetails:{HubName:gitHub.HubName.trim(),RepoURL:gitHub.GitURL,RepoBranch:gitHub.GitBranch,IsPrivate:isToggled.isPublicToggled?false:!!isToggled.isPrivateToggled,AuthType:isToggled.isPublicToggled?MyHubType.basic:privateHub==='token'?MyHubType.token:privateHub==='ssh'?MyHubType.ssh:MyHubType.basic,Token:accessToken,UserName:'user',Password:'user',SSHPrivateKey:sshKey.privateKey,SSHPublicKey:sshKey.publicKey},projectID:projectID}});}else/**\n     * This will call the add myhub mutation\n     */addMyHub({variables:{MyHubDetails:{HubName:gitHub.HubName.trim(),RepoURL:gitHub.GitURL,RepoBranch:gitHub.GitBranch,IsPrivate:isToggled.isPublicToggled?false:!!isToggled.isPrivateToggled,AuthType:isToggled.isPublicToggled?MyHubType.basic:privateHub==='token'?MyHubType.token:privateHub==='ssh'?MyHubType.ssh:MyHubType.basic,Token:accessToken,UserName:'user',Password:'user',SSHPrivateKey:sshKey.privateKey,SSHPublicKey:sshKey.publicKey},projectID:projectID}});};var handleGitURL=function handleGitURL(event){setGitHub({HubName:gitHub.HubName,GitURL:event.target.value,GitBranch:gitHub.GitBranch});};var handleGitBranch=function handleGitBranch(event){setGitHub({HubName:gitHub.HubName,GitURL:gitHub.GitURL,GitBranch:event.target.value});};var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),copying=_useState12[0],setCopying=_useState12[1];// Function to copy the SSH key\nvar copyTextToClipboard=function copyTextToClipboard(text){if(!navigator.clipboard){console.error('Oops Could not copy text: ');return;}setCopying(true);navigator.clipboard.writeText(text).catch(function(err){return console.error('Async: Could not copy text: ',err);});setTimeout(function(){return setCopying(false);},3000);};useEffect(function(){/**\n     * If hubName is present, this fetches the myhub configuration\n     * and sets in the inputfields (for edit Myhub)\n     */if(hubName===null||hubName===void 0?void 0:hubName.length){if(hubData!==undefined){setGitHub({HubName:hubData.HubName,GitURL:hubData.RepoURL,GitBranch:hubData.RepoBranch});if(hubData.IsPrivate){setIsToggled({isPublicToggled:false,isPrivateToggled:true});}else{setIsToggled({isPublicToggled:true,isPrivateToggled:false});}if(hubData.AuthType===MyHubType.token){setPrivateHub('token');setAccessToken(hubData.Token);}else if(hubData.AuthType===MyHubType.ssh){setPrivateHub('ssh');setSshKey({privateKey:hubData.SSHPrivateKey,publicKey:hubData.SSHPublicKey});}else{setPrivateHub('token');}}}else{/**\n       * Whenever the drawer is opened, if it is not for edit MyHub,\n       * the default values in the input field will be empty string\n       */setGitHub({HubName:'',GitURL:'',GitBranch:''});setSaveChanges(false);setSshKey({publicKey:'',privateKey:''});setPrivateHub('token');}},[drawerState,hubName]);return/*#__PURE__*/React.createElement(Drawer,{className:classes.drawer,variant:\"persistent\",anchor:\"right\",open:drawerState,classes:{paper:classes.drawerPaper},ModalProps:{keepMounted:true}},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.header},/*#__PURE__*/React.createElement(\"div\",{className:classes.backBtnDiv},/*#__PURE__*/React.createElement(BackButton,{onClick:function onClick(){return handleDrawerClose();}})),/*#__PURE__*/React.createElement(Typography,{variant:\"h4\",gutterBottom:true},(hubName===null||hubName===void 0?void 0:hubName.length)?t('myhub.connectHubPage.editHub'):t('myhub.connectHubPage.connectHub'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.detailsDiv},/*#__PURE__*/React.createElement(\"form\",{id:\"login-form\",autoComplete:\"on\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:classes.inputDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.hubNameInput},/*#__PURE__*/React.createElement(InputField,{\"data-cy\":\"hubName\",label:\"Hub Name\",value:gitHub.HubName,helperText:validateStartEmptySpacing(gitHub.HubName)?t('myhub.validationEmptySpace'):'',variant:validateStartEmptySpacing(gitHub.HubName)?'error':'primary',required:true,onChange:function onChange(e){return setGitHub({HubName:e.target.value,GitURL:gitHub.GitURL,GitBranch:gitHub.GitBranch});}})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.mainPrivateRepo},/*#__PURE__*/React.createElement(\"div\",{className:classes.privateRepoDiv},/*#__PURE__*/React.createElement(GitHubToggleButton,{isToggled:isToggled,setIsToggled:setIsToggled})),isToggled.isPublicToggled?/*#__PURE__*/React.createElement(\"div\",{className:classes.inputFieldDiv},/*#__PURE__*/React.createElement(GithubInputFields,{gitURL:gitHub.GitURL,gitBranch:gitHub.GitBranch,setGitURL:handleGitURL,setGitBranch:handleGitBranch})):null,isToggled.isPrivateToggled?/*#__PURE__*/React.createElement(\"div\",{className:classes.privateToggleDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.privateRepoDetails},/*#__PURE__*/React.createElement(GithubInputFields,{gitURL:gitHub.GitURL,gitBranch:gitHub.GitBranch,setGitURL:handleGitURL,setGitBranch:handleGitBranch})),/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\",className:classes.formControl},/*#__PURE__*/React.createElement(RadioGroup,{\"aria-label\":\"privateHub\",name:\"privateHub\",value:privateHub,onChange:function onChange(e){if(e.target.value==='ssh'){generateSSHKey();}if(e.target.value==='token'){setSshKey({privateKey:'',publicKey:''});}setPrivateHub(e.target.value);}},/*#__PURE__*/React.createElement(FormControlLabel,{value:\"token\",control:/*#__PURE__*/React.createElement(Radio,{classes:{root:classes.radio,checked:classes.checked}}),label:/*#__PURE__*/React.createElement(Typography,null,t('myhub.connectHubPage.accessToken'))}),privateHub==='token'?/*#__PURE__*/React.createElement(InputField,{\"data-cy\":\"token\",label:\"Access Token\",value:accessToken,helperText:validateStartEmptySpacing(accessToken)?t('myhub.validationEmptySpace'):'',variant:validateStartEmptySpacing(accessToken)?'error':'primary',required:true,onChange:function onChange(e){return setAccessToken(e.target.value);}}):null,/*#__PURE__*/React.createElement(FormControlLabel,{className:classes.sshRadioBtn,value:\"ssh\",control:/*#__PURE__*/React.createElement(Radio,{classes:{root:classes.radio,checked:classes.checked}}),label:/*#__PURE__*/React.createElement(Typography,null,t('myhub.connectHubPage.ssh'))}),privateHub==='ssh'?/*#__PURE__*/React.createElement(\"div\",{className:classes.sshDiv},/*#__PURE__*/React.createElement(Typography,{className:classes.sshAlert},t('myhub.connectHubPage.sshAlert')),/*#__PURE__*/React.createElement(Typography,{className:classes.alertText},t('myhub.connectHubPage.sshText')),/*#__PURE__*/React.createElement(\"div\",{className:classes.sshDataDiv},sshLoading?/*#__PURE__*/React.createElement(Loader,null):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Typography,{className:classes.sshText},sshKey.publicKey),/*#__PURE__*/React.createElement(\"div\",{className:classes.copyBtn},/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){return copyTextToClipboard(sshKey.publicKey);}},!copying?/*#__PURE__*/React.createElement(\"div\",{className:classes.rowDiv},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/copy.svg\",className:classes.copyBtnImg,alt:\"copy\"}),/*#__PURE__*/React.createElement(Typography,null,t('myhub.installChaos.copy'))):/*#__PURE__*/React.createElement(\"div\",{className:classes.rowDiv},/*#__PURE__*/React.createElement(Done,{className:classes.done}),/*#__PURE__*/React.createElement(Typography,null,t('myhub.installChaos.copied')))))))):null))):null)),/*#__PURE__*/React.createElement(\"div\",{className:classes.btnDiv},/*#__PURE__*/React.createElement(ButtonOutlined,{\"data-cy\":\"cancel\",onClick:function onClick(){return handleDrawerClose();},className:classes.cancelBtn},t('myhub.connectHubPage.cancel')),/*#__PURE__*/React.createElement(ButtonFilled,{style:{width:140},variant:\"success\",\"data-cy\":\"MyHubSubmit\",type:\"submit\",disabled:!isValidWebUrl(gitHub.GitURL)||validateStartEmptySpacing(gitHub.GitBranch)||loading||updateHubLoader},loading||updateHubLoader?/*#__PURE__*/React.createElement(Loader,{size:20}):saveChanges?'Save Changes':t('myhub.connectHubPage.submitBtn'))))))));};export default MyHubConnectDrawer;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/ChaosHub/MyHubConnectDrawer/index.tsx"],"names":["useMutation","useQuery","Drawer","FormControl","FormControlLabel","Radio","RadioGroup","Typography","Done","ButtonFilled","ButtonOutlined","InputField","React","useEffect","useState","useTranslation","BackButton","GithubInputFields","GitHubToggleButton","Loader","ADD_MY_HUB","GENERATE_SSH","SAVE_MY_HUB","UPDATE_MY_HUB","MyHubType","getProjectID","isValidWebUrl","validateStartEmptySpacing","useStyles","constants","GET_HUB_STATUS","MyHubConnectDrawer","hubName","drawerState","handleDrawerClose","refetchQuery","setAlertState","setAlertResult","classes","t","projectID","HubName","GitURL","GitBranch","gitHub","setGitHub","isPublicToggled","isPrivateToggled","isToggled","setIsToggled","privateHub","setPrivateHub","accessToken","setAccessToken","privateKey","publicKey","sshKey","setSshKey","variables","data","fetchPolicy","hubData","getHubStatus","filter","hubs","saveChanges","setSaveChanges","onCompleted","type","success","message","onError","error","addMyHub","loading","saveMyHub","updateMyHub","updateHubLoader","generaterSSHKey","generateSSHKey","sshLoading","handleSubmit","event","preventDefault","length","MyHubDetails","id","trim","RepoURL","RepoBranch","IsPrivate","AuthType","basic","token","ssh","Token","UserName","Password","SSHPrivateKey","SSHPublicKey","handleGitURL","target","value","handleGitBranch","copying","setCopying","copyTextToClipboard","text","navigator","clipboard","console","writeText","catch","err","setTimeout","undefined","drawer","paper","drawerPaper","keepMounted","header","backBtnDiv","detailsDiv","inputDiv","hubNameInput","e","mainPrivateRepo","privateRepoDiv","inputFieldDiv","privateToggleDiv","privateRepoDetails","formControl","root","radio","checked","sshRadioBtn","sshDiv","sshAlert","alertText","sshDataDiv","sshText","copyBtn","rowDiv","copyBtnImg","done","btnDiv","cancelBtn","width"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport {\n  Drawer,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@material-ui/core';\nimport Done from '@material-ui/icons/DoneAllTwoTone';\nimport { ButtonFilled, ButtonOutlined, InputField } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport BackButton from '../../../components/Button/BackButton';\nimport GithubInputFields from '../../../components/GitHubComponents/GithubInputFields/GithubInputFields';\nimport GitHubToggleButton from '../../../components/GitHubComponents/GitHubToggleButtons/GitHubToggleButton';\nimport Loader from '../../../components/Loader';\nimport {\n  ADD_MY_HUB,\n  GENERATE_SSH,\n  SAVE_MY_HUB,\n  UPDATE_MY_HUB,\n} from '../../../graphql/mutations';\nimport {\n  CreateMyHub,\n  MyHubData,\n  MyHubType,\n  SSHKey,\n  SSHKeys,\n} from '../../../models/graphql/user';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport {\n  isValidWebUrl,\n  validateStartEmptySpacing,\n} from '../../../utils/validate';\nimport useStyles from './styles';\nimport { constants } from '../../../constants';\nimport { HubStatus } from '../../../models/redux/myhub';\nimport { GET_HUB_STATUS } from '../../../graphql/queries';\n\ninterface GitHub {\n  HubName: string;\n  GitURL: string;\n  GitBranch: string;\n}\n\ninterface MyHubToggleProps {\n  isPublicToggled: boolean;\n  isPrivateToggled: boolean;\n}\n\ninterface CloneResult {\n  type: string;\n  message: string;\n}\n\ninterface MyHubConnectDrawerProps {\n  hubName?: string;\n  drawerState: boolean;\n  handleDrawerClose: () => void;\n  refetchQuery: () => void;\n  setAlertState: (alertState: boolean) => void;\n  setAlertResult: (alertResult: CloneResult) => void;\n}\n\nconst MyHubConnectDrawer: React.FC<MyHubConnectDrawerProps> = ({\n  hubName,\n  drawerState,\n  handleDrawerClose,\n  refetchQuery,\n  setAlertState,\n  setAlertResult,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const [gitHub, setGitHub] = useState<GitHub>({\n    HubName: '',\n    GitURL: '',\n    GitBranch: '',\n  });\n  const [isToggled, setIsToggled] = React.useState<MyHubToggleProps>({\n    isPublicToggled: true,\n    isPrivateToggled: false,\n  });\n  const [privateHub, setPrivateHub] = useState('token');\n  const [accessToken, setAccessToken] = useState('');\n  const [sshKey, setSshKey] = useState<SSHKey>({\n    privateKey: '',\n    publicKey: '',\n  });\n\n  const { data } = useQuery<HubStatus>(GET_HUB_STATUS, {\n    variables: { data: projectID },\n    fetchPolicy: 'network-only',\n  });\n  const hubData = data?.getHubStatus.filter(\n    (hubs) => hubs.HubName === hubName\n  )[0];\n\n  const [saveChanges, setSaveChanges] = useState(false);\n\n  /**\n   * Add MyHub mutation to create a new hub\n   */\n  const [addMyHub, { loading }] = useMutation<MyHubData, CreateMyHub>(\n    ADD_MY_HUB,\n    {\n      onCompleted: () => {\n        setAlertState(true);\n        setAlertResult({\n          type: constants.success,\n          message: 'My Hub was successfully created',\n        });\n        refetchQuery();\n      },\n      onError: (error) => {\n        setAlertState(true);\n        setAlertResult({\n          type: constants.error,\n          message: `Error: ${error.message}. \n                    You can still save the Hub configuration.`,\n        });\n        setSaveChanges(true);\n      },\n    }\n  );\n\n  /**\n   * Save My Hub mutation to save a hub details for later\n   */\n  const [saveMyHub] = useMutation<MyHubData, CreateMyHub>(SAVE_MY_HUB, {\n    onCompleted: () => {\n      setAlertState(true);\n      setAlertResult({\n        type: constants.success,\n        message: 'My Hub was successfully saved',\n      });\n      setSaveChanges(false);\n      refetchQuery();\n    },\n    onError: () => {\n      setAlertState(true);\n      setAlertResult({\n        type: constants.error,\n        message: 'Error while adding My Hub',\n      });\n    },\n  });\n\n  /**\n   * Update MyHub mutation to edit the myhub configuration\n   */\n  const [updateMyHub, { loading: updateHubLoader }] = useMutation<\n    MyHubData,\n    CreateMyHub\n  >(UPDATE_MY_HUB, {\n    onCompleted: () => {\n      setAlertState(true);\n      setAlertResult({\n        type: constants.success,\n        message: 'My Hub configurations successfully updated',\n      });\n      refetchQuery();\n    },\n    onError: (error) => {\n      setAlertState(true);\n      setAlertResult({\n        type: constants.error,\n        message: `Error:${error.message}`,\n      });\n    },\n  });\n\n  /**\n   * Mutation to generate SSH key\n   */\n  const [generateSSHKey, { loading: sshLoading }] = useMutation<SSHKeys>(\n    GENERATE_SSH,\n    {\n      onCompleted: (data) => {\n        setSshKey({\n          privateKey: data.generaterSSHKey.privateKey,\n          publicKey: data.generaterSSHKey.publicKey,\n        });\n      },\n    }\n  );\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    /**\n     * If hubName is present, edit myhub mutation will be called\n     */\n    if (hubName?.length) {\n      updateMyHub({\n        variables: {\n          MyHubDetails: {\n            id: hubData?.id,\n            HubName: gitHub.HubName.trim(),\n            RepoURL: gitHub.GitURL,\n            RepoBranch: gitHub.GitBranch,\n            IsPrivate: isToggled.isPublicToggled\n              ? false\n              : !!isToggled.isPrivateToggled,\n            AuthType: isToggled.isPublicToggled\n              ? MyHubType.basic\n              : privateHub === 'token'\n              ? MyHubType.token\n              : privateHub === 'ssh'\n              ? MyHubType.ssh\n              : MyHubType.basic,\n            Token: accessToken,\n            UserName: 'user',\n            Password: 'user',\n            SSHPrivateKey: sshKey.privateKey,\n            SSHPublicKey: sshKey.publicKey,\n          },\n          projectID,\n        },\n      });\n    } else if (saveChanges) {\n      /**\n       * Save changes is enabled if add myhub mutation fails.\n       * This will call the save myhub mutation\n       */\n      saveMyHub({\n        variables: {\n          MyHubDetails: {\n            HubName: gitHub.HubName.trim(),\n            RepoURL: gitHub.GitURL,\n            RepoBranch: gitHub.GitBranch,\n            IsPrivate: isToggled.isPublicToggled\n              ? false\n              : !!isToggled.isPrivateToggled,\n            AuthType: isToggled.isPublicToggled\n              ? MyHubType.basic\n              : privateHub === 'token'\n              ? MyHubType.token\n              : privateHub === 'ssh'\n              ? MyHubType.ssh\n              : MyHubType.basic,\n            Token: accessToken,\n            UserName: 'user',\n            Password: 'user',\n            SSHPrivateKey: sshKey.privateKey,\n            SSHPublicKey: sshKey.publicKey,\n          },\n          projectID,\n        },\n      });\n    } else\n    /**\n     * This will call the add myhub mutation\n     */\n      addMyHub({\n        variables: {\n          MyHubDetails: {\n            HubName: gitHub.HubName.trim(),\n            RepoURL: gitHub.GitURL,\n            RepoBranch: gitHub.GitBranch,\n            IsPrivate: isToggled.isPublicToggled\n              ? false\n              : !!isToggled.isPrivateToggled,\n            AuthType: isToggled.isPublicToggled\n              ? MyHubType.basic\n              : privateHub === 'token'\n              ? MyHubType.token\n              : privateHub === 'ssh'\n              ? MyHubType.ssh\n              : MyHubType.basic,\n            Token: accessToken,\n            UserName: 'user',\n            Password: 'user',\n            SSHPrivateKey: sshKey.privateKey,\n            SSHPublicKey: sshKey.publicKey,\n          },\n          projectID,\n        },\n      });\n  };\n\n  const handleGitURL = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setGitHub({\n      HubName: gitHub.HubName,\n      GitURL: event.target.value,\n      GitBranch: gitHub.GitBranch,\n    });\n  };\n\n  const handleGitBranch = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setGitHub({\n      HubName: gitHub.HubName,\n      GitURL: gitHub.GitURL,\n      GitBranch: event.target.value,\n    });\n  };\n\n  const [copying, setCopying] = useState(false);\n\n  // Function to copy the SSH key\n  const copyTextToClipboard = (text: string) => {\n    if (!navigator.clipboard) {\n      console.error('Oops Could not copy text: ');\n      return;\n    }\n    setCopying(true);\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n    setTimeout(() => setCopying(false), 3000);\n  };\n\n  useEffect(() => {\n    /**\n     * If hubName is present, this fetches the myhub configuration\n     * and sets in the inputfields (for edit Myhub)\n     */\n    if (hubName?.length) {\n      if (hubData !== undefined) {\n        setGitHub({\n          HubName: hubData.HubName,\n          GitURL: hubData.RepoURL,\n          GitBranch: hubData.RepoBranch,\n        });\n        if (hubData.IsPrivate) {\n          setIsToggled({\n            isPublicToggled: false,\n            isPrivateToggled: true,\n          });\n        } else {\n          setIsToggled({\n            isPublicToggled: true,\n            isPrivateToggled: false,\n          });\n        }\n        if (hubData.AuthType === MyHubType.token) {\n          setPrivateHub('token');\n          setAccessToken(hubData.Token);\n        } else if (hubData.AuthType === MyHubType.ssh) {\n          setPrivateHub('ssh');\n          setSshKey({\n            privateKey: hubData.SSHPrivateKey,\n            publicKey: hubData.SSHPublicKey,\n          });\n        } else {\n          setPrivateHub('token');\n        }\n      }\n    } else {\n      /**\n       * Whenever the drawer is opened, if it is not for edit MyHub,\n       * the default values in the input field will be empty string\n       */\n      setGitHub({\n        HubName: '',\n        GitURL: '',\n        GitBranch: '',\n      });\n      setSaveChanges(false);\n      setSshKey({\n        publicKey: '',\n        privateKey: '',\n      });\n      setPrivateHub('token');\n    }\n  }, [drawerState, hubName]);\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"persistent\"\n      anchor=\"right\"\n      open={drawerState}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      ModalProps={{\n        keepMounted: true,\n      }}\n    >\n      <>\n        <div className={classes.header}>\n          <div className={classes.backBtnDiv}>\n            <BackButton onClick={() => handleDrawerClose()} />\n          </div>\n          <Typography variant=\"h4\" gutterBottom>\n            {hubName?.length\n              ? t('myhub.connectHubPage.editHub')\n              : t('myhub.connectHubPage.connectHub')}\n          </Typography>\n        </div>\n        <div className={classes.detailsDiv}>\n          <form id=\"login-form\" autoComplete=\"on\" onSubmit={handleSubmit}>\n            <div className={classes.inputDiv}>\n              <div className={classes.hubNameInput}>\n                <InputField\n                  data-cy=\"hubName\"\n                  label=\"Hub Name\"\n                  value={gitHub.HubName}\n                  helperText={\n                    validateStartEmptySpacing(gitHub.HubName)\n                      ? t('myhub.validationEmptySpace')\n                      : ''\n                  }\n                  variant={\n                    validateStartEmptySpacing(gitHub.HubName)\n                      ? 'error'\n                      : 'primary'\n                  }\n                  required\n                  onChange={(e) =>\n                    setGitHub({\n                      HubName: e.target.value,\n                      GitURL: gitHub.GitURL,\n                      GitBranch: gitHub.GitBranch,\n                    })\n                  }\n                />\n              </div>\n              <div>\n                <div className={classes.mainPrivateRepo}>\n                  <div className={classes.privateRepoDiv}>\n                    <GitHubToggleButton\n                      isToggled={isToggled}\n                      setIsToggled={setIsToggled}\n                    />\n                  </div>\n                  {/* If Public Repo is clicked */}\n                  {isToggled.isPublicToggled ? (\n                    <div className={classes.inputFieldDiv}>\n                      <GithubInputFields\n                        gitURL={gitHub.GitURL}\n                        gitBranch={gitHub.GitBranch}\n                        setGitURL={handleGitURL}\n                        setGitBranch={handleGitBranch}\n                      />\n                    </div>\n                  ) : null}\n                  {/* If Private Repo is Clicked */}\n                  {isToggled.isPrivateToggled ? (\n                    <div className={classes.privateToggleDiv}>\n                      <div className={classes.privateRepoDetails}>\n                        <GithubInputFields\n                          gitURL={gitHub.GitURL}\n                          gitBranch={gitHub.GitBranch}\n                          setGitURL={handleGitURL}\n                          setGitBranch={handleGitBranch}\n                        />\n                      </div>\n                      <FormControl\n                        component=\"fieldset\"\n                        className={classes.formControl}\n                      >\n                        <RadioGroup\n                          aria-label=\"privateHub\"\n                          name=\"privateHub\"\n                          value={privateHub}\n                          onChange={(e) => {\n                            if (e.target.value === 'ssh') {\n                              generateSSHKey();\n                            }\n                            if (e.target.value === 'token') {\n                              setSshKey({\n                                privateKey: '',\n                                publicKey: '',\n                              });\n                            }\n                            setPrivateHub(e.target.value);\n                          }}\n                        >\n                          <FormControlLabel\n                            value=\"token\"\n                            control={\n                              <Radio\n                                classes={{\n                                  root: classes.radio,\n                                  checked: classes.checked,\n                                }}\n                              />\n                            }\n                            label={\n                              <Typography>\n                                {t('myhub.connectHubPage.accessToken')}\n                              </Typography>\n                            }\n                          />\n                          {privateHub === 'token' ? (\n                            <InputField\n                              data-cy=\"token\"\n                              label=\"Access Token\"\n                              value={accessToken}\n                              helperText={\n                                validateStartEmptySpacing(accessToken)\n                                  ? t('myhub.validationEmptySpace')\n                                  : ''\n                              }\n                              variant={\n                                validateStartEmptySpacing(accessToken)\n                                  ? 'error'\n                                  : 'primary'\n                              }\n                              required\n                              onChange={(e) => setAccessToken(e.target.value)}\n                            />\n                          ) : null}\n                          <FormControlLabel\n                            className={classes.sshRadioBtn}\n                            value=\"ssh\"\n                            control={\n                              <Radio\n                                classes={{\n                                  root: classes.radio,\n                                  checked: classes.checked,\n                                }}\n                              />\n                            }\n                            label={\n                              <Typography>\n                                {t('myhub.connectHubPage.ssh')}\n                              </Typography>\n                            }\n                          />\n                          {privateHub === 'ssh' ? (\n                            <div className={classes.sshDiv}>\n                              <Typography className={classes.sshAlert}>\n                                {t('myhub.connectHubPage.sshAlert')}\n                              </Typography>\n                              <Typography className={classes.alertText}>\n                                {t('myhub.connectHubPage.sshText')}\n                              </Typography>\n                              <div className={classes.sshDataDiv}>\n                                {sshLoading ? (\n                                  <Loader />\n                                ) : (\n                                  <>\n                                    <Typography className={classes.sshText}>\n                                      {sshKey.publicKey}\n                                    </Typography>\n                                    <div className={classes.copyBtn}>\n                                      <ButtonOutlined\n                                        onClick={() =>\n                                          copyTextToClipboard(sshKey.publicKey)\n                                        }\n                                      >\n                                        {!copying ? (\n                                          <div className={classes.rowDiv}>\n                                            <img\n                                              src=\"/icons/copy.svg\"\n                                              className={classes.copyBtnImg}\n                                              alt=\"copy\"\n                                            />\n                                            <Typography>\n                                              {t('myhub.installChaos.copy')}\n                                            </Typography>\n                                          </div>\n                                        ) : (\n                                          <div className={classes.rowDiv}>\n                                            <Done className={classes.done} />\n                                            <Typography>\n                                              {t('myhub.installChaos.copied')}\n                                            </Typography>\n                                          </div>\n                                        )}\n                                      </ButtonOutlined>\n                                    </div>\n                                  </>\n                                )}\n                              </div>\n                            </div>\n                          ) : null}\n                        </RadioGroup>\n                      </FormControl>\n                    </div>\n                  ) : null}\n                </div>\n              </div>\n              <div className={classes.btnDiv}>\n                <ButtonOutlined\n                  data-cy=\"cancel\"\n                  onClick={() => handleDrawerClose()}\n                  className={classes.cancelBtn}\n                >\n                  {t('myhub.connectHubPage.cancel')}\n                </ButtonOutlined>\n                <ButtonFilled\n                  style={{ width: 140 }}\n                  variant=\"success\"\n                  data-cy=\"MyHubSubmit\"\n                  type=\"submit\"\n                  disabled={\n                    !isValidWebUrl(gitHub.GitURL) ||\n                    validateStartEmptySpacing(gitHub.GitBranch) ||\n                    loading ||\n                    updateHubLoader\n                  }\n                >\n                  {loading || updateHubLoader ? (\n                    <Loader size={20} />\n                  ) : saveChanges ? (\n                    'Save Changes'\n                  ) : (\n                    t('myhub.connectHubPage.submitBtn')\n                  )}\n                </ButtonFilled>\n              </div>\n            </div>\n          </form>\n        </div>\n      </>\n    </Drawer>\n  );\n};\n\nexport default MyHubConnectDrawer;\n"]},"metadata":{},"sourceType":"module"}