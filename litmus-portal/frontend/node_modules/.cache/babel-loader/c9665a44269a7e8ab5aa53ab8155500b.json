{"ast":null,"code":"import{Typography}from'@material-ui/core';import moment from'moment';import React from'react';import AnalyticsLinearProgressBar from'../../../../components/ProgressBar/AnalyticsLinearProgressBar/index';import LinearProgressBar from'../../../../components/ProgressBar/LinearProgressBar';import ExperimentStatus from'../ExperimentStatus';import useStyles,{StyledTableCell}from'./styles';var TableData=function TableData(_ref){var _data$test_weight,_data$resulting_point;var data=_ref.data;var classes=useStyles();// Function to convert UNIX time in format of DD MMM YYY\nvar formatDate=function formatDate(date){var updated=new Date(parseInt(date,10)*1000).toString();var resDate=moment(updated).format('DD MMM  HH:mm');return resDate;};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.testName},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\"},/*#__PURE__*/React.createElement(\"strong\",null,data.test_name))),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableDataStatus},/*#__PURE__*/React.createElement(ExperimentStatus,{status:data.test_result!=='Awaited'&&data.test_result!=='N/A'?\"\".concat(data.test_result,\"ed\"):data.test_result})),/*#__PURE__*/React.createElement(StyledTableCell,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.reliabiltyData},/*#__PURE__*/React.createElement(Typography,{className:classes.reliabilityDataTypography},data.test_weight,\" Points\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.progressBar},/*#__PURE__*/React.createElement(AnalyticsLinearProgressBar,{value:(_data$test_weight=data.test_weight)!==null&&_data$test_weight!==void 0?_data$test_weight:0,maxValue:10,isInTable:true})))),/*#__PURE__*/React.createElement(StyledTableCell,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.reliabiltyData},/*#__PURE__*/React.createElement(Typography,null,data.resulting_points,\" Points\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.progressBar},/*#__PURE__*/React.createElement(LinearProgressBar,{width:0.2,value:(_data$resulting_point=data.resulting_points)!==null&&_data$resulting_point!==void 0?_data$resulting_point:0})))),/*#__PURE__*/React.createElement(StyledTableCell,null,/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",className:classes.tableObjects},formatDate(data.last_run))),/*#__PURE__*/React.createElement(StyledTableCell,null));};export default TableData;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowRunDetailsTable/TableData.tsx"],"names":["Typography","moment","React","AnalyticsLinearProgressBar","LinearProgressBar","ExperimentStatus","useStyles","StyledTableCell","TableData","data","classes","formatDate","date","updated","Date","parseInt","toString","resDate","format","testName","test_name","tableDataStatus","test_result","reliabiltyData","reliabilityDataTypography","test_weight","progressBar","resulting_points","tableObjects","last_run"],"mappings":"AAAA,OAASA,UAAT,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,0BAAP,KAAuC,qEAAvC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,sDAA9B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,qBAA7B,CACA,MAAOC,CAAAA,SAAP,EAAoBC,eAApB,KAA2C,UAA3C,CAeA,GAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAAc,gDAAXC,CAAAA,IAAW,MAAXA,IAAW,CACxD,GAAMC,CAAAA,OAAO,CAAGJ,SAAS,EAAzB,CAEA;AACA,GAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAkB,CACnC,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,IAAJ,CAASC,QAAQ,CAACH,IAAD,CAAO,EAAP,CAAR,CAAqB,IAA9B,EAAoCI,QAApC,EAAhB,CACA,GAAMC,CAAAA,OAAO,CAAGhB,MAAM,CAACY,OAAD,CAAN,CAAgBK,MAAhB,CAAuB,eAAvB,CAAhB,CACA,MAAOD,CAAAA,OAAP,CACD,CAJD,CAMA,mBACE,qDACE,oBAAC,eAAD,EAAiB,SAAS,CAAEP,OAAO,CAACS,QAApC,eACE,oBAAC,UAAD,EAAY,OAAO,CAAC,OAApB,eACE,kCAASV,IAAI,CAACW,SAAd,CADF,CADF,CADF,cAOE,oBAAC,eAAD,EAAiB,SAAS,CAAEV,OAAO,CAACW,eAApC,eACE,oBAAC,gBAAD,EACE,MAAM,CACJZ,IAAI,CAACa,WAAL,GAAqB,SAArB,EAAkCb,IAAI,CAACa,WAAL,GAAqB,KAAvD,WACOb,IAAI,CAACa,WADZ,OAEIb,IAAI,CAACa,WAJb,EADF,CAPF,cAiBE,oBAAC,eAAD,mBACE,2BAAK,SAAS,CAAEZ,OAAO,CAACa,cAAxB,eACE,oBAAC,UAAD,EAAY,SAAS,CAAEb,OAAO,CAACc,yBAA/B,EACGf,IAAI,CAACgB,WADR,WADF,cAIE,2BAAK,SAAS,CAAEf,OAAO,CAACgB,WAAxB,eACE,oBAAC,0BAAD,EACE,KAAK,oBAAEjB,IAAI,CAACgB,WAAP,uDAAsB,CAD7B,CAEE,QAAQ,CAAE,EAFZ,CAGE,SAAS,KAHX,EADF,CAJF,CADF,CAjBF,cAgCE,oBAAC,eAAD,mBACE,2BAAK,SAAS,CAAEf,OAAO,CAACa,cAAxB,eACE,oBAAC,UAAD,MAAad,IAAI,CAACkB,gBAAlB,WADF,cAEE,2BAAK,SAAS,CAAEjB,OAAO,CAACgB,WAAxB,eACE,oBAAC,iBAAD,EAAmB,KAAK,CAAE,GAA1B,CAA+B,KAAK,wBAAEjB,IAAI,CAACkB,gBAAP,+DAA2B,CAA/D,EADF,CAFF,CADF,CAhCF,cAyCE,oBAAC,eAAD,mBACE,oBAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,SAAS,CAAEjB,OAAO,CAACkB,YAA/C,EACGjB,UAAU,CAACF,IAAI,CAACoB,QAAN,CADb,CADF,CAzCF,cA+CE,oBAAC,eAAD,MA/CF,CADF,CAmDD,CA7DD,CA8DA,cAAerB,CAAAA,SAAf","sourcesContent":["import { Typography } from '@material-ui/core';\nimport moment from 'moment';\nimport React from 'react';\nimport AnalyticsLinearProgressBar from '../../../../components/ProgressBar/AnalyticsLinearProgressBar/index';\nimport LinearProgressBar from '../../../../components/ProgressBar/LinearProgressBar';\nimport ExperimentStatus from '../ExperimentStatus';\nimport useStyles, { StyledTableCell } from './styles';\n\ninterface workFlowTests {\n  test_id: number;\n  test_name: string;\n  test_result: string;\n  test_weight: number;\n  resulting_points: number;\n  last_run: string;\n}\n\ninterface TableDataProps {\n  data: workFlowTests;\n}\n\nconst TableData: React.FC<TableDataProps> = ({ data }) => {\n  const classes = useStyles();\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM  HH:mm');\n    return resDate;\n  };\n\n  return (\n    <>\n      <StyledTableCell className={classes.testName}>\n        <Typography variant=\"body2\">\n          <strong>{data.test_name}</strong>\n        </Typography>\n      </StyledTableCell>\n\n      <StyledTableCell className={classes.tableDataStatus}>\n        <ExperimentStatus\n          status={\n            data.test_result !== 'Awaited' && data.test_result !== 'N/A'\n              ? `${data.test_result}ed`\n              : data.test_result\n          }\n        />\n      </StyledTableCell>\n\n      <StyledTableCell>\n        <div className={classes.reliabiltyData}>\n          <Typography className={classes.reliabilityDataTypography}>\n            {data.test_weight} Points\n          </Typography>\n          <div className={classes.progressBar}>\n            <AnalyticsLinearProgressBar\n              value={data.test_weight ?? 0}\n              maxValue={10}\n              isInTable\n            />\n          </div>\n        </div>\n      </StyledTableCell>\n\n      <StyledTableCell>\n        <div className={classes.reliabiltyData}>\n          <Typography>{data.resulting_points} Points</Typography>\n          <div className={classes.progressBar}>\n            <LinearProgressBar width={0.2} value={data.resulting_points ?? 0} />\n          </div>\n        </div>\n      </StyledTableCell>\n\n      <StyledTableCell>\n        <Typography variant=\"body2\" className={classes.tableObjects}>\n          {formatDate(data.last_run)}\n        </Typography>\n      </StyledTableCell>\n\n      <StyledTableCell />\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}