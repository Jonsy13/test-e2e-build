{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Tooltip,Typography}from'@material-ui/core';import{ButtonFilled,InputField}from'litmus-ui';import React,{useState}from'react';import{useTranslation}from'react-i18next';import Loader from'../../components/Loader';import config from'../../config';import Center from'../../containers/layouts/Center';import{setUserDetails}from'../../utils/auth';import{validateStartEmptySpacing}from'../../utils/validate';import useStyles from'./styles';var LoginPage=function LoginPage(){var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isError=_useState2[0],setIsError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState({username:'',password:''}),_useState6=_slicedToArray(_useState5,2),authData=_useState6[0],setAuthData=_useState6[1];var responseCode=200;var loaderSize=20;var handleSubmit=function handleSubmit(event){event.preventDefault();setIsLoading(true);fetch(\"\".concat(config.auth.url,\"/login\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(authData)}).then(function(response){if(response.status!==responseCode){setIsError(true);setIsLoading(false);}else{setIsError(false);}return response.json();}).then(function(data){if('error'in data){console.error(data);}else{setUserDetails(data.access_token);setIsLoading(false);window.location.assign('/getStarted');}}).catch(function(err){console.error(err);});};return/*#__PURE__*/React.createElement(\"div\",{className:classes.rootContainer},/*#__PURE__*/React.createElement(Center,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.rootDiv},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{src:\"icons/LitmusLogoLight.svg\",alt:\"litmus logo\"}),/*#__PURE__*/React.createElement(Typography,{className:classes.HeaderText},t('login.heading')),/*#__PURE__*/React.createElement(Typography,{className:classes.litmusText},t('login.subHeading1'))),/*#__PURE__*/React.createElement(\"form\",{id:\"login-form\",autoComplete:\"on\",onSubmit:handleSubmit,className:classes.inputDiv},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(InputField,{\"data-cy\":\"inputName\",className:classes.inputValue,label:\"Username\",value:authData.username,helperText:validateStartEmptySpacing(authData.username)?t('settings.userManagementTab.createUser.userDetails.validationEmptySpace'):'',filled:true,onChange:function onChange(e){return setAuthData({username:e.target.value,password:authData.password});}}),/*#__PURE__*/React.createElement(InputField,{\"data-cy\":\"inputPassword\",className:classes.inputValue,label:\"Password\",type:\"password\",required:true,value:authData.password,helperText:isError?t('login.wrongCredentials'):'',filled:true,onChange:function onChange(e){return setAuthData({username:authData.username,password:e.target.value});}})),/*#__PURE__*/React.createElement(\"div\",{className:classes.buttonGroup},/*#__PURE__*/React.createElement(ButtonFilled,{className:classes.loginButton,type:\"submit\",disabled:isLoading},/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"loginButton\"},isLoading?/*#__PURE__*/React.createElement(Loader,{size:loaderSize}):'Login')),/*#__PURE__*/React.createElement(Tooltip,{classes:{tooltip:classes.tooltip},disableFocusListener:true,placement:\"bottom\",title:/*#__PURE__*/React.createElement(Typography,null,t('login.tooltipText'))},/*#__PURE__*/React.createElement(Typography,{className:classes.forgetPwdText},t('login.forgetPassword'))))))));};export default LoginPage;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/LoginPage/index.tsx"],"names":["Tooltip","Typography","ButtonFilled","InputField","React","useState","useTranslation","Loader","config","Center","setUserDetails","validateStartEmptySpacing","useStyles","LoginPage","classes","t","isError","setIsError","isLoading","setIsLoading","username","password","authData","setAuthData","responseCode","loaderSize","handleSubmit","event","preventDefault","fetch","auth","url","method","headers","body","JSON","stringify","then","response","status","json","data","console","error","access_token","window","location","assign","catch","err","rootContainer","rootDiv","HeaderText","litmusText","inputDiv","inputValue","e","target","value","buttonGroup","loginButton","tooltip","forgetPwdText"],"mappings":"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","sourcesContent":["import { Tooltip, Typography } from '@material-ui/core';\nimport { ButtonFilled, InputField } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport config from '../../config';\nimport Center from '../../containers/layouts/Center';\nimport { setUserDetails } from '../../utils/auth';\nimport { validateStartEmptySpacing } from '../../utils/validate';\nimport useStyles from './styles';\n\ninterface authData {\n  username: string;\n  password: string;\n}\n\nconst LoginPage: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [authData, setAuthData] = useState<authData>({\n    username: '',\n    password: '',\n  });\n\n  const responseCode = 200;\n  const loaderSize = 20;\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    fetch(`${config.auth.url}/login`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(authData),\n    })\n      .then((response) => {\n        if (response.status !== responseCode) {\n          setIsError(true);\n          setIsLoading(false);\n        } else {\n          setIsError(false);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        if ('error' in data) {\n          console.error(data);\n        } else {\n          setUserDetails(data.access_token);\n          setIsLoading(false);\n          window.location.assign('/getStarted');\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <div className={classes.rootContainer}>\n      <Center>\n        <div className={classes.rootDiv}>\n          <div>\n            <img src=\"icons/LitmusLogoLight.svg\" alt=\"litmus logo\" />\n            <Typography className={classes.HeaderText}>\n              {t('login.heading')}\n            </Typography>\n            <Typography className={classes.litmusText}>\n              {t('login.subHeading1')}\n            </Typography>\n          </div>\n          <form\n            id=\"login-form\"\n            autoComplete=\"on\"\n            onSubmit={handleSubmit}\n            className={classes.inputDiv}\n          >\n            <div>\n              <InputField\n                data-cy=\"inputName\"\n                className={classes.inputValue}\n                label=\"Username\"\n                value={authData.username}\n                helperText={\n                  validateStartEmptySpacing(authData.username)\n                    ? t(\n                        'settings.userManagementTab.createUser.userDetails.validationEmptySpace'\n                      )\n                    : ''\n                }\n                filled\n                onChange={(e) =>\n                  setAuthData({\n                    username: e.target.value,\n                    password: authData.password,\n                  })\n                }\n              />\n              <InputField\n                data-cy=\"inputPassword\"\n                className={classes.inputValue}\n                label=\"Password\"\n                type=\"password\"\n                required\n                value={authData.password}\n                helperText={isError ? t('login.wrongCredentials') : ''}\n                filled\n                onChange={(e) =>\n                  setAuthData({\n                    username: authData.username,\n                    password: e.target.value,\n                  })\n                }\n              />\n            </div>\n            <div className={classes.buttonGroup}>\n              <ButtonFilled\n                className={classes.loginButton}\n                type=\"submit\"\n                disabled={isLoading}\n              >\n                <div data-cy=\"loginButton\">\n                  {isLoading ? <Loader size={loaderSize} /> : 'Login'}\n                </div>\n              </ButtonFilled>\n              <Tooltip\n                classes={{\n                  tooltip: classes.tooltip,\n                }}\n                disableFocusListener\n                placement=\"bottom\"\n                title={<Typography>{t('login.tooltipText')}</Typography>}\n              >\n                <Typography className={classes.forgetPwdText}>\n                  {t('login.forgetPassword')}\n                </Typography>\n              </Tooltip>\n            </div>\n          </form>\n        </div>\n      </Center>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}