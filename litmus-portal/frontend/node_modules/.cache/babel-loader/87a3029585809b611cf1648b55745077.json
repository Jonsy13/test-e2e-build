{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useMutation}from'@apollo/client';import{IconButton,Snackbar,Typography}from'@material-ui/core';import CheckOutlinedIcon from'@material-ui/icons/CheckOutlined';import{ButtonFilled,InputField}from'litmus-ui';import React,{useState}from'react';import{useSelector}from'react-redux';import YAML from'yaml';import{Alert}from'@material-ui/lab';import{useTranslation}from'react-i18next';import YamlEditor from'../../../components/YamlEditor/Editor';import{ADD_WORKFLOW_TEMPLATE}from'../../../graphql';import useStyles from'./styles';import{getProjectID}from'../../../utils/getSearchParams';import Loader from'../../../components/Loader';import{constants}from'../../../constants';var SaveTemplateModal=function SaveTemplateModal(_ref){var closeTemplate=_ref.closeTemplate,isCustomWorkflow=_ref.isCustomWorkflow;var _useTranslation=useTranslation(),t=_useTranslation.t;var classes=useStyles();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),templateName=_useState2[0],setTemplateName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),templateDesc=_useState4[0],setTemplateDesc=_useState4[1];var manifest=useSelector(function(state){return state.workflowManifest.manifest;});var _useState5=useState(manifest),_useState6=_slicedToArray(_useState5,2),editManifest=_useState6[0],setEditManifest=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),yamlValid=_useState8[0],setYamlValid=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),displayResult=_useState10[0],setDisplayResult=_useState10[1];var _useState11=useState({type:'',message:''}),_useState12=_slicedToArray(_useState11,2),cloneResult=_useState12[0],setCloneResult=_useState12[1];var _useMutation=useMutation(ADD_WORKFLOW_TEMPLATE,{variables:{data:{manifest:YAML.stringify(editManifest),template_name:templateName,template_description:templateDesc,project_id:getProjectID(),isCustomWorkflow:isCustomWorkflow}},onError:function onError(data){setDisplayResult(true);setCloneResult({type:constants.error,message:data.message});},onCompleted:function onCompleted(){setDisplayResult(true);setCloneResult({type:constants.success,message:\"\".concat(t('chaosWorkflows.browseSchedules.savedSuccessfully'))});}}),_useMutation2=_slicedToArray(_useMutation,2),addWorkflowTemplate=_useMutation2[0],loading=_useMutation2[1].loading;var handleAlertOnClose=function handleAlertOnClose(){setDisplayResult(false);if(cloneResult.type===constants.success)closeTemplate();};return/*#__PURE__*/React.createElement(\"div\",{className:classes.saveTemplateRoot},/*#__PURE__*/React.createElement(Typography,{className:classes.SaveTemplateTxt},t('chaosWorkflows.browseSchedules.saveTemplate')),/*#__PURE__*/React.createElement(Typography,{className:classes.NoteTxt},t('chaosWorkflows.browseSchedules.updateEngine')),/*#__PURE__*/React.createElement(InputField,{label:\"Name of the template\",value:templateName,helperText:\"\",required:true,onChange:function onChange(e){return setTemplateName(e.target.value);},className:classes.InputFieldTemplate}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(InputField,{label:\"Description of the template\",value:templateDesc,helperText:\"\",required:true,onChange:function onChange(e){return setTemplateDesc(e.target.value);},className:classes.InputFieldTemplate}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:classes.editor},/*#__PURE__*/React.createElement(YamlEditor,{content:editManifest,filename:\"Workflow Template\",readOnly:false,setButtonState:function setButtonState(btnState){setYamlValid(btnState);},saveWorkflowChange:function saveWorkflowChange(updatedManifest){setEditManifest(updatedManifest);}})),/*#__PURE__*/React.createElement(\"div\",{className:classes.footerTemplateDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.templateButtonsDiv},/*#__PURE__*/React.createElement(IconButton,{onClick:closeTemplate,className:classes.cancelIcon},t('chaosWorkflows.browseSchedules.cancel')),/*#__PURE__*/React.createElement(ButtonFilled,{onClick:function onClick(){addWorkflowTemplate();},disabled:loading||cloneResult.type===constants.success||templateName.trim().length===0||templateDesc.trim().length===0||!yamlValid},loading?/*#__PURE__*/React.createElement(Loader,{size:20}):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(CheckOutlinedIcon,null),/*#__PURE__*/React.createElement(Typography,{className:classes.saveButtonTemplate},t('chaosWorkflows.browseSchedules.saveChanges')))))),/*#__PURE__*/React.createElement(Snackbar,{open:displayResult,autoHideDuration:6000,onClose:handleAlertOnClose},/*#__PURE__*/React.createElement(Alert,{onClose:handleAlertOnClose,severity:cloneResult.type===constants.error?'error':'success'},cloneResult.message)));};export default SaveTemplateModal;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseSchedule/SaveTemplateModal.tsx"],"names":["useMutation","IconButton","Snackbar","Typography","CheckOutlinedIcon","ButtonFilled","InputField","React","useState","useSelector","YAML","Alert","useTranslation","YamlEditor","ADD_WORKFLOW_TEMPLATE","useStyles","getProjectID","Loader","constants","SaveTemplateModal","closeTemplate","isCustomWorkflow","t","classes","templateName","setTemplateName","templateDesc","setTemplateDesc","manifest","state","workflowManifest","editManifest","setEditManifest","yamlValid","setYamlValid","displayResult","setDisplayResult","type","message","cloneResult","setCloneResult","variables","data","stringify","template_name","template_description","project_id","onError","error","onCompleted","success","addWorkflowTemplate","loading","handleAlertOnClose","saveTemplateRoot","SaveTemplateTxt","NoteTxt","e","target","value","InputFieldTemplate","editor","btnState","updatedManifest","footerTemplateDiv","templateButtonsDiv","cancelIcon","trim","length","saveButtonTemplate"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\nimport { IconButton, Snackbar, Typography } from '@material-ui/core';\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\nimport { ButtonFilled, InputField } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport { Alert } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport YamlEditor from '../../../components/YamlEditor/Editor';\nimport { ADD_WORKFLOW_TEMPLATE } from '../../../graphql';\nimport { RootState } from '../../../redux/reducers';\nimport useStyles from './styles';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport Loader from '../../../components/Loader';\nimport { constants } from '../../../constants';\n\ninterface SaveTemplateModalProps {\n  closeTemplate: () => void;\n  isCustomWorkflow: boolean;\n}\n\ninterface CloneTemplateResult {\n  type: string;\n  message: string;\n}\n\nconst SaveTemplateModal: React.FC<SaveTemplateModalProps> = ({\n  closeTemplate,\n  isCustomWorkflow,\n}) => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const [templateName, setTemplateName] = useState<string>('');\n  const [templateDesc, setTemplateDesc] = useState<string>('');\n  const manifest: string = useSelector(\n    (state: RootState) => state.workflowManifest.manifest\n  );\n  const [editManifest, setEditManifest] = useState(manifest);\n  const [yamlValid, setYamlValid] = useState(true);\n  const [displayResult, setDisplayResult] = useState<boolean>(false);\n  const [cloneResult, setCloneResult] = useState<CloneTemplateResult>({\n    type: '',\n    message: '',\n  });\n  const [addWorkflowTemplate, { loading }] = useMutation(\n    ADD_WORKFLOW_TEMPLATE,\n    {\n      variables: {\n        data: {\n          manifest: YAML.stringify(editManifest),\n          template_name: templateName,\n          template_description: templateDesc,\n          project_id: getProjectID(),\n          isCustomWorkflow,\n        },\n      },\n      onError: (data) => {\n        setDisplayResult(true);\n        setCloneResult({\n          type: constants.error,\n          message: data.message,\n        });\n      },\n      onCompleted: () => {\n        setDisplayResult(true);\n        setCloneResult({\n          type: constants.success,\n          message: `${t('chaosWorkflows.browseSchedules.savedSuccessfully')}`,\n        });\n      },\n    }\n  );\n\n  const handleAlertOnClose = () => {\n    setDisplayResult(false);\n    if (cloneResult.type === constants.success) closeTemplate();\n  };\n\n  return (\n    <div className={classes.saveTemplateRoot}>\n      <Typography className={classes.SaveTemplateTxt}>\n        {t('chaosWorkflows.browseSchedules.saveTemplate')}\n      </Typography>\n      <Typography className={classes.NoteTxt}>\n        {t('chaosWorkflows.browseSchedules.updateEngine')}\n      </Typography>\n      <InputField\n        label=\"Name of the template\"\n        value={templateName}\n        helperText=\"\"\n        required\n        onChange={(e) => setTemplateName(e.target.value)}\n        className={classes.InputFieldTemplate}\n      />\n      <br />\n      <InputField\n        label=\"Description of the template\"\n        value={templateDesc}\n        helperText=\"\"\n        required\n        onChange={(e) => setTemplateDesc(e.target.value)}\n        className={classes.InputFieldTemplate}\n      />\n      <br />\n      <div className={classes.editor}>\n        <YamlEditor\n          content={editManifest}\n          filename=\"Workflow Template\"\n          readOnly={false}\n          setButtonState={(btnState: boolean) => {\n            setYamlValid(btnState);\n          }}\n          saveWorkflowChange={(updatedManifest: string) => {\n            setEditManifest(updatedManifest);\n          }}\n        />\n      </div>\n      <div className={classes.footerTemplateDiv}>\n        <div className={classes.templateButtonsDiv}>\n          <IconButton onClick={closeTemplate} className={classes.cancelIcon}>\n            {t('chaosWorkflows.browseSchedules.cancel')}\n          </IconButton>\n          <ButtonFilled\n            onClick={() => {\n              addWorkflowTemplate();\n            }}\n            disabled={\n              loading ||\n              cloneResult.type === constants.success ||\n              templateName.trim().length === 0 ||\n              templateDesc.trim().length === 0 ||\n              !yamlValid\n            }\n          >\n            {loading ? (\n              <Loader size={20} />\n            ) : (\n              <>\n                <CheckOutlinedIcon />\n                <Typography className={classes.saveButtonTemplate}>\n                  {t('chaosWorkflows.browseSchedules.saveChanges')}\n                </Typography>\n              </>\n            )}\n          </ButtonFilled>\n        </div>\n      </div>\n      <Snackbar\n        open={displayResult}\n        autoHideDuration={6000}\n        onClose={handleAlertOnClose}\n      >\n        <Alert\n          onClose={handleAlertOnClose}\n          severity={cloneResult.type === constants.error ? 'error' : 'success'}\n        >\n          {cloneResult.message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\nexport default SaveTemplateModal;\n"]},"metadata":{},"sourceType":"module"}