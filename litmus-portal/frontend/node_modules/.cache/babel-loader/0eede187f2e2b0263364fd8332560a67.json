{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable no-unused-expressions */ /* eslint-disable @typescript-eslint/no-unused-vars */import{useQuery,useSubscription}from'@apollo/client';import{FormControl,InputLabel,MenuItem,Select,Typography}from'@material-ui/core';import{AutocompleteChipInput,InputField}from'litmus-ui';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import{useSelector}from'react-redux';import{GET_CLUSTER,KUBE_OBJ}from'../../../../../../graphql';import useActions from'../../../../../../redux/actions';import*as DashboardActions from'../../../../../../redux/actions/dashboards';import{getProjectID}from'../../../../../../utils/getSearchParams';import{validateTextEmpty}from'../../../../../../utils/validate';import gvrList from'./data';import useStyles from'./styles';var DashboardMetadataForm=function DashboardMetadataForm(_ref){var _dashboardVars$id,_dashboardVars$name,_dashboardVars$dashbo,_dashboardVars$dashbo2,_dashboardVars$dataSo,_dashboardVars$dataSo2,_dashboardVars$dataSo3,_dashboardVars$chaosE,_dashboardVars$chaosV,_dashboardVars$agentI,_dashboardVars$inform,_dashboardVars$panelG,_dashboardVars$panelG2,_dashboardVars$applic,_dashboardDetails$age,_dashboardDetails$nam,_agentList$getCluster2,_dashboardDetails$das,_dashboardDetails$das2;var dashboardVars=_ref.dashboardVars,dataSourceList=_ref.dataSourceList,configure=_ref.configure,CallbackToSetVars=_ref.CallbackToSetVars,setDisabledNext=_ref.setDisabledNext;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var projectID=getProjectID();var dashboard=useActions(DashboardActions);var selectedDashboard=useSelector(function(state){return state.selectDashboard;});var getSelectedApps=function getSelectedApps(dashboardJSON){dashboard.selectDashboard({selectedDashboardID:''});return dashboardJSON.applicationMetadataMap;};var _useState=useState({id:!configure?'':(_dashboardVars$id=dashboardVars.id)!==null&&_dashboardVars$id!==void 0?_dashboardVars$id:'',name:!configure?selectedDashboard.dashboardJSON?selectedDashboard.dashboardJSON.name:'custom':(_dashboardVars$name=dashboardVars.name)!==null&&_dashboardVars$name!==void 0?_dashboardVars$name:'',dashboardTypeID:!configure?selectedDashboard.dashboardJSON?selectedDashboard.dashboardJSON.dashboardID:'custom':(_dashboardVars$dashbo=dashboardVars.dashboardTypeID)!==null&&_dashboardVars$dashbo!==void 0?_dashboardVars$dashbo:'',dashboardTypeName:!configure?selectedDashboard.dashboardJSON?selectedDashboard.dashboardJSON.name:'Custom':(_dashboardVars$dashbo2=dashboardVars.dashboardTypeName)!==null&&_dashboardVars$dashbo2!==void 0?_dashboardVars$dashbo2:'',dataSourceType:!configure?'Prometheus':(_dashboardVars$dataSo=dashboardVars.dataSourceType)!==null&&_dashboardVars$dataSo!==void 0?_dashboardVars$dataSo:'',dataSourceID:(_dashboardVars$dataSo2=dashboardVars.dataSourceID)!==null&&_dashboardVars$dataSo2!==void 0?_dashboardVars$dataSo2:'',dataSourceURL:(_dashboardVars$dataSo3=dashboardVars.dataSourceURL)!==null&&_dashboardVars$dataSo3!==void 0?_dashboardVars$dataSo3:'',chaosEventQueryTemplate:!configure?selectedDashboard.dashboardJSON?selectedDashboard.dashboardJSON.chaosEventQueryTemplate:'litmuschaos_awaited_experiments{job=\"chaos-exporter\"}':(_dashboardVars$chaosE=dashboardVars.chaosEventQueryTemplate)!==null&&_dashboardVars$chaosE!==void 0?_dashboardVars$chaosE:'',chaosVerdictQueryTemplate:!configure?selectedDashboard.dashboardJSON?selectedDashboard.dashboardJSON.chaosVerdictQueryTemplate:'litmuschaos_experiment_verdict{job=\"chaos-exporter\"}':(_dashboardVars$chaosV=dashboardVars.chaosVerdictQueryTemplate)!==null&&_dashboardVars$chaosV!==void 0?_dashboardVars$chaosV:'',agentID:(_dashboardVars$agentI=dashboardVars.agentID)!==null&&_dashboardVars$agentI!==void 0?_dashboardVars$agentI:'',information:!configure?selectedDashboard.dashboardJSON?selectedDashboard.dashboardJSON.information:'Customized dashboard':(_dashboardVars$inform=dashboardVars.information)!==null&&_dashboardVars$inform!==void 0?_dashboardVars$inform:'',panelGroupMap:(_dashboardVars$panelG=dashboardVars.panelGroupMap)!==null&&_dashboardVars$panelG!==void 0?_dashboardVars$panelG:[],panelGroups:(_dashboardVars$panelG2=dashboardVars.panelGroups)!==null&&_dashboardVars$panelG2!==void 0?_dashboardVars$panelG2:[],applicationMetadataMap:!configure?selectedDashboard.selectedDashboardID!=='upload'?dashboardVars.applicationMetadataMap:getSelectedApps(selectedDashboard.dashboardJSON):(_dashboardVars$applic=dashboardVars.applicationMetadataMap)!==null&&_dashboardVars$applic!==void 0?_dashboardVars$applic:[]}),_useState2=_slicedToArray(_useState,2),dashboardDetails=_useState2[0],setDashboardDetails=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),update=_useState4[0],setUpdate=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),availableApplicationMetadataMap=_useState6[0],setAvailableApplicationMetadataMap=_useState6[1];var _useState7=useState({group:'',version:'v1',resource:'pods'}),_useState8=_slicedToArray(_useState7,2),kubeObjInput=_useState8[0],setKubeObjInput=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),selectedNamespaceList=_useState10[0],setSelectedNamespaceList=_useState10[1];// Apollo query to get the agent data\nvar _useQuery=useQuery(GET_CLUSTER,{variables:{project_id:projectID},fetchPolicy:'cache-and-network'}),agentList=_useQuery.data;/**\n   * GraphQL subscription to fetch the KubeObjData from the server\n   */var _useSubscription=useSubscription(KUBE_OBJ,{variables:{data:{cluster_id:(_dashboardDetails$age=dashboardDetails.agentID)!==null&&_dashboardDetails$age!==void 0?_dashboardDetails$age:'',object_type:'kubeobject',kube_obj_request:{group:kubeObjInput.group,version:kubeObjInput.version,resource:kubeObjInput.resource}}},onSubscriptionComplete:function onSubscriptionComplete(){var newAvailableApplicationMetadataMap=[];try{var _kubeObjectData$getKu;var kubeData=JSON.parse((_kubeObjectData$getKu=kubeObjectData===null||kubeObjectData===void 0?void 0:kubeObjectData.getKubeObject.kube_obj)!==null&&_kubeObjectData$getKu!==void 0?_kubeObjectData$getKu:'');kubeData.forEach(function(obj){var newAvailableApplicationMetadata={namespace:obj.namespace,applications:[{kind:kubeObjInput.resource,names:[]}]};if(obj.data!=null){obj.data.forEach(function(objData){if(objData.name!=null){newAvailableApplicationMetadata.applications[0].names.push(objData.name);}});}newAvailableApplicationMetadataMap.push(newAvailableApplicationMetadata);});}catch(err){console.error(err);}setAvailableApplicationMetadataMap(newAvailableApplicationMetadataMap);},fetchPolicy:'network-only'}),kubeObjectData=_useSubscription.data;var nameChangeHandler=function nameChangeHandler(event){setDashboardDetails(_objectSpread(_objectSpread({},dashboardDetails),{},{name:event.target.value}));setUpdate(true);};var getSelectedDsURL=function getSelectedDsURL(selectedDsID){var selectedDsURL='';dataSourceList.forEach(function(ds){if(ds.ds_id===selectedDsID){selectedDsURL=ds.ds_url;}});return selectedDsURL;};useEffect(function(){var _dashboardDetails$pan,_dashboardDetails$pan2;if(dashboardDetails.name===''||dashboardDetails.dashboardTypeID===''||dashboardDetails.dashboardTypeName===''||dashboardDetails.dataSourceType===''||dashboardDetails.dataSourceID===''||dashboardDetails.dataSourceURL===''||dashboardDetails.chaosEventQueryTemplate===''||dashboardDetails.chaosVerdictQueryTemplate===''||dashboardDetails.agentID===''||dashboardDetails.information===''){setDisabledNext(true);}else if(configure===true&&(dashboardDetails.id===''||((_dashboardDetails$pan=dashboardDetails.panelGroupMap)===null||_dashboardDetails$pan===void 0?void 0:_dashboardDetails$pan.length)===0||((_dashboardDetails$pan2=dashboardDetails.panelGroups)===null||_dashboardDetails$pan2===void 0?void 0:_dashboardDetails$pan2.length)===0)){setDisabledNext(true);}else{setDisabledNext(false);}if(update===true){CallbackToSetVars(dashboardDetails);setUpdate(false);}},[update]);useEffect(function(){if(dashboardDetails.agentID===''&&!configure){var _agentList$getCluster;var availableAgents=((_agentList$getCluster=agentList===null||agentList===void 0?void 0:agentList.getCluster)!==null&&_agentList$getCluster!==void 0?_agentList$getCluster:[]).filter(function(cluster){return cluster.is_active&&cluster.is_cluster_confirmed&&cluster.is_registered;});setDashboardDetails(_objectSpread(_objectSpread({},dashboardDetails),{},{agentID:availableAgents.length?availableAgents[0].cluster_id:''}));setUpdate(true);}},[agentList]);useEffect(function(){if(dashboardDetails.dataSourceID===''&&!configure){var availableDataSources=dataSourceList.filter(function(dataSource){return dataSource.health_status==='Active';});setDashboardDetails(_objectSpread(_objectSpread({},dashboardDetails),{},{dataSourceID:availableDataSources.length?availableDataSources[0].ds_id:'',dataSourceURL:availableDataSources.length?availableDataSources[0].ds_url:''}));setUpdate(true);}},[dataSourceList]);var getAvailableApplications=function getAvailableApplications(){var availableApplications=[];availableApplicationMetadataMap.forEach(function(appMetadata){selectedNamespaceList.forEach(function(namespaceOption){if(namespaceOption.name===appMetadata.namespace){var apps=appMetadata.applications.filter(function(application){return application.kind===kubeObjInput.resource;});if(apps.length){apps[0].names.forEach(function(appName){availableApplications.push({name:\"\".concat(namespaceOption.name,\" / \").concat(kubeObjInput.resource.substring(0,kubeObjInput.resource.length-1),\" / \").concat(appName)});});}}});});return availableApplications;};var getSelectedAppDetails=function getSelectedAppDetails(){var _dashboardDetails$app;var options=[];(_dashboardDetails$app=dashboardDetails.applicationMetadataMap)===null||_dashboardDetails$app===void 0?void 0:_dashboardDetails$app.forEach(function(app){app.applications.forEach(function(resources){resources.names.forEach(function(name){options.push({name:\"\".concat(app.namespace,\" / \").concat(resources.kind,\" / \").concat(name)});});});});return options;};var getSelectedAppNamespaces=function getSelectedAppNamespaces(){var _dashboardDetails$app2;var options=[];(_dashboardDetails$app2=dashboardDetails.applicationMetadataMap)===null||_dashboardDetails$app2===void 0?void 0:_dashboardDetails$app2.forEach(function(app){options.push({name:app.namespace});});return options;};useEffect(function(){if(configure){var _dashboardDetails$pan3,_dashboardDetails$pan4;setDashboardDetails(_objectSpread({},dashboardVars));if(dashboardDetails.name===''||dashboardDetails.dashboardTypeID===''||dashboardDetails.dashboardTypeName===''||dashboardDetails.dataSourceType===''||dashboardDetails.dataSourceID===''||dashboardDetails.dataSourceURL===''||dashboardDetails.chaosEventQueryTemplate===''||dashboardDetails.chaosVerdictQueryTemplate===''||dashboardDetails.agentID===''||dashboardDetails.information===''||((_dashboardDetails$pan3=dashboardDetails.panelGroupMap)===null||_dashboardDetails$pan3===void 0?void 0:_dashboardDetails$pan3.length)===0||((_dashboardDetails$pan4=dashboardDetails.panelGroups)===null||_dashboardDetails$pan4===void 0?void 0:_dashboardDetails$pan4.length)===0){setDisabledNext(true);}else{setDisabledNext(false);}}},[dashboardVars]);return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.flexDisplay},/*#__PURE__*/React.createElement(InputField,{label:t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.name'),\"data-cy\":\"inputDashboardName\",width:\"20rem\",variant:validateTextEmpty((_dashboardDetails$nam=dashboardDetails.name)!==null&&_dashboardDetails$nam!==void 0?_dashboardDetails$nam:'')?'error':'primary',onChange:nameChangeHandler,value:dashboardDetails.name}),/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formControl,color:\"primary\"},/*#__PURE__*/React.createElement(InputLabel,{className:classes.selectTextLabel},t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.agent')),/*#__PURE__*/React.createElement(Select,{value:dashboardDetails.agentID,onChange:function onChange(event){setDashboardDetails(_objectSpread(_objectSpread({},dashboardDetails),{},{agentID:event.target.value}));setUpdate(true);},label:t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.agent'),className:classes.selectText},((_agentList$getCluster2=agentList===null||agentList===void 0?void 0:agentList.getCluster)!==null&&_agentList$getCluster2!==void 0?_agentList$getCluster2:[]).filter(function(cluster){return cluster.is_active&&cluster.is_cluster_confirmed&&cluster.is_registered;}).map(function(agent){return/*#__PURE__*/React.createElement(MenuItem,{key:agent.cluster_id,value:agent.cluster_id},agent.cluster_name);})))),/*#__PURE__*/React.createElement(\"div\",{className:classes.flexDisplay},/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formControl,color:\"primary\"},/*#__PURE__*/React.createElement(InputLabel,{className:classes.selectTextLabel},t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.dataSource')),/*#__PURE__*/React.createElement(Select,{value:dashboardDetails.dataSourceID,onChange:function onChange(event){setDashboardDetails(_objectSpread(_objectSpread({},dashboardDetails),{},{dataSourceID:event.target.value,dataSourceURL:getSelectedDsURL(event.target.value)}));setUpdate(true);},label:t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.dataSource'),className:classes.selectText},dataSourceList.map(function(dataSource){return/*#__PURE__*/React.createElement(MenuItem,{key:dataSource.ds_id,value:dataSource.ds_id},dataSource.ds_name);}))),/*#__PURE__*/React.createElement(InputField,{label:t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.dashboardType'),\"data-cy\":\"inputDashboardType\",width:\"20rem\",variant:validateTextEmpty((_dashboardDetails$das=dashboardDetails.dashboardTypeName)!==null&&_dashboardDetails$das!==void 0?_dashboardDetails$das:'')?'error':'primary',disabled:true,value:dashboardDetails.dashboardTypeName})),(dashboardDetails.dashboardTypeID==='custom'||((_dashboardDetails$das2=dashboardDetails.dashboardTypeID)===null||_dashboardDetails$das2===void 0?void 0:_dashboardDetails$das2.startsWith('generic')))&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:classes.heading},t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.applications')),/*#__PURE__*/React.createElement(AutocompleteChipInput,{defaultValue:getSelectedAppNamespaces(),onChange:function onChange(event,value,reason){setSelectedNamespaceList(value);},options:availableApplicationMetadataMap.map(function(value){return{name:value.namespace};}),label:t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.selectNamespaces'),placeholder:\"\".concat(t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.addNamespace')),disableCloseOnSelect:true,disableClearable:false,limitTags:4,className:classes.namespaceSelect}),/*#__PURE__*/React.createElement(\"div\",{className:classes.appSelectFlex},/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formControl,style:{width:'12.5rem'},color:\"primary\"},/*#__PURE__*/React.createElement(InputLabel,{className:classes.selectTextLabel},t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.selectApplicationType')),/*#__PURE__*/React.createElement(Select,{value:kubeObjInput.resource,onChange:function onChange(event){setKubeObjInput(gvrList.filter(function(gvr){return gvr.resource===event.target.value;})[0]);},label:t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.selectApplicationType'),className:classes.selectText},gvrList.map(function(gvr){return/*#__PURE__*/React.createElement(MenuItem,{key:gvr.resource,value:gvr.resource},gvr.resource);}))),/*#__PURE__*/React.createElement(AutocompleteChipInput,{defaultValue:getSelectedAppDetails(),onChange:function onChange(event,value,reason){var _dashboardDetails$das3;var newSelection=[];var selectedApps=value;selectedApps.forEach(function(nsKindApp){var selectedNs=nsKindApp.name.split('/')[0].trim();var selectedKind=nsKindApp.name.split('/')[1].trim();var selectedApp=nsKindApp.name.split('/')[2].trim();var nsFound=false;newSelection.forEach(function(nsMap,index){if(nsMap.namespace===selectedNs){nsFound=true;var kindFound=false;newSelection[index].applications.forEach(function(kindMap,matchIndex){if(kindMap.kind===selectedKind){kindFound=true;newSelection[index].applications[matchIndex].names.push(selectedApp);}});if(!kindFound){newSelection[index].applications.push({kind:selectedKind,names:[selectedApp]});}}});if(!nsFound){newSelection.push({namespace:selectedNs,applications:[{kind:selectedKind,names:[selectedApp]}]});}});setDashboardDetails(_objectSpread(_objectSpread({},dashboardDetails),{},{applicationMetadataMap:dashboardDetails.dashboardTypeID==='custom'||((_dashboardDetails$das3=dashboardDetails.dashboardTypeID)===null||_dashboardDetails$das3===void 0?void 0:_dashboardDetails$das3.startsWith('generic'))?newSelection:[]}));setUpdate(true);},options:getAvailableApplications(),label:t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.selectApplications'),placeholder:\"\".concat(t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.addApplication')),disableCloseOnSelect:true,disableClearable:false,limitTags:4,style:{width:'27.5rem'}}))));};export default DashboardMetadataForm;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/ConfigureDashboardMetadata/Form/index.tsx"],"names":["useQuery","useSubscription","FormControl","InputLabel","MenuItem","Select","Typography","AutocompleteChipInput","InputField","React","useEffect","useState","useTranslation","useSelector","GET_CLUSTER","KUBE_OBJ","useActions","DashboardActions","getProjectID","validateTextEmpty","gvrList","useStyles","DashboardMetadataForm","dashboardVars","dataSourceList","configure","CallbackToSetVars","setDisabledNext","classes","t","projectID","dashboard","selectedDashboard","state","selectDashboard","getSelectedApps","dashboardJSON","selectedDashboardID","applicationMetadataMap","id","name","dashboardTypeID","dashboardID","dashboardTypeName","dataSourceType","dataSourceID","dataSourceURL","chaosEventQueryTemplate","chaosVerdictQueryTemplate","agentID","information","panelGroupMap","panelGroups","dashboardDetails","setDashboardDetails","update","setUpdate","availableApplicationMetadataMap","setAvailableApplicationMetadataMap","group","version","resource","kubeObjInput","setKubeObjInput","selectedNamespaceList","setSelectedNamespaceList","variables","project_id","fetchPolicy","agentList","data","cluster_id","object_type","kube_obj_request","onSubscriptionComplete","newAvailableApplicationMetadataMap","kubeData","JSON","parse","kubeObjectData","getKubeObject","kube_obj","forEach","obj","newAvailableApplicationMetadata","namespace","applications","kind","names","objData","push","err","console","error","nameChangeHandler","event","target","value","getSelectedDsURL","selectedDsID","selectedDsURL","ds","ds_id","ds_url","length","availableAgents","getCluster","filter","cluster","is_active","is_cluster_confirmed","is_registered","availableDataSources","dataSource","health_status","getAvailableApplications","availableApplications","appMetadata","namespaceOption","apps","application","appName","substring","getSelectedAppDetails","options","app","resources","getSelectedAppNamespaces","root","flexDisplay","formControl","selectTextLabel","selectText","map","agent","cluster_name","ds_name","startsWith","heading","reason","namespaceSelect","appSelectFlex","width","gvr","newSelection","selectedApps","nsKindApp","selectedNs","split","trim","selectedKind","selectedApp","nsFound","nsMap","index","kindFound","kindMap","matchIndex"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useQuery, useSubscription } from '@apollo/client';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport { AutocompleteChipInput, InputField } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { GET_CLUSTER, KUBE_OBJ } from '../../../../../../graphql';\nimport { DashboardDetails } from '../../../../../../models/dashboardsData';\nimport {\n  Cluster,\n  Clusters,\n  ClusterVars,\n} from '../../../../../../models/graphql/clusterData';\nimport {\n  GVRRequest,\n  KubeObjData,\n  KubeObjRequest,\n  KubeObjResource,\n  KubeObjResponse,\n} from '../../../../../../models/graphql/createWorkflowData';\nimport {\n  ApplicationMetadata,\n  Resource,\n} from '../../../../../../models/graphql/dashboardsDetails';\nimport { ListDataSourceResponse } from '../../../../../../models/graphql/dataSourceDetails';\nimport useActions from '../../../../../../redux/actions';\nimport * as DashboardActions from '../../../../../../redux/actions/dashboards';\nimport { RootState } from '../../../../../../redux/reducers';\nimport { getProjectID } from '../../../../../../utils/getSearchParams';\nimport { validateTextEmpty } from '../../../../../../utils/validate';\nimport gvrList from './data';\nimport useStyles from './styles';\n\ninterface DashboardMetadataFormProps {\n  dashboardVars: DashboardDetails;\n  dataSourceList: ListDataSourceResponse[];\n  configure: boolean;\n  CallbackToSetVars: (vars: DashboardDetails) => void;\n  setDisabledNext: (next: boolean) => void;\n}\n\ninterface Option {\n  name: string;\n  [index: string]: any;\n}\n\nconst DashboardMetadataForm: React.FC<DashboardMetadataFormProps> = ({\n  dashboardVars,\n  dataSourceList,\n  configure,\n  CallbackToSetVars,\n  setDisabledNext,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const dashboard = useActions(DashboardActions);\n  const selectedDashboard = useSelector(\n    (state: RootState) => state.selectDashboard\n  );\n\n  const getSelectedApps = (dashboardJSON: any) => {\n    dashboard.selectDashboard({\n      selectedDashboardID: '',\n    });\n    return dashboardJSON.applicationMetadataMap;\n  };\n\n  const [dashboardDetails, setDashboardDetails] = useState<DashboardDetails>({\n    id: !configure ? '' : dashboardVars.id ?? '',\n    name: !configure\n      ? selectedDashboard.dashboardJSON\n        ? selectedDashboard.dashboardJSON.name\n        : 'custom'\n      : dashboardVars.name ?? '',\n    dashboardTypeID: !configure\n      ? selectedDashboard.dashboardJSON\n        ? selectedDashboard.dashboardJSON.dashboardID\n        : 'custom'\n      : dashboardVars.dashboardTypeID ?? '',\n    dashboardTypeName: !configure\n      ? selectedDashboard.dashboardJSON\n        ? selectedDashboard.dashboardJSON.name\n        : 'Custom'\n      : dashboardVars.dashboardTypeName ?? '',\n    dataSourceType: !configure\n      ? 'Prometheus'\n      : dashboardVars.dataSourceType ?? '',\n    dataSourceID: dashboardVars.dataSourceID ?? '',\n    dataSourceURL: dashboardVars.dataSourceURL ?? '',\n    chaosEventQueryTemplate: !configure\n      ? selectedDashboard.dashboardJSON\n        ? selectedDashboard.dashboardJSON.chaosEventQueryTemplate\n        : 'litmuschaos_awaited_experiments{job=\"chaos-exporter\"}'\n      : dashboardVars.chaosEventQueryTemplate ?? '',\n    chaosVerdictQueryTemplate: !configure\n      ? selectedDashboard.dashboardJSON\n        ? selectedDashboard.dashboardJSON.chaosVerdictQueryTemplate\n        : 'litmuschaos_experiment_verdict{job=\"chaos-exporter\"}'\n      : dashboardVars.chaosVerdictQueryTemplate ?? '',\n    agentID: dashboardVars.agentID ?? '',\n    information: !configure\n      ? selectedDashboard.dashboardJSON\n        ? selectedDashboard.dashboardJSON.information\n        : 'Customized dashboard'\n      : dashboardVars.information ?? '',\n    panelGroupMap: dashboardVars.panelGroupMap ?? [],\n    panelGroups: dashboardVars.panelGroups ?? [],\n    applicationMetadataMap: !configure\n      ? selectedDashboard.selectedDashboardID !== 'upload'\n        ? dashboardVars.applicationMetadataMap\n        : getSelectedApps(selectedDashboard.dashboardJSON)\n      : dashboardVars.applicationMetadataMap ?? [],\n  });\n  const [update, setUpdate] = useState(false);\n  const [availableApplicationMetadataMap, setAvailableApplicationMetadataMap] =\n    useState<ApplicationMetadata[]>([]);\n  const [kubeObjInput, setKubeObjInput] = useState<GVRRequest>({\n    group: '',\n    version: 'v1',\n    resource: 'pods',\n  });\n  const [selectedNamespaceList, setSelectedNamespaceList] = useState<\n    Array<Option>\n  >([]);\n\n  // Apollo query to get the agent data\n  const { data: agentList } = useQuery<Clusters, ClusterVars>(GET_CLUSTER, {\n    variables: { project_id: projectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  /**\n   * GraphQL subscription to fetch the KubeObjData from the server\n   */\n  const { data: kubeObjectData } = useSubscription<\n    KubeObjResponse,\n    KubeObjRequest\n  >(KUBE_OBJ, {\n    variables: {\n      data: {\n        cluster_id: dashboardDetails.agentID ?? '',\n        object_type: 'kubeobject',\n        kube_obj_request: {\n          group: kubeObjInput.group,\n          version: kubeObjInput.version,\n          resource: kubeObjInput.resource,\n        },\n      },\n    },\n    onSubscriptionComplete: () => {\n      const newAvailableApplicationMetadataMap: ApplicationMetadata[] = [];\n      try {\n        const kubeData: KubeObjData[] = JSON.parse(\n          kubeObjectData?.getKubeObject.kube_obj ?? ''\n        );\n        kubeData.forEach((obj: KubeObjData) => {\n          const newAvailableApplicationMetadata: ApplicationMetadata = {\n            namespace: obj.namespace,\n            applications: [\n              {\n                kind: kubeObjInput.resource,\n                names: [],\n              },\n            ],\n          };\n          if (obj.data != null) {\n            obj.data.forEach((objData: KubeObjResource) => {\n              if (objData.name != null) {\n                newAvailableApplicationMetadata.applications[0].names.push(\n                  objData.name\n                );\n              }\n            });\n          }\n          newAvailableApplicationMetadataMap.push(\n            newAvailableApplicationMetadata\n          );\n        });\n      } catch (err) {\n        console.error(err);\n      }\n      setAvailableApplicationMetadataMap(newAvailableApplicationMetadataMap);\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  const nameChangeHandler = (event: React.ChangeEvent<{ value: string }>) => {\n    setDashboardDetails({\n      ...dashboardDetails,\n      name: (event.target as HTMLInputElement).value,\n    });\n    setUpdate(true);\n  };\n\n  const getSelectedDsURL = (selectedDsID: string) => {\n    let selectedDsURL: string = '';\n    dataSourceList.forEach((ds) => {\n      if (ds.ds_id === selectedDsID) {\n        selectedDsURL = ds.ds_url;\n      }\n    });\n    return selectedDsURL;\n  };\n\n  useEffect(() => {\n    if (\n      dashboardDetails.name === '' ||\n      dashboardDetails.dashboardTypeID === '' ||\n      dashboardDetails.dashboardTypeName === '' ||\n      dashboardDetails.dataSourceType === '' ||\n      dashboardDetails.dataSourceID === '' ||\n      dashboardDetails.dataSourceURL === '' ||\n      dashboardDetails.chaosEventQueryTemplate === '' ||\n      dashboardDetails.chaosVerdictQueryTemplate === '' ||\n      dashboardDetails.agentID === '' ||\n      dashboardDetails.information === ''\n    ) {\n      setDisabledNext(true);\n    } else if (\n      configure === true &&\n      (dashboardDetails.id === '' ||\n        dashboardDetails.panelGroupMap?.length === 0 ||\n        dashboardDetails.panelGroups?.length === 0)\n    ) {\n      setDisabledNext(true);\n    } else {\n      setDisabledNext(false);\n    }\n    if (update === true) {\n      CallbackToSetVars(dashboardDetails);\n      setUpdate(false);\n    }\n  }, [update]);\n\n  useEffect(() => {\n    if (dashboardDetails.agentID === '' && !configure) {\n      const availableAgents = (agentList?.getCluster ?? []).filter(\n        (cluster) => {\n          return (\n            cluster.is_active &&\n            cluster.is_cluster_confirmed &&\n            cluster.is_registered\n          );\n        }\n      );\n      setDashboardDetails({\n        ...dashboardDetails,\n        agentID: availableAgents.length ? availableAgents[0].cluster_id : '',\n      });\n      setUpdate(true);\n    }\n  }, [agentList]);\n\n  useEffect(() => {\n    if (dashboardDetails.dataSourceID === '' && !configure) {\n      const availableDataSources = dataSourceList.filter((dataSource) => {\n        return dataSource.health_status === 'Active';\n      });\n      setDashboardDetails({\n        ...dashboardDetails,\n        dataSourceID: availableDataSources.length\n          ? availableDataSources[0].ds_id\n          : '',\n        dataSourceURL: availableDataSources.length\n          ? availableDataSources[0].ds_url\n          : '',\n      });\n      setUpdate(true);\n    }\n  }, [dataSourceList]);\n\n  const getAvailableApplications = () => {\n    const availableApplications: Array<Option> = [];\n    availableApplicationMetadataMap.forEach((appMetadata) => {\n      selectedNamespaceList.forEach((namespaceOption) => {\n        if (namespaceOption.name === appMetadata.namespace) {\n          const apps: Resource[] = appMetadata.applications.filter(\n            (application) => application.kind === kubeObjInput.resource\n          );\n          if (apps.length) {\n            apps[0].names.forEach((appName) => {\n              availableApplications.push({\n                name: `${\n                  namespaceOption.name\n                } / ${kubeObjInput.resource.substring(\n                  0,\n                  kubeObjInput.resource.length - 1\n                )} / ${appName}`,\n              });\n            });\n          }\n        }\n      });\n    });\n    return availableApplications;\n  };\n\n  const getSelectedAppDetails = () => {\n    const options: Array<Option> = [];\n    dashboardDetails.applicationMetadataMap?.forEach((app) => {\n      app.applications.forEach((resources) => {\n        resources.names.forEach((name) => {\n          options.push({\n            name: `${app.namespace} / ${resources.kind} / ${name}`,\n          });\n        });\n      });\n    });\n    return options;\n  };\n\n  const getSelectedAppNamespaces = () => {\n    const options: Array<Option> = [];\n    dashboardDetails.applicationMetadataMap?.forEach((app) => {\n      options.push({\n        name: app.namespace,\n      });\n    });\n    return options;\n  };\n\n  useEffect(() => {\n    if (configure) {\n      setDashboardDetails({\n        ...dashboardVars,\n      });\n      if (\n        dashboardDetails.name === '' ||\n        dashboardDetails.dashboardTypeID === '' ||\n        dashboardDetails.dashboardTypeName === '' ||\n        dashboardDetails.dataSourceType === '' ||\n        dashboardDetails.dataSourceID === '' ||\n        dashboardDetails.dataSourceURL === '' ||\n        dashboardDetails.chaosEventQueryTemplate === '' ||\n        dashboardDetails.chaosVerdictQueryTemplate === '' ||\n        dashboardDetails.agentID === '' ||\n        dashboardDetails.information === '' ||\n        dashboardDetails.panelGroupMap?.length === 0 ||\n        dashboardDetails.panelGroups?.length === 0\n      ) {\n        setDisabledNext(true);\n      } else {\n        setDisabledNext(false);\n      }\n    }\n  }, [dashboardVars]);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.flexDisplay}>\n        <InputField\n          label={t(\n            'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.name'\n          )}\n          data-cy=\"inputDashboardName\"\n          width=\"20rem\"\n          variant={\n            validateTextEmpty(dashboardDetails.name ?? '') ? 'error' : 'primary'\n          }\n          onChange={nameChangeHandler}\n          value={dashboardDetails.name}\n        />\n\n        <FormControl\n          variant=\"outlined\"\n          className={classes.formControl}\n          color=\"primary\"\n        >\n          <InputLabel className={classes.selectTextLabel}>\n            {t(\n              'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.agent'\n            )}\n          </InputLabel>\n          <Select\n            value={dashboardDetails.agentID}\n            onChange={(event) => {\n              setDashboardDetails({\n                ...dashboardDetails,\n                agentID: event.target.value as string,\n              });\n              setUpdate(true);\n            }}\n            label={t(\n              'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.agent'\n            )}\n            className={classes.selectText}\n          >\n            {(agentList?.getCluster ?? [])\n              .filter((cluster) => {\n                return (\n                  cluster.is_active &&\n                  cluster.is_cluster_confirmed &&\n                  cluster.is_registered\n                );\n              })\n              .map((agent: Cluster) => (\n                <MenuItem key={agent.cluster_id} value={agent.cluster_id}>\n                  {agent.cluster_name}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <div className={classes.flexDisplay}>\n        <FormControl\n          variant=\"outlined\"\n          className={classes.formControl}\n          color=\"primary\"\n        >\n          <InputLabel className={classes.selectTextLabel}>\n            {t(\n              'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.dataSource'\n            )}\n          </InputLabel>\n          <Select\n            value={dashboardDetails.dataSourceID}\n            onChange={(event) => {\n              setDashboardDetails({\n                ...dashboardDetails,\n                dataSourceID: event.target.value as string,\n                dataSourceURL: getSelectedDsURL(event.target.value as string),\n              });\n              setUpdate(true);\n            }}\n            label={t(\n              'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.dataSource'\n            )}\n            className={classes.selectText}\n          >\n            {dataSourceList.map((dataSource: ListDataSourceResponse) => (\n              <MenuItem key={dataSource.ds_id} value={dataSource.ds_id}>\n                {dataSource.ds_name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <InputField\n          label={t(\n            'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.dashboardType'\n          )}\n          data-cy=\"inputDashboardType\"\n          width=\"20rem\"\n          variant={\n            validateTextEmpty(dashboardDetails.dashboardTypeName ?? '')\n              ? 'error'\n              : 'primary'\n          }\n          disabled\n          value={dashboardDetails.dashboardTypeName}\n        />\n      </div>\n\n      {(dashboardDetails.dashboardTypeID === 'custom' ||\n        dashboardDetails.dashboardTypeID?.startsWith('generic')) && (\n        <div>\n          <Typography className={classes.heading}>\n            {t(\n              'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.applications'\n            )}\n          </Typography>\n\n          <AutocompleteChipInput\n            defaultValue={getSelectedAppNamespaces()}\n            onChange={(event, value, reason) => {\n              setSelectedNamespaceList(value as Array<Option>);\n            }}\n            options={availableApplicationMetadataMap.map((value) => {\n              return { name: value.namespace };\n            })}\n            label={t(\n              'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.selectNamespaces'\n            )}\n            placeholder={`${t(\n              'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.addNamespace'\n            )}`}\n            disableCloseOnSelect\n            disableClearable={false}\n            limitTags={4}\n            className={classes.namespaceSelect}\n          />\n\n          <div className={classes.appSelectFlex}>\n            <FormControl\n              variant=\"outlined\"\n              className={classes.formControl}\n              style={{ width: '12.5rem' }}\n              color=\"primary\"\n            >\n              <InputLabel className={classes.selectTextLabel}>\n                {t(\n                  'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.selectApplicationType'\n                )}\n              </InputLabel>\n              <Select\n                value={kubeObjInput.resource}\n                onChange={(event: any) => {\n                  setKubeObjInput(\n                    gvrList.filter(\n                      (gvr) => gvr.resource === (event.target.value as string)\n                    )[0]\n                  );\n                }}\n                label={t(\n                  'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.selectApplicationType'\n                )}\n                className={classes.selectText}\n              >\n                {gvrList.map((gvr: GVRRequest) => (\n                  <MenuItem key={gvr.resource} value={gvr.resource}>\n                    {gvr.resource}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <AutocompleteChipInput\n              defaultValue={getSelectedAppDetails()}\n              onChange={(event, value, reason) => {\n                const newSelection: ApplicationMetadata[] = [];\n                const selectedApps: Array<Option> = value as Array<Option>;\n                selectedApps.forEach((nsKindApp) => {\n                  const selectedNs = nsKindApp.name.split('/')[0].trim();\n                  const selectedKind = nsKindApp.name.split('/')[1].trim();\n                  const selectedApp = nsKindApp.name.split('/')[2].trim();\n                  let nsFound = false;\n                  newSelection.forEach((nsMap, index) => {\n                    if (nsMap.namespace === selectedNs) {\n                      nsFound = true;\n                      let kindFound = false;\n                      newSelection[index].applications.forEach(\n                        (kindMap, matchIndex) => {\n                          if (kindMap.kind === selectedKind) {\n                            kindFound = true;\n                            newSelection[index].applications[\n                              matchIndex\n                            ].names.push(selectedApp);\n                          }\n                        }\n                      );\n                      if (!kindFound) {\n                        newSelection[index].applications.push({\n                          kind: selectedKind,\n                          names: [selectedApp],\n                        });\n                      }\n                    }\n                  });\n                  if (!nsFound) {\n                    newSelection.push({\n                      namespace: selectedNs,\n                      applications: [\n                        { kind: selectedKind, names: [selectedApp] },\n                      ],\n                    });\n                  }\n                });\n                setDashboardDetails({\n                  ...dashboardDetails,\n                  applicationMetadataMap:\n                    dashboardDetails.dashboardTypeID === 'custom' ||\n                    dashboardDetails.dashboardTypeID?.startsWith('generic')\n                      ? newSelection\n                      : [],\n                });\n                setUpdate(true);\n              }}\n              options={getAvailableApplications()}\n              label={t(\n                'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.selectApplications'\n              )}\n              placeholder={`${t(\n                'analyticsDashboard.applicationDashboards.configureDashboardMetadata.form.addApplication'\n              )}`}\n              disableCloseOnSelect\n              disableClearable={false}\n              limitTags={4}\n              style={{ width: '27.5rem' }}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DashboardMetadataForm;\n"]},"metadata":{},"sourceType":"module"}