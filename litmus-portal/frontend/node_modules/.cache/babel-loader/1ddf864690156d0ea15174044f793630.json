{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/ConfigureDashboardMetadata/index.tsx\";\n\nimport { Typography } from '@material-ui/core';\nimport React, { forwardRef, useImperativeHandle } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useActions from '../../../../../redux/actions';\nimport * as AlertActions from '../../../../../redux/actions/alert';\nimport { getProjectRole } from '../../../../../utils/getSearchParams';\nimport DashboardMetadataForm from './Form';\nimport useStyles from './styles';\nvar ConfigureDashboardMetadata = forwardRef(function (_ref, ref) {\n  var dashboardVars = _ref.dashboardVars,\n      dataSourceList = _ref.dataSourceList,\n      handleMetadataUpdate = _ref.handleMetadataUpdate,\n      configure = _ref.configure,\n      setDisabledNext = _ref.setDisabledNext;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var alert = useActions(AlertActions);\n\n  function onNext() {\n    if (getProjectRole() === 'Viewer') {\n      alert.changeAlertState(true);\n      return false;\n    }\n\n    return true;\n  }\n\n  useImperativeHandle(ref, function () {\n    return {\n      onNext: onNext\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.header')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, t('analyticsDashboard.applicationDashboards.configureDashboardMetadata.description')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.metadataForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DashboardMetadataForm, {\n    dashboardVars: dashboardVars,\n    dataSourceList: dataSourceList,\n    configure: configure,\n    CallbackToSetVars: handleMetadataUpdate,\n    setDisabledNext: setDisabledNext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })));\n});\nexport default ConfigureDashboardMetadata;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/ConfigureDashboardMetadata/index.tsx"],"names":["Typography","React","forwardRef","useImperativeHandle","useTranslation","useActions","AlertActions","getProjectRole","DashboardMetadataForm","useStyles","ConfigureDashboardMetadata","ref","dashboardVars","dataSourceList","handleMetadataUpdate","configure","setDisabledNext","classes","t","alert","onNext","changeAlertState","heading","description","metadataForm"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,mBAA5B,QAAuD,OAAvD;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,KAAKC,YAAZ,MAA8B,oCAA9B;AACA,SAASC,cAAT,QAA+B,sCAA/B;AACA,OAAOC,qBAAP,MAAkC,QAAlC;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAUA,IAAMC,0BAA0B,GAAGR,UAAU,CAC3C,gBAQES,GARF,EASK;AAAA,MAPDC,aAOC,QAPDA,aAOC;AAAA,MANDC,cAMC,QANDA,cAMC;AAAA,MALDC,oBAKC,QALDA,oBAKC;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,MAHDC,eAGC,QAHDA,eAGC;AACH,MAAMC,OAAO,GAAGR,SAAS,EAAzB;;AACA,wBAAcL,cAAc,EAA5B;AAAA,MAAQc,CAAR,mBAAQA,CAAR;;AACA,MAAMC,KAAK,GAAGd,UAAU,CAACC,YAAD,CAAxB;;AAEA,WAASc,MAAT,GAAkB;AAChB,QAAIb,cAAc,OAAO,QAAzB,EAAmC;AACjCY,MAAAA,KAAK,CAACE,gBAAN,CAAuB,IAAvB;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAEDlB,EAAAA,mBAAmB,CAACQ,GAAD,EAAM;AAAA,WAAO;AAC9BS,MAAAA,MAAM,EAANA;AAD8B,KAAP;AAAA,GAAN,CAAnB;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEH,OAAO,CAACK,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,CAAC,CACA,4EADA,CADJ,CADF,eAME,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAED,OAAO,CAACM,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,CAAC,CACA,iFADA,CADJ,CANF,eAWE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACO,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AACE,IAAA,aAAa,EAAEZ,aADjB;AAEE,IAAA,cAAc,EAAEC,cAFlB;AAGE,IAAA,SAAS,EAAEE,SAHb;AAIE,IAAA,iBAAiB,EAAED,oBAJrB;AAKE,IAAA,eAAe,EAAEE,eALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF;AAuBD,CAlD0C,CAA7C;AAqDA,eAAeN,0BAAf","sourcesContent":["import { Typography } from '@material-ui/core';\nimport React, { forwardRef, useImperativeHandle } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardDetails } from '../../../../../models/dashboardsData';\nimport { ListDataSourceResponse } from '../../../../../models/graphql/dataSourceDetails';\nimport useActions from '../../../../../redux/actions';\nimport * as AlertActions from '../../../../../redux/actions/alert';\nimport { getProjectRole } from '../../../../../utils/getSearchParams';\nimport DashboardMetadataForm from './Form';\nimport useStyles from './styles';\n\ninterface ConfigureDashboardMetadataProps {\n  dashboardVars: DashboardDetails;\n  dataSourceList: ListDataSourceResponse[];\n  handleMetadataUpdate: (dashboardMetadata: DashboardDetails) => void;\n  configure: boolean;\n  setDisabledNext: (next: boolean) => void;\n}\n\nconst ConfigureDashboardMetadata = forwardRef(\n  (\n    {\n      dashboardVars,\n      dataSourceList,\n      handleMetadataUpdate,\n      configure,\n      setDisabledNext,\n    }: ConfigureDashboardMetadataProps,\n    ref\n  ) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const alert = useActions(AlertActions);\n\n    function onNext() {\n      if (getProjectRole() === 'Viewer') {\n        alert.changeAlertState(true);\n        return false;\n      }\n      return true;\n    }\n\n    useImperativeHandle(ref, () => ({\n      onNext,\n    }));\n\n    return (\n      <div>\n        <Typography className={classes.heading}>\n          {t(\n            'analyticsDashboard.applicationDashboards.configureDashboardMetadata.header'\n          )}\n        </Typography>\n        <Typography className={classes.description}>\n          {t(\n            'analyticsDashboard.applicationDashboards.configureDashboardMetadata.description'\n          )}\n        </Typography>\n        <div className={classes.metadataForm}>\n          <DashboardMetadataForm\n            dashboardVars={dashboardVars}\n            dataSourceList={dataSourceList}\n            configure={configure}\n            CallbackToSetVars={handleMetadataUpdate}\n            setDisabledNext={setDisabledNext}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default ConfigureDashboardMetadata;\n"]},"metadata":{},"sourceType":"module"}