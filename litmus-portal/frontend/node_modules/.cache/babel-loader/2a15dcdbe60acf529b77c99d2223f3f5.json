{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable no-const-assign */import{IconButton,Typography,useTheme}from'@material-ui/core';import Paper from'@material-ui/core/Paper';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import{ToggleButton,ToggleButtonGroup}from'@material-ui/lab';import localforage from'localforage';import React,{forwardRef,useEffect,useImperativeHandle,useState}from'react';import{useTranslation}from'react-i18next';import{useSelector}from'react-redux';import YAML from'yaml';import Row from'../../../containers/layouts/Row';import useActions from'../../../redux/actions';import*as WorkflowActions from'../../../redux/actions/workflow';import parsed,{updateManifestImage}from'../../../utils/yamlUtils';import ConfigurationStepper from'./ConfigurationStepper/ConfigurationStepper';import useStyles from'./styles';var WorkflowTable=forwardRef(function(_ref,ref){var isCustom=_ref.isCustom,namespace=_ref.namespace;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var theme=useTheme();var workflow=useActions(WorkflowActions);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),experiments=_useState2[0],setExperiments=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),revertChaos=_useState4[0],setRevertChaos=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),displayStepper=_useState6[0],setDisplayStepper=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),engineIndex=_useState8[0],setEngineIndex=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),selected=_useState10[0],setSelected=_useState10[1];var manifest=useSelector(function(state){return state.workflowManifest.manifest;});var imageRegistryData=useSelector(function(state){return state.selectedImageRegistry;});var addWeights=function addWeights(manifest){var arr=[];var hashMap=new Map();var tests=parsed(manifest);tests.forEach(function(test){var value=10;if(hashMap.has(test)){value=hashMap.get(test);}arr.push({experimentName:test,weight:value});});localforage.setItem('weights',arr);};var parsing=function parsing(yamlText){var parsedYaml=YAML.parse(yamlText);var expData=[];addWeights(manifest);var extractInfo=function extractInfo(template,index){if(template.inputs&&template.inputs.artifacts){template.inputs.artifacts.forEach(function(artifact){var chaosEngine=YAML.parse(artifact.raw.data);if(chaosEngine.kind==='ChaosEngine'){var _chaosEngine$spec$app,_chaosEngine$spec$app2,_chaosEngine$spec$app3,_chaosEngine$spec$app4,_chaosEngine$spec$app5,_chaosEngine$spec$exp,_chaosEngine$spec$exp2;expData.push({StepIndex:index,Name:chaosEngine.metadata.generateName,Namespace:((_chaosEngine$spec$app=chaosEngine.spec.appinfo)===null||_chaosEngine$spec$app===void 0?void 0:_chaosEngine$spec$app.appns.toLowerCase().includes('namespace'))?namespace:(_chaosEngine$spec$app2=(_chaosEngine$spec$app3=chaosEngine.spec.appinfo)===null||_chaosEngine$spec$app3===void 0?void 0:_chaosEngine$spec$app3.appns)!==null&&_chaosEngine$spec$app2!==void 0?_chaosEngine$spec$app2:'',Application:(_chaosEngine$spec$app4=(_chaosEngine$spec$app5=chaosEngine.spec.appinfo)===null||_chaosEngine$spec$app5===void 0?void 0:_chaosEngine$spec$app5.applabel)!==null&&_chaosEngine$spec$app4!==void 0?_chaosEngine$spec$app4:'',Probes:(_chaosEngine$spec$exp=(_chaosEngine$spec$exp2=chaosEngine.spec.experiments[0].spec.probe)===null||_chaosEngine$spec$exp2===void 0?void 0:_chaosEngine$spec$exp2.length)!==null&&_chaosEngine$spec$exp!==void 0?_chaosEngine$spec$exp:0,ChaosEngine:artifact.raw.data});}});}};if(parsedYaml.kind==='Workflow'){parsedYaml.spec.templates.forEach(function(template,index){extractInfo(template,index);});}else if(parsedYaml.kind==='CronWorkflow'){parsedYaml.spec.workflowSpec.templates.forEach(function(template,index){extractInfo(template,index);});}setExperiments(expData);};// Revert Chaos\nvar toggleRevertChaos=function toggleRevertChaos(manifest){var parsedYAML=YAML.parse(manifest);var deleteEngines='';// Else if Revert Chaos is set to true and it is not already set in the manifest\n// For Workflows\nif(revertChaos&&parsedYAML.kind==='Workflow'){parsedYAML.spec.podGC={strategy:'OnWorkflowCompletion'};parsedYAML.spec.templates[0].steps.push([{name:'revert-chaos',template:'revert-chaos'}]);parsed(manifest).forEach(function(_,i){deleteEngines+=\"\".concat(YAML.parse(parsedYAML.spec.templates[2+i].inputs.artifacts[0].raw.data).metadata.labels['instance_id'],\", \");});parsedYAML.spec.templates[parsedYAML.spec.templates.length]={name:'revert-chaos',container:{image:'litmuschaos/k8s:latest',command:['sh','-c'],args:[\"kubectl delete chaosengine -l 'instance_id in (\".concat(deleteEngines,\")' -n {{workflow.parameters.adminModeNamespace}} \")]}};}// Else if Revert Chaos is set to True and it is not already set in the manifest\n// For Cron Workflow\nelse if(revertChaos&&parsedYAML.kind==='CronWorkflow'){parsedYAML.spec.workflowSpec.podGC={strategy:'OnWorkflowCompletion'};parsedYAML.spec.workflowSpec.templates[0].steps.push([{name:'revert-chaos',template:'revert-chaos'}]);parsed(manifest).forEach(function(_,i){deleteEngines=\"\".concat(deleteEngines+YAML.parse(parsedYAML.spec.workflowSpec.templates[2+i].inputs.artifacts[0].raw.data).metadata.name,\" \");});deleteEngines+='-n {{workflow.parameters.adminModeNamespace}}';parsedYAML.spec.workflowSpec.templates[parsedYAML.spec.workflowSpec.templates.length]={name:'revert-chaos',container:{image:'litmuschaos/k8s:latest',command:['sh','-c'],args:[deleteEngines]}};}var updatedManifest=updateManifestImage(parsedYAML,imageRegistryData);workflow.setWorkflowManifest({manifest:updatedManifest});};var closeConfigurationStepper=function closeConfigurationStepper(){workflow.setWorkflowManifest({engineYAML:''});setDisplayStepper(false);};var handleChange=function handleChange(event,newValue){setRevertChaos(newValue);};useEffect(function(){if(manifest.length){parsing(manifest);}localforage.getItem('selectedScheduleOption').then(function(value){if(value){setSelected(value.selected);}else setSelected('');});},[manifest]);var deleteExperiment=function deleteExperiment(experimentIndex){/**\n       * Workflow manifest saved in redux state\n       */var wfManifest=YAML.parse(manifest);/**\n       * Get template name according to the experiment index\n       */var templateName=wfManifest.spec.templates[experimentIndex].name;/**\n       * Get instance_id of Chaos Engines\n       */var selectedEngine=wfManifest.spec.templates[experimentIndex].inputs.artifacts[0];var instance_id=YAML.parse(selectedEngine.raw.data).metadata.labels.instance_id;/**\n       * if the template is a revert-chaos template\n       * the engine name is removed from the\n       * revert-chaos template args\n       */if(wfManifest.spec.templates[wfManifest.spec.templates.length-1].name.includes('revert-')){var argument=wfManifest.spec.templates[wfManifest.spec.templates.length-1].container.args[0].replace(\"\".concat(instance_id,\", \"),'');wfManifest.spec.templates[wfManifest.spec.templates.length-1].container.args[0]=argument;}/**\n       * Remove the experiment name from steps\n       */wfManifest.spec.templates[0].steps.forEach(function(data,stepIndex){data.forEach(function(step,index){if(step.name===templateName){data.splice(index,1);}});if(data.length===0){wfManifest.spec.templates[0].steps.splice(stepIndex,1);}});/**\n       * Remove the chaos engine from the overall manifest\n       * according to the experiment index\n       */wfManifest.spec.templates.splice(experimentIndex,1);/**\n       * Set the updated manifest to redux state\n       */workflow.setWorkflowManifest({manifest:YAML.stringify(wfManifest),engineYAML:''});};function onNext(){if(experiments.length===0){return false;// Should show alert\n}if(!isCustom){return true;}if(selected==='C'){toggleRevertChaos(manifest);}return true;// Should not show any alert\n}useImperativeHandle(ref,function(){return{onNext:onNext};});return/*#__PURE__*/React.createElement(\"div\",null,!displayStepper?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TableContainer,{className:classes.table,component:Paper},/*#__PURE__*/React.createElement(Table,{\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,t('createWorkflow.chooseWorkflow.table.head1')),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},t('createWorkflow.chooseWorkflow.table.head2')),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},t('createWorkflow.chooseWorkflow.table.head3')),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},t('createWorkflow.chooseWorkflow.table.head4')),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},t('createWorkflow.chooseWorkflow.table.head5')),/*#__PURE__*/React.createElement(TableCell,null))),/*#__PURE__*/React.createElement(TableBody,null,experiments.length>0?experiments.map(function(experiment,index){return/*#__PURE__*/React.createElement(TableRow,{key:experiment.Name},/*#__PURE__*/React.createElement(TableCell,{component:\"th\",scope:\"row\"},index+1),/*#__PURE__*/React.createElement(TableCell,{className:classes.selection,align:\"left\",onClick:function onClick(){setDisplayStepper(true);setEngineIndex(experiment.StepIndex);workflow.setWorkflowManifest({engineYAML:experiment.ChaosEngine});}},experiment.Name),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},experiment.Namespace),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},experiment.Application),/*#__PURE__*/React.createElement(TableCell,{align:\"left\"},experiment.Probes),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){return deleteExperiment(experiment.StepIndex);}},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/bin-red.svg\",alt:\"delete experiment\"}))));}):/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{colSpan:5},/*#__PURE__*/React.createElement(Typography,{align:\"center\"},t('createWorkflow.chooseWorkflow.pleaseAddExp'))))))),selected==='C'&&/*#__PURE__*/React.createElement(TableContainer,{className:classes.revertChaos,component:Paper},/*#__PURE__*/React.createElement(Row,{className:classes.wrapper},/*#__PURE__*/React.createElement(\"div\",{className:classes.key},/*#__PURE__*/React.createElement(Typography,null,t('createWorkflow.chooseWorkflow.revertSchedule'))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ToggleButtonGroup,{value:revertChaos,exclusive:true,onChange:handleChange,\"aria-label\":\"text alignment\"},/*#__PURE__*/React.createElement(ToggleButton,{value:true,style:{backgroundColor:revertChaos?theme.palette.success.main:theme.palette.disabledBackground,color:revertChaos?theme.palette.common.white:theme.palette.text.disabled},\"aria-label\":\"centered\"},t('createWorkflow.chooseWorkflow.trueValue')),/*#__PURE__*/React.createElement(ToggleButton,{value:false,style:{backgroundColor:!revertChaos?theme.palette.error.main:theme.palette.disabledBackground,color:!revertChaos?theme.palette.common.white:theme.palette.text.disabled},\"aria-label\":\"centered\"},t('createWorkflow.chooseWorkflow.falseValue'))))))):/*#__PURE__*/React.createElement(ConfigurationStepper,{experimentIndex:engineIndex,closeStepper:closeConfigurationStepper,isCustom:isCustom}));});export default WorkflowTable;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/WorkflowTable.tsx"],"names":["IconButton","Typography","useTheme","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","ToggleButton","ToggleButtonGroup","localforage","React","forwardRef","useEffect","useImperativeHandle","useState","useTranslation","useSelector","YAML","Row","useActions","WorkflowActions","parsed","updateManifestImage","ConfigurationStepper","useStyles","WorkflowTable","ref","isCustom","namespace","classes","t","theme","workflow","experiments","setExperiments","revertChaos","setRevertChaos","displayStepper","setDisplayStepper","engineIndex","setEngineIndex","selected","setSelected","manifest","state","workflowManifest","imageRegistryData","selectedImageRegistry","addWeights","arr","hashMap","Map","tests","forEach","test","value","has","get","push","experimentName","weight","setItem","parsing","yamlText","parsedYaml","parse","expData","extractInfo","template","index","inputs","artifacts","artifact","chaosEngine","raw","data","kind","StepIndex","Name","metadata","generateName","Namespace","spec","appinfo","appns","toLowerCase","includes","Application","applabel","Probes","probe","length","ChaosEngine","templates","workflowSpec","toggleRevertChaos","parsedYAML","deleteEngines","podGC","strategy","steps","name","_","i","labels","container","image","command","args","updatedManifest","setWorkflowManifest","closeConfigurationStepper","engineYAML","handleChange","event","newValue","getItem","then","deleteExperiment","experimentIndex","wfManifest","templateName","selectedEngine","instance_id","argument","replace","stepIndex","step","splice","stringify","onNext","table","map","experiment","selection","wrapper","key","backgroundColor","palette","success","main","disabledBackground","color","common","white","text","disabled","error"],"mappings":"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","sourcesContent":["/* eslint-disable no-const-assign */\nimport { IconButton, Typography, useTheme } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport localforage from 'localforage';\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport Row from '../../../containers/layouts/Row';\nimport { ChooseWorkflowRadio } from '../../../models/localforage/radioButton';\nimport { experimentMap } from '../../../models/redux/workflow';\nimport useActions from '../../../redux/actions';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { RootState } from '../../../redux/reducers';\nimport parsed, { updateManifestImage } from '../../../utils/yamlUtils';\nimport ConfigurationStepper from './ConfigurationStepper/ConfigurationStepper';\nimport useStyles from './styles';\n\ninterface WorkflowTableProps {\n  isCustom: boolean | undefined;\n  namespace: string;\n}\n\ninterface ChaosCRDTable {\n  StepIndex: number;\n  Name: string;\n  Namespace: string;\n  Application: string;\n  Probes: number;\n  ChaosEngine: string;\n}\n\nconst WorkflowTable = forwardRef(\n  ({ isCustom, namespace }: WorkflowTableProps, ref) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const theme = useTheme();\n    const workflow = useActions(WorkflowActions);\n    const [experiments, setExperiments] = useState<ChaosCRDTable[]>([]);\n    const [revertChaos, setRevertChaos] = useState<boolean>(true);\n    const [displayStepper, setDisplayStepper] = useState<boolean>(false);\n    const [engineIndex, setEngineIndex] = useState<number>(0);\n    const [selected, setSelected] = useState<string>('');\n    const manifest = useSelector(\n      (state: RootState) => state.workflowManifest.manifest\n    );\n    const imageRegistryData = useSelector(\n      (state: RootState) => state.selectedImageRegistry\n    );\n    const addWeights = (manifest: string) => {\n      const arr: experimentMap[] = [];\n      const hashMap = new Map();\n      const tests = parsed(manifest);\n      tests.forEach((test) => {\n        let value = 10;\n        if (hashMap.has(test)) {\n          value = hashMap.get(test);\n        }\n        arr.push({ experimentName: test, weight: value });\n      });\n      localforage.setItem('weights', arr);\n    };\n\n    const parsing = (yamlText: string) => {\n      const parsedYaml = YAML.parse(yamlText);\n      const expData: ChaosCRDTable[] = [];\n      addWeights(manifest);\n\n      const extractInfo = (template: any, index: number) => {\n        if (template.inputs && template.inputs.artifacts) {\n          template.inputs.artifacts.forEach((artifact: any) => {\n            const chaosEngine = YAML.parse(artifact.raw.data);\n            if (chaosEngine.kind === 'ChaosEngine') {\n              expData.push({\n                StepIndex: index,\n                Name: chaosEngine.metadata.generateName,\n                Namespace: chaosEngine.spec.appinfo?.appns\n                  .toLowerCase()\n                  .includes('namespace')\n                  ? namespace\n                  : chaosEngine.spec.appinfo?.appns ?? '',\n                Application: chaosEngine.spec.appinfo?.applabel ?? '',\n                Probes: chaosEngine.spec.experiments[0].spec.probe?.length ?? 0,\n                ChaosEngine: artifact.raw.data,\n              });\n            }\n          });\n        }\n      };\n\n      if (parsedYaml.kind === 'Workflow') {\n        parsedYaml.spec.templates.forEach((template: any, index: number) => {\n          extractInfo(template, index);\n        });\n      } else if (parsedYaml.kind === 'CronWorkflow') {\n        parsedYaml.spec.workflowSpec.templates.forEach(\n          (template: any, index: number) => {\n            extractInfo(template, index);\n          }\n        );\n      }\n      setExperiments(expData);\n    };\n\n    // Revert Chaos\n    const toggleRevertChaos = (manifest: string) => {\n      const parsedYAML = YAML.parse(manifest);\n      let deleteEngines: string = '';\n\n      // Else if Revert Chaos is set to true and it is not already set in the manifest\n      // For Workflows\n      if (revertChaos && parsedYAML.kind === 'Workflow') {\n        parsedYAML.spec.podGC = {\n          strategy: 'OnWorkflowCompletion',\n        };\n        parsedYAML.spec.templates[0].steps.push([\n          {\n            name: 'revert-chaos',\n            template: 'revert-chaos',\n          },\n        ]);\n\n        parsed(manifest).forEach((_, i) => {\n          deleteEngines += `${\n            YAML.parse(\n              parsedYAML.spec.templates[2 + i].inputs.artifacts[0].raw.data\n            ).metadata.labels['instance_id']\n          }, `;\n        });\n\n        parsedYAML.spec.templates[parsedYAML.spec.templates.length] = {\n          name: 'revert-chaos',\n          container: {\n            image: 'litmuschaos/k8s:latest',\n            command: ['sh', '-c'],\n            args: [\n              `kubectl delete chaosengine -l 'instance_id in (${deleteEngines})' -n {{workflow.parameters.adminModeNamespace}} `,\n            ],\n          },\n        };\n      }\n\n      // Else if Revert Chaos is set to True and it is not already set in the manifest\n      // For Cron Workflow\n      else if (revertChaos && parsedYAML.kind === 'CronWorkflow') {\n        parsedYAML.spec.workflowSpec.podGC = {\n          strategy: 'OnWorkflowCompletion',\n        };\n        parsedYAML.spec.workflowSpec.templates[0].steps.push([\n          {\n            name: 'revert-chaos',\n            template: 'revert-chaos',\n          },\n        ]);\n\n        parsed(manifest).forEach((_, i) => {\n          deleteEngines = `${\n            deleteEngines +\n            YAML.parse(\n              parsedYAML.spec.workflowSpec.templates[2 + i].inputs.artifacts[0]\n                .raw.data\n            ).metadata.name\n          } `;\n        });\n\n        deleteEngines += '-n {{workflow.parameters.adminModeNamespace}}';\n\n        parsedYAML.spec.workflowSpec.templates[\n          parsedYAML.spec.workflowSpec.templates.length\n        ] = {\n          name: 'revert-chaos',\n          container: {\n            image: 'litmuschaos/k8s:latest',\n            command: ['sh', '-c'],\n            args: [deleteEngines],\n          },\n        };\n      }\n\n      const updatedManifest = updateManifestImage(\n        parsedYAML,\n        imageRegistryData\n      );\n      workflow.setWorkflowManifest({\n        manifest: updatedManifest,\n      });\n    };\n\n    const closeConfigurationStepper = () => {\n      workflow.setWorkflowManifest({\n        engineYAML: '',\n      });\n      setDisplayStepper(false);\n    };\n\n    const handleChange = (\n      event: React.MouseEvent<HTMLElement>,\n      newValue: boolean\n    ) => {\n      setRevertChaos(newValue);\n    };\n\n    useEffect(() => {\n      if (manifest.length) {\n        parsing(manifest);\n      }\n      localforage.getItem('selectedScheduleOption').then((value) => {\n        if (value) {\n          setSelected((value as ChooseWorkflowRadio).selected);\n        } else setSelected('');\n      });\n    }, [manifest]);\n\n    const deleteExperiment = (experimentIndex: number) => {\n      /**\n       * Workflow manifest saved in redux state\n       */\n      const wfManifest = YAML.parse(manifest);\n\n      /**\n       * Get template name according to the experiment index\n       */\n      const templateName = wfManifest.spec.templates[experimentIndex].name;\n\n      /**\n       * Get instance_id of Chaos Engines\n       */\n      const selectedEngine =\n        wfManifest.spec.templates[experimentIndex].inputs.artifacts[0];\n      const { instance_id } = YAML.parse(selectedEngine.raw.data).metadata\n        .labels;\n\n      /**\n       * if the template is a revert-chaos template\n       * the engine name is removed from the\n       * revert-chaos template args\n       */\n      if (\n        wfManifest.spec.templates[\n          wfManifest.spec.templates.length - 1\n        ].name.includes('revert-')\n      ) {\n        const argument = wfManifest.spec.templates[\n          wfManifest.spec.templates.length - 1\n        ].container.args[0].replace(`${instance_id}, `, '');\n        wfManifest.spec.templates[\n          wfManifest.spec.templates.length - 1\n        ].container.args[0] = argument;\n      }\n\n      /**\n       * Remove the experiment name from steps\n       */\n      wfManifest.spec.templates[0].steps.forEach(\n        (data: any, stepIndex: number) => {\n          data.forEach((step: any, index: number) => {\n            if (step.name === templateName) {\n              data.splice(index, 1);\n            }\n          });\n          if (data.length === 0) {\n            wfManifest.spec.templates[0].steps.splice(stepIndex, 1);\n          }\n        }\n      );\n\n      /**\n       * Remove the chaos engine from the overall manifest\n       * according to the experiment index\n       */\n      wfManifest.spec.templates.splice(experimentIndex, 1);\n\n      /**\n       * Set the updated manifest to redux state\n       */\n      workflow.setWorkflowManifest({\n        manifest: YAML.stringify(wfManifest),\n        engineYAML: '',\n      });\n    };\n\n    function onNext() {\n      if (experiments.length === 0) {\n        return false; // Should show alert\n      }\n      if (!isCustom) {\n        return true;\n      }\n      if (selected === 'C') {\n        toggleRevertChaos(manifest);\n      }\n      return true; // Should not show any alert\n    }\n\n    useImperativeHandle(ref, () => ({\n      onNext,\n    }));\n\n    return (\n      <div>\n        {!displayStepper ? (\n          <>\n            <TableContainer className={classes.table} component={Paper}>\n              <Table aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      {t('createWorkflow.chooseWorkflow.table.head1')}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {t('createWorkflow.chooseWorkflow.table.head2')}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {t('createWorkflow.chooseWorkflow.table.head3')}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {t('createWorkflow.chooseWorkflow.table.head4')}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {t('createWorkflow.chooseWorkflow.table.head5')}\n                    </TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {experiments.length > 0 ? (\n                    experiments.map((experiment: ChaosCRDTable, index) => (\n                      <TableRow key={experiment.Name}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {index + 1}\n                        </TableCell>\n                        <TableCell\n                          className={classes.selection}\n                          align=\"left\"\n                          onClick={() => {\n                            setDisplayStepper(true);\n                            setEngineIndex(experiment.StepIndex);\n                            workflow.setWorkflowManifest({\n                              engineYAML: experiment.ChaosEngine,\n                            });\n                          }}\n                        >\n                          {experiment.Name}\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {experiment.Namespace}\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {experiment.Application}\n                        </TableCell>\n                        <TableCell align=\"left\">{experiment.Probes}</TableCell>\n                        <TableCell>\n                          <IconButton\n                            onClick={() =>\n                              deleteExperiment(experiment.StepIndex)\n                            }\n                          >\n                            <img\n                              src=\"./icons/bin-red.svg\"\n                              alt=\"delete experiment\"\n                            />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  ) : (\n                    <TableRow>\n                      <TableCell colSpan={5}>\n                        <Typography align=\"center\">\n                          {t('createWorkflow.chooseWorkflow.pleaseAddExp')}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            {selected === 'C' && (\n              <TableContainer className={classes.revertChaos} component={Paper}>\n                <Row className={classes.wrapper}>\n                  <div className={classes.key}>\n                    <Typography>\n                      {t('createWorkflow.chooseWorkflow.revertSchedule')}\n                    </Typography>\n                  </div>\n                  <div>\n                    <ToggleButtonGroup\n                      value={revertChaos}\n                      exclusive\n                      onChange={handleChange}\n                      aria-label=\"text alignment\"\n                    >\n                      <ToggleButton\n                        value\n                        style={{\n                          backgroundColor: revertChaos\n                            ? theme.palette.success.main\n                            : theme.palette.disabledBackground,\n                          color: revertChaos\n                            ? theme.palette.common.white\n                            : theme.palette.text.disabled,\n                        }}\n                        aria-label=\"centered\"\n                      >\n                        {t('createWorkflow.chooseWorkflow.trueValue')}\n                      </ToggleButton>\n                      <ToggleButton\n                        value={false}\n                        style={{\n                          backgroundColor: !revertChaos\n                            ? theme.palette.error.main\n                            : theme.palette.disabledBackground,\n                          color: !revertChaos\n                            ? theme.palette.common.white\n                            : theme.palette.text.disabled,\n                        }}\n                        aria-label=\"centered\"\n                      >\n                        {t('createWorkflow.chooseWorkflow.falseValue')}\n                      </ToggleButton>\n                    </ToggleButtonGroup>\n                  </div>\n                </Row>\n              </TableContainer>\n            )}\n          </>\n        ) : (\n          <ConfigurationStepper\n            experimentIndex={engineIndex}\n            closeStepper={closeConfigurationStepper}\n            isCustom={isCustom}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nexport default WorkflowTable;\n"]},"metadata":{},"sourceType":"module"}