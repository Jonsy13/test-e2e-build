{"ast":null,"code":"/* eslint-disable no-return-assign */import{QuickActionCard}from'litmus-ui';import React from'react';import{useTranslation}from'react-i18next';import{constants}from'../../constants';import{Role}from'../../models/graphql/user';import useActions from'../../redux/actions';import*as TabActions from'../../redux/actions/tabs';import{history}from'../../redux/configureStore';import{getProjectID,getProjectRole}from'../../utils/getSearchParams';var LocalQuickActionCard=function LocalQuickActionCard(_ref){var variant=_ref.variant,className=_ref.className;var tabs=useActions(TabActions);var _useTranslation=useTranslation(),t=_useTranslation.t;var projectID=getProjectID();var userRole=getProjectRole();var homePage=variant==='homePage';var returningHome=variant==='returningHome';var analytics=variant==='analytics';var community=variant==='community';var emptyData={src:'',alt:'',text:''};var quickActionData=[analytics?{src:'./icons/addDataSource.svg',alt:'data source',onClick:function onClick(){return history.push({pathname:'/analytics/datasource/select',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(userRole)});},text:t('quickActionCard.addDataSource')}:emptyData,returningHome?{src:'/icons/calendarWorkflowIcon.svg',alt:'workflow',onClick:function onClick(){return history.push({pathname:'/create-workflow',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(userRole)});},text:t('quickActionCard.scheduleWorkflow')}:emptyData,homePage||returningHome||analytics?{src:'/icons/target.svg',alt:'agent',onClick:function onClick(){return history.push({pathname:'/target-connect',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(userRole)});},text:t('quickActionCard.connectNewAgent')}:emptyData,// TODO: settings only accessible by Owner\n(homePage||returningHome||community||analytics)&&getProjectRole()===Role.owner?{src:'/icons/teamMember.svg',alt:'team',onClick:function onClick(){tabs.changeSettingsTabs(1);history.push({pathname:'/settings',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(userRole)});},text:t('quickActionCard.inviteTeamMember')}:emptyData,homePage||community?{src:'/icons/survey.svg',alt:'survey',onClick:function onClick(){return window.open(constants.FeedbackForm);},text:t('quickActionCard.quickSurvey')}:emptyData,homePage||community||analytics?{src:'/icons/docs.svg',alt:'docs',onClick:function onClick(){return window.open('https://docs.litmuschaos.io/docs/getstarted');},text:t('quickActionCard.readDocs')}:emptyData,community?{src:'./icons/docs.svg',alt:'docs',onClick:function onClick(){return window.open('https://docs.litmus.com/docs/litmus-api-documentation');},text:t('quickActionCard.readAPIDocs')}:emptyData].filter(function(el){return el.src.length>0;});return/*#__PURE__*/React.createElement(QuickActionCard,{className:className,quickActions:quickActionData,title:t('quickActionCard.quickActions')});};export{LocalQuickActionCard};","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/LocalQuickActionCard/index.tsx"],"names":["QuickActionCard","React","useTranslation","constants","Role","useActions","TabActions","history","getProjectID","getProjectRole","LocalQuickActionCard","variant","className","tabs","t","projectID","userRole","homePage","returningHome","analytics","community","emptyData","src","alt","text","quickActionData","onClick","push","pathname","search","owner","changeSettingsTabs","window","open","FeedbackForm","filter","el","length"],"mappings":"AAAA,qCACA,OAASA,eAAT,KAAsD,WAAtD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,OAASC,IAAT,KAAqB,2BAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,MAAO,GAAKC,CAAAA,UAAZ,KAA4B,0BAA5B,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,6BAA7C,CASA,GAAMC,CAAAA,oBAAyD,CAAG,QAA5DA,CAAAA,oBAA4D,MAG5D,IAFJC,CAAAA,OAEI,MAFJA,OAEI,CADJC,SACI,MADJA,SACI,CACJ,GAAMC,CAAAA,IAAI,CAAGR,UAAU,CAACC,UAAD,CAAvB,CACA,oBAAcJ,cAAc,EAA5B,CAAQY,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,SAAS,CAAGP,YAAY,EAA9B,CACA,GAAMQ,CAAAA,QAAQ,CAAGP,cAAc,EAA/B,CACA,GAAMQ,CAAAA,QAAQ,CAAGN,OAAO,GAAK,UAA7B,CACA,GAAMO,CAAAA,aAAa,CAAGP,OAAO,GAAK,eAAlC,CACA,GAAMQ,CAAAA,SAAS,CAAGR,OAAO,GAAK,WAA9B,CACA,GAAMS,CAAAA,SAAS,CAAGT,OAAO,GAAK,WAA9B,CACA,GAAMU,CAAAA,SAA+B,CAAG,CACtCC,GAAG,CAAE,EADiC,CAEtCC,GAAG,CAAE,EAFiC,CAGtCC,IAAI,CAAE,EAHgC,CAAxC,CAKA,GAAMC,CAAAA,eAA4C,CAAG,CACnDN,SAAS,CACL,CACEG,GAAG,CAAE,2BADP,CAEEC,GAAG,CAAE,aAFP,CAGEG,OAAO,CAAE,yBACPnB,CAAAA,OAAO,CAACoB,IAAR,CAAa,CACXC,QAAQ,CAAE,8BADC,CAEXC,MAAM,sBAAgBd,SAAhB,yBAAyCC,QAAzC,CAFK,CAAb,CADO,EAHX,CAQEQ,IAAI,CAAEV,CAAC,CAAC,+BAAD,CART,CADK,CAWLO,SAZ+C,CAanDH,aAAa,CACT,CACEI,GAAG,CAAE,iCADP,CAEEC,GAAG,CAAE,UAFP,CAGEG,OAAO,CAAE,yBACPnB,CAAAA,OAAO,CAACoB,IAAR,CAAa,CACXC,QAAQ,CAAE,kBADC,CAEXC,MAAM,sBAAgBd,SAAhB,yBAAyCC,QAAzC,CAFK,CAAb,CADO,EAHX,CAQEQ,IAAI,CAAEV,CAAC,CAAC,kCAAD,CART,CADS,CAWTO,SAxB+C,CAyBnDJ,QAAQ,EAAIC,aAAZ,EAA6BC,SAA7B,CACI,CACEG,GAAG,CAAE,mBADP,CAEEC,GAAG,CAAE,OAFP,CAGEG,OAAO,CAAE,yBACPnB,CAAAA,OAAO,CAACoB,IAAR,CAAa,CACXC,QAAQ,CAAE,iBADC,CAEXC,MAAM,sBAAgBd,SAAhB,yBAAyCC,QAAzC,CAFK,CAAb,CADO,EAHX,CAQEQ,IAAI,CAAEV,CAAC,CAAC,iCAAD,CART,CADJ,CAWIO,SApC+C,CAsCnD;AACA,CAACJ,QAAQ,EAAIC,aAAZ,EAA6BE,SAA7B,EAA0CD,SAA3C,GACAV,cAAc,KAAOL,IAAI,CAAC0B,KAD1B,CAEI,CACER,GAAG,CAAE,uBADP,CAEEC,GAAG,CAAE,MAFP,CAGEG,OAAO,CAAE,kBAAM,CACbb,IAAI,CAACkB,kBAAL,CAAwB,CAAxB,EACAxB,OAAO,CAACoB,IAAR,CAAa,CACXC,QAAQ,CAAE,WADC,CAEXC,MAAM,sBAAgBd,SAAhB,yBAAyCC,QAAzC,CAFK,CAAb,EAID,CATH,CAUEQ,IAAI,CAAEV,CAAC,CAAC,kCAAD,CAVT,CAFJ,CAcIO,SArD+C,CAsDnDJ,QAAQ,EAAIG,SAAZ,CACI,CACEE,GAAG,CAAE,mBADP,CAEEC,GAAG,CAAE,QAFP,CAGEG,OAAO,CAAE,yBAAMM,CAAAA,MAAM,CAACC,IAAP,CAAY9B,SAAS,CAAC+B,YAAtB,CAAN,EAHX,CAIEV,IAAI,CAAEV,CAAC,CAAC,6BAAD,CAJT,CADJ,CAOIO,SA7D+C,CA8DnDJ,QAAQ,EAAIG,SAAZ,EAAyBD,SAAzB,CACI,CACEG,GAAG,CAAE,iBADP,CAEEC,GAAG,CAAE,MAFP,CAGEG,OAAO,CAAE,yBACPM,CAAAA,MAAM,CAACC,IAAP,CAAY,6CAAZ,CADO,EAHX,CAKET,IAAI,CAAEV,CAAC,CAAC,0BAAD,CALT,CADJ,CAQIO,SAtE+C,CAuEnDD,SAAS,CACL,CACEE,GAAG,CAAE,kBADP,CAEEC,GAAG,CAAE,MAFP,CAGEG,OAAO,CAAE,yBACPM,CAAAA,MAAM,CAACC,IAAP,CACE,uDADF,CADO,EAHX,CAOET,IAAI,CAAEV,CAAC,CAAC,6BAAD,CAPT,CADK,CAULO,SAjF+C,EAkFnDc,MAlFmD,CAkF5C,SAACC,EAAD,CAAQ,CACf,MAAOA,CAAAA,EAAE,CAACd,GAAH,CAAOe,MAAP,CAAgB,CAAvB,CACD,CApFoD,CAArD,CAsFA,mBACE,oBAAC,eAAD,EACE,SAAS,CAAEzB,SADb,CAEE,YAAY,CAAEa,eAFhB,CAGE,KAAK,CAAEX,CAAC,CAAC,8BAAD,CAHV,EADF,CAOD,CA9GD,CA+GA,OAASJ,oBAAT","sourcesContent":["/* eslint-disable no-return-assign */\nimport { QuickActionCard, QuickActionCardProps } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { constants } from '../../constants';\nimport { Role } from '../../models/graphql/user';\nimport useActions from '../../redux/actions';\nimport * as TabActions from '../../redux/actions/tabs';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\n\ntype Variant = 'homePage' | 'returningHome' | 'analytics' | 'community';\n\ninterface LocalQuickActionCardProps {\n  variant?: Variant;\n  className?: string;\n}\n\nconst LocalQuickActionCard: React.FC<LocalQuickActionCardProps> = ({\n  variant,\n  className,\n}) => {\n  const tabs = useActions(TabActions);\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const userRole = getProjectRole();\n  const homePage = variant === 'homePage';\n  const returningHome = variant === 'returningHome';\n  const analytics = variant === 'analytics';\n  const community = variant === 'community';\n  const emptyData: QuickActionCardProps = {\n    src: '',\n    alt: '',\n    text: '',\n  };\n  const quickActionData: Array<QuickActionCardProps> = [\n    analytics\n      ? {\n          src: './icons/addDataSource.svg',\n          alt: 'data source',\n          onClick: () =>\n            history.push({\n              pathname: '/analytics/datasource/select',\n              search: `?projectID=${projectID}&projectRole=${userRole}`,\n            }),\n          text: t('quickActionCard.addDataSource'),\n        }\n      : emptyData,\n    returningHome\n      ? {\n          src: '/icons/calendarWorkflowIcon.svg',\n          alt: 'workflow',\n          onClick: () =>\n            history.push({\n              pathname: '/create-workflow',\n              search: `?projectID=${projectID}&projectRole=${userRole}`,\n            }),\n          text: t('quickActionCard.scheduleWorkflow'),\n        }\n      : emptyData,\n    homePage || returningHome || analytics\n      ? {\n          src: '/icons/target.svg',\n          alt: 'agent',\n          onClick: () =>\n            history.push({\n              pathname: '/target-connect',\n              search: `?projectID=${projectID}&projectRole=${userRole}`,\n            }),\n          text: t('quickActionCard.connectNewAgent'),\n        }\n      : emptyData,\n\n    // TODO: settings only accessible by Owner\n    (homePage || returningHome || community || analytics) &&\n    getProjectRole() === Role.owner\n      ? {\n          src: '/icons/teamMember.svg',\n          alt: 'team',\n          onClick: () => {\n            tabs.changeSettingsTabs(1);\n            history.push({\n              pathname: '/settings',\n              search: `?projectID=${projectID}&projectRole=${userRole}`,\n            });\n          },\n          text: t('quickActionCard.inviteTeamMember'),\n        }\n      : emptyData,\n    homePage || community\n      ? {\n          src: '/icons/survey.svg',\n          alt: 'survey',\n          onClick: () => window.open(constants.FeedbackForm),\n          text: t('quickActionCard.quickSurvey'),\n        }\n      : emptyData,\n    homePage || community || analytics\n      ? {\n          src: '/icons/docs.svg',\n          alt: 'docs',\n          onClick: () =>\n            window.open('https://docs.litmuschaos.io/docs/getstarted'),\n          text: t('quickActionCard.readDocs'),\n        }\n      : emptyData,\n    community\n      ? {\n          src: './icons/docs.svg',\n          alt: 'docs',\n          onClick: () =>\n            window.open(\n              'https://docs.litmus.com/docs/litmus-api-documentation'\n            ),\n          text: t('quickActionCard.readAPIDocs'),\n        }\n      : emptyData,\n  ].filter((el) => {\n    return el.src.length > 0;\n  });\n\n  return (\n    <QuickActionCard\n      className={className}\n      quickActions={quickActionData}\n      title={t('quickActionCard.quickActions')}\n    />\n  );\n};\nexport { LocalQuickActionCard };\n"]},"metadata":{},"sourceType":"module"}