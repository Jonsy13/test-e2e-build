{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Typography}from'@material-ui/core';import DoneIcon from'@material-ui/icons/Done';import{ButtonFilled,ButtonOutlined}from'litmus-ui';import React,{useState}from'react';import{useTranslation}from'react-i18next';import useStyles from'./styles';var AgentDeployModal=function AgentDeployModal(_ref){var handleClose=_ref.handleClose;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),copying=_useState2[0],setCopying=_useState2[1];function fallbackCopyTextToClipboard(text){// eslint-disable-next-line no-alert\nwindow.prompt('Copy to clipboard: Ctrl+C, Enter',text);}function copyTextToClipboard(text){if(!navigator.clipboard){fallbackCopyTextToClipboard(text);return;}setCopying(true);navigator.clipboard.writeText(text).catch(function(err){return console.error('Async: Could not copy text: ',err);});setTimeout(function(){return setCopying(false);},3000);}return/*#__PURE__*/React.createElement(\"div\",{className:classes.modalContainer},/*#__PURE__*/React.createElement(\"div\",{className:classes.heading},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/agentDeployModal.svg\",alt:\"Target Connect\"}),/*#__PURE__*/React.createElement(Typography,null,t('homeViews.landingHome.agentDeployModal.heading'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.instructionSection},/*#__PURE__*/React.createElement(Typography,null,t('homeViews.landingHome.agentDeployModal.firstStep')),/*#__PURE__*/React.createElement(Typography,null,t('homeViews.landingHome.agentDeployModal.secondStep'),/*#__PURE__*/React.createElement(\"a\",{href:\"https://github.com/litmuschaos/litmusctl\",target:\"_blank\",rel:\"noreferrer noopener\"},t('homeViews.landingHome.agentDeployModal.litmusctl'))),/*#__PURE__*/React.createElement(Typography,null,t('homeViews.landingHome.agentDeployModal.thirdStep'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.copyCommandSection},/*#__PURE__*/React.createElement(\"div\",{className:classes.commandRect},/*#__PURE__*/React.createElement(Typography,null,t('homeViews.landingHome.agentDeployModal.agentRegister'))),/*#__PURE__*/React.createElement(ButtonOutlined,{className:classes.copyButton,onClick:function onClick(){return copyTextToClipboard(\"litmusctl agent connect\");}},copying?/*#__PURE__*/React.createElement(DoneIcon,null):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/copy.svg\",alt:\"copy\"}),/*#__PURE__*/React.createElement(Typography,null,t('homeViews.landingHome.agentDeployModal.copy'))))),/*#__PURE__*/React.createElement(\"div\",{className:classes.doneButton},/*#__PURE__*/React.createElement(ButtonFilled,{onClick:handleClose},/*#__PURE__*/React.createElement(Typography,null,t('homeViews.landingHome.agentDeployModal.done')))));};export{AgentDeployModal};","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/AgentDeployModal/index.tsx"],"names":["Typography","DoneIcon","ButtonFilled","ButtonOutlined","React","useState","useTranslation","useStyles","AgentDeployModal","handleClose","classes","t","copying","setCopying","fallbackCopyTextToClipboard","text","window","prompt","copyTextToClipboard","navigator","clipboard","writeText","catch","err","console","error","setTimeout","modalContainer","heading","instructionSection","copyCommandSection","commandRect","copyButton","doneButton"],"mappings":"mLAAA,OAASA,UAAT,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,WAA7C,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAMA,GAAMC,CAAAA,gBAAiD,CAAG,QAApDA,CAAAA,gBAAoD,MAAqB,IAAlBC,CAAAA,WAAkB,MAAlBA,WAAkB,CAC7E,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CACA,oBAAcD,cAAc,EAA5B,CAAQK,CAAR,iBAAQA,CAAR,CAEA,cAA8BN,QAAQ,CAAU,KAAV,CAAtC,wCAAOO,OAAP,eAAgBC,UAAhB,eAEA,QAASC,CAAAA,2BAAT,CAAqCC,IAArC,CAAmD,CACjD;AACAC,MAAM,CAACC,MAAP,CAAc,kCAAd,CAAkDF,IAAlD,EACD,CAED,QAASG,CAAAA,mBAAT,CAA6BH,IAA7B,CAA2C,CACzC,GAAI,CAACI,SAAS,CAACC,SAAf,CAA0B,CACxBN,2BAA2B,CAACC,IAAD,CAA3B,CACA,OACD,CACDF,UAAU,CAAC,IAAD,CAAV,CACAM,SAAS,CAACC,SAAV,CACGC,SADH,CACaN,IADb,EAEGO,KAFH,CAES,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,CAA8CF,GAA9C,CAAT,EAFT,EAIAG,UAAU,CAAC,iBAAMb,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAAD,CAA0B,IAA1B,CAAV,CACD,CAED,mBACE,2BAAK,SAAS,CAAEH,OAAO,CAACiB,cAAxB,eACE,2BAAK,SAAS,CAAEjB,OAAO,CAACkB,OAAxB,eACE,2BAAK,GAAG,CAAC,8BAAT,CAAwC,GAAG,CAAC,gBAA5C,EADF,cAEE,oBAAC,UAAD,MACGjB,CAAC,CAAC,gDAAD,CADJ,CAFF,CADF,cAOE,2BAAK,SAAS,CAAED,OAAO,CAACmB,kBAAxB,eACE,oBAAC,UAAD,MACGlB,CAAC,CAAC,kDAAD,CADJ,CADF,cAIE,oBAAC,UAAD,MACGA,CAAC,CAAC,mDAAD,CADJ,cAEE,yBACE,IAAI,CAAC,0CADP,CAEE,MAAM,CAAC,QAFT,CAGE,GAAG,CAAC,qBAHN,EAKGA,CAAC,CAAC,kDAAD,CALJ,CAFF,CAJF,cAcE,oBAAC,UAAD,MACGA,CAAC,CAAC,kDAAD,CADJ,CAdF,CAPF,cAyBE,2BAAK,SAAS,CAAED,OAAO,CAACoB,kBAAxB,eACE,2BAAK,SAAS,CAAEpB,OAAO,CAACqB,WAAxB,eACE,oBAAC,UAAD,MACGpB,CAAC,CAAC,sDAAD,CADJ,CADF,CADF,cAME,oBAAC,cAAD,EACE,SAAS,CAAED,OAAO,CAACsB,UADrB,CAEE,OAAO,CAAE,yBAAMd,CAAAA,mBAAmB,2BAAzB,EAFX,EAIGN,OAAO,cACN,oBAAC,QAAD,MADM,cAGN,qDACE,2BAAK,GAAG,CAAC,kBAAT,CAA4B,GAAG,CAAC,MAAhC,EADF,cAEE,oBAAC,UAAD,MACGD,CAAC,CAAC,6CAAD,CADJ,CAFF,CAPJ,CANF,CAzBF,cA+CE,2BAAK,SAAS,CAAED,OAAO,CAACuB,UAAxB,eACE,oBAAC,YAAD,EAAc,OAAO,CAAExB,WAAvB,eACE,oBAAC,UAAD,MACGE,CAAC,CAAC,6CAAD,CADJ,CADF,CADF,CA/CF,CADF,CAyDD,CAjFD,CAmFA,OAASH,gBAAT","sourcesContent":["import { Typography } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { ButtonFilled, ButtonOutlined } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\ninterface AgentDeployModalProps {\n  handleClose: () => void;\n}\n\nconst AgentDeployModal: React.FC<AgentDeployModalProps> = ({ handleClose }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [copying, setCopying] = useState<boolean>(false);\n\n  function fallbackCopyTextToClipboard(text: string) {\n    // eslint-disable-next-line no-alert\n    window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n  }\n\n  function copyTextToClipboard(text: string) {\n    if (!navigator.clipboard) {\n      fallbackCopyTextToClipboard(text);\n      return;\n    }\n    setCopying(true);\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n\n    setTimeout(() => setCopying(false), 3000);\n  }\n\n  return (\n    <div className={classes.modalContainer}>\n      <div className={classes.heading}>\n        <img src=\"./icons/agentDeployModal.svg\" alt=\"Target Connect\" />\n        <Typography>\n          {t('homeViews.landingHome.agentDeployModal.heading')}\n        </Typography>\n      </div>\n      <div className={classes.instructionSection}>\n        <Typography>\n          {t('homeViews.landingHome.agentDeployModal.firstStep')}\n        </Typography>\n        <Typography>\n          {t('homeViews.landingHome.agentDeployModal.secondStep')}\n          <a\n            href=\"https://github.com/litmuschaos/litmusctl\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            {t('homeViews.landingHome.agentDeployModal.litmusctl')}\n          </a>\n        </Typography>\n        <Typography>\n          {t('homeViews.landingHome.agentDeployModal.thirdStep')}\n        </Typography>\n      </div>\n      <div className={classes.copyCommandSection}>\n        <div className={classes.commandRect}>\n          <Typography>\n            {t('homeViews.landingHome.agentDeployModal.agentRegister')}\n          </Typography>\n        </div>\n        <ButtonOutlined\n          className={classes.copyButton}\n          onClick={() => copyTextToClipboard(`litmusctl agent connect`)}\n        >\n          {copying ? (\n            <DoneIcon />\n          ) : (\n            <>\n              <img src=\"./icons/copy.svg\" alt=\"copy\" />\n              <Typography>\n                {t('homeViews.landingHome.agentDeployModal.copy')}\n              </Typography>\n            </>\n          )}\n        </ButtonOutlined>\n      </div>\n      <div className={classes.doneButton}>\n        <ButtonFilled onClick={handleClose}>\n          <Typography>\n            {t('homeViews.landingHome.agentDeployModal.done')}\n          </Typography>\n        </ButtonFilled>\n      </div>\n    </div>\n  );\n};\n\nexport { AgentDeployModal };\n"]},"metadata":{},"sourceType":"module"}