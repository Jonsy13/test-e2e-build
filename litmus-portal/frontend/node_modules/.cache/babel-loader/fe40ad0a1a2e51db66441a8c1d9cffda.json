{"ast":null,"code":"import{useQuery}from'@apollo/client';import{Typography}from'@material-ui/core';import React from'react';import{useTranslation}from'react-i18next';import Loader from'../../components/Loader';import Scaffold from'../../containers/layouts/Scaffold';import{GET_CLUSTER_LENGTH}from'../../graphql';import{getUsername}from'../../utils/auth';import{getProjectID}from'../../utils/getSearchParams';import{AgentConfiguredHome}from'../../views/Home/AgentConfiguredHome';import{LandingHome}from'../../views/Home/LandingHome';import useStyles from'./styles';var HomePage=function HomePage(){var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useQuery=useQuery(GET_CLUSTER_LENGTH,{variables:{project_id:getProjectID()},fetchPolicy:'network-only'}),agentList=_useQuery.data,loading=_useQuery.loading;var agentCount=0;if(agentList!==undefined){agentCount=agentList.getCluster.length;}return/*#__PURE__*/React.createElement(Scaffold,null,/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",className:classes.userName},t('home.heading'),\" \",getUsername()),loading?/*#__PURE__*/React.createElement(\"div\",{style:{height:'100vh'}},/*#__PURE__*/React.createElement(Loader,null)):agentList&&agentCount>0?/*#__PURE__*/React.createElement(AgentConfiguredHome,{agentCount:agentCount}):/*#__PURE__*/React.createElement(LandingHome,null));};export default HomePage;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/HomePage/index.tsx"],"names":["useQuery","Typography","React","useTranslation","Loader","Scaffold","GET_CLUSTER_LENGTH","getUsername","getProjectID","AgentConfiguredHome","LandingHome","useStyles","HomePage","classes","t","variables","project_id","fetchPolicy","agentList","data","loading","agentCount","undefined","getCluster","length","userName","height"],"mappings":"AAAA,OAASA,QAAT,KAAyB,gBAAzB,CACA,OAASC,UAAT,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mCAArB,CACA,OAASC,kBAAT,KAAmC,eAAnC,CAEA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,YAAT,KAA6B,6BAA7B,CACA,OAASC,mBAAT,KAAoC,sCAApC,CACA,OAASC,WAAT,KAA4B,8BAA5B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAEA,GAAMC,CAAAA,QAAkB,CAAG,QAArBA,CAAAA,QAAqB,EAAM,CAC/B,GAAMC,CAAAA,OAAO,CAAGF,SAAS,EAAzB,CACA,oBAAcR,cAAc,EAA5B,CAAQW,CAAR,iBAAQA,CAAR,CAEA,cAAqCd,QAAQ,CAC3CM,kBAD2C,CAE3C,CACES,SAAS,CAAE,CAAEC,UAAU,CAAER,YAAY,EAA1B,CADb,CAEES,WAAW,CAAE,cAFf,CAF2C,CAA7C,CAAcC,SAAd,WAAQC,IAAR,CAAyBC,OAAzB,WAAyBA,OAAzB,CAQA,GAAIC,CAAAA,UAAU,CAAG,CAAjB,CAEA,GAAIH,SAAS,GAAKI,SAAlB,CAA6B,CAC3BD,UAAU,CAAGH,SAAS,CAACK,UAAV,CAAqBC,MAAlC,CACD,CAED,mBACE,oBAAC,QAAD,mBACE,oBAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,SAAS,CAAEX,OAAO,CAACY,QAA5C,EACGX,CAAC,CAAC,cAAD,CADJ,KACuBP,WAAW,EADlC,CADF,CAIGa,OAAO,cACN,2BAAK,KAAK,CAAE,CAAEM,MAAM,CAAE,OAAV,CAAZ,eACE,oBAAC,MAAD,MADF,CADM,CAIJR,SAAS,EAAIG,UAAU,CAAG,CAA1B,cACF,oBAAC,mBAAD,EAAqB,UAAU,CAAEA,UAAjC,EADE,cAGF,oBAAC,WAAD,MAXJ,CADF,CAgBD,CAlCD,CAoCA,cAAeT,CAAAA,QAAf","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../components/Loader';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { GET_CLUSTER_LENGTH } from '../../graphql';\nimport { Clusters, ClusterVars } from '../../models/graphql/clusterData';\nimport { getUsername } from '../../utils/auth';\nimport { getProjectID } from '../../utils/getSearchParams';\nimport { AgentConfiguredHome } from '../../views/Home/AgentConfiguredHome';\nimport { LandingHome } from '../../views/Home/LandingHome';\nimport useStyles from './styles';\n\nconst HomePage: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const { data: agentList, loading } = useQuery<Clusters, ClusterVars>(\n    GET_CLUSTER_LENGTH,\n    {\n      variables: { project_id: getProjectID() },\n      fetchPolicy: 'network-only',\n    }\n  );\n\n  let agentCount = 0;\n\n  if (agentList !== undefined) {\n    agentCount = agentList.getCluster.length;\n  }\n\n  return (\n    <Scaffold>\n      <Typography variant=\"h3\" className={classes.userName}>\n        {t('home.heading')} {getUsername()}\n      </Typography>\n      {loading ? (\n        <div style={{ height: '100vh' }}>\n          <Loader />\n        </div>\n      ) : agentList && agentCount > 0 ? (\n        <AgentConfiguredHome agentCount={agentCount} />\n      ) : (\n        <LandingHome />\n      )}\n    </Scaffold>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}