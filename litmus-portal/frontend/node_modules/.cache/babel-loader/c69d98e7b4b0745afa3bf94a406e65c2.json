{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useMutation,useQuery}from'@apollo/client';import{Snackbar,Typography}from'@material-ui/core';import{ButtonFilled,ButtonOutlined,Modal}from'litmus-ui';import React,{useState}from'react';import{useTranslation}from'react-i18next';import{Alert}from'@material-ui/lab';import DeveloperGuide from'../../components/DeveloperGuide';import Loader from'../../components/Loader';import Scaffold from'../../containers/layouts/Scaffold';import{DELETE_HUB,GET_HUB_STATUS,SYNC_REPO}from'../../graphql';import{getProjectID}from'../../utils/getSearchParams';import CustomMyHubCard from'./customMyHubCard';import useStyles from'./styles';import MyHubConnectDrawer from'./MyHubConnectDrawer';import{constants}from'../../constants';var MyHub=function MyHub(){var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;// Get selected projectID from the URL\nvar projectID=getProjectID();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),displayResult=_useState2[0],setDisplayResult=_useState2[1];var _useState3=useState({type:'',message:''}),_useState4=_slicedToArray(_useState3,2),cloneResult=_useState4[0],setCloneResult=_useState4[1];// Get MyHubs with Status\nvar _useQuery=useQuery(GET_HUB_STATUS,{variables:{data:projectID},fetchPolicy:'cache-and-network'}),data=_useQuery.data,loading=_useQuery.loading,refetch=_useQuery.refetch;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),drawerState=_useState6[0],setDrawerState=_useState6[1];/**\n   * State Variables for Edit MyHub\n   */var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),hubName=_useState8[0],setHubName=_useState8[1];// To distinguish between create or edit MyHub\nvar openHubDrawer=function openHubDrawer(myHubName){setHubName(myHubName);setDrawerState(true);};var handleDrawerClose=function handleDrawerClose(){if(hubName.length){setHubName('');}setDrawerState(false);};var handleDrawerCloseWithRefetch=function handleDrawerCloseWithRefetch(){setDrawerState(false);if(hubName.length){setHubName('');}refetch();};var handleAlertClose=function handleAlertClose(){setDisplayResult(false);};var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),key=_useState10[0],setKey=_useState10[1];// Mutation to refresh a repo\nvar _useMutation=useMutation(SYNC_REPO,{refetchQueries:[{query:GET_HUB_STATUS,variables:{data:projectID}}],onError:function onError(){refetch();}}),_useMutation2=_slicedToArray(_useMutation,2),refreshRepo=_useMutation2[0],refreshLoading=_useMutation2[1].loading;// Mutation to delete a repo\nvar _useMutation3=useMutation(DELETE_HUB,{onCompleted:function onCompleted(){refetch();}}),_useMutation4=_slicedToArray(_useMutation3,1),deleteRepo=_useMutation4[0];var totalHubs=data&&data.getHubStatus;var _useState11=useState({deleteHubModal:false,hubID:''}),_useState12=_slicedToArray(_useState11,2),deleteHub=_useState12[0],setDeleteHub=_useState12[1];var handleHubDelete=function handleHubDelete(){deleteRepo({variables:{hub_id:deleteHub.hubID}});setDeleteHub({deleteHubModal:false,hubID:''});};var handleDelete=function handleDelete(hubId){setDeleteHub({deleteHubModal:true,hubID:hubId});};var handleClose=function handleClose(){setDeleteHub({deleteHubModal:false,hubID:''});};var handleRefresh=function handleRefresh(hubId){setKey(hubId);refreshRepo({variables:{id:hubId}});};return/*#__PURE__*/React.createElement(Scaffold,null,loading?/*#__PURE__*/React.createElement(Loader,null):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.header},/*#__PURE__*/React.createElement(Typography,{variant:\"h3\"},t('myhub.mainPage.header')),/*#__PURE__*/React.createElement(ButtonFilled,{onClick:function onClick(){return setDrawerState(true);},className:classes.connectNewHub},t('myhub.mainPage.connect'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.mainDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.githubConfirmed},/*#__PURE__*/React.createElement(Typography,{className:classes.connectHub},t('myhub.mainPage.switchHub')),/*#__PURE__*/React.createElement(\"div\",{className:classes.noHub},totalHubs&&totalHubs.length===0?/*#__PURE__*/React.createElement(DeveloperGuide,{header:t('myhub.mainPage.devGuideHeader'),description:t('myhub.mainPage.devGuideDescription'),expAvailable:false}):/*#__PURE__*/React.createElement(React.Fragment,null),/*#__PURE__*/React.createElement(\"div\",{className:classes.chartsGroup},totalHubs&&totalHubs.map(function(hub){return/*#__PURE__*/React.createElement(CustomMyHubCard,{key:hub.id,hub:hub,keyValue:key,handleDelete:handleDelete,handleRefresh:handleRefresh,refreshLoader:refreshLoading,handleEditHub:openHubDrawer});})))),deleteHub.deleteHubModal?/*#__PURE__*/React.createElement(Modal,{open:deleteHub.deleteHubModal,onClose:handleClose,modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:handleClose},\"\\u2715\")},/*#__PURE__*/React.createElement(\"div\",{className:classes.modalDiv},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/red-cross.svg\",alt:\"disconnect\"}),/*#__PURE__*/React.createElement(Typography,{className:classes.disconnectHeader},t('myhub.mainPage.disconnectHeader')),/*#__PURE__*/React.createElement(Typography,{className:classes.disconnectConfirm},t('myhub.mainPage.disconnectDesc')),/*#__PURE__*/React.createElement(\"div\",{className:classes.disconnectBtns},/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:handleClose},t('myhub.mainPage.cancel')),/*#__PURE__*/React.createElement(ButtonFilled,{variant:\"error\",onClick:handleHubDelete},t('myhub.mainPage.deleteHub'))))):null)),/*#__PURE__*/React.createElement(MyHubConnectDrawer,{hubName:hubName,drawerState:drawerState,handleDrawerClose:handleDrawerClose,refetchQuery:handleDrawerCloseWithRefetch,setAlertState:function setAlertState(alert){return setDisplayResult(alert);},setAlertResult:function setAlertResult(alertResult){return setCloneResult(alertResult);}}),/*#__PURE__*/React.createElement(Snackbar,{open:displayResult,autoHideDuration:6000,onClose:function onClose(){if(cloneResult.type===constants.error){setDisplayResult(false);}else{handleAlertClose();}}},/*#__PURE__*/React.createElement(Alert,{onClose:function onClose(){if(cloneResult.type===constants.error){setDisplayResult(false);}else{handleAlertClose();}},severity:cloneResult.type===constants.error?'error':'success'},cloneResult.message)));};export default MyHub;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/ChaosHub/index.tsx"],"names":["useMutation","useQuery","Snackbar","Typography","ButtonFilled","ButtonOutlined","Modal","React","useState","useTranslation","Alert","DeveloperGuide","Loader","Scaffold","DELETE_HUB","GET_HUB_STATUS","SYNC_REPO","getProjectID","CustomMyHubCard","useStyles","MyHubConnectDrawer","constants","MyHub","classes","t","projectID","displayResult","setDisplayResult","type","message","cloneResult","setCloneResult","variables","data","fetchPolicy","loading","refetch","drawerState","setDrawerState","hubName","setHubName","openHubDrawer","myHubName","handleDrawerClose","length","handleDrawerCloseWithRefetch","handleAlertClose","key","setKey","refetchQueries","query","onError","refreshRepo","refreshLoading","onCompleted","deleteRepo","totalHubs","getHubStatus","deleteHubModal","hubID","deleteHub","setDeleteHub","handleHubDelete","hub_id","handleDelete","hubId","handleClose","handleRefresh","id","header","connectNewHub","mainDiv","githubConfirmed","connectHub","noHub","chartsGroup","map","hub","modalDiv","disconnectHeader","disconnectConfirm","disconnectBtns","alert","alertResult","error"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport { Snackbar, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, Modal } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Alert } from '@material-ui/lab';\nimport DeveloperGuide from '../../components/DeveloperGuide';\nimport Loader from '../../components/Loader';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { DELETE_HUB, GET_HUB_STATUS, SYNC_REPO } from '../../graphql';\nimport { HubDetails, HubStatus } from '../../models/redux/myhub';\nimport { getProjectID } from '../../utils/getSearchParams';\nimport CustomMyHubCard from './customMyHubCard';\nimport useStyles from './styles';\nimport MyHubConnectDrawer from './MyHubConnectDrawer';\nimport { constants } from '../../constants';\n\ninterface DeleteHub {\n  deleteHubModal: boolean;\n  hubID: string;\n}\n\ninterface CloneResult {\n  type: string;\n  message: string;\n}\n\nconst MyHub: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  // Get selected projectID from the URL\n  const projectID = getProjectID();\n\n  const [displayResult, setDisplayResult] = useState<boolean>(false);\n  const [cloneResult, setCloneResult] = useState<CloneResult>({\n    type: '',\n    message: '',\n  });\n\n  // Get MyHubs with Status\n  const { data, loading, refetch } = useQuery<HubStatus>(GET_HUB_STATUS, {\n    variables: { data: projectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const [drawerState, setDrawerState] = useState(false);\n\n  /**\n   * State Variables for Edit MyHub\n   */\n  const [hubName, setHubName] = useState(''); // To distinguish between create or edit MyHub\n\n  const openHubDrawer = (myHubName: string) => {\n    setHubName(myHubName);\n    setDrawerState(true);\n  };\n\n  const handleDrawerClose = () => {\n    if (hubName.length) {\n      setHubName('');\n    }\n    setDrawerState(false);\n  };\n\n  const handleDrawerCloseWithRefetch = () => {\n    setDrawerState(false);\n    if (hubName.length) {\n      setHubName('');\n    }\n    refetch();\n  };\n\n  const handleAlertClose = () => {\n    setDisplayResult(false);\n  };\n\n  const [key, setKey] = useState('');\n\n  // Mutation to refresh a repo\n  const [refreshRepo, { loading: refreshLoading }] = useMutation(SYNC_REPO, {\n    refetchQueries: [\n      {\n        query: GET_HUB_STATUS,\n        variables: { data: projectID },\n      },\n    ],\n    onError: () => {\n      refetch();\n    },\n  });\n\n  // Mutation to delete a repo\n  const [deleteRepo] = useMutation(DELETE_HUB, {\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  const totalHubs = data && data.getHubStatus;\n\n  const [deleteHub, setDeleteHub] = useState<DeleteHub>({\n    deleteHubModal: false,\n    hubID: '',\n  });\n\n  const handleHubDelete = () => {\n    deleteRepo({\n      variables: {\n        hub_id: deleteHub.hubID,\n      },\n    });\n    setDeleteHub({\n      deleteHubModal: false,\n      hubID: '',\n    });\n  };\n\n  const handleDelete = (hubId: string) => {\n    setDeleteHub({\n      deleteHubModal: true,\n      hubID: hubId,\n    });\n  };\n\n  const handleClose = () => {\n    setDeleteHub({\n      deleteHubModal: false,\n      hubID: '',\n    });\n  };\n\n  const handleRefresh = (hubId: string) => {\n    setKey(hubId);\n    refreshRepo({\n      variables: {\n        id: hubId,\n      },\n    });\n  };\n\n  return (\n    <Scaffold>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {/* Header Div */}\n          <div className={classes.header}>\n            <Typography variant=\"h3\">{t('myhub.mainPage.header')}</Typography>\n            <ButtonFilled\n              onClick={() => setDrawerState(true)}\n              className={classes.connectNewHub}\n            >\n              {t('myhub.mainPage.connect')}\n            </ButtonFilled>\n          </div>\n          {/* Charts Div */}\n          <div className={classes.mainDiv}>\n            <div className={classes.githubConfirmed}>\n              <Typography className={classes.connectHub}>\n                {t('myhub.mainPage.switchHub')}\n              </Typography>\n              <div className={classes.noHub}>\n                {totalHubs && totalHubs.length === 0 ? (\n                  <DeveloperGuide\n                    header={t('myhub.mainPage.devGuideHeader')}\n                    description={t('myhub.mainPage.devGuideDescription')}\n                    expAvailable={false}\n                  />\n                ) : (\n                  <></>\n                )}\n                <div className={classes.chartsGroup}>\n                  {totalHubs &&\n                    totalHubs.map((hub: HubDetails) => (\n                      <CustomMyHubCard\n                        key={hub.id}\n                        hub={hub}\n                        keyValue={key}\n                        handleDelete={handleDelete}\n                        handleRefresh={handleRefresh}\n                        refreshLoader={refreshLoading}\n                        handleEditHub={openHubDrawer}\n                      />\n                    ))}\n                </div>\n              </div>\n            </div>\n            {deleteHub.deleteHubModal ? (\n              <Modal\n                open={deleteHub.deleteHubModal}\n                onClose={handleClose}\n                modalActions={\n                  <ButtonOutlined onClick={handleClose}>\n                    &#x2715;\n                  </ButtonOutlined>\n                }\n              >\n                <div className={classes.modalDiv}>\n                  <img src=\"/icons/red-cross.svg\" alt=\"disconnect\" />\n                  <Typography className={classes.disconnectHeader}>\n                    {t('myhub.mainPage.disconnectHeader')}\n                  </Typography>\n                  <Typography className={classes.disconnectConfirm}>\n                    {t('myhub.mainPage.disconnectDesc')}\n                  </Typography>\n                  <div className={classes.disconnectBtns}>\n                    <ButtonOutlined onClick={handleClose}>\n                      {t('myhub.mainPage.cancel')}\n                    </ButtonOutlined>\n                    <ButtonFilled variant=\"error\" onClick={handleHubDelete}>\n                      {t('myhub.mainPage.deleteHub')}\n                    </ButtonFilled>\n                  </div>\n                </div>\n              </Modal>\n            ) : null}\n          </div>\n        </>\n      )}\n\n      {/* Add/Edit MyHub Drawer */}\n      <MyHubConnectDrawer\n        hubName={hubName}\n        drawerState={drawerState}\n        handleDrawerClose={handleDrawerClose}\n        refetchQuery={handleDrawerCloseWithRefetch}\n        setAlertState={(alert) => setDisplayResult(alert)}\n        setAlertResult={(alertResult) => setCloneResult(alertResult)}\n      />\n      {/* SnackBar to display success/failure alerts */}\n      <Snackbar\n        open={displayResult}\n        autoHideDuration={6000}\n        onClose={() => {\n          if (cloneResult.type === constants.error) {\n            setDisplayResult(false);\n          } else {\n            handleAlertClose();\n          }\n        }}\n      >\n        <Alert\n          onClose={() => {\n            if (cloneResult.type === constants.error) {\n              setDisplayResult(false);\n            } else {\n              handleAlertClose();\n            }\n          }}\n          severity={cloneResult.type === constants.error ? 'error' : 'success'}\n        >\n          {cloneResult.message}\n        </Alert>\n      </Snackbar>\n    </Scaffold>\n  );\n};\n\nexport default MyHub;\n"]},"metadata":{},"sourceType":"module"}