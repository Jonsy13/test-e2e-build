{"ast":null,"code":"import Breadcrumbs from'@material-ui/core/Breadcrumbs';import*as React from'react';import{Link}from'react-router-dom';import capitalize from'../../utils/capitalize';import{getProjectID,getProjectRole}from'../../utils/getSearchParams';import useStyles from'./styles';var Breadcrumb=function Breadcrumb(){var pathname=window.location.pathname.split('/');var intermediateRoutes='/';var classes=useStyles();var projectID=getProjectID();var projectRole=getProjectRole();return/*#__PURE__*/React.createElement(Breadcrumbs,{className:classes.breadCrumb},pathname.map(function(path){if(path){intermediateRoutes+=path;// If Template/Workflow Name is clicked [Workflow / Workflow-name / Template]\n// it would redirect to /workflows\nif(pathname[2]==='template'&&path===pathname[3]){return/*#__PURE__*/React.createElement(\"span\",{key:\"path\"},path);}if(pathname[2]==='schedule'&&(path===pathname[3]||path===pathname[4])){return/*#__PURE__*/React.createElement(\"span\",{key:\"schedule\"},path);}var link=/*#__PURE__*/React.createElement(Link,{key:path,to:{pathname:intermediateRoutes,search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)}},capitalize(path));intermediateRoutes+='/';return link;}return'';}));};export default Breadcrumb;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/BreadCrumbs/index.tsx"],"names":["Breadcrumbs","React","Link","capitalize","getProjectID","getProjectRole","useStyles","Breadcrumb","pathname","window","location","split","intermediateRoutes","classes","projectID","projectRole","breadCrumb","map","path","link","search"],"mappings":"AAAA,MAAOA,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,6BAA7C,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAEA,GAAMC,CAAAA,UAAoB,CAAG,QAAvBA,CAAAA,UAAuB,EAAM,CACjC,GAAMC,CAAAA,QAAkB,CAAGC,MAAM,CAACC,QAAP,CAAgBF,QAAhB,CAAyBG,KAAzB,CAA+B,GAA/B,CAA3B,CACA,GAAIC,CAAAA,kBAAkB,CAAG,GAAzB,CACA,GAAMC,CAAAA,OAAO,CAAGP,SAAS,EAAzB,CACA,GAAMQ,CAAAA,SAAS,CAAGV,YAAY,EAA9B,CACA,GAAMW,CAAAA,WAAW,CAAGV,cAAc,EAAlC,CAEA,mBACE,oBAAC,WAAD,EAAa,SAAS,CAAEQ,OAAO,CAACG,UAAhC,EACGR,QAAQ,CAACS,GAAT,CAAa,SAACC,IAAD,CAAU,CACtB,GAAIA,IAAJ,CAAU,CACRN,kBAAkB,EAAIM,IAAtB,CACA;AACA;AACA,GAAIV,QAAQ,CAAC,CAAD,CAAR,GAAgB,UAAhB,EAA8BU,IAAI,GAAKV,QAAQ,CAAC,CAAD,CAAnD,CAAwD,CACtD,mBAAO,4BAAM,GAAG,CAAC,MAAV,EAAkBU,IAAlB,CAAP,CACD,CACD,GACEV,QAAQ,CAAC,CAAD,CAAR,GAAgB,UAAhB,GACCU,IAAI,GAAKV,QAAQ,CAAC,CAAD,CAAjB,EAAwBU,IAAI,GAAKV,QAAQ,CAAC,CAAD,CAD1C,CADF,CAGE,CACA,mBAAO,4BAAM,GAAG,CAAC,UAAV,EAAsBU,IAAtB,CAAP,CACD,CACD,GAAMC,CAAAA,IAAI,cACR,oBAAC,IAAD,EACE,GAAG,CAAED,IADP,CAEE,EAAE,CAAE,CACFV,QAAQ,CAAEI,kBADR,CAEFQ,MAAM,sBAAgBN,SAAhB,yBAAyCC,WAAzC,CAFJ,CAFN,EAOGZ,UAAU,CAACe,IAAD,CAPb,CADF,CAWAN,kBAAkB,EAAI,GAAtB,CACA,MAAOO,CAAAA,IAAP,CACD,CACD,MAAO,EAAP,CACD,CA7BA,CADH,CADF,CAkCD,CAzCD,CA2CA,cAAeZ,CAAAA,UAAf","sourcesContent":["import Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport capitalize from '../../utils/capitalize';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport useStyles from './styles';\n\nconst Breadcrumb: React.FC = () => {\n  const pathname: string[] = window.location.pathname.split('/');\n  let intermediateRoutes = '/';\n  const classes = useStyles();\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n\n  return (\n    <Breadcrumbs className={classes.breadCrumb}>\n      {pathname.map((path) => {\n        if (path) {\n          intermediateRoutes += path;\n          // If Template/Workflow Name is clicked [Workflow / Workflow-name / Template]\n          // it would redirect to /workflows\n          if (pathname[2] === 'template' && path === pathname[3]) {\n            return <span key=\"path\">{path}</span>;\n          }\n          if (\n            pathname[2] === 'schedule' &&\n            (path === pathname[3] || path === pathname[4])\n          ) {\n            return <span key=\"schedule\">{path}</span>;\n          }\n          const link = (\n            <Link\n              key={path}\n              to={{\n                pathname: intermediateRoutes,\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              }}\n            >\n              {capitalize(path)}\n            </Link>\n          );\n          intermediateRoutes += '/';\n          return link;\n        }\n        return '';\n      })}\n    </Breadcrumbs>\n  );\n};\n\nexport default Breadcrumb;\n"]},"metadata":{},"sourceType":"module"}