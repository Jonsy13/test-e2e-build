{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/AddExperimentModal.tsx\";\n\nimport { RadioGroup, Typography, useTheme } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, LitmusCard, Modal, RadioButton, Search } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\nvar AddExperimentModal = function AddExperimentModal(_ref) {\n  var addExpModal = _ref.addExpModal,\n      onModalClose = _ref.onModalClose,\n      hubName = _ref.hubName,\n      selectedExp = _ref.selectedExp,\n      onSelectChange = _ref.onSelectChange,\n      allExperiments = _ref.allExperiments,\n      handleDone = _ref.handleDone;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var filteredExperiments = allExperiments.filter(function (exp) {\n    if (search === null) return exp;\n    if (exp.ChaosName.toLowerCase().includes(search.toLowerCase()) || exp.ExperimentName.toLowerCase().includes(search.toLowerCase())) return exp;\n    return null;\n  });\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: addExpModal,\n    onClose: function onClose() {\n      onModalClose();\n    },\n    width: \"55%\",\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    modalActions: /*#__PURE__*/React.createElement(ButtonOutlined, {\n      className: classes.closeButton,\n      onClick: function onClick() {\n        onModalClose();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"\\u2715\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.addExpModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, t('createWorkflow.tuneWorkflow.choose'))), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, t('createWorkflow.tuneWorkflow.selectAvailableExp'), \" \", hubName, \" .\", ' ', t('createWorkflow.tuneWorkflow.afterSelect')), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"addExperimentSearch\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    id: \"input-with-icon-textfield\",\n    placeholder: \"Search\",\n    value: search,\n    onChange: function onChange(event) {\n      return setSearch(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.radioList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"data-cy\": \"ExperimentList\",\n    value: selectedExp,\n    onChange: onSelectChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, filteredExperiments.map(function (exp) {\n    return /*#__PURE__*/React.createElement(LitmusCard, {\n      width: \"100%\",\n      height: \"5rem\",\n      key: \"\".concat(exp.ChaosName, \"/\").concat(exp.ExperimentName),\n      borderColor: selectedExp === \"\".concat(exp.ChaosName, \"/\").concat(exp.ExperimentName) ? palette.primary.main : palette.border.main,\n      className: classes.experimentCard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      value: \"\".concat(exp.ChaosName, \"/\").concat(exp.ExperimentName),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.experimentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, exp.ChaosName, \"/\", exp.ExperimentName))));\n  }))), /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: function onClick() {\n      handleDone();\n    },\n    \"data-cy\": \"AddExperimentDoneButton\",\n    className: classes.doneBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, t('createWorkflow.tuneWorkflow.done'))));\n};\n\nexport default AddExperimentModal;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/AddExperimentModal.tsx"],"names":["RadioGroup","Typography","useTheme","ButtonFilled","ButtonOutlined","LitmusCard","Modal","RadioButton","Search","React","useState","useTranslation","useStyles","AddExperimentModal","addExpModal","onModalClose","hubName","selectedExp","onSelectChange","allExperiments","handleDone","classes","t","palette","search","setSearch","filteredExperiments","filter","exp","ChaosName","toLowerCase","includes","ExperimentName","closeButton","event","target","value","radioList","map","primary","main","border","experimentCard","experimentName","doneBtn"],"mappings":"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","sourcesContent":["import { RadioGroup, Typography, useTheme } from '@material-ui/core';\nimport {\n  ButtonFilled,\n  ButtonOutlined,\n  LitmusCard,\n  Modal,\n  RadioButton,\n  Search,\n} from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\ninterface ChartName {\n  ChaosName: string;\n  ExperimentName: string;\n}\n\ninterface AddExperimentModalProps {\n  addExpModal: boolean;\n  onModalClose: () => void;\n  hubName: string;\n  selectedExp: string;\n  onSelectChange: (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => void;\n  allExperiments: ChartName[];\n  handleDone: () => void;\n}\n\nconst AddExperimentModal: React.FC<AddExperimentModalProps> = ({\n  addExpModal,\n  onModalClose,\n  hubName,\n  selectedExp,\n  onSelectChange,\n  allExperiments,\n  handleDone,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { palette } = useTheme();\n  const [search, setSearch] = useState<string | null>(null);\n\n  const filteredExperiments = allExperiments.filter((exp: ChartName) => {\n    if (search === null) return exp;\n    if (\n      exp.ChaosName.toLowerCase().includes(search.toLowerCase()) ||\n      exp.ExperimentName.toLowerCase().includes(search.toLowerCase())\n    )\n      return exp;\n    return null;\n  });\n\n  return (\n    <Modal\n      open={addExpModal}\n      onClose={() => {\n        onModalClose();\n      }}\n      width=\"55%\"\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      modalActions={\n        <ButtonOutlined\n          className={classes.closeButton}\n          onClick={() => {\n            onModalClose();\n          }}\n        >\n          &#x2715;\n        </ButtonOutlined>\n      }\n    >\n      <div className={classes.addExpModal}>\n        <Typography variant=\"h5\">\n          <strong>{t('createWorkflow.tuneWorkflow.choose')}</strong>\n        </Typography>\n        <Typography>\n          {t('createWorkflow.tuneWorkflow.selectAvailableExp')} {hubName} .{' '}\n          {t('createWorkflow.tuneWorkflow.afterSelect')}\n        </Typography>\n        <br />\n        <div data-cy=\"addExperimentSearch\">\n          <Search\n            id=\"input-with-icon-textfield\"\n            placeholder=\"Search\"\n            value={search}\n            onChange={(event) => setSearch(event.target.value)}\n          />\n        </div>\n\n        <br />\n        <div className={classes.radioList}>\n          <RadioGroup\n            data-cy=\"ExperimentList\"\n            value={selectedExp}\n            onChange={onSelectChange}\n          >\n            {filteredExperiments.map((exp: ChartName) => (\n              <LitmusCard\n                width=\"100%\"\n                height=\"5rem\"\n                key={`${exp.ChaosName}/${exp.ExperimentName}`}\n                borderColor={\n                  selectedExp === `${exp.ChaosName}/${exp.ExperimentName}`\n                    ? palette.primary.main\n                    : palette.border.main\n                }\n                className={classes.experimentCard}\n              >\n                <RadioButton value={`${exp.ChaosName}/${exp.ExperimentName}`}>\n                  <div id=\"body\">\n                    <Typography className={classes.experimentName}>\n                      {exp.ChaosName}/{exp.ExperimentName}\n                    </Typography>\n                  </div>\n                </RadioButton>\n              </LitmusCard>\n            ))}\n          </RadioGroup>\n        </div>\n        <ButtonFilled\n          onClick={() => {\n            handleDone();\n          }}\n          data-cy=\"AddExperimentDoneButton\"\n          className={classes.doneBtn}\n        >\n          {t('createWorkflow.tuneWorkflow.done')}\n        </ButtonFilled>\n      </div>\n    </Modal>\n  );\n};\n\nexport default AddExperimentModal;\n"]},"metadata":{},"sourceType":"module"}