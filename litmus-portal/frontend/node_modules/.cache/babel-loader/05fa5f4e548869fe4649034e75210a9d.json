{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useMutation}from'@apollo/client';import{Typography}from'@material-ui/core';import{ButtonFilled,ButtonOutlined,LightPills,Modal}from'litmus-ui';import moment from'moment';import React,{useEffect}from'react';import{DELETE_DATASOURCE}from'../../../../graphql';import useActions from'../../../../redux/actions';import*as DataSourceActions from'../../../../redux/actions/dataSource';import*as TabActions from'../../../../redux/actions/tabs';import{history}from'../../../../redux/configureStore';import{ReactComponent as CogWheelIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/cogwheel.svg\";import{ReactComponent as CrossMarkIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/crossmark.svg\";import{ReactComponent as BinIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/delete.svg\";import{getProjectID,getProjectRole}from'../../../../utils/getSearchParams';import useStyles,{StyledTableCell}from'./styles';var TableData=function TableData(_ref){var data=_ref.data;var classes=useStyles();var projectID=getProjectID();var projectRole=getProjectRole();var dataSource=useActions(DataSourceActions);var tabs=useActions(TabActions);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),mutate=_React$useState2[0],setMutate=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),confirm=_React$useState4[0],setConfirm=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),success=_React$useState6[0],setSuccess=_React$useState6[1];var _React$useState7=React.useState(''),_React$useState8=_slicedToArray(_React$useState7,2),connectedDashboardsMessage=_React$useState8[0],setConnectedDashboardsMessage=_React$useState8[1];var _React$useState9=React.useState(false),_React$useState10=_slicedToArray(_React$useState9,2),open=_React$useState10[0],setOpen=_React$useState10[1];var _React$useState11=React.useState({ds_id:'',force_delete:false}),_React$useState12=_slicedToArray(_React$useState11,2),dataSourceSelectedForDeleting=_React$useState12[0],setDataSourceSelectedForDeleting=_React$useState12[1];// Function to convert UNIX time in format of dddd, DD MMM YYYY, HH:mm\nvar formatDate=function formatDate(date){var updated=new Date(parseInt(date,10)*1000).toString();var resDate=moment(updated).format('dddd, DD MMM YYYY, HH:mm');return resDate;};var _useMutation=useMutation(DELETE_DATASOURCE,{onCompleted:function onCompleted(){setConnectedDashboardsMessage('');setSuccess(true);setMutate(false);setOpen(true);},onError:function onError(error){setConnectedDashboardsMessage(error.message);setMutate(false);setOpen(true);}}),_useMutation2=_slicedToArray(_useMutation,1),deleteDataSource=_useMutation2[0];useEffect(function(){if(mutate===true){deleteDataSource({variables:{deleteDSInput:dataSourceSelectedForDeleting}});}},[mutate]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableDataStatus},data.health_status==='Active'?/*#__PURE__*/React.createElement(LightPills,{variant:\"success\",label:data.health_status}):data.health_status==='Not Ready'?/*#__PURE__*/React.createElement(LightPills,{variant:\"warning\",label:data.health_status}):/*#__PURE__*/React.createElement(LightPills,{variant:\"danger\",label:data.health_status})),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.dataSourceName},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\"},/*#__PURE__*/React.createElement(\"strong\",null,data.ds_name))),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.dataSourceType},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\"},/*#__PURE__*/React.createElement(\"strong\",null,data.ds_type))),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.dataSourceName},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\"},formatDate(data.updated_at))),/*#__PURE__*/React.createElement(StyledTableCell,{onClick:function onClick(){dataSource.selectDataSource({selectedDataSourceID:data.ds_id,selectedDataSourceName:data.ds_name});history.push({pathname:'/analytics/datasource/configure',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});}},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",align:\"center\"},/*#__PURE__*/React.createElement(CogWheelIcon,{className:classes.cogWheelIcon})),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",align:\"center\"},\"Configure\")),/*#__PURE__*/React.createElement(StyledTableCell,{onClick:function onClick(){var deleteDataSourceInput={force_delete:false,ds_id:data.ds_id};setDataSourceSelectedForDeleting(deleteDataSourceInput);setOpen(true);}},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",align:\"center\"},/*#__PURE__*/React.createElement(BinIcon,{className:classes.binIcon})),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",align:\"center\",className:classes.delete},\"Delete\")),/*#__PURE__*/React.createElement(Modal,{open:open,onClose:function onClose(){setOpen(false);setConfirm(false);},width:\"60%\",modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{className:classes.closeButton,onClick:function onClick(){setOpen(false);setConfirm(false);}},\"\\u2715\")},/*#__PURE__*/React.createElement(\"div\",{className:classes.modal},confirm===true?/*#__PURE__*/React.createElement(Typography,{align:\"center\"},success===true?/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/finish.svg\",alt:\"success\",className:classes.icon}):/*#__PURE__*/React.createElement(CrossMarkIcon,{className:classes.icon})):/*#__PURE__*/React.createElement(\"div\",null),confirm===true?/*#__PURE__*/React.createElement(Typography,{className:classes.modalHeading,align:\"center\",variant:\"h3\"},success===true?\"The data source is successfully deleted.\":success===false&&(dataSourceSelectedForDeleting===null||dataSourceSelectedForDeleting===void 0?void 0:dataSourceSelectedForDeleting.force_delete)===false?\"\".concat(connectedDashboardsMessage):\"There was a problem deleting your data source.\"):/*#__PURE__*/React.createElement(\"div\",null),confirm===true?/*#__PURE__*/React.createElement(Typography,{align:\"center\",variant:\"body1\",className:classes.modalBody},success===true?/*#__PURE__*/React.createElement(\"div\",null,\"You will see the data source deleted in the datasource table.\"):success===false&&(dataSourceSelectedForDeleting===null||dataSourceSelectedForDeleting===void 0?void 0:dataSourceSelectedForDeleting.force_delete)===false?/*#__PURE__*/React.createElement(\"div\",null,\"Dashboard(s) configured to use this data source will be deleted.\"):/*#__PURE__*/React.createElement(\"div\",null,\"Error encountered while deleting the data source. Please try again.\")):/*#__PURE__*/React.createElement(\"div\",null),success===true&&confirm===true?/*#__PURE__*/React.createElement(ButtonFilled,{variant:\"success\",onClick:function onClick(){setConfirm(false);setOpen(false);tabs.changeAnalyticsDashboardTabs(3);window.location.reload();}},/*#__PURE__*/React.createElement(\"div\",null,\"Back to Data Source\")):success===false&&confirm===true?/*#__PURE__*/React.createElement(\"div\",{className:classes.flexButtons},(dataSourceSelectedForDeleting===null||dataSourceSelectedForDeleting===void 0?void 0:dataSourceSelectedForDeleting.force_delete)===false?/*#__PURE__*/React.createElement(ButtonFilled,{variant:\"error\",onClick:function onClick(){setDataSourceSelectedForDeleting({ds_id:dataSourceSelectedForDeleting.ds_id,force_delete:true});setOpen(false);setMutate(true);}},/*#__PURE__*/React.createElement(\"div\",null,\"Force Delete\")):/*#__PURE__*/React.createElement(ButtonOutlined,{className:classes.buttonOutlineWarning,onClick:function onClick(){setOpen(false);setMutate(true);},disabled:false},/*#__PURE__*/React.createElement(\"div\",null,\"Try Again\")),/*#__PURE__*/React.createElement(ButtonFilled,{onClick:function onClick(){setConfirm(false);setOpen(false);tabs.changeAnalyticsDashboardTabs(3);window.location.reload();}},/*#__PURE__*/React.createElement(\"div\",null,\"Back to Data Source\"))):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{align:\"center\"},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/delete_large_icon.svg\",alt:\"delete\",className:classes.icon})),/*#__PURE__*/React.createElement(Typography,{className:classes.modalHeading,align:\"center\",variant:\"h3\"},\"Are you sure to remove this data source?\"),/*#__PURE__*/React.createElement(Typography,{align:\"center\",variant:\"body1\",className:classes.modalBody},\"The following action cannot be reverted.\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.flexButtons},/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){setOpen(false);history.push({pathname:'/analytics',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});},disabled:false},/*#__PURE__*/React.createElement(\"div\",null,\"No\")),/*#__PURE__*/React.createElement(ButtonFilled,{variant:\"error\",onClick:function onClick(){setConfirm(true);setOpen(false);setMutate(true);}},/*#__PURE__*/React.createElement(\"div\",null,\"Yes\")))))));};export default TableData;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/DataSources/Table/TableData.tsx"],"names":["useMutation","Typography","ButtonFilled","ButtonOutlined","LightPills","Modal","moment","React","useEffect","DELETE_DATASOURCE","useActions","DataSourceActions","TabActions","history","getProjectID","getProjectRole","useStyles","StyledTableCell","TableData","data","classes","projectID","projectRole","dataSource","tabs","useState","mutate","setMutate","confirm","setConfirm","success","setSuccess","connectedDashboardsMessage","setConnectedDashboardsMessage","open","setOpen","ds_id","force_delete","dataSourceSelectedForDeleting","setDataSourceSelectedForDeleting","formatDate","date","updated","Date","parseInt","toString","resDate","format","onCompleted","onError","error","message","deleteDataSource","variables","deleteDSInput","tableDataStatus","health_status","dataSourceName","ds_name","dataSourceType","ds_type","updated_at","selectDataSource","selectedDataSourceID","selectedDataSourceName","push","pathname","search","cogWheelIcon","deleteDataSourceInput","binIcon","delete","closeButton","modal","icon","modalHeading","modalBody","changeAnalyticsDashboardTabs","window","location","reload","flexButtons","buttonOutlineWarning"],"mappings":"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","sourcesContent":["import { ApolloError, useMutation } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, LightPills, Modal } from 'litmus-ui';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { DELETE_DATASOURCE } from '../../../../graphql';\nimport {\n  DeleteDataSourceInput,\n  deleteDSInput,\n  ListDataSourceResponse,\n} from '../../../../models/graphql/dataSourceDetails';\nimport useActions from '../../../../redux/actions';\nimport * as DataSourceActions from '../../../../redux/actions/dataSource';\nimport * as TabActions from '../../../../redux/actions/tabs';\nimport { history } from '../../../../redux/configureStore';\nimport { ReactComponent as CogWheelIcon } from '../../../../svg/cogwheel.svg';\nimport { ReactComponent as CrossMarkIcon } from '../../../../svg/crossmark.svg';\nimport { ReactComponent as BinIcon } from '../../../../svg/delete.svg';\nimport {\n  getProjectID,\n  getProjectRole,\n} from '../../../../utils/getSearchParams';\nimport useStyles, { StyledTableCell } from './styles';\n\ninterface TableDataProps {\n  data: ListDataSourceResponse;\n}\n\nconst TableData: React.FC<TableDataProps> = ({ data }) => {\n  const classes = useStyles();\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n  const dataSource = useActions(DataSourceActions);\n  const tabs = useActions(TabActions);\n  const [mutate, setMutate] = React.useState(false);\n  const [confirm, setConfirm] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [connectedDashboardsMessage, setConnectedDashboardsMessage] =\n    React.useState<string>('');\n  const [open, setOpen] = React.useState(false);\n  const [dataSourceSelectedForDeleting, setDataSourceSelectedForDeleting] =\n    React.useState<deleteDSInput>({\n      ds_id: '',\n      force_delete: false,\n    });\n  // Function to convert UNIX time in format of dddd, DD MMM YYYY, HH:mm\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('dddd, DD MMM YYYY, HH:mm');\n    return resDate;\n  };\n\n  const [deleteDataSource] = useMutation<boolean, DeleteDataSourceInput>(\n    DELETE_DATASOURCE,\n    {\n      onCompleted: () => {\n        setConnectedDashboardsMessage('');\n        setSuccess(true);\n        setMutate(false);\n        setOpen(true);\n      },\n      onError: (error: ApolloError) => {\n        setConnectedDashboardsMessage(error.message);\n        setMutate(false);\n        setOpen(true);\n      },\n    }\n  );\n\n  useEffect(() => {\n    if (mutate === true) {\n      deleteDataSource({\n        variables: { deleteDSInput: dataSourceSelectedForDeleting },\n      });\n    }\n  }, [mutate]);\n\n  return (\n    <>\n      <StyledTableCell className={classes.tableDataStatus}>\n        {data.health_status === 'Active' ? (\n          <LightPills variant=\"success\" label={data.health_status} />\n        ) : data.health_status === 'Not Ready' ? (\n          <LightPills variant=\"warning\" label={data.health_status} />\n        ) : (\n          <LightPills variant=\"danger\" label={data.health_status} />\n        )}\n      </StyledTableCell>\n      <StyledTableCell className={classes.dataSourceName}>\n        <Typography variant=\"body2\">\n          <strong>{data.ds_name}</strong>\n        </Typography>\n      </StyledTableCell>\n      <StyledTableCell className={classes.dataSourceType}>\n        <Typography variant=\"body2\">\n          <strong>{data.ds_type}</strong>\n        </Typography>\n      </StyledTableCell>\n      <StyledTableCell className={classes.dataSourceName}>\n        <Typography variant=\"body2\">{formatDate(data.updated_at)}</Typography>\n      </StyledTableCell>\n      <StyledTableCell\n        onClick={() => {\n          dataSource.selectDataSource({\n            selectedDataSourceID: data.ds_id,\n            selectedDataSourceName: data.ds_name,\n          });\n          history.push({\n            pathname: '/analytics/datasource/configure',\n            search: `?projectID=${projectID}&projectRole=${projectRole}`,\n          });\n        }}\n      >\n        <Typography variant=\"body2\" align=\"center\">\n          <CogWheelIcon className={classes.cogWheelIcon} />\n        </Typography>\n        <Typography variant=\"body2\" align=\"center\">\n          Configure\n        </Typography>\n      </StyledTableCell>\n      <StyledTableCell\n        onClick={() => {\n          const deleteDataSourceInput: deleteDSInput = {\n            force_delete: false,\n            ds_id: data.ds_id,\n          };\n          setDataSourceSelectedForDeleting(deleteDataSourceInput);\n          setOpen(true);\n        }}\n      >\n        <Typography variant=\"body2\" align=\"center\">\n          <BinIcon className={classes.binIcon} />\n        </Typography>\n        <Typography variant=\"body2\" align=\"center\" className={classes.delete}>\n          Delete\n        </Typography>\n      </StyledTableCell>\n      <Modal\n        open={open}\n        onClose={() => {\n          setOpen(false);\n          setConfirm(false);\n        }}\n        width=\"60%\"\n        modalActions={\n          <ButtonOutlined\n            className={classes.closeButton}\n            onClick={() => {\n              setOpen(false);\n              setConfirm(false);\n            }}\n          >\n            &#x2715;\n          </ButtonOutlined>\n        }\n      >\n        <div className={classes.modal}>\n          {confirm === true ? (\n            <Typography align=\"center\">\n              {success === true ? (\n                <img\n                  src=\"/icons/finish.svg\"\n                  alt=\"success\"\n                  className={classes.icon}\n                />\n              ) : (\n                <CrossMarkIcon className={classes.icon} />\n              )}\n            </Typography>\n          ) : (\n            <div />\n          )}\n\n          {confirm === true ? (\n            <Typography\n              className={classes.modalHeading}\n              align=\"center\"\n              variant=\"h3\"\n            >\n              {success === true\n                ? `The data source is successfully deleted.`\n                : success === false &&\n                  dataSourceSelectedForDeleting?.force_delete === false\n                ? `${connectedDashboardsMessage}`\n                : `There was a problem deleting your data source.`}\n            </Typography>\n          ) : (\n            <div />\n          )}\n\n          {confirm === true ? (\n            <Typography\n              align=\"center\"\n              variant=\"body1\"\n              className={classes.modalBody}\n            >\n              {success === true ? (\n                <div>\n                  You will see the data source deleted in the datasource table.\n                </div>\n              ) : success === false &&\n                dataSourceSelectedForDeleting?.force_delete === false ? (\n                <div>\n                  Dashboard(s) configured to use this data source will be\n                  deleted.\n                </div>\n              ) : (\n                <div>\n                  Error encountered while deleting the data source. Please try\n                  again.\n                </div>\n              )}\n            </Typography>\n          ) : (\n            <div />\n          )}\n\n          {success === true && confirm === true ? (\n            <ButtonFilled\n              variant=\"success\"\n              onClick={() => {\n                setConfirm(false);\n                setOpen(false);\n                tabs.changeAnalyticsDashboardTabs(3);\n                window.location.reload();\n              }}\n            >\n              <div>Back to Data Source</div>\n            </ButtonFilled>\n          ) : success === false && confirm === true ? (\n            <div className={classes.flexButtons}>\n              {dataSourceSelectedForDeleting?.force_delete === false ? (\n                <ButtonFilled\n                  variant=\"error\"\n                  onClick={() => {\n                    setDataSourceSelectedForDeleting({\n                      ds_id: dataSourceSelectedForDeleting.ds_id,\n                      force_delete: true,\n                    });\n                    setOpen(false);\n                    setMutate(true);\n                  }}\n                >\n                  <div>Force Delete</div>\n                </ButtonFilled>\n              ) : (\n                <ButtonOutlined\n                  className={classes.buttonOutlineWarning}\n                  onClick={() => {\n                    setOpen(false);\n                    setMutate(true);\n                  }}\n                  disabled={false}\n                >\n                  <div>Try Again</div>\n                </ButtonOutlined>\n              )}\n\n              <ButtonFilled\n                onClick={() => {\n                  setConfirm(false);\n                  setOpen(false);\n                  tabs.changeAnalyticsDashboardTabs(3);\n                  window.location.reload();\n                }}\n              >\n                <div>Back to Data Source</div>\n              </ButtonFilled>\n            </div>\n          ) : (\n            <div>\n              <Typography align=\"center\">\n                <img\n                  src=\"/icons/delete_large_icon.svg\"\n                  alt=\"delete\"\n                  className={classes.icon}\n                />\n              </Typography>\n\n              <Typography\n                className={classes.modalHeading}\n                align=\"center\"\n                variant=\"h3\"\n              >\n                Are you sure to remove this data source?\n              </Typography>\n\n              <Typography\n                align=\"center\"\n                variant=\"body1\"\n                className={classes.modalBody}\n              >\n                The following action cannot be reverted.\n              </Typography>\n\n              <div className={classes.flexButtons}>\n                <ButtonOutlined\n                  onClick={() => {\n                    setOpen(false);\n                    history.push({\n                      pathname: '/analytics',\n                      search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                    });\n                  }}\n                  disabled={false}\n                >\n                  <div>No</div>\n                </ButtonOutlined>\n\n                <ButtonFilled\n                  variant=\"error\"\n                  onClick={() => {\n                    setConfirm(true);\n                    setOpen(false);\n                    setMutate(true);\n                  }}\n                >\n                  <div>Yes</div>\n                </ButtonFilled>\n              </div>\n            </div>\n          )}\n        </div>\n      </Modal>\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}