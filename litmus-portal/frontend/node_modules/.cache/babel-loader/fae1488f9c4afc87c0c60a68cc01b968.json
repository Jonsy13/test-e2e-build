{"ast":null,"code":"import _objectSpread from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowRunDetailsTable/index.tsx\";\n\n/* eslint-disable no-unused-expressions */\nimport { Table, TableBody, TableCell, TableContainer, TablePagination, TableRow, Typography, useTheme } from '@material-ui/core';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport InfoTooltip from '../../../../components/InfoTooltip';\nimport { sortAlphaAsc, sortAlphaDesc, sortNumAsc, sortNumDesc } from '../../../../utils/sort';\nimport useStyles from './styles';\nimport TableData from './TableData';\nimport TableHeader from './TableHeader';\nimport TableToolBar from './TableToolbar';\n\nvar WorkflowDetailsTable = function WorkflowDetailsTable(_ref) {\n  var workflowRunDetails = _ref.workflowRunDetails,\n      workflowID = _ref.workflowID,\n      reloadAnalytics = _ref.reloadAnalytics;\n  var classes = useStyles();\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      close = _useState2[0],\n      setClose = _useState2[1];\n\n  var _React$useState = React.useState({\n    range: {\n      startDate: 'all',\n      endDate: 'all'\n    },\n    selectedTest: 'All',\n    sortData: {\n      name: {\n        sort: false,\n        ascending: true\n      },\n      lastRun: {\n        sort: true,\n        ascending: false\n      },\n      testResult: {\n        sort: false,\n        ascending: true\n      }\n    },\n    selectedTestResult: 'All',\n    searchTokens: ['']\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      filter = _React$useState2[0],\n      setFilter = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      page = _React$useState4[0],\n      setPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState(5),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      rowsPerPage = _React$useState6[0],\n      setRowsPerPage = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      reload = _React$useState8[0],\n      setReload = _React$useState8[1];\n\n  var _React$useState9 = React.useState(0),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      resilienceScore = _React$useState10[0],\n      setResilienceScore = _React$useState10[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  var getTests = function getTests(searchingData) {\n    var uniqueList = [];\n    searchingData.forEach(function (data) {\n      if (!uniqueList.includes(data.test_name)) {\n        uniqueList.push(data.test_name);\n      }\n    });\n    return uniqueList;\n  };\n\n  var getTestResults = function getTestResults(searchingData) {\n    var uniqueList = [];\n    searchingData.forEach(function (data) {\n      if (!uniqueList.includes(data.test_result)) {\n        uniqueList.push(data.test_result);\n      }\n    });\n    return uniqueList;\n  };\n\n  useEffect(function () {\n    var totalWeight = 0;\n    var weightedSum = 0;\n    workflowRunDetails.forEach(function (test) {\n      if (test.test_result === 'Pass' || test.test_result === 'Fail') {\n        totalWeight += test.test_weight;\n        weightedSum += test.resulting_points;\n      }\n    });\n    setResilienceScore(parseFloat((weightedSum / totalWeight * 100).toFixed(2)));\n    setReload(true);\n  }, [workflowID, reload]);\n  var payload = workflowRunDetails.filter(function (wkf) {\n    return filter.searchTokens.every(function (s) {\n      return wkf.test_name.toLowerCase().includes(s) || (wkf.test_result !== undefined ? wkf.test_result.toLowerCase().includes(s) : false);\n    });\n  }).filter(function (data) {\n    return filter.selectedTest === 'All' ? true : data.test_name === filter.selectedTest;\n  }).filter(function (data) {\n    return filter.selectedTestResult === 'All' ? true : data.test_result === filter.selectedTestResult;\n  }).filter(function (data) {\n    return filter.range.startDate === 'all' || filter.range.startDate && filter.range.endDate === undefined ? true : parseInt(data.last_run, 10) * 1000 >= new Date(moment(filter.range.startDate).format()).getTime() && parseInt(data.last_run, 10) * 1000 <= new Date(new Date(moment(filter.range.endDate).format()).setHours(23, 59, 59)).getTime();\n  }).sort(function (a, b) {\n    // Sorting based on unique fields\n    if (filter.sortData.name.sort) {\n      var x = a.test_name;\n      var y = b.test_name;\n      return filter.sortData.name.ascending ? sortAlphaAsc(x, y) : sortAlphaDesc(x, y);\n    }\n\n    if (filter.sortData.lastRun.sort) {\n      var _x = parseInt(a.last_run, 10);\n\n      var _y = parseInt(b.last_run, 10);\n\n      return filter.sortData.lastRun.ascending ? sortNumAsc(_y, _x) : sortNumDesc(_y, _x);\n    }\n\n    if (filter.sortData.testResult.sort) {\n      var _x2 = a.test_result;\n      var _y2 = b.test_result;\n      return filter.sortData.testResult.ascending ? sortAlphaAsc(_x2, _y2) : sortAlphaDesc(_x2, _y2);\n    }\n\n    return 0;\n  });\n  var emptyRows = rowsPerPage - Math.min(rowsPerPage, payload.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, close ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tableFix,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"Heading section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableToolBar, {\n    searchToken: filter.searchTokens[0],\n    handleSearch: function handleSearch(event, token) {\n      return setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        searchTokens: (event !== undefined ? event.target.value : token || '').toLowerCase().split(' ').filter(function (s) {\n          return s !== '';\n        })\n      }));\n    },\n    tests: getTests(payload),\n    testResults: getTestResults(payload),\n    callbackToSetTest: function callbackToSetTest(testName) {\n      setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        selectedTest: testName\n      }));\n    },\n    callbackToSetResult: function callbackToSetResult(testResult) {\n      setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        selectedTestResult: testResult\n      }));\n    },\n    callbackToSetRange: function callbackToSetRange(selectedStartDate, selectedEndDate) {\n      setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        range: {\n          startDate: selectedStartDate,\n          endDate: selectedEndDate\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"table section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.tableMain,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    callBackToSort: function callBackToSort(sortConfigurations) {\n      setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        sortData: sortConfigurations\n      }));\n    },\n    callBackToClose: function callBackToClose(close) {\n      setClose(close);\n      reloadAnalytics();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, !workflowRunDetails.length ? /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }, \"Unable to fetch data\"))) : payload.length ? payload.slice(0).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (data) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      tabIndex: -1,\n      key: data.test_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(TableData, {\n      data: data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 29\n    }\n  }, \"No records available\"))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 75 * emptyRows\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 27\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paginationArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolTipGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.resultText,\n    display: \"inline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }, \"Resilience Score\", ' ', /*#__PURE__*/React.createElement(InfoTooltip, {\n    value: \"Resilience Score is the weighted average of all tests in the workflow.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.reliabilityScore,\n    display: \"inline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }, resilienceScore < 30 ? /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"\".concat(palette.error.dark)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 25\n    }\n  }, resilienceScore, \"%\") : resilienceScore > 30 && resilienceScore <= 60 ? /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"\".concat(palette.warning.main)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, resilienceScore, \"%\") : resilienceScore > 60 ? /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"\".concat(palette.secondary.dark)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 25\n    }\n  }, resilienceScore, \"%\") : /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: \"\".concat(palette.error.dark)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 25\n    }\n  }, resilienceScore, \"%\"))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 50],\n    component: \"div\",\n    count: payload.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    className: classes.pagination,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 19\n    }\n  })))))));\n};\n\nexport default WorkflowDetailsTable;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowRunDetailsTable/index.tsx"],"names":["Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Typography","useTheme","moment","React","useEffect","useState","InfoTooltip","sortAlphaAsc","sortAlphaDesc","sortNumAsc","sortNumDesc","useStyles","TableData","TableHeader","TableToolBar","WorkflowDetailsTable","workflowRunDetails","workflowID","reloadAnalytics","classes","palette","close","setClose","range","startDate","endDate","selectedTest","sortData","name","sort","ascending","lastRun","testResult","selectedTestResult","searchTokens","filter","setFilter","page","setPage","rowsPerPage","setRowsPerPage","reload","setReload","resilienceScore","setResilienceScore","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","getTests","searchingData","uniqueList","forEach","data","includes","test_name","push","getTestResults","test_result","totalWeight","weightedSum","test","test_weight","resulting_points","parseFloat","toFixed","payload","wkf","every","s","toLowerCase","undefined","last_run","Date","format","getTime","setHours","a","b","x","y","emptyRows","Math","min","length","root","tableFix","token","split","testName","selectedStartDate","selectedEndDate","tableMain","sortConfigurations","slice","map","test_id","height","paginationArea","toolTipGroup","resultText","reliabilityScore","color","error","dark","warning","main","secondary","pagination"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport InfoTooltip from '../../../../components/InfoTooltip';\nimport {\n  sortAlphaAsc,\n  sortAlphaDesc,\n  sortNumAsc,\n  sortNumDesc,\n} from '../../../../utils/sort';\nimport useStyles from './styles';\nimport TableData from './TableData';\nimport TableHeader from './TableHeader';\nimport TableToolBar from './TableToolbar';\n\ninterface RangeType {\n  startDate: string;\n  endDate: string;\n}\n\ninterface workFlowTests {\n  test_id: number;\n  test_name: string;\n  test_result: string;\n  test_weight: number;\n  resulting_points: number;\n  last_run: string;\n}\n\ninterface SortData {\n  lastRun: { sort: boolean; ascending: boolean };\n  name: { sort: boolean; ascending: boolean };\n  testResult: { sort: boolean; ascending: boolean };\n}\n\ninterface Filter {\n  range: RangeType;\n  selectedTest: string;\n  sortData: SortData;\n  selectedTestResult: string;\n  searchTokens: string[];\n}\n\ninterface ReloadAnalyticsType {\n  (): void;\n}\n\ninterface WorkflowRunDetailsTableProps {\n  workflowRunDetails: workFlowTests[];\n  workflowID: string;\n  reloadAnalytics: ReloadAnalyticsType;\n}\n\nconst WorkflowDetailsTable: React.FC<WorkflowRunDetailsTableProps> = ({\n  workflowRunDetails,\n  workflowID,\n  reloadAnalytics,\n}) => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n  const [close, setClose] = useState<boolean>(false);\n  const [filter, setFilter] = React.useState<Filter>({\n    range: { startDate: 'all', endDate: 'all' },\n    selectedTest: 'All',\n    sortData: {\n      name: { sort: false, ascending: true },\n      lastRun: { sort: true, ascending: false },\n      testResult: { sort: false, ascending: true },\n    },\n    selectedTestResult: 'All',\n    searchTokens: [''],\n  });\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [reload, setReload] = React.useState<boolean>(false);\n  const [resilienceScore, setResilienceScore] = React.useState<number>(0);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getTests = (searchingData: workFlowTests[]) => {\n    const uniqueList: string[] = [];\n    searchingData.forEach((data) => {\n      if (!uniqueList.includes(data.test_name)) {\n        uniqueList.push(data.test_name);\n      }\n    });\n    return uniqueList;\n  };\n\n  const getTestResults = (searchingData: workFlowTests[]) => {\n    const uniqueList: string[] = [];\n    searchingData.forEach((data) => {\n      if (!uniqueList.includes(data.test_result)) {\n        uniqueList.push(data.test_result);\n      }\n    });\n    return uniqueList;\n  };\n\n  useEffect(() => {\n    let totalWeight: number = 0;\n    let weightedSum: number = 0;\n    workflowRunDetails.forEach((test) => {\n      if (test.test_result === 'Pass' || test.test_result === 'Fail') {\n        totalWeight += test.test_weight;\n        weightedSum += test.resulting_points;\n      }\n    });\n    setResilienceScore(\n      parseFloat(((weightedSum / totalWeight) * 100).toFixed(2))\n    );\n    setReload(true);\n  }, [workflowID, reload]);\n\n  const payload: workFlowTests[] = workflowRunDetails\n    .filter((wkf: workFlowTests) => {\n      return filter.searchTokens.every(\n        (s: string) =>\n          wkf.test_name.toLowerCase().includes(s) ||\n          (wkf.test_result !== undefined\n            ? wkf.test_result.toLowerCase().includes(s)\n            : false)\n      );\n    })\n    .filter((data) => {\n      return filter.selectedTest === 'All'\n        ? true\n        : data.test_name === filter.selectedTest;\n    })\n    .filter((data) => {\n      return filter.selectedTestResult === 'All'\n        ? true\n        : data.test_result === filter.selectedTestResult;\n    })\n    .filter((data) => {\n      return filter.range.startDate === 'all' ||\n        (filter.range.startDate && filter.range.endDate === undefined)\n        ? true\n        : parseInt(data.last_run, 10) * 1000 >=\n            new Date(moment(filter.range.startDate).format()).getTime() &&\n            parseInt(data.last_run, 10) * 1000 <=\n              new Date(\n                new Date(moment(filter.range.endDate).format()).setHours(\n                  23,\n                  59,\n                  59\n                )\n              ).getTime();\n    })\n    .sort((a: workFlowTests, b: workFlowTests) => {\n      // Sorting based on unique fields\n      if (filter.sortData.name.sort) {\n        const x = a.test_name;\n        const y = b.test_name;\n\n        return filter.sortData.name.ascending\n          ? sortAlphaAsc(x, y)\n          : sortAlphaDesc(x, y);\n      }\n      if (filter.sortData.lastRun.sort) {\n        const x = parseInt(a.last_run, 10);\n\n        const y = parseInt(b.last_run, 10);\n\n        return filter.sortData.lastRun.ascending\n          ? sortNumAsc(y, x)\n          : sortNumDesc(y, x);\n      }\n      if (filter.sortData.testResult.sort) {\n        const x = a.test_result;\n        const y = b.test_result;\n\n        return filter.sortData.testResult.ascending\n          ? sortAlphaAsc(x, y)\n          : sortAlphaDesc(x, y);\n      }\n      return 0;\n    });\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, payload.length - page * rowsPerPage);\n\n  return (\n    <div>\n      {close ? (\n        <div />\n      ) : (\n        <div className={classes.root}>\n          <div className={classes.tableFix}>\n            <div>\n              <section className=\"Heading section\">\n                <TableToolBar\n                  searchToken={filter.searchTokens[0]}\n                  handleSearch={(\n                    event: React.ChangeEvent<{ value: unknown }> | undefined,\n                    token: string | undefined\n                  ) =>\n                    setFilter({\n                      ...filter,\n                      searchTokens: (event !== undefined\n                        ? ((event.target as HTMLInputElement).value as string)\n                        : token || ''\n                      )\n                        .toLowerCase()\n                        .split(' ')\n                        .filter((s) => s !== ''),\n                    })\n                  }\n                  tests={getTests(payload)}\n                  testResults={getTestResults(payload)}\n                  callbackToSetTest={(testName: string) => {\n                    setFilter({\n                      ...filter,\n                      selectedTest: testName,\n                    });\n                  }}\n                  callbackToSetResult={(testResult: string) => {\n                    setFilter({\n                      ...filter,\n                      selectedTestResult: testResult,\n                    });\n                  }}\n                  callbackToSetRange={(\n                    selectedStartDate: string,\n                    selectedEndDate: string\n                  ) => {\n                    setFilter({\n                      ...filter,\n                      range: {\n                        startDate: selectedStartDate,\n                        endDate: selectedEndDate,\n                      },\n                    });\n                  }}\n                />\n              </section>\n              <section className=\"table section\">\n                <TableContainer className={classes.tableMain}>\n                  <Table aria-label=\"simple table\">\n                    <TableHeader\n                      callBackToSort={(sortConfigurations: SortData) => {\n                        setFilter({\n                          ...filter,\n                          sortData: sortConfigurations,\n                        });\n                      }}\n                      callBackToClose={(close: boolean) => {\n                        setClose(close);\n                        reloadAnalytics();\n                      }}\n                    />\n                    <TableBody>\n                      {!workflowRunDetails.length ? (\n                        <TableRow>\n                          <TableCell colSpan={6}>\n                            <Typography align=\"center\">\n                              Unable to fetch data\n                            </Typography>\n                          </TableCell>\n                        </TableRow>\n                      ) : payload.length ? (\n                        payload\n                          .slice(0)\n                          .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                          )\n                          .map((data: workFlowTests) => {\n                            return (\n                              <TableRow hover tabIndex={-1} key={data.test_id}>\n                                <TableData data={data} />\n                              </TableRow>\n                            );\n                          })\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={6}>\n                            <Typography align=\"center\">\n                              No records available\n                            </Typography>\n                          </TableCell>\n                        </TableRow>\n                      )}\n                      {emptyRows > 0 && (\n                        <TableRow style={{ height: 75 * emptyRows }}>\n                          <TableCell colSpan={6} />\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <div className={classes.paginationArea}>\n                  <div className={classes.toolTipGroup}>\n                    <Typography className={classes.resultText} display=\"inline\">\n                      Resilience Score{' '}\n                      <InfoTooltip value=\"Resilience Score is the weighted average of all tests in the workflow.\" />\n                    </Typography>\n                    <Typography\n                      className={classes.reliabilityScore}\n                      display=\"inline\"\n                    >\n                      {resilienceScore < 30 ? (\n                        <strong style={{ color: `${palette.error.dark}` }}>\n                          {resilienceScore}%\n                        </strong>\n                      ) : resilienceScore > 30 && resilienceScore <= 60 ? (\n                        <strong style={{ color: `${palette.warning.main}` }}>\n                          {resilienceScore}%\n                        </strong>\n                      ) : resilienceScore > 60 ? (\n                        <strong style={{ color: `${palette.secondary.dark}` }}>\n                          {resilienceScore}%\n                        </strong>\n                      ) : (\n                        <strong style={{ color: `${palette.error.dark}` }}>\n                          {resilienceScore}%\n                        </strong>\n                      )}\n                    </Typography>\n                  </div>\n\n                  <TablePagination\n                    rowsPerPageOptions={[5, 10, 25, 50]}\n                    component=\"div\"\n                    count={payload.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                    className={classes.pagination}\n                  />\n                </div>\n              </section>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WorkflowDetailsTable;\n"]},"metadata":{},"sourceType":"module"}