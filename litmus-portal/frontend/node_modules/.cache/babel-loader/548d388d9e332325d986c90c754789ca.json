{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{RadioGroup,Typography,useTheme}from'@material-ui/core';import{ButtonFilled,ButtonOutlined,LitmusCard,Modal,RadioButton,Search}from'litmus-ui';import React,{useState}from'react';import{useTranslation}from'react-i18next';import useStyles from'./styles';var AddExperimentModal=function AddExperimentModal(_ref){var addExpModal=_ref.addExpModal,onModalClose=_ref.onModalClose,hubName=_ref.hubName,selectedExp=_ref.selectedExp,onSelectChange=_ref.onSelectChange,allExperiments=_ref.allExperiments,handleDone=_ref.handleDone;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),palette=_useTheme.palette;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var filteredExperiments=allExperiments.filter(function(exp){if(search===null)return exp;if(exp.ChaosName.toLowerCase().includes(search.toLowerCase())||exp.ExperimentName.toLowerCase().includes(search.toLowerCase()))return exp;return null;});return/*#__PURE__*/React.createElement(Modal,{open:addExpModal,onClose:function onClose(){onModalClose();},width:\"55%\",\"aria-labelledby\":\"simple-modal-title\",\"aria-describedby\":\"simple-modal-description\",modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{className:classes.closeButton,onClick:function onClick(){onModalClose();}},\"\\u2715\")},/*#__PURE__*/React.createElement(\"div\",{className:classes.addExpModal},/*#__PURE__*/React.createElement(Typography,{variant:\"h5\"},/*#__PURE__*/React.createElement(\"strong\",null,t('createWorkflow.tuneWorkflow.choose'))),/*#__PURE__*/React.createElement(Typography,null,t('createWorkflow.tuneWorkflow.selectAvailableExp'),\" \",hubName,\" .\",' ',t('createWorkflow.tuneWorkflow.afterSelect')),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Search,{id:\"input-with-icon-textfield\",placeholder:\"Search\",value:search,onChange:function onChange(event){return setSearch(event.target.value);}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:classes.radioList},/*#__PURE__*/React.createElement(RadioGroup,{\"data-cy\":\"ExperimentList\",value:selectedExp,onChange:onSelectChange},filteredExperiments.map(function(exp){return/*#__PURE__*/React.createElement(LitmusCard,{width:\"100%\",height:\"5rem\",key:\"\".concat(exp.ChaosName,\"/\").concat(exp.ExperimentName),borderColor:selectedExp===\"\".concat(exp.ChaosName,\"/\").concat(exp.ExperimentName)?palette.primary.main:palette.border.main,className:classes.experimentCard},/*#__PURE__*/React.createElement(RadioButton,{value:\"\".concat(exp.ChaosName,\"/\").concat(exp.ExperimentName)},/*#__PURE__*/React.createElement(\"div\",{id:\"body\"},/*#__PURE__*/React.createElement(Typography,{className:classes.experimentName},exp.ChaosName,\"/\",exp.ExperimentName))));}))),/*#__PURE__*/React.createElement(ButtonFilled,{onClick:function onClick(){handleDone();},\"data-cy\":\"AddExperimentDoneButton\",className:classes.doneBtn},t('createWorkflow.tuneWorkflow.done'))));};export default AddExperimentModal;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/AddExperimentModal.tsx"],"names":["RadioGroup","Typography","useTheme","ButtonFilled","ButtonOutlined","LitmusCard","Modal","RadioButton","Search","React","useState","useTranslation","useStyles","AddExperimentModal","addExpModal","onModalClose","hubName","selectedExp","onSelectChange","allExperiments","handleDone","classes","t","palette","search","setSearch","filteredExperiments","filter","exp","ChaosName","toLowerCase","includes","ExperimentName","closeButton","event","target","value","radioList","map","primary","main","border","experimentCard","experimentName","doneBtn"],"mappings":"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","sourcesContent":["import { RadioGroup, Typography, useTheme } from '@material-ui/core';\nimport {\n  ButtonFilled,\n  ButtonOutlined,\n  LitmusCard,\n  Modal,\n  RadioButton,\n  Search,\n} from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\ninterface ChartName {\n  ChaosName: string;\n  ExperimentName: string;\n}\n\ninterface AddExperimentModalProps {\n  addExpModal: boolean;\n  onModalClose: () => void;\n  hubName: string;\n  selectedExp: string;\n  onSelectChange: (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => void;\n  allExperiments: ChartName[];\n  handleDone: () => void;\n}\n\nconst AddExperimentModal: React.FC<AddExperimentModalProps> = ({\n  addExpModal,\n  onModalClose,\n  hubName,\n  selectedExp,\n  onSelectChange,\n  allExperiments,\n  handleDone,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { palette } = useTheme();\n  const [search, setSearch] = useState<string | null>(null);\n\n  const filteredExperiments = allExperiments.filter((exp: ChartName) => {\n    if (search === null) return exp;\n    if (\n      exp.ChaosName.toLowerCase().includes(search.toLowerCase()) ||\n      exp.ExperimentName.toLowerCase().includes(search.toLowerCase())\n    )\n      return exp;\n    return null;\n  });\n\n  return (\n    <Modal\n      open={addExpModal}\n      onClose={() => {\n        onModalClose();\n      }}\n      width=\"55%\"\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      modalActions={\n        <ButtonOutlined\n          className={classes.closeButton}\n          onClick={() => {\n            onModalClose();\n          }}\n        >\n          &#x2715;\n        </ButtonOutlined>\n      }\n    >\n      <div className={classes.addExpModal}>\n        <Typography variant=\"h5\">\n          <strong>{t('createWorkflow.tuneWorkflow.choose')}</strong>\n        </Typography>\n        <Typography>\n          {t('createWorkflow.tuneWorkflow.selectAvailableExp')} {hubName} .{' '}\n          {t('createWorkflow.tuneWorkflow.afterSelect')}\n        </Typography>\n        <br />\n        <Search\n          id=\"input-with-icon-textfield\"\n          placeholder=\"Search\"\n          value={search}\n          onChange={(event) => setSearch(event.target.value)}\n        />\n\n        <br />\n        <div className={classes.radioList}>\n          <RadioGroup\n            data-cy=\"ExperimentList\"\n            value={selectedExp}\n            onChange={onSelectChange}\n          >\n            {filteredExperiments.map((exp: ChartName) => (\n              <LitmusCard\n                width=\"100%\"\n                height=\"5rem\"\n                key={`${exp.ChaosName}/${exp.ExperimentName}`}\n                borderColor={\n                  selectedExp === `${exp.ChaosName}/${exp.ExperimentName}`\n                    ? palette.primary.main\n                    : palette.border.main\n                }\n                className={classes.experimentCard}\n              >\n                <RadioButton value={`${exp.ChaosName}/${exp.ExperimentName}`}>\n                  <div id=\"body\">\n                    <Typography className={classes.experimentName}>\n                      {exp.ChaosName}/{exp.ExperimentName}\n                    </Typography>\n                  </div>\n                </RadioButton>\n              </LitmusCard>\n            ))}\n          </RadioGroup>\n        </div>\n        <ButtonFilled\n          onClick={() => {\n            handleDone();\n          }}\n          data-cy=\"AddExperimentDoneButton\"\n          className={classes.doneBtn}\n        >\n          {t('createWorkflow.tuneWorkflow.done')}\n        </ButtonFilled>\n      </div>\n    </Modal>\n  );\n};\n\nexport default AddExperimentModal;\n"]},"metadata":{},"sourceType":"module"}