{"ast":null,"code":"import{Paper,Tabs,Typography}from'@material-ui/core';import useTheme from'@material-ui/core/styles/useTheme';import React from'react';import{useSelector}from'react-redux';import{StyledTab,TabPanel}from'../../components/Tabs';import Scaffold from'../../containers/layouts/Scaffold';import{UserRole}from'../../models/graphql/user';import useActions from'../../redux/actions';import*as TabActions from'../../redux/actions/tabs';import{getUserRole}from'../../utils/auth';import AccountSettings from'../../views/Settings/AccountsTab/AccountSettings';import GitOpsTab from'../../views/Settings/GitOpsTab';import ImageRegistry from'../../views/Settings/ImageRegistry';import TeamingTab from'../../views/Settings/TeamingTab/Team';import UserManagement from'../../views/Settings/UserManagementTab/UserManagement';import useStyles from'./styles';// tabProps returns 'id' and 'aria-control' props of Tab\nfunction tabProps(index){return{id:\"simple-tab-\".concat(index),'aria-controls':\"simple-tabpanel-\".concat(index)};}var Settings=function Settings(){var classes=useStyles();var settingsTabValue=useSelector(function(state){return state.tabNumber.settings;});var role=getUserRole();var tabs=useActions(TabActions);var handleChange=function handleChange(event,newValue){tabs.changeSettingsTabs(newValue);};var theme=useTheme();return/*#__PURE__*/React.createElement(Scaffold,null,/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",className:classes.Head},\"Settings\"),/*#__PURE__*/React.createElement(Paper,{className:classes.root,elevation:0},/*#__PURE__*/React.createElement(Tabs,{\"data-cy\":\"settingsTabPanel\",value:settingsTabValue,variant:\"fullWidth\",onChange:handleChange,TabIndicatorProps:{style:{backgroundColor:theme.palette.primary.main}}},/*#__PURE__*/React.createElement(StyledTab,Object.assign({\"data-cy\":\"my-account\",label:\"My Account\"},tabProps(0))),/*#__PURE__*/React.createElement(StyledTab,Object.assign({\"data-cy\":\"teaming\",label:\"Team\"},tabProps(1))),role===UserRole.admin&&/*#__PURE__*/React.createElement(StyledTab,Object.assign({\"data-cy\":\"user-management\",label:\"User Management\"},tabProps(2))),/*#__PURE__*/React.createElement(StyledTab,Object.assign({\"data-cy\":\"gitOps\",label:\"GitOps\"},tabProps(role===UserRole.admin?3:2))),/*#__PURE__*/React.createElement(StyledTab,Object.assign({\"data-cy\":\"image-registry\",label:\"Image Registry\"},tabProps(role===UserRole.admin?4:3))))),/*#__PURE__*/React.createElement(TabPanel,{value:settingsTabValue,index:0},/*#__PURE__*/React.createElement(AccountSettings,null)),/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"teamTabPanel\"},/*#__PURE__*/React.createElement(TabPanel,{value:settingsTabValue,index:1},/*#__PURE__*/React.createElement(TeamingTab,null))),role===UserRole.admin&&/*#__PURE__*/React.createElement(TabPanel,{value:settingsTabValue,index:2},/*#__PURE__*/React.createElement(UserManagement,null)),/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"GitOpsPanel\"},/*#__PURE__*/React.createElement(TabPanel,{value:settingsTabValue,index:role===UserRole.admin?3:2},/*#__PURE__*/React.createElement(GitOpsTab,null))),/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"ImageRegistry\"},/*#__PURE__*/React.createElement(TabPanel,{value:settingsTabValue,index:role===UserRole.admin?4:3},/*#__PURE__*/React.createElement(ImageRegistry,null))));};export default Settings;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/Settings/index.tsx"],"names":["Paper","Tabs","Typography","useTheme","React","useSelector","StyledTab","TabPanel","Scaffold","UserRole","useActions","TabActions","getUserRole","AccountSettings","GitOpsTab","ImageRegistry","TeamingTab","UserManagement","useStyles","tabProps","index","id","Settings","classes","settingsTabValue","state","tabNumber","settings","role","tabs","handleChange","event","newValue","changeSettingsTabs","theme","Head","root","style","backgroundColor","palette","primary","main","admin"],"mappings":"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","sourcesContent":["import { Paper, Tabs, Typography } from '@material-ui/core';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { StyledTab, TabPanel } from '../../components/Tabs';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { UserRole } from '../../models/graphql/user';\nimport useActions from '../../redux/actions';\nimport * as TabActions from '../../redux/actions/tabs';\nimport { RootState } from '../../redux/reducers';\nimport { getUserRole } from '../../utils/auth';\nimport AccountSettings from '../../views/Settings/AccountsTab/AccountSettings';\nimport GitOpsTab from '../../views/Settings/GitOpsTab';\nimport ImageRegistry from '../../views/Settings/ImageRegistry';\nimport TeamingTab from '../../views/Settings/TeamingTab/Team';\nimport UserManagement from '../../views/Settings/UserManagementTab/UserManagement';\nimport useStyles from './styles';\n\n// tabProps returns 'id' and 'aria-control' props of Tab\nfunction tabProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst Settings: React.FC = () => {\n  const classes = useStyles();\n  const settingsTabValue = useSelector(\n    (state: RootState) => state.tabNumber.settings\n  );\n  const role = getUserRole();\n  const tabs = useActions(TabActions);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    tabs.changeSettingsTabs(newValue);\n  };\n\n  const theme = useTheme();\n\n  return (\n    <Scaffold>\n      <Typography variant=\"h3\" className={classes.Head}>\n        Settings\n      </Typography>\n      <Paper className={classes.root} elevation={0}>\n        <Tabs\n          data-cy=\"settingsTabPanel\"\n          value={settingsTabValue}\n          variant=\"fullWidth\"\n          onChange={handleChange}\n          TabIndicatorProps={{\n            style: {\n              backgroundColor: theme.palette.primary.main,\n            },\n          }}\n        >\n          <StyledTab data-cy=\"my-account\" label=\"My Account\" {...tabProps(0)} />\n          <StyledTab data-cy=\"teaming\" label=\"Team\" {...tabProps(1)} />\n          {role === UserRole.admin && (\n            <StyledTab\n              data-cy=\"user-management\"\n              label=\"User Management\"\n              {...tabProps(2)}\n            />\n          )}\n          <StyledTab\n            data-cy=\"gitOps\"\n            label=\"GitOps\"\n            {...tabProps(role === UserRole.admin ? 3 : 2)}\n          />\n          <StyledTab\n            data-cy=\"image-registry\"\n            label=\"Image Registry\"\n            {...tabProps(role === UserRole.admin ? 4 : 3)}\n          />\n        </Tabs>\n      </Paper>\n      <TabPanel value={settingsTabValue} index={0}>\n        <AccountSettings />\n      </TabPanel>\n      <div data-cy=\"teamTabPanel\">\n        <TabPanel value={settingsTabValue} index={1}>\n          <TeamingTab />\n        </TabPanel>\n      </div>\n      {role === UserRole.admin && (\n        <TabPanel value={settingsTabValue} index={2}>\n          <UserManagement />\n        </TabPanel>\n      )}\n      <div data-cy=\"GitOpsPanel\">\n        <TabPanel\n          value={settingsTabValue}\n          index={role === UserRole.admin ? 3 : 2}\n        >\n          <GitOpsTab />\n        </TabPanel>\n      </div>\n      <div data-cy=\"ImageRegistry\">\n        <TabPanel\n          value={settingsTabValue}\n          index={role === UserRole.admin ? 4 : 3}\n        >\n          <ImageRegistry />\n        </TabPanel>\n      </div>\n    </Scaffold>\n  );\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}