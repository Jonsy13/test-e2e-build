{"ast":null,"code":"import{Grid,Switch,Typography}from'@material-ui/core';import{createStyles,withStyles}from'@material-ui/core/styles';import React from'react';var AntSwitch=withStyles(function(theme){return createStyles({root:{width:'1.75rem',height:'1rem',padding:0,display:'flex'},switchBase:{padding:'0.125rem',color:theme.palette.grey[500],'&$checked':{transform:'translateX(12px)',color:theme.palette.common.white,'& + $track':{opacity:1,backgroundColor:theme.palette.primary.main,borderColor:theme.palette.primary.main}}},thumb:{width:'0.75rem',height:'0.75rem',boxShadow:'none'},track:{border:\"1px solid \".concat(theme.palette.grey[500]),borderRadius:'calc(1rem / 0.125rem)',opacity:1,backgroundColor:theme.palette.common.white},checked:{}});})(Switch);var BinarySwitch=function BinarySwitch(_ref){var handleChange=_ref.handleChange,checked=_ref.checked,leftLabel=_ref.leftLabel,rightLabel=_ref.rightLabel;return/*#__PURE__*/React.createElement(Typography,{component:\"div\"},/*#__PURE__*/React.createElement(Grid,{component:\"label\",container:true,alignItems:\"center\",justify:\"center\",spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true},leftLabel),/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(AntSwitch,{checked:checked,onChange:handleChange,name:\"checkedC\"})),/*#__PURE__*/React.createElement(Grid,{item:true},rightLabel)));};export default BinarySwitch;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/Button/BinarySwitch/index.tsx"],"names":["Grid","Switch","Typography","createStyles","withStyles","React","AntSwitch","theme","root","width","height","padding","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","primary","main","borderColor","thumb","boxShadow","track","border","borderRadius","checked","BinarySwitch","handleChange","leftLabel","rightLabel"],"mappings":"AAAA,OAASA,IAAT,CAAeC,MAAf,CAAuBC,UAAvB,KAAyC,mBAAzC,CACA,OAASC,YAAT,CAA8BC,UAA9B,KAAgD,0BAAhD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,SAAS,CAAGF,UAAU,CAAC,SAACG,KAAD,QAC3BJ,CAAAA,YAAY,CAAC,CACXK,IAAI,CAAE,CACJC,KAAK,CAAE,SADH,CAEJC,MAAM,CAAE,MAFJ,CAGJC,OAAO,CAAE,CAHL,CAIJC,OAAO,CAAE,MAJL,CADK,CAOXC,UAAU,CAAE,CACVF,OAAO,CAAE,UADC,CAEVG,KAAK,CAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAFG,CAGV,YAAa,CACXC,SAAS,CAAE,kBADA,CAEXH,KAAK,CAAEP,KAAK,CAACQ,OAAN,CAAcG,MAAd,CAAqBC,KAFjB,CAGX,aAAc,CACZC,OAAO,CAAE,CADG,CAEZC,eAAe,CAAEd,KAAK,CAACQ,OAAN,CAAcO,OAAd,CAAsBC,IAF3B,CAGZC,WAAW,CAAEjB,KAAK,CAACQ,OAAN,CAAcO,OAAd,CAAsBC,IAHvB,CAHH,CAHH,CAPD,CAoBXE,KAAK,CAAE,CACLhB,KAAK,CAAE,SADF,CAELC,MAAM,CAAE,SAFH,CAGLgB,SAAS,CAAE,MAHN,CApBI,CAyBXC,KAAK,CAAE,CACLC,MAAM,qBAAerB,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAAf,CADD,CAELa,YAAY,CAAE,uBAFT,CAGLT,OAAO,CAAE,CAHJ,CAILC,eAAe,CAAEd,KAAK,CAACQ,OAAN,CAAcG,MAAd,CAAqBC,KAJjC,CAzBI,CA+BXW,OAAO,CAAE,EA/BE,CAAD,CADe,EAAD,CAAV,CAkChB7B,MAlCgB,CAAlB,CA6CA,GAAM8B,CAAAA,YAAyC,CAAG,QAA5CA,CAAAA,YAA4C,MAK5C,IAJJC,CAAAA,YAII,MAJJA,YAII,CAHJF,OAGI,MAHJA,OAGI,CAFJG,SAEI,MAFJA,SAEI,CADJC,UACI,MADJA,UACI,CACJ,mBACE,oBAAC,UAAD,EAAY,SAAS,CAAC,KAAtB,eACE,oBAAC,IAAD,EACE,SAAS,CAAC,OADZ,CAEE,SAAS,KAFX,CAGE,UAAU,CAAC,QAHb,CAIE,OAAO,CAAC,QAJV,CAKE,OAAO,CAAE,CALX,eAOE,oBAAC,IAAD,EAAM,IAAI,KAAV,EAAYD,SAAZ,CAPF,cAQE,oBAAC,IAAD,EAAM,IAAI,KAAV,eACE,oBAAC,SAAD,EACE,OAAO,CAAEH,OADX,CAEE,QAAQ,CAAEE,YAFZ,CAGE,IAAI,CAAC,UAHP,EADF,CARF,cAeE,oBAAC,IAAD,EAAM,IAAI,KAAV,EAAYE,UAAZ,CAfF,CADF,CADF,CAqBD,CA3BD,CA6BA,cAAeH,CAAAA,YAAf","sourcesContent":["import { Grid, Switch, Typography } from '@material-ui/core';\nimport { createStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst AntSwitch = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '1.75rem',\n      height: '1rem',\n      padding: 0,\n      display: 'flex',\n    },\n    switchBase: {\n      padding: '0.125rem',\n      color: theme.palette.grey[500],\n      '&$checked': {\n        transform: 'translateX(12px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          opacity: 1,\n          backgroundColor: theme.palette.primary.main,\n          borderColor: theme.palette.primary.main,\n        },\n      },\n    },\n    thumb: {\n      width: '0.75rem',\n      height: '0.75rem',\n      boxShadow: 'none',\n    },\n    track: {\n      border: `1px solid ${theme.palette.grey[500]}`,\n      borderRadius: 'calc(1rem / 0.125rem)',\n      opacity: 1,\n      backgroundColor: theme.palette.common.white,\n    },\n    checked: {},\n  })\n)(Switch);\n\ninterface BinarySwitchProps {\n  handleChange:\n    | ((event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void)\n    | undefined;\n  checked: boolean;\n  leftLabel: string;\n  rightLabel: string;\n}\n\nconst BinarySwitch: React.FC<BinarySwitchProps> = ({\n  handleChange,\n  checked,\n  leftLabel,\n  rightLabel,\n}) => {\n  return (\n    <Typography component=\"div\">\n      <Grid\n        component=\"label\"\n        container\n        alignItems=\"center\"\n        justify=\"center\"\n        spacing={1}\n      >\n        <Grid item>{leftLabel}</Grid>\n        <Grid item>\n          <AntSwitch\n            checked={checked}\n            onChange={handleChange}\n            name=\"checkedC\"\n          />\n        </Grid>\n        <Grid item>{rightLabel}</Grid>\n      </Grid>\n    </Typography>\n  );\n};\n\nexport default BinarySwitch;\n"]},"metadata":{},"sourceType":"module"}