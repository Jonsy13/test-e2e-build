{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"children\",\"value\",\"index\"];/* eslint-disable no-unused-expressions */import{useLazyQuery}from'@apollo/client';import{AppBar,Tabs,useTheme}from'@material-ui/core';import moment from'moment';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import{useSelector}from'react-redux';import{v4 as uuidv4}from'uuid';import{StyledTab}from'../../../../../../components/Tabs';import{PROM_SERIES_LIST}from'../../../../../../graphql';import QueryEditingWizard from'./QueryEditingWizard';import useStyles from'./styles';var TabPanel=function TabPanel(props){var children=props.children,value=props.value,index=props.index,other=_objectWithoutProperties(props,_excluded);return/*#__PURE__*/React.createElement(\"div\",Object.assign({role:\"tabpanel\",hidden:value!==index,id:\"scrollable-auto-tabpanel-\".concat(index),\"aria-labelledby\":\"scrollable-auto-tab-\".concat(index)},other),value===index&&/*#__PURE__*/React.createElement(\"div\",null,children));};var a11yProps=function a11yProps(index){return{id:\"scrollable-auto-tab-\".concat(index),'aria-controls':\"scrollable-auto-tabpanel-\".concat(index)};};var EditPanelsWizard=function EditPanelsWizard(_ref){var _dashboardVars$dataSo,_dashboardDetails$sel9,_dashboardDetails$sel10,_dashboardDetails$sel11;var configure=_ref.configure,activeEditPanelID=_ref.activeEditPanelID,dashboardVars=_ref.dashboardVars,CallbackToSetPanels=_ref.CallbackToSetPanels;var classes=useStyles();var theme=useTheme();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),seriesList=_useState2[0],setSeriesList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),panelGroupsList=_useState4[0],setPanelGroupsList=_useState4[1];var _useLazyQuery=useLazyQuery(PROM_SERIES_LIST,{variables:{prometheusDSInput:{url:(_dashboardVars$dataSo=dashboardVars.dataSourceURL)!==null&&_dashboardVars$dataSo!==void 0?_dashboardVars$dataSo:'',start:\"\".concat(new Date(moment.unix(Math.round(new Date().getTime()/1000)-900).format()).getTime()/1000),end:\"\".concat(new Date(moment.unix(Math.round(new Date().getTime()/1000)).format()).getTime()/1000)}},fetchPolicy:'network-only',onCompleted:function onCompleted(prometheusSeriesData){if(prometheusSeriesData){var _prometheusSeriesData;var seriesValues=[];(_prometheusSeriesData=prometheusSeriesData.GetPromSeriesList.seriesList)===null||_prometheusSeriesData===void 0?void 0:_prometheusSeriesData.forEach(function(series){seriesValues.push({name:series});});setSeriesList(seriesValues);}}}),_useLazyQuery2=_slicedToArray(_useLazyQuery,1),getSeriesList=_useLazyQuery2[0];var selectedDashboard=useSelector(function(state){return state.selectDashboard;});var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),tabValue=_React$useState2[0],setTabValue=_React$useState2[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),update=_useState6[0],setUpdate=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),reload=_useState8[0],setReload=_useState8[1];var getPanelsByGroup=function getPanelsByGroup(name){var _dashboardVars$select;var preSelectedPanels=[];(_dashboardVars$select=dashboardVars.selectedPanelGroupMap)===null||_dashboardVars$select===void 0?void 0:_dashboardVars$select.forEach(function(panelGroup){if(name===panelGroup.groupName){panelGroup.panels.forEach(function(panel){preSelectedPanels.push(panel);});}});return preSelectedPanels;};var getSelectedPanelGroups=function getSelectedPanelGroups(){var _dashboardVars$select2;var preSelectedPanelGroups=[];(_dashboardVars$select2=dashboardVars.selectedPanelGroupMap)===null||_dashboardVars$select2===void 0?void 0:_dashboardVars$select2.forEach(function(panelGroup){preSelectedPanelGroups.push(panelGroup.groupName);});var selectedPanelGroups=[];selectedDashboard.dashboardJSON.panelGroups.forEach(function(panelGroup){if(preSelectedPanelGroups.includes(panelGroup.panel_group_name)){var selectedPanels=[];var preSelectedPanels=getPanelsByGroup(panelGroup.panel_group_name);panelGroup.panels.forEach(function(panel){if(preSelectedPanels.includes(panel.panel_name)){var _dashboardVars$dataSo2;var promQueryList=[];panel.prom_queries.forEach(function(promQuery){promQueryList.push({hidden:false,queryid:uuidv4(),prom_query_name:promQuery.prom_query_name,legend:promQuery.legend,resolution:promQuery.resolution,minstep:promQuery.minstep,line:promQuery.line,close_area:promQuery.close_area});});selectedPanels.push({panel_group_name:panelGroup.panel_group_name,ds_url:(_dashboardVars$dataSo2=dashboardVars.dataSourceURL)!==null&&_dashboardVars$dataSo2!==void 0?_dashboardVars$dataSo2:'',prom_queries:promQueryList,panel_options:panel.panel_options,panel_name:panel.panel_name,y_axis_left:panel.y_axis_left,y_axis_right:panel.y_axis_right,x_axis_down:panel.x_axis_down,unit:panel.unit});}});selectedPanelGroups.push({panel_group_name:panelGroup.panel_group_name,panels:selectedPanels});}});return selectedPanelGroups;};var _useState9=useState({panelGroups:dashboardVars.panelGroups&&dashboardVars.panelGroups.length&&configure?dashboardVars.panelGroups:!configure&&selectedDashboard.dashboardJSON?getSelectedPanelGroups():[],selectedPanels:[]}),_useState10=_slicedToArray(_useState9,2),dashboardDetails=_useState10[0],setDashboardDetails=_useState10[1];var generatePanelGroupsList=function generatePanelGroupsList(updatedSelectedPanels){var newPanelGroups=[];var newPanelGroupOptions=[];updatedSelectedPanels.forEach(function(panel){if(panel.panel_group_name&&!newPanelGroups.includes(panel.panel_group_name)){newPanelGroups.push(panel.panel_group_name);newPanelGroupOptions.push({name:panel.panel_group_name});}});setPanelGroupsList(newPanelGroupOptions);};var handleCreatePanel=function handleCreatePanel(){var _dashboardDetails$sel,_dashboardVars$dataSo3;var existingPanels=(_dashboardDetails$sel=dashboardDetails.selectedPanels)!==null&&_dashboardDetails$sel!==void 0?_dashboardDetails$sel:[];var newPanel={panel_id:'',panel_group_id:'',created_at:'',panel_group_name:'Untitled Group name',ds_url:(_dashboardVars$dataSo3=dashboardVars.dataSourceURL)!==null&&_dashboardVars$dataSo3!==void 0?_dashboardVars$dataSo3:'',prom_queries:[{hidden:false,queryid:uuidv4(),prom_query_name:'',legend:'',resolution:'1/2',minstep:'5',line:true,close_area:false}],panel_options:{points:false,grids:true,left_axis:true},panel_name:'Untitled Metric',y_axis_left:'',y_axis_right:'',x_axis_down:'',unit:''};existingPanels.push(newPanel);setDashboardDetails(_objectSpread(_objectSpread({},dashboardDetails),{},{selectedPanels:existingPanels}));generatePanelGroupsList(existingPanels);setUpdate(true);};var handleChange=function handleChange(event,newValue){var _dashboardDetails$sel2;if(newValue===((_dashboardDetails$sel2=dashboardDetails.selectedPanels)===null||_dashboardDetails$sel2===void 0?void 0:_dashboardDetails$sel2.length)){handleCreatePanel();}setTabValue(newValue);};var getAllSelectedPanels=function getAllSelectedPanels(){var _dashboardDetails$pan;var allSelectedPanelsWithActiveIndex={panels:[],activeIndex:0};var count=0;(_dashboardDetails$pan=dashboardDetails.panelGroups)===null||_dashboardDetails$pan===void 0?void 0:_dashboardDetails$pan.forEach(function(panelGroup){panelGroup.panels.forEach(function(panel){var _panel$panel_id,_panel$panel_group_id,_panel$created_at,_panel$panel_group_na,_dashboardVars$dataSo4;if(configure&&panel.panel_id&&activeEditPanelID!==''&&panel.panel_id===activeEditPanelID){allSelectedPanelsWithActiveIndex.activeIndex=count;}allSelectedPanelsWithActiveIndex.panels.push({panel_id:(_panel$panel_id=panel.panel_id)!==null&&_panel$panel_id!==void 0?_panel$panel_id:'',panel_group_id:(_panel$panel_group_id=panel.panel_group_id)!==null&&_panel$panel_group_id!==void 0?_panel$panel_group_id:'',created_at:(_panel$created_at=panel.created_at)!==null&&_panel$created_at!==void 0?_panel$created_at:'',panel_group_name:(_panel$panel_group_na=panel.panel_group_name)!==null&&_panel$panel_group_na!==void 0?_panel$panel_group_na:'',ds_url:(_dashboardVars$dataSo4=dashboardVars.dataSourceURL)!==null&&_dashboardVars$dataSo4!==void 0?_dashboardVars$dataSo4:'',prom_queries:panel.prom_queries,panel_options:panel.panel_options,panel_name:panel.panel_name,y_axis_left:panel.y_axis_left,y_axis_right:panel.y_axis_right,x_axis_down:panel.x_axis_down,unit:panel.unit});count+=1;});});return allSelectedPanelsWithActiveIndex;};useEffect(function(){var panelsWithActiveIndex=getAllSelectedPanels();setDashboardDetails(_objectSpread(_objectSpread({},dashboardDetails),{},{selectedPanels:panelsWithActiveIndex.panels}));generatePanelGroupsList(panelsWithActiveIndex.panels);setTabValue(panelsWithActiveIndex.activeIndex);getSeriesList();if(dashboardVars.dashboardTypeID==='custom'&&!configure){handleCreatePanel();}else{setUpdate(true);}},[dashboardDetails.panelGroups]);useEffect(function(){if(update){var _dashboardDetails$sel3;CallbackToSetPanels((_dashboardDetails$sel3=dashboardDetails.selectedPanels)!==null&&_dashboardDetails$sel3!==void 0?_dashboardDetails$sel3:[]);setUpdate(false);}if(reload){setReload(false);}},[update]);var handleUpdatePanel=function handleUpdatePanel(panelVars,index){var _dashboardDetails$sel4;var existingPanels=(_dashboardDetails$sel4=dashboardDetails.selectedPanels)!==null&&_dashboardDetails$sel4!==void 0?_dashboardDetails$sel4:[];existingPanels[index]=panelVars;setDashboardDetails(_objectSpread(_objectSpread({},dashboardDetails),{},{selectedPanels:existingPanels}));generatePanelGroupsList(existingPanels);setUpdate(true);};var handleDeletePanel=function handleDeletePanel(index){var _dashboardDetails$sel5,_dashboardDetails$sel6;var numberOfPanels=(_dashboardDetails$sel5=(_dashboardDetails$sel6=dashboardDetails.selectedPanels)===null||_dashboardDetails$sel6===void 0?void 0:_dashboardDetails$sel6.length)!==null&&_dashboardDetails$sel5!==void 0?_dashboardDetails$sel5:0;if(index!==0||numberOfPanels>1){var _dashboardDetails$sel7;var existingPanels=(_dashboardDetails$sel7=dashboardDetails.selectedPanels)!==null&&_dashboardDetails$sel7!==void 0?_dashboardDetails$sel7:[];existingPanels.splice(index,1);setDashboardDetails(_objectSpread(_objectSpread({},dashboardDetails),{},{selectedPanels:existingPanels}));generatePanelGroupsList(existingPanels);if(index>0){setTabValue(index-1);}else{setReload(true);}setUpdate(true);}};var handleDiscardChanges=function handleDiscardChanges(index){var _dashboardDetails$sel8;setReload(true);var existingPanels=(_dashboardDetails$sel8=dashboardDetails.selectedPanels)!==null&&_dashboardDetails$sel8!==void 0?_dashboardDetails$sel8:[];var panelGroupList=[];if(configure){var _dashboardVars$panelG;panelGroupList=(_dashboardVars$panelG=dashboardVars.panelGroups)!==null&&_dashboardVars$panelG!==void 0?_dashboardVars$panelG:[];}else{panelGroupList=selectedDashboard.dashboardJSON.panelGroups;}panelGroupList.forEach(function(panelGroup){panelGroup.panels.forEach(function(selectedPanel){if(configure&&selectedPanel.panel_id===existingPanels[index].panel_id){var _selectedPanel$panel_,_panelGroup$panel_gro,_selectedPanel$create,_dashboardVars$dataSo5;existingPanels[index]={panel_id:(_selectedPanel$panel_=selectedPanel.panel_id)!==null&&_selectedPanel$panel_!==void 0?_selectedPanel$panel_:'',panel_group_id:(_panelGroup$panel_gro=panelGroup.panel_group_id)!==null&&_panelGroup$panel_gro!==void 0?_panelGroup$panel_gro:'',created_at:(_selectedPanel$create=selectedPanel.created_at)!==null&&_selectedPanel$create!==void 0?_selectedPanel$create:'',panel_group_name:panelGroup.panel_group_name,ds_url:(_dashboardVars$dataSo5=dashboardVars.dataSourceURL)!==null&&_dashboardVars$dataSo5!==void 0?_dashboardVars$dataSo5:'',prom_queries:selectedPanel.prom_queries,panel_options:selectedPanel.panel_options,panel_name:selectedPanel.panel_name,y_axis_left:selectedPanel.y_axis_left,y_axis_right:selectedPanel.y_axis_right,x_axis_down:selectedPanel.x_axis_down,unit:selectedPanel.unit};}else if(!configure&&selectedPanel.panel_name===existingPanels[index].panel_name){var _dashboardVars$dataSo6;var initialPromQueries=[];selectedPanel.prom_queries.forEach(function(prom_query){initialPromQueries.push({hidden:false,queryid:uuidv4(),prom_query_name:prom_query.prom_query_name,legend:prom_query.legend,resolution:prom_query.resolution,minstep:prom_query.minstep,line:prom_query.line,close_area:prom_query.close_area});});existingPanels[index]={ds_url:(_dashboardVars$dataSo6=dashboardVars.dataSourceURL)!==null&&_dashboardVars$dataSo6!==void 0?_dashboardVars$dataSo6:'',prom_queries:initialPromQueries,panel_group_name:panelGroup.panel_group_name,panel_options:selectedPanel.panel_options,panel_name:selectedPanel.panel_name,y_axis_left:selectedPanel.y_axis_left,y_axis_right:selectedPanel.y_axis_right,x_axis_down:selectedPanel.x_axis_down,unit:selectedPanel.unit};}});});setDashboardDetails(_objectSpread(_objectSpread({},dashboardDetails),{},{selectedPanels:existingPanels}));generatePanelGroupsList(existingPanels);setUpdate(true);};useEffect(function(){var _dashboardDetails$pan2;if(configure&&selectedDashboard.activePanelID!==''&&((_dashboardDetails$pan2=dashboardDetails.panelGroups)===null||_dashboardDetails$pan2===void 0?void 0:_dashboardDetails$pan2.length)===0&&dashboardVars.panelGroups&&dashboardVars.panelGroups.length!==0){setDashboardDetails({panelGroups:dashboardVars.panelGroups,selectedPanels:[]});}},[dashboardVars]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AppBar,{position:\"static\",color:\"default\",className:classes.appBar},/*#__PURE__*/React.createElement(Tabs,{value:tabValue,onChange:handleChange,TabIndicatorProps:{style:{backgroundColor:theme.palette.primary.main}},variant:\"scrollable\",scrollButtons:\"auto\"},(_dashboardDetails$sel9=dashboardDetails.selectedPanels)===null||_dashboardDetails$sel9===void 0?void 0:_dashboardDetails$sel9.map(function(panel,index){return/*#__PURE__*/React.createElement(StyledTab,Object.assign({label:panel.panel_name},a11yProps(index)));}),/*#__PURE__*/React.createElement(StyledTab,Object.assign({label:t('analyticsDashboard.applicationDashboards.tuneTheQueries.addMetric')},a11yProps((_dashboardDetails$sel10=dashboardDetails.selectedPanels)===null||_dashboardDetails$sel10===void 0?void 0:_dashboardDetails$sel10.length))))),!reload&&((_dashboardDetails$sel11=dashboardDetails.selectedPanels)===null||_dashboardDetails$sel11===void 0?void 0:_dashboardDetails$sel11.map(function(panel,index){var _dashboardVars$applic;return/*#__PURE__*/React.createElement(TabPanel,{value:tabValue,index:index,key:\"tab-panel-\".concat(panel.panel_name)},/*#__PURE__*/React.createElement(QueryEditingWizard,{panelVars:panel,selectedApps:(_dashboardVars$applic=dashboardVars.applicationMetadataMap)!==null&&_dashboardVars$applic!==void 0?_dashboardVars$applic:[],seriesList:seriesList,panelGroupsList:panelGroupsList,index:index,handleUpdatePanel:handleUpdatePanel,handleDeletePanel:handleDeletePanel,handleDiscardChanges:handleDiscardChanges}));})));};export default EditPanelsWizard;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/TuneTheQueries/EditPanelsWizard/index.tsx"],"names":["useLazyQuery","AppBar","Tabs","useTheme","moment","React","useEffect","useState","useTranslation","useSelector","v4","uuidv4","StyledTab","PROM_SERIES_LIST","QueryEditingWizard","useStyles","TabPanel","props","children","value","index","other","a11yProps","id","EditPanelsWizard","configure","activeEditPanelID","dashboardVars","CallbackToSetPanels","classes","theme","t","seriesList","setSeriesList","panelGroupsList","setPanelGroupsList","variables","prometheusDSInput","url","dataSourceURL","start","Date","unix","Math","round","getTime","format","end","fetchPolicy","onCompleted","prometheusSeriesData","seriesValues","GetPromSeriesList","forEach","series","push","name","getSeriesList","selectedDashboard","state","selectDashboard","tabValue","setTabValue","update","setUpdate","reload","setReload","getPanelsByGroup","preSelectedPanels","selectedPanelGroupMap","panelGroup","groupName","panels","panel","getSelectedPanelGroups","preSelectedPanelGroups","selectedPanelGroups","dashboardJSON","panelGroups","includes","panel_group_name","selectedPanels","panel_name","promQueryList","prom_queries","promQuery","hidden","queryid","prom_query_name","legend","resolution","minstep","line","close_area","ds_url","panel_options","y_axis_left","y_axis_right","x_axis_down","unit","length","dashboardDetails","setDashboardDetails","generatePanelGroupsList","updatedSelectedPanels","newPanelGroups","newPanelGroupOptions","handleCreatePanel","existingPanels","newPanel","panel_id","panel_group_id","created_at","points","grids","left_axis","handleChange","event","newValue","getAllSelectedPanels","allSelectedPanelsWithActiveIndex","activeIndex","count","panelsWithActiveIndex","dashboardTypeID","handleUpdatePanel","panelVars","handleDeletePanel","numberOfPanels","splice","handleDiscardChanges","panelGroupList","selectedPanel","initialPromQueries","prom_query","activePanelID","appBar","style","backgroundColor","palette","primary","main","map","applicationMetadataMap"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { useLazyQuery } from '@apollo/client';\nimport { AppBar, Tabs, useTheme } from '@material-ui/core';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { StyledTab } from '../../../../../../components/Tabs';\nimport { PROM_SERIES_LIST } from '../../../../../../graphql';\nimport {\n  DashboardDetails,\n  PanelDetails,\n  PanelGroupDetails,\n  PromQueryDetails,\n} from '../../../../../../models/dashboardsData';\nimport {\n  PrometheusSeriesListQueryVars,\n  PrometheusSeriesListResponse,\n} from '../../../../../../models/graphql/prometheus';\nimport { RootState } from '../../../../../../redux/reducers';\nimport QueryEditingWizard from './QueryEditingWizard';\nimport useStyles from './styles';\n\ninterface TabPanelProps {\n  children: React.ReactNode;\n  index: any;\n  value: any;\n}\n\ninterface Option {\n  name: string;\n  [index: string]: any;\n}\n\ninterface EditPanelsWizardProps {\n  configure: boolean;\n  activeEditPanelID: string;\n  dashboardVars: DashboardDetails;\n  CallbackToSetPanels: (panels: PanelDetails[]) => void;\n}\n\ninterface SelectedPanelsWithActiveIndex {\n  panels: PanelDetails[];\n  activeIndex: number;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <div>{children}</div>}\n    </div>\n  );\n};\n\nconst a11yProps = (index: any) => {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n};\n\nconst EditPanelsWizard: React.FC<EditPanelsWizardProps> = ({\n  configure,\n  activeEditPanelID,\n  dashboardVars,\n  CallbackToSetPanels,\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [seriesList, setSeriesList] = useState<Array<Option>>([]);\n  const [panelGroupsList, setPanelGroupsList] = useState<Array<Option>>([]);\n  const [getSeriesList] = useLazyQuery<\n    PrometheusSeriesListResponse,\n    PrometheusSeriesListQueryVars\n  >(PROM_SERIES_LIST, {\n    variables: {\n      prometheusDSInput: {\n        url: dashboardVars.dataSourceURL ?? '',\n        start: `${\n          new Date(\n            moment.unix(Math.round(new Date().getTime() / 1000) - 900).format()\n          ).getTime() / 1000\n        }`,\n        end: `${\n          new Date(\n            moment.unix(Math.round(new Date().getTime() / 1000)).format()\n          ).getTime() / 1000\n        }`,\n      },\n    },\n    fetchPolicy: 'network-only',\n    onCompleted: (prometheusSeriesData) => {\n      if (prometheusSeriesData) {\n        const seriesValues: Array<Option> = [];\n        prometheusSeriesData.GetPromSeriesList.seriesList?.forEach((series) => {\n          seriesValues.push({ name: series });\n        });\n        setSeriesList(seriesValues);\n      }\n    },\n  });\n\n  const selectedDashboard = useSelector(\n    (state: RootState) => state.selectDashboard\n  );\n  const [tabValue, setTabValue] = React.useState<number>(0);\n  const [update, setUpdate] = useState(false);\n  const [reload, setReload] = useState(false);\n\n  const getPanelsByGroup = (name: string) => {\n    const preSelectedPanels: string[] = [];\n    dashboardVars.selectedPanelGroupMap?.forEach((panelGroup) => {\n      if (name === panelGroup.groupName) {\n        panelGroup.panels.forEach((panel) => {\n          preSelectedPanels.push(panel);\n        });\n      }\n    });\n    return preSelectedPanels;\n  };\n\n  const getSelectedPanelGroups = () => {\n    const preSelectedPanelGroups: string[] = [];\n    dashboardVars.selectedPanelGroupMap?.forEach((panelGroup) => {\n      preSelectedPanelGroups.push(panelGroup.groupName);\n    });\n    const selectedPanelGroups: PanelGroupDetails[] = [];\n    selectedDashboard.dashboardJSON.panelGroups.forEach(\n      (panelGroup: PanelGroupDetails) => {\n        if (preSelectedPanelGroups.includes(panelGroup.panel_group_name)) {\n          const selectedPanels: PanelDetails[] = [];\n          const preSelectedPanels: string[] = getPanelsByGroup(\n            panelGroup.panel_group_name\n          );\n          panelGroup.panels.forEach((panel: PanelDetails) => {\n            if (preSelectedPanels.includes(panel.panel_name)) {\n              const promQueryList: PromQueryDetails[] = [];\n              panel.prom_queries.forEach((promQuery) => {\n                promQueryList.push({\n                  hidden: false,\n                  queryid: uuidv4(),\n                  prom_query_name: promQuery.prom_query_name,\n                  legend: promQuery.legend,\n                  resolution: promQuery.resolution,\n                  minstep: promQuery.minstep,\n                  line: promQuery.line,\n                  close_area: promQuery.close_area,\n                });\n              });\n              selectedPanels.push({\n                panel_group_name: panelGroup.panel_group_name,\n                ds_url: dashboardVars.dataSourceURL ?? '',\n                prom_queries: promQueryList,\n                panel_options: panel.panel_options,\n                panel_name: panel.panel_name,\n                y_axis_left: panel.y_axis_left,\n                y_axis_right: panel.y_axis_right,\n                x_axis_down: panel.x_axis_down,\n                unit: panel.unit,\n              });\n            }\n          });\n          selectedPanelGroups.push({\n            panel_group_name: panelGroup.panel_group_name,\n            panels: selectedPanels,\n          });\n        }\n      }\n    );\n    return selectedPanelGroups;\n  };\n\n  const [dashboardDetails, setDashboardDetails] = useState<DashboardDetails>({\n    panelGroups:\n      dashboardVars.panelGroups && dashboardVars.panelGroups.length && configure\n        ? dashboardVars.panelGroups\n        : !configure && selectedDashboard.dashboardJSON\n        ? getSelectedPanelGroups()\n        : [],\n    selectedPanels: [],\n  });\n\n  const generatePanelGroupsList = (updatedSelectedPanels: PanelDetails[]) => {\n    const newPanelGroups: string[] = [];\n    const newPanelGroupOptions: Array<Option> = [];\n    updatedSelectedPanels.forEach((panel) => {\n      if (\n        panel.panel_group_name &&\n        !newPanelGroups.includes(panel.panel_group_name)\n      ) {\n        newPanelGroups.push(panel.panel_group_name);\n        newPanelGroupOptions.push({ name: panel.panel_group_name });\n      }\n    });\n    setPanelGroupsList(newPanelGroupOptions);\n  };\n\n  const handleCreatePanel = () => {\n    const existingPanels: PanelDetails[] =\n      dashboardDetails.selectedPanels ?? [];\n    const newPanel: PanelDetails = {\n      panel_id: '',\n      panel_group_id: '',\n      created_at: '',\n      panel_group_name: 'Untitled Group name',\n      ds_url: dashboardVars.dataSourceURL ?? '',\n      prom_queries: [\n        {\n          hidden: false,\n          queryid: uuidv4(),\n          prom_query_name: '',\n          legend: '',\n          resolution: '1/2',\n          minstep: '5',\n          line: true,\n          close_area: false,\n        },\n      ],\n      panel_options: {\n        points: false,\n        grids: true,\n        left_axis: true,\n      },\n      panel_name: 'Untitled Metric',\n      y_axis_left: '',\n      y_axis_right: '',\n      x_axis_down: '',\n      unit: '',\n    };\n    existingPanels.push(newPanel);\n    setDashboardDetails({\n      ...dashboardDetails,\n      selectedPanels: existingPanels,\n    });\n    generatePanelGroupsList(existingPanels);\n    setUpdate(true);\n  };\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    if (newValue === dashboardDetails.selectedPanels?.length) {\n      handleCreatePanel();\n    }\n    setTabValue(newValue);\n  };\n\n  const getAllSelectedPanels = () => {\n    const allSelectedPanelsWithActiveIndex: SelectedPanelsWithActiveIndex = {\n      panels: [],\n      activeIndex: 0,\n    };\n    let count = 0;\n    dashboardDetails.panelGroups?.forEach((panelGroup) => {\n      panelGroup.panels.forEach((panel) => {\n        if (\n          configure &&\n          panel.panel_id &&\n          activeEditPanelID !== '' &&\n          panel.panel_id === activeEditPanelID\n        ) {\n          allSelectedPanelsWithActiveIndex.activeIndex = count;\n        }\n        allSelectedPanelsWithActiveIndex.panels.push({\n          panel_id: panel.panel_id ?? '',\n          panel_group_id: panel.panel_group_id ?? '',\n          created_at: panel.created_at ?? '',\n          panel_group_name: panel.panel_group_name ?? '',\n          ds_url: dashboardVars.dataSourceURL ?? '',\n          prom_queries: panel.prom_queries,\n          panel_options: panel.panel_options,\n          panel_name: panel.panel_name,\n          y_axis_left: panel.y_axis_left,\n          y_axis_right: panel.y_axis_right,\n          x_axis_down: panel.x_axis_down,\n          unit: panel.unit,\n        });\n        count += 1;\n      });\n    });\n    return allSelectedPanelsWithActiveIndex;\n  };\n\n  useEffect(() => {\n    const panelsWithActiveIndex = getAllSelectedPanels();\n    setDashboardDetails({\n      ...dashboardDetails,\n      selectedPanels: panelsWithActiveIndex.panels,\n    });\n    generatePanelGroupsList(panelsWithActiveIndex.panels);\n    setTabValue(panelsWithActiveIndex.activeIndex);\n    getSeriesList();\n    if (dashboardVars.dashboardTypeID === 'custom' && !configure) {\n      handleCreatePanel();\n    } else {\n      setUpdate(true);\n    }\n  }, [dashboardDetails.panelGroups]);\n\n  useEffect(() => {\n    if (update) {\n      CallbackToSetPanels(dashboardDetails.selectedPanels ?? []);\n      setUpdate(false);\n    }\n    if (reload) {\n      setReload(false);\n    }\n  }, [update]);\n\n  const handleUpdatePanel = (panelVars: PanelDetails, index: number) => {\n    const existingPanels: PanelDetails[] =\n      dashboardDetails.selectedPanels ?? [];\n    existingPanels[index] = panelVars;\n    setDashboardDetails({\n      ...dashboardDetails,\n      selectedPanels: existingPanels,\n    });\n    generatePanelGroupsList(existingPanels);\n    setUpdate(true);\n  };\n\n  const handleDeletePanel = (index: number) => {\n    const numberOfPanels: number = dashboardDetails.selectedPanels?.length ?? 0;\n    if (index !== 0 || numberOfPanels > 1) {\n      const existingPanels: PanelDetails[] =\n        dashboardDetails.selectedPanels ?? [];\n      existingPanels.splice(index, 1);\n      setDashboardDetails({\n        ...dashboardDetails,\n        selectedPanels: existingPanels,\n      });\n      generatePanelGroupsList(existingPanels);\n      if (index > 0) {\n        setTabValue(index - 1);\n      } else {\n        setReload(true);\n      }\n      setUpdate(true);\n    }\n  };\n\n  const handleDiscardChanges = (index: number) => {\n    setReload(true);\n    const existingPanels: PanelDetails[] =\n      dashboardDetails.selectedPanels ?? [];\n    let panelGroupList: PanelGroupDetails[] = [];\n    if (configure) {\n      panelGroupList = dashboardVars.panelGroups ?? [];\n    } else {\n      panelGroupList = selectedDashboard.dashboardJSON.panelGroups;\n    }\n    panelGroupList.forEach((panelGroup) => {\n      panelGroup.panels.forEach((selectedPanel) => {\n        if (\n          configure &&\n          selectedPanel.panel_id === existingPanels[index].panel_id\n        ) {\n          existingPanels[index] = {\n            panel_id: selectedPanel.panel_id ?? '',\n            panel_group_id: panelGroup.panel_group_id ?? '',\n            created_at: selectedPanel.created_at ?? '',\n            panel_group_name: panelGroup.panel_group_name,\n            ds_url: dashboardVars.dataSourceURL ?? '',\n            prom_queries: selectedPanel.prom_queries,\n            panel_options: selectedPanel.panel_options,\n            panel_name: selectedPanel.panel_name,\n            y_axis_left: selectedPanel.y_axis_left,\n            y_axis_right: selectedPanel.y_axis_right,\n            x_axis_down: selectedPanel.x_axis_down,\n            unit: selectedPanel.unit,\n          };\n        } else if (\n          !configure &&\n          selectedPanel.panel_name === existingPanels[index].panel_name\n        ) {\n          const initialPromQueries: PromQueryDetails[] = [];\n          selectedPanel.prom_queries.forEach((prom_query) => {\n            initialPromQueries.push({\n              hidden: false,\n              queryid: uuidv4(),\n              prom_query_name: prom_query.prom_query_name,\n              legend: prom_query.legend,\n              resolution: prom_query.resolution,\n              minstep: prom_query.minstep,\n              line: prom_query.line,\n              close_area: prom_query.close_area,\n            });\n          });\n          existingPanels[index] = {\n            ds_url: dashboardVars.dataSourceURL ?? '',\n            prom_queries: initialPromQueries,\n            panel_group_name: panelGroup.panel_group_name,\n            panel_options: selectedPanel.panel_options,\n            panel_name: selectedPanel.panel_name,\n            y_axis_left: selectedPanel.y_axis_left,\n            y_axis_right: selectedPanel.y_axis_right,\n            x_axis_down: selectedPanel.x_axis_down,\n            unit: selectedPanel.unit,\n          };\n        }\n      });\n    });\n    setDashboardDetails({\n      ...dashboardDetails,\n      selectedPanels: existingPanels,\n    });\n    generatePanelGroupsList(existingPanels);\n    setUpdate(true);\n  };\n\n  useEffect(() => {\n    if (\n      configure &&\n      selectedDashboard.activePanelID !== '' &&\n      dashboardDetails.panelGroups?.length === 0 &&\n      dashboardVars.panelGroups &&\n      dashboardVars.panelGroups.length !== 0\n    ) {\n      setDashboardDetails({\n        panelGroups: dashboardVars.panelGroups,\n        selectedPanels: [],\n      });\n    }\n  }, [dashboardVars]);\n\n  return (\n    <div>\n      <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\n        <Tabs\n          value={tabValue}\n          onChange={handleChange}\n          TabIndicatorProps={{\n            style: {\n              backgroundColor: theme.palette.primary.main,\n            },\n          }}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          {dashboardDetails.selectedPanels?.map((panel, index) => (\n            <StyledTab label={panel.panel_name} {...a11yProps(index)} />\n          ))}\n          <StyledTab\n            label={t(\n              'analyticsDashboard.applicationDashboards.tuneTheQueries.addMetric'\n            )}\n            {...a11yProps(dashboardDetails.selectedPanels?.length)}\n          />\n        </Tabs>\n      </AppBar>\n\n      {!reload &&\n        dashboardDetails.selectedPanels?.map((panel, index) => (\n          <TabPanel\n            value={tabValue}\n            index={index}\n            key={`tab-panel-${panel.panel_name}`}\n          >\n            <QueryEditingWizard\n              panelVars={panel}\n              selectedApps={dashboardVars.applicationMetadataMap ?? []}\n              seriesList={seriesList}\n              panelGroupsList={panelGroupsList}\n              index={index}\n              handleUpdatePanel={handleUpdatePanel}\n              handleDeletePanel={handleDeletePanel}\n              handleDiscardChanges={handleDiscardChanges}\n            />\n          </TabPanel>\n        ))}\n    </div>\n  );\n};\nexport default EditPanelsWizard;\n"]},"metadata":{},"sourceType":"module"}