{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{IconButton,TableCell,Tooltip,Typography}from'@material-ui/core';import{ButtonFilled,ButtonOutlined,LightPills,Modal}from'litmus-ui';import moment from'moment';import React from'react';import{useTranslation}from'react-i18next';import timeDifferenceForDate from'../../../utils/datesModifier';import{getProjectRole}from'../../../utils/getSearchParams';import useStyles from'./styles';var TableData=function TableData(_ref){var data=_ref.data,deleteRow=_ref.deleteRow;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;// Function to convert UNIX time in format of DD MMM YYY\nvar formatDate=function formatDate(date){var updated=new Date(parseInt(date,10)*1000).toString();var resDate=moment(updated).format('DD MMM YYYY');if(date)return resDate;return'Date not available';};var userRole=getProjectRole();var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var handleClick=function handleClick(){setOpen(true);};var handleClose=function handleClose(){deleteRow(data.cluster_id);setOpen(false);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.tableDataStatus},data.is_cluster_confirmed===false?/*#__PURE__*/React.createElement(LightPills,{variant:\"warning\",label:t('workflowCluster.header.formControl.menu6')}):data.is_cluster_confirmed===true&&data.is_active?/*#__PURE__*/React.createElement(LightPills,{variant:\"success\",label:t('workflowCluster.header.formControl.menu1')}):/*#__PURE__*/React.createElement(LightPills,{variant:\"danger\",label:t('workflowCluster.header.formControl.menu2')})),/*#__PURE__*/React.createElement(TableCell,{className:classes.workflowNameData},/*#__PURE__*/React.createElement(Typography,null,data.cluster_name)),/*#__PURE__*/React.createElement(TableCell,{className:classes.stepsDataTime},formatDate(data.updated_at)),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(Typography,{className:classes.stepsData},data.no_of_workflows)),/*#__PURE__*/React.createElement(TableCell,{className:classes.stepsDataschedule},/*#__PURE__*/React.createElement(Typography,null,data.no_of_schedules)),/*#__PURE__*/React.createElement(TableCell,{className:classes.stepsData},data.last_workflow_timestamp==='0'?/*#__PURE__*/React.createElement(Typography,null,\"Not Yet\"):timeDifferenceForDate(data.last_workflow_timestamp)),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(Tooltip,{classes:{tooltip:classes.customTooltip},disableFocusListener:true,disableHoverListener:userRole!=='Viewer',placement:\"bottom\",title:\"Insufficient Permissions\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.deleteCluster},/*#__PURE__*/React.createElement(\"div\",{className:classes.targetsIcon},/*#__PURE__*/React.createElement(IconButton,{disabled:userRole==='Viewer',onClick:handleClick},/*#__PURE__*/React.createElement(\"img\",{alt:\"delete\",src:\"./icons/ClusterDisconnect.svg\"}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,null,t('targets.modalDelete.disconnect'))))),/*#__PURE__*/React.createElement(\"div\",null,open&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{open:open,onClose:function onClose(){setOpen(false);},width:\"60%\",modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){setOpen(false);}},\"\\u2715\")},/*#__PURE__*/React.createElement(\"div\",{className:classes.body},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/DisconnectIcon.svg\",alt:\"disconnect\"}),/*#__PURE__*/React.createElement(\"div\",{className:classes.text},/*#__PURE__*/React.createElement(Typography,{className:classes.typo,align:\"center\"},t('targets.modalDelete.head1'),\" \",/*#__PURE__*/React.createElement(\"br\",null),t('targets.modalDelete.head2'),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"strong\",null,data.cluster_name,\" \",t('targets.modalDelete.head4')))),/*#__PURE__*/React.createElement(\"div\",{className:classes.textSecond},/*#__PURE__*/React.createElement(Typography,{className:classes.disconnectForever,align:\"center\"},t('targets.modalDelete.head3'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.buttonGroup},/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){setOpen(false);}},/*#__PURE__*/React.createElement(React.Fragment,null,\" \",t('targets.modalDelete.no'))),/*#__PURE__*/React.createElement(ButtonFilled,{disabled:userRole==='Viewer',variant:\"error\",onClick:handleClose,className:classes.w7},/*#__PURE__*/React.createElement(React.Fragment,null,t('targets.modalDelete.yes'))))))))));};export default TableData;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Targets/BrowseCluster/TableData.tsx"],"names":["IconButton","TableCell","Tooltip","Typography","ButtonFilled","ButtonOutlined","LightPills","Modal","moment","React","useTranslation","timeDifferenceForDate","getProjectRole","useStyles","TableData","data","deleteRow","classes","t","formatDate","date","updated","Date","parseInt","toString","resDate","format","userRole","useState","open","setOpen","handleClick","handleClose","cluster_id","tableDataStatus","is_cluster_confirmed","is_active","workflowNameData","cluster_name","stepsDataTime","updated_at","stepsData","no_of_workflows","stepsDataschedule","no_of_schedules","last_workflow_timestamp","tooltip","customTooltip","deleteCluster","targetsIcon","body","text","typo","textSecond","disconnectForever","buttonGroup","w7"],"mappings":"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","sourcesContent":["import { IconButton, TableCell, Tooltip, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, LightPills, Modal } from 'litmus-ui';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Cluster } from '../../../models/graphql/clusterData';\nimport timeDifferenceForDate from '../../../utils/datesModifier';\nimport { getProjectRole } from '../../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface TableDataProps {\n  data: Cluster;\n  deleteRow: (clid: string) => void;\n}\n\nconst TableData: React.FC<TableDataProps> = ({ data, deleteRow }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM YYYY');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  const userRole = getProjectRole();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    deleteRow(data.cluster_id);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <TableCell className={classes.tableDataStatus}>\n        {data.is_cluster_confirmed === false ? (\n          <LightPills\n            variant=\"warning\"\n            label={t('workflowCluster.header.formControl.menu6')}\n          />\n        ) : data.is_cluster_confirmed === true && data.is_active ? (\n          <LightPills\n            variant=\"success\"\n            label={t('workflowCluster.header.formControl.menu1')}\n          />\n        ) : (\n          <LightPills\n            variant=\"danger\"\n            label={t('workflowCluster.header.formControl.menu2')}\n          />\n        )}\n      </TableCell>\n      <TableCell className={classes.workflowNameData}>\n        <Typography>{data.cluster_name}</Typography>\n      </TableCell>\n      <TableCell className={classes.stepsDataTime}>\n        {formatDate(data.updated_at)}\n      </TableCell>\n      <TableCell>\n        <Typography className={classes.stepsData}>\n          {data.no_of_workflows}\n        </Typography>\n      </TableCell>\n      <TableCell className={classes.stepsDataschedule}>\n        <Typography>{data.no_of_schedules}</Typography>\n      </TableCell>\n      <TableCell className={classes.stepsData}>\n        {data.last_workflow_timestamp === '0' ? (\n          <Typography>Not Yet</Typography>\n        ) : (\n          timeDifferenceForDate(data.last_workflow_timestamp)\n        )}\n      </TableCell>\n      <TableCell>\n        <Tooltip\n          classes={{\n            tooltip: classes.customTooltip,\n          }}\n          disableFocusListener\n          disableHoverListener={userRole !== 'Viewer'}\n          placement=\"bottom\"\n          title=\"Insufficient Permissions\"\n        >\n          <div className={classes.deleteCluster}>\n            <div className={classes.targetsIcon}>\n              <IconButton\n                disabled={userRole === 'Viewer'}\n                onClick={handleClick}\n              >\n                <img alt=\"delete\" src=\"./icons/ClusterDisconnect.svg\" />\n              </IconButton>\n            </div>\n            <div>\n              <Typography>{t('targets.modalDelete.disconnect')}</Typography>\n            </div>\n          </div>\n        </Tooltip>\n        <div>\n          {open && (\n            <div>\n              <Modal\n                open={open}\n                onClose={() => {\n                  setOpen(false);\n                }}\n                width=\"60%\"\n                modalActions={\n                  <ButtonOutlined\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    &#x2715;\n                  </ButtonOutlined>\n                }\n              >\n                <div className={classes.body}>\n                  <img src=\"/icons/DisconnectIcon.svg\" alt=\"disconnect\" />\n                  <div className={classes.text}>\n                    <Typography className={classes.typo} align=\"center\">\n                      {t('targets.modalDelete.head1')} <br />\n                      {t('targets.modalDelete.head2')}\n                      <br />\n                      <strong>\n                        {data.cluster_name} {t('targets.modalDelete.head4')}\n                      </strong>\n                    </Typography>\n                  </div>\n                  <div className={classes.textSecond}>\n                    <Typography\n                      className={classes.disconnectForever}\n                      align=\"center\"\n                    >\n                      {t('targets.modalDelete.head3')}\n                    </Typography>\n                  </div>\n                  <div className={classes.buttonGroup}>\n                    <ButtonOutlined\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <> {t('targets.modalDelete.no')}</>\n                    </ButtonOutlined>\n\n                    <ButtonFilled\n                      disabled={userRole === 'Viewer'}\n                      variant=\"error\"\n                      onClick={handleClose}\n                      className={classes.w7}\n                    >\n                      <>{t('targets.modalDelete.yes')}</>\n                    </ButtonFilled>\n                  </div>\n                </div>\n              </Modal>\n            </div>\n          )}\n        </div>\n      </TableCell>\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}