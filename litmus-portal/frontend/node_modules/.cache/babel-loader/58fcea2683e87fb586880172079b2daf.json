{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable no-unused-expressions */import{useQuery}from'@apollo/client';import{Paper,Table,TableBody,TableCell,TableContainer,TablePagination,TableRow,Typography}from'@material-ui/core';import moment from'moment';import React from'react';import{useTranslation}from'react-i18next';import Loader from'../../../../components/Loader';import{LIST_DATASOURCE}from'../../../../graphql/queries';import{getProjectID}from'../../../../utils/getSearchParams';import{sortAlphaAsc,sortAlphaDesc,sortNumAsc,sortNumDesc}from'../../../../utils/sort';import useStyles from'./styles';import TableData from'./TableData';import TableHeader from'./TableHeader';import TableToolBar from'./TableToolbar';var DataSourceTable=function DataSourceTable(){var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _React$useState=React.useState({range:{startDate:'all',endDate:'all'},selectedDataSourceType:'All',sortData:{name:{sort:false,ascending:true},lastConfigured:{sort:true,ascending:false},status:{sort:false,ascending:true},dataSourceType:{sort:false,ascending:true}},selectedStatus:'All',searchTokens:['']}),_React$useState2=_slicedToArray(_React$useState,2),filter=_React$useState2[0],setFilter=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),page=_React$useState4[0],setPage=_React$useState4[1];var _React$useState5=React.useState(5),_React$useState6=_slicedToArray(_React$useState5,2),rowsPerPage=_React$useState6[0],setRowsPerPage=_React$useState6[1];var projectID=getProjectID();var handleChangePage=function handleChangePage(event,newPage){setPage(newPage);};var handleChangeRowsPerPage=function handleChangeRowsPerPage(event){setRowsPerPage(parseInt(event.target.value,10));setPage(0);};// Apollo query to get the data source data\nvar _useQuery=useQuery(LIST_DATASOURCE,{variables:{projectID:projectID},fetchPolicy:'cache-and-network',pollInterval:10000}),data=_useQuery.data,loading=_useQuery.loading,error=_useQuery.error;var getDataSourceType=function getDataSourceType(searchingData){var uniqueList=[];searchingData.forEach(function(data){if(!uniqueList.includes(data.ds_type)){uniqueList.push(data.ds_type);}});return uniqueList;};var getStatus=function getStatus(searchingData){var uniqueList=[];searchingData.forEach(function(data){if(!uniqueList.includes(data.health_status)){uniqueList.push(data.health_status);}});return uniqueList;};var payload=data?!data.ListDataSource?[]:data.ListDataSource.filter(function(ds){return filter.searchTokens.every(function(s){return ds.ds_name.toLowerCase().includes(s)||ds.ds_type!==undefined&&ds.ds_type.toLowerCase().includes(s)||ds.health_status!==undefined&&ds.health_status.toLowerCase().includes(s);});}).filter(function(data){return filter.selectedDataSourceType==='All'?true:data.ds_type===filter.selectedDataSourceType;}).filter(function(data){return filter.selectedStatus==='All'?true:data.health_status===filter.selectedStatus;}).filter(function(data){return filter.range.startDate==='all'||filter.range.startDate&&filter.range.endDate===undefined?true:parseInt(data.updated_at,10)*1000>=new Date(moment(filter.range.startDate).format()).getTime()&&parseInt(data.updated_at,10)*1000<=new Date(new Date(moment(filter.range.endDate).format()).setHours(23,59,59)).getTime();}).sort(function(a,b){// Sorting based on unique fields\nif(filter.sortData.name.sort){var x=a.ds_name;var y=b.ds_name;return filter.sortData.name.ascending?sortAlphaAsc(x,y):sortAlphaDesc(x,y);}if(filter.sortData.lastConfigured.sort){var _x=parseInt(a.updated_at,10);var _y=parseInt(b.updated_at,10);return filter.sortData.lastConfigured.ascending?sortNumAsc(_y,_x):sortNumDesc(_y,_x);}if(filter.sortData.status.sort){var _x2=a.health_status;var _y2=b.health_status;return filter.sortData.status.ascending?sortAlphaAsc(_x2,_y2):sortAlphaDesc(_x2,_y2);}if(filter.sortData.dataSourceType.sort){var _x3=a.ds_type;var _y3=b.ds_type;return filter.sortData.dataSourceType.ascending?sortAlphaAsc(_x3,_y3):sortAlphaDesc(_x3,_y3);}return 0;}):[];return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Paper,null,/*#__PURE__*/React.createElement(\"section\",{className:\"Heading section\"},/*#__PURE__*/React.createElement(TableToolBar,{searchToken:filter.searchTokens[0],handleSearch:function handleSearch(event,token){return setFilter(_objectSpread(_objectSpread({},filter),{},{searchTokens:(event!==undefined?event.target.value:token||'').toLowerCase().split(' ').filter(function(s){return s!=='';})}));},dataSourceTypes:getDataSourceType(payload),statuses:getStatus(payload),callbackToSetDataSourceType:function callbackToSetDataSourceType(dataSourceType){setFilter(_objectSpread(_objectSpread({},filter),{},{selectedDataSourceType:dataSourceType}));},callbackToSetStatus:function callbackToSetStatus(status){setFilter(_objectSpread(_objectSpread({},filter),{},{selectedStatus:status}));},callbackToSetRange:function callbackToSetRange(selectedStartDate,selectedEndDate){setFilter(_objectSpread(_objectSpread({},filter),{},{range:{startDate:selectedStartDate,endDate:selectedEndDate}}));}}))),/*#__PURE__*/React.createElement(Paper,null,/*#__PURE__*/React.createElement(\"section\",{className:\"table section\"},/*#__PURE__*/React.createElement(TableContainer,{className:classes.tableMain},/*#__PURE__*/React.createElement(Table,{\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHeader,{callBackToSort:function callBackToSort(sortConfigurations){setFilter(_objectSpread(_objectSpread({},filter),{},{sortData:sortConfigurations}));}}),/*#__PURE__*/React.createElement(TableBody,null,error?/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{colSpan:6},/*#__PURE__*/React.createElement(Typography,{align:\"center\"},t('analyticsDashboard.dataSourceTable.fetchError')))):loading?/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{colSpan:6},/*#__PURE__*/React.createElement(Loader,null),/*#__PURE__*/React.createElement(Typography,{align:\"center\"},t('analyticsDashboard.dataSourceTable.loading')))):!payload.length?/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{colSpan:6},/*#__PURE__*/React.createElement(Typography,{align:\"center\"},t('analyticsDashboard.dataSourceTable.noRecords')))):payload.length>0?payload.slice(0).slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(function(data){return/*#__PURE__*/React.createElement(TableRow,{hover:true,tabIndex:-1,key:data.ds_id,className:classes.tableRow},/*#__PURE__*/React.createElement(TableData,{data:data}));}):/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{colSpan:6},/*#__PURE__*/React.createElement(Typography,{align:\"center\"},t('analyticsDashboard.dataSourceTable.noRecords'))))))),/*#__PURE__*/React.createElement(TablePagination,{rowsPerPageOptions:[5,10,25,50],component:\"div\",count:payload.length,rowsPerPage:rowsPerPage,page:page,onChangePage:handleChangePage,onChangeRowsPerPage:handleChangeRowsPerPage,className:classes.tablePagination}))));};export default DataSourceTable;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/DataSources/Table/index.tsx"],"names":["useQuery","Paper","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Typography","moment","React","useTranslation","Loader","LIST_DATASOURCE","getProjectID","sortAlphaAsc","sortAlphaDesc","sortNumAsc","sortNumDesc","useStyles","TableData","TableHeader","TableToolBar","DataSourceTable","classes","t","useState","range","startDate","endDate","selectedDataSourceType","sortData","name","sort","ascending","lastConfigured","status","dataSourceType","selectedStatus","searchTokens","filter","setFilter","page","setPage","rowsPerPage","setRowsPerPage","projectID","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","variables","fetchPolicy","pollInterval","data","loading","error","getDataSourceType","searchingData","uniqueList","forEach","includes","ds_type","push","getStatus","health_status","payload","ListDataSource","ds","every","s","ds_name","toLowerCase","undefined","updated_at","Date","format","getTime","setHours","a","b","x","y","root","token","split","selectedStartDate","selectedEndDate","tableMain","sortConfigurations","length","slice","map","ds_id","tableRow","tablePagination"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { useQuery } from '@apollo/client';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../../components/Loader';\nimport { LIST_DATASOURCE } from '../../../../graphql/queries';\nimport {\n  DataSourceList,\n  ListDataSourceResponse,\n  ListDataSourceVars,\n} from '../../../../models/graphql/dataSourceDetails';\nimport { getProjectID } from '../../../../utils/getSearchParams';\nimport {\n  sortAlphaAsc,\n  sortAlphaDesc,\n  sortNumAsc,\n  sortNumDesc,\n} from '../../../../utils/sort';\nimport useStyles from './styles';\nimport TableData from './TableData';\nimport TableHeader from './TableHeader';\nimport TableToolBar from './TableToolbar';\n\ninterface RangeType {\n  startDate: string;\n  endDate: string;\n}\n\ninterface SortData {\n  lastConfigured: { sort: boolean; ascending: boolean };\n  name: { sort: boolean; ascending: boolean };\n  status: { sort: boolean; ascending: boolean };\n  dataSourceType: { sort: boolean; ascending: boolean };\n}\n\ninterface Filter {\n  range: RangeType;\n  selectedDataSourceType: string;\n  sortData: SortData;\n  selectedStatus: string;\n  searchTokens: string[];\n}\n\nconst DataSourceTable: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [filter, setFilter] = React.useState<Filter>({\n    range: { startDate: 'all', endDate: 'all' },\n    selectedDataSourceType: 'All',\n    sortData: {\n      name: { sort: false, ascending: true },\n      lastConfigured: { sort: true, ascending: false },\n      status: { sort: false, ascending: true },\n      dataSourceType: { sort: false, ascending: true },\n    },\n    selectedStatus: 'All',\n    searchTokens: [''],\n  });\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const projectID = getProjectID();\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Apollo query to get the data source data\n  const { data, loading, error } = useQuery<DataSourceList, ListDataSourceVars>(\n    LIST_DATASOURCE,\n    {\n      variables: { projectID },\n      fetchPolicy: 'cache-and-network',\n      pollInterval: 10000,\n    }\n  );\n\n  const getDataSourceType = (searchingData: ListDataSourceResponse[]) => {\n    const uniqueList: string[] = [];\n    searchingData.forEach((data) => {\n      if (!uniqueList.includes(data.ds_type)) {\n        uniqueList.push(data.ds_type);\n      }\n    });\n    return uniqueList;\n  };\n\n  const getStatus = (searchingData: ListDataSourceResponse[]) => {\n    const uniqueList: string[] = [];\n    searchingData.forEach((data) => {\n      if (!uniqueList.includes(data.health_status)) {\n        uniqueList.push(data.health_status);\n      }\n    });\n    return uniqueList;\n  };\n\n  const payload: ListDataSourceResponse[] = data\n    ? !data.ListDataSource\n      ? []\n      : data.ListDataSource.filter((ds: ListDataSourceResponse) => {\n          return filter.searchTokens.every(\n            (s: string) =>\n              ds.ds_name.toLowerCase().includes(s) ||\n              (ds.ds_type !== undefined &&\n                ds.ds_type.toLowerCase().includes(s)) ||\n              (ds.health_status !== undefined &&\n                ds.health_status.toLowerCase().includes(s))\n          );\n        })\n          .filter((data) => {\n            return filter.selectedDataSourceType === 'All'\n              ? true\n              : data.ds_type === filter.selectedDataSourceType;\n          })\n          .filter((data) => {\n            return filter.selectedStatus === 'All'\n              ? true\n              : data.health_status === filter.selectedStatus;\n          })\n          .filter((data) => {\n            return filter.range.startDate === 'all' ||\n              (filter.range.startDate && filter.range.endDate === undefined)\n              ? true\n              : parseInt(data.updated_at, 10) * 1000 >=\n                  new Date(moment(filter.range.startDate).format()).getTime() &&\n                  parseInt(data.updated_at, 10) * 1000 <=\n                    new Date(\n                      new Date(moment(filter.range.endDate).format()).setHours(\n                        23,\n                        59,\n                        59\n                      )\n                    ).getTime();\n          })\n          .sort((a: ListDataSourceResponse, b: ListDataSourceResponse) => {\n            // Sorting based on unique fields\n            if (filter.sortData.name.sort) {\n              const x = a.ds_name;\n              const y = b.ds_name;\n\n              return filter.sortData.name.ascending\n                ? sortAlphaAsc(x, y)\n                : sortAlphaDesc(x, y);\n            }\n            if (filter.sortData.lastConfigured.sort) {\n              const x = parseInt(a.updated_at, 10);\n              const y = parseInt(b.updated_at, 10);\n              return filter.sortData.lastConfigured.ascending\n                ? sortNumAsc(y, x)\n                : sortNumDesc(y, x);\n            }\n            if (filter.sortData.status.sort) {\n              const x = a.health_status;\n              const y = b.health_status;\n              return filter.sortData.status.ascending\n                ? sortAlphaAsc(x, y)\n                : sortAlphaDesc(x, y);\n            }\n            if (filter.sortData.dataSourceType.sort) {\n              const x = a.ds_type;\n              const y = b.ds_type;\n\n              return filter.sortData.dataSourceType.ascending\n                ? sortAlphaAsc(x, y)\n                : sortAlphaDesc(x, y);\n            }\n            return 0;\n          })\n    : [];\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <section className=\"Heading section\">\n          <TableToolBar\n            searchToken={filter.searchTokens[0]}\n            handleSearch={(\n              event: React.ChangeEvent<{ value: unknown }> | undefined,\n              token: string | undefined\n            ) =>\n              setFilter({\n                ...filter,\n                searchTokens: (event !== undefined\n                  ? ((event.target as HTMLInputElement).value as string)\n                  : token || ''\n                )\n                  .toLowerCase()\n                  .split(' ')\n                  .filter((s) => s !== ''),\n              })\n            }\n            dataSourceTypes={getDataSourceType(payload)}\n            statuses={getStatus(payload)}\n            callbackToSetDataSourceType={(dataSourceType: string) => {\n              setFilter({\n                ...filter,\n                selectedDataSourceType: dataSourceType,\n              });\n            }}\n            callbackToSetStatus={(status: string) => {\n              setFilter({\n                ...filter,\n                selectedStatus: status,\n              });\n            }}\n            callbackToSetRange={(\n              selectedStartDate: string,\n              selectedEndDate: string\n            ) => {\n              setFilter({\n                ...filter,\n                range: {\n                  startDate: selectedStartDate,\n                  endDate: selectedEndDate,\n                },\n              });\n            }}\n          />\n        </section>\n      </Paper>\n      <Paper>\n        <section className=\"table section\">\n          <TableContainer className={classes.tableMain}>\n            <Table aria-label=\"simple table\">\n              <TableHeader\n                callBackToSort={(sortConfigurations: SortData) => {\n                  setFilter({\n                    ...filter,\n                    sortData: sortConfigurations,\n                  });\n                }}\n              />\n              <TableBody>\n                {error ? (\n                  <TableRow>\n                    <TableCell colSpan={6}>\n                      <Typography align=\"center\">\n                        {t('analyticsDashboard.dataSourceTable.fetchError')}\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ) : loading ? (\n                  <TableRow>\n                    <TableCell colSpan={6}>\n                      <Loader />\n                      <Typography align=\"center\">\n                        {t('analyticsDashboard.dataSourceTable.loading')}\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ) : !payload.length ? (\n                  <TableRow>\n                    <TableCell colSpan={6}>\n                      <Typography align=\"center\">\n                        {t('analyticsDashboard.dataSourceTable.noRecords')}\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ) : payload.length > 0 ? (\n                  payload\n                    .slice(0)\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((data: ListDataSourceResponse) => {\n                      return (\n                        <TableRow\n                          hover\n                          tabIndex={-1}\n                          key={data.ds_id}\n                          className={classes.tableRow}\n                        >\n                          <TableData data={data} />\n                        </TableRow>\n                      );\n                    })\n                ) : (\n                  <TableRow>\n                    <TableCell colSpan={6}>\n                      <Typography align=\"center\">\n                        {t('analyticsDashboard.dataSourceTable.noRecords')}\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={payload.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            className={classes.tablePagination}\n          />\n        </section>\n      </Paper>\n    </div>\n  );\n};\n\nexport default DataSourceTable;\n"]},"metadata":{},"sourceType":"module"}