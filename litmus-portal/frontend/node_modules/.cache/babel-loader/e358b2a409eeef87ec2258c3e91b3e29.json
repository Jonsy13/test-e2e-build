{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowGraphs/index.tsx\";\n\nimport { FormControl, InputLabel, MenuItem, Paper, Select } from '@material-ui/core';\nimport { RadialChart } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { Filter } from '../../../../models/graphql/workflowStats';\nimport ScheduleAndRunStats from './ScheduleAndRunStats';\nimport useStyles from './styles';\n\nvar WorkflowGraphs = function WorkflowGraphs(_ref) {\n  var data = _ref.data;\n  var classes = useStyles();\n  var completed = 0;\n  var running = 0;\n  var failed = 0;\n  /* eslint-disable no-unused-expressions */\n\n  data === null || data === void 0 ? void 0 : data.ListWorkflow.workflows.map(function (datarow) {\n    var _datarow$workflow_run;\n\n    return (_datarow$workflow_run = datarow.workflow_runs) === null || _datarow$workflow_run === void 0 ? void 0 : _datarow$workflow_run.map(function (runs) {\n      if (JSON.parse(runs.execution_data).phase === 'Succeeded') completed++;else if (JSON.parse(runs.execution_data).phase === 'Running') running++;else if (JSON.parse(runs.execution_data).phase === 'Failed') failed++;\n    });\n  }); // States for filters\n\n  var _useState = useState(Filter.Monthly),\n      _useState2 = _slicedToArray(_useState, 2),\n      filters = _useState2[0],\n      setFilters = _useState2[1];\n\n  var graphData = [{\n    value: completed,\n    label: 'Completed',\n    baseColor: '#00CC9A'\n  }, {\n    value: running,\n    label: 'Running',\n    baseColor: '#5252F6'\n  }, {\n    value: failed,\n    label: 'Failed',\n    baseColor: '#CA2C2C'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    value: filters,\n    onChange: function onChange(event) {\n      setFilters(event.target.value);\n    },\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: Filter.Monthly,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Monthly\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: Filter.Daily,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Daily\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: Filter.Hourly,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Hourly\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.graphs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ScheduleAndRunStats, {\n    filter: filters,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    className: classes.radialChartContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RadialChart, {\n    radialData: graphData,\n    legendTableHeight: 150,\n    heading: \"Workflows\",\n    showCenterHeading: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default WorkflowGraphs;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowGraphs/index.tsx"],"names":["FormControl","InputLabel","MenuItem","Paper","Select","RadialChart","React","useState","Filter","ScheduleAndRunStats","useStyles","WorkflowGraphs","data","classes","completed","running","failed","ListWorkflow","workflows","map","datarow","workflow_runs","runs","JSON","parse","execution_data","phase","Monthly","filters","setFilters","graphData","value","label","baseColor","root","formControl","selectText","event","target","Daily","Hourly","graphs","radialChartContainer"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n} from '@material-ui/core';\nimport { RadialChart, RadialChartMetric } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport {\n  ExecutionData,\n  ScheduledWorkflows,\n} from '../../../../models/graphql/workflowListData';\nimport { Filter } from '../../../../models/graphql/workflowStats';\nimport ScheduleAndRunStats from './ScheduleAndRunStats';\nimport useStyles from './styles';\n\ninterface WorkflowGraphsProps {\n  data: ScheduledWorkflows | undefined;\n}\n\nconst WorkflowGraphs: React.FC<WorkflowGraphsProps> = ({ data }) => {\n  const classes = useStyles();\n\n  let completed = 0;\n  let running = 0;\n  let failed = 0;\n\n  /* eslint-disable no-unused-expressions */\n  data?.ListWorkflow.workflows.map((datarow) =>\n    datarow.workflow_runs?.map((runs) => {\n      if (\n        (JSON.parse(runs.execution_data) as ExecutionData).phase === 'Succeeded'\n      )\n        completed++;\n      else if (\n        (JSON.parse(runs.execution_data) as ExecutionData).phase === 'Running'\n      )\n        running++;\n      else if (\n        (JSON.parse(runs.execution_data) as ExecutionData).phase === 'Failed'\n      )\n        failed++;\n    })\n  );\n\n  // States for filters\n  const [filters, setFilters] = useState<Filter>(Filter.Monthly);\n\n  const graphData: RadialChartMetric[] = [\n    { value: completed, label: 'Completed', baseColor: '#00CC9A' },\n    { value: running, label: 'Running', baseColor: '#5252F6' },\n    { value: failed, label: 'Failed', baseColor: '#CA2C2C' },\n  ];\n  return (\n    <div className={classes.root}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel className={classes.selectText} />\n        <Select\n          value={filters}\n          onChange={(event) => {\n            setFilters(event.target.value as Filter);\n          }}\n          className={classes.selectText}\n        >\n          <MenuItem value={Filter.Monthly}>Monthly</MenuItem>\n          <MenuItem value={Filter.Daily}>Daily</MenuItem>\n          <MenuItem value={Filter.Hourly}>Hourly</MenuItem>\n        </Select>\n      </FormControl>\n      <div className={classes.graphs}>\n        <ScheduleAndRunStats filter={filters} />\n        <Paper elevation={0} className={classes.radialChartContainer}>\n          <RadialChart\n            radialData={graphData}\n            legendTableHeight={150}\n            heading=\"Workflows\"\n            showCenterHeading\n          />\n        </Paper>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkflowGraphs;\n"]},"metadata":{},"sourceType":"module"}