{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/Runs/TableData.tsx\";\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport { Button, IconButton, Menu, MenuItem, Popover, TableCell, Typography } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { ButtonFilled, OutlinedPills } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport TimePopOver from '../../../components/TimePopOver';\nimport { DELETE_WORKFLOW, SYNC_WORKFLOW, WORKFLOW_LIST_DETAILS } from '../../../graphql';\nimport useActions from '../../../redux/actions';\nimport * as NodeSelectionActions from '../../../redux/actions/nodeSelection';\nimport { history } from '../../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport ExperimentPoints from '../BrowseSchedule/ExperimentPoints';\nimport useStyles from './styles';\n\nvar TableData = function TableData(_ref) {\n  var _data$workflow_id, _data$last_updated, _data$phase, _data$last_updated2, _data$phase2, _data$phase3, _data$cluster_name, _scheduledWorkflowDat, _scheduledWorkflowDat2, _scheduledWorkflowDat3, _data$last_updated3;\n\n  var data = _ref.data,\n      refetchQuery = _ref.refetchQuery;\n  var classes = useStyles();\n  var projectID = getProjectID();\n  var projectRole = getProjectRole();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var open = Boolean(anchorEl);\n  var nodeSelection = useActions(NodeSelectionActions);\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  }; // Function to capitalize the first letter of the word\n  // eg: internal to Internal\n\n\n  var nameCapitalized = function nameCapitalized(clusterType) {\n    if (clusterType) return clusterType.charAt(0).toUpperCase() + clusterType.slice(1);\n    return 'Not Available';\n  };\n\n  var _useQuery = useQuery(WORKFLOW_LIST_DETAILS, {\n    variables: {\n      workflowInput: {\n        project_id: projectID,\n        workflow_ids: [(_data$workflow_id = data.workflow_id) !== null && _data$workflow_id !== void 0 ? _data$workflow_id : '']\n      }\n    }\n  }),\n      scheduledWorkflowData = _useQuery.data;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      popAnchorEl = _React$useState4[0],\n      setPopAnchorEl = _React$useState4[1];\n\n  var isOpen = Boolean(popAnchorEl);\n  var id = isOpen ? 'simple-popover' : undefined;\n\n  var handlePopOverClose = function handlePopOverClose() {\n    setPopAnchorEl(null);\n  };\n\n  var handlePopOverClick = function handlePopOverClick(event) {\n    setPopAnchorEl(event.currentTarget);\n  };\n  /**\n   * State variables for warning popover\n   */\n\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      popWarningAnchorEl = _React$useState6[0],\n      setWarningPopAnchorEl = _React$useState6[1];\n\n  var isWarningOpen = Boolean(popWarningAnchorEl);\n  var idWarning = isWarningOpen ? 'simple-popover' : undefined;\n\n  var handleWarningPopOverClose = function handleWarningPopOverClose() {\n    setWarningPopAnchorEl(null);\n  };\n\n  var handleWarningPopOverClick = function handleWarningPopOverClick(event) {\n    setWarningPopAnchorEl(event.currentTarget);\n  };\n  /**\n   * Sync workflow to sync a chaos workflow\n   */\n\n\n  var _useMutation = useMutation(SYNC_WORKFLOW, {\n    onCompleted: function onCompleted(data) {\n      if (data.syncWorkflow) {\n        handleWarningPopOverClose();\n        refetchQuery();\n      }\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      syncWorkflow = _useMutation2[0];\n  /**\n   * Delete workflow mutation to delete a chaos workflow\n   */\n\n\n  var _useMutation3 = useMutation(DELETE_WORKFLOW, {\n    onCompleted: function onCompleted(data) {\n      if (data.deleteChaosWorkflow) {\n        handleWarningPopOverClose();\n        refetchQuery();\n      }\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteWorkflow = _useMutation4[0];\n\n  function getResiliencyScoreColor(score) {\n    if (score < 39) {\n      return classes.less;\n    }\n\n    if (score > 40 && score < 79) {\n      return classes.medium;\n    }\n\n    return classes.high;\n  } // Function to find the time different in minutes\n\n\n  var timeDiff = function timeDiff(currentTime, lastUpdated) {\n    var current = currentTime;\n    var last = parseInt(lastUpdated, 10) * 1000;\n    var timeDifference = (current - last) / (60 * 1000);\n    return timeDifference;\n  };\n\n  var getVariant = function getVariant(variant) {\n    switch (variant) {\n      case 'succeeded':\n        return 'succeeded';\n\n      case 'failed':\n        return 'failed';\n\n      case 'running':\n        return 'running';\n\n      default:\n        return 'pending';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.warningTableCell,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, timeDiff(new Date().getTime(), (_data$last_updated = data.last_updated) !== null && _data$last_updated !== void 0 ? _data$last_updated : '') >= 20 && ((_data$phase = data.phase) === null || _data$phase === void 0 ? void 0 : _data$phase.toLowerCase()) === 'running' ? /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleWarningPopOverClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/warning.svg\",\n    alt: \"warning\",\n    width: \"20\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Popover, {\n    id: idWarning,\n    open: isWarningOpen,\n    anchorEl: popWarningAnchorEl,\n    onClose: handleWarningPopOverClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.popoverWarning,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, t('chaosWorkflows.browseWorkflows.wfIssue')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageRunning,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/running.svg\",\n    alt: \"running\",\n    className: classes.runningSmallIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }), ' ', /*#__PURE__*/React.createElement(Typography, {\n    className: classes.runningText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, t('chaosWorkflows.browseWorkflows.runningFrom'), ' ', Math.round(timeDiff(new Date().getTime(), (_data$last_updated2 = data.last_updated) !== null && _data$last_updated2 !== void 0 ? _data$last_updated2 : '')), ' ', t('chaosWorkflows.browseWorkflows.min'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.warningBtnDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    className: classes.syncBtn,\n    onClick: function onClick() {\n      syncWorkflow({\n        variables: {\n          workflowid: data.workflow_id,\n          workflow_run_id: data.workflow_run_id\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/sync-wf.svg\",\n    alt: \"sync\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.waitingBtnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, t('chaosWorkflows.browseWorkflows.sync'))), /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: function onClick() {\n      deleteWorkflow({\n        variables: {\n          workflowid: data.workflow_id,\n          workflow_run_id: data.workflow_run_id\n        }\n      });\n    },\n    className: classes.terminateText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/terminate-wf.svg\",\n    alt: \"terminate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.waitingBtnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, t('chaosWorkflows.browseWorkflows.terminate'))))))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(OutlinedPills, {\n    size: \"small\",\n    variant: getVariant((_data$phase2 = data.phase) === null || _data$phase2 === void 0 ? void 0 : _data$phase2.toLowerCase()),\n    label: (_data$phase3 = data.phase) !== null && _data$phase3 !== void 0 ? _data$phase3 : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.workflowNameData,\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: function onClick() {\n      var _data$phase4;\n\n      nodeSelection.selectNode({\n        pod_name: ''\n      });\n      if (((_data$phase4 = data.phase) === null || _data$phase4 === void 0 ? void 0 : _data$phase4.toLowerCase()) !== 'notavailable') history.push({\n        pathname: \"/workflows/\".concat(data.workflow_run_id),\n        search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.boldText,\n    \"data-cy\": \"workflowName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, data.workflow_name)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.clusterName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, nameCapitalized((_data$cluster_name = data.cluster_name) !== null && _data$cluster_name !== void 0 ? _data$cluster_name : ''))), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.reliabiltyData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, t('chaosWorkflows.browseWorkflows.tableData.overallRR')), data.resiliency_score === undefined || data.resiliency_score === null ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.less,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, t('chaosWorkflows.browseWorkflows.tableData.na')) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(classes.boldText, \" \").concat(getResiliencyScoreColor(data.resiliency_score)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, data.resiliency_score, \"%\")), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, t('chaosWorkflows.browseWorkflows.tableData.experimentsPassed')), data.experiments_passed === undefined || data.experiments_passed === null || data.total_experiments === undefined || data.total_experiments === null || data.resiliency_score === undefined || data.resiliency_score === null ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.less,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, t('chaosWorkflows.browseWorkflows.tableData.na')) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(classes.boldText, \" \").concat(getResiliencyScoreColor(data.resiliency_score)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, data.experiments_passed, \"/\", data.total_experiments))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handlePopOverClick,\n    className: classes.buttonTransform,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.boldText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, t('chaosWorkflows.browseWorkflows.tableData.showExperiments'), \"(\", (_scheduledWorkflowDat = scheduledWorkflowData === null || scheduledWorkflowData === void 0 ? void 0 : (_scheduledWorkflowDat2 = scheduledWorkflowData.ListWorkflow.workflows[0]) === null || _scheduledWorkflowDat2 === void 0 ? void 0 : _scheduledWorkflowDat2.weightages.length) !== null && _scheduledWorkflowDat !== void 0 ? _scheduledWorkflowDat : 0, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.experimentDetails,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, isOpen ? /*#__PURE__*/React.createElement(KeyboardArrowDownIcon, {\n    className: classes.arrowMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    className: classes.arrowMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: isOpen,\n    anchorEl: popAnchorEl,\n    onClose: handlePopOverClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.popover,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, scheduledWorkflowData === null || scheduledWorkflowData === void 0 ? void 0 : (_scheduledWorkflowDat3 = scheduledWorkflowData.ListWorkflow.workflows[0]) === null || _scheduledWorkflowDat3 === void 0 ? void 0 : _scheduledWorkflowDat3.weightages.map(function (weightEntry) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: weightEntry.experiment_name,\n      style: {\n        marginBottom: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ExperimentPoints, {\n      expName: weightEntry.experiment_name,\n      weight: weightEntry.weightage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }\n    }));\n  }))))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TimePopOver, {\n    unixTime: (_data$last_updated3 = data.last_updated) !== null && _data$last_updated3 !== void 0 ? _data$last_updated3 : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"more\",\n    \"aria-controls\": \"long-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    className: classes.optionBtn,\n    \"data-cy\": \"browseWorkflowOptions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Menu, {\n    id: \"long-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Workflow\",\n    onClick: function onClick() {\n      var _data$phase5;\n\n      nodeSelection.selectNode({\n        pod_name: ''\n      });\n      if (((_data$phase5 = data.phase) === null || _data$phase5 === void 0 ? void 0 : _data$phase5.toLowerCase()) !== 'notavailable') history.push({\n        pathname: \"/workflows/\".concat(data.workflow_run_id),\n        search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    \"data-cy\": \"workflowDetails\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/show-workflow.svg\",\n    alt: \"Display Workflow\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 15\n    }\n  }, t('chaosWorkflows.browseWorkflows.tableData.showTheWorkflow')))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Analysis\",\n    onClick: function onClick() {\n      var _data$phase6;\n\n      if (((_data$phase6 = data.phase) === null || _data$phase6 === void 0 ? void 0 : _data$phase6.toLowerCase()) !== 'notavailable') history.push({\n        pathname: \"/workflows/analytics/\".concat(data.workflow_id),\n        search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    \"data-cy\": \"workflowAnalytics\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/show-analytics.svg\",\n    alt: \"Display Analytics\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, t('chaosWorkflows.browseWorkflows.tableData.showTheAnalytics')))))));\n};\n\nexport default TableData;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/Runs/TableData.tsx"],"names":["useMutation","useQuery","Button","IconButton","Menu","MenuItem","Popover","TableCell","Typography","ChevronRightIcon","KeyboardArrowDownIcon","MoreVertIcon","ButtonFilled","OutlinedPills","React","useTranslation","TimePopOver","DELETE_WORKFLOW","SYNC_WORKFLOW","WORKFLOW_LIST_DETAILS","useActions","NodeSelectionActions","history","getProjectID","getProjectRole","ExperimentPoints","useStyles","TableData","data","refetchQuery","classes","projectID","projectRole","t","useState","anchorEl","setAnchorEl","open","Boolean","nodeSelection","handleClick","event","currentTarget","handleClose","nameCapitalized","clusterType","charAt","toUpperCase","slice","variables","workflowInput","project_id","workflow_ids","workflow_id","scheduledWorkflowData","popAnchorEl","setPopAnchorEl","isOpen","id","undefined","handlePopOverClose","handlePopOverClick","popWarningAnchorEl","setWarningPopAnchorEl","isWarningOpen","idWarning","handleWarningPopOverClose","handleWarningPopOverClick","onCompleted","syncWorkflow","deleteChaosWorkflow","deleteWorkflow","getResiliencyScoreColor","score","less","medium","high","timeDiff","currentTime","lastUpdated","current","last","parseInt","timeDifference","getVariant","variant","warningTableCell","Date","getTime","last_updated","phase","toLowerCase","vertical","horizontal","popoverWarning","imageRunning","runningSmallIcon","runningText","Math","round","warningBtnDiv","syncBtn","workflowid","workflow_run_id","waitingBtnText","terminateText","workflowNameData","cursor","selectNode","pod_name","push","pathname","search","boldText","workflow_name","clusterName","cluster_name","reliabiltyData","resiliency_score","experiments_passed","total_experiments","buttonTransform","ListWorkflow","workflows","weightages","length","experimentDetails","arrowMargin","popover","map","weightEntry","experiment_name","marginBottom","weightage","optionBtn","expDiv","btnImg","btnText"],"mappings":";;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SACEC,MADF,EAEEC,UAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,OALF,EAMEC,SANF,EAOEC,UAPF,QAQO,mBARP;AASA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,WAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SACEC,eADF,EAEEC,aAFF,EAGEC,qBAHF,QAIO,kBAJP;AAUA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAO,KAAKC,oBAAZ,MAAsC,sCAAtC;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,gCAA7C;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAOA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAA4B;AAAA;;AAAA,MAAzBC,IAAyB,QAAzBA,IAAyB;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AACtE,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,MAAMK,SAAS,GAAGR,YAAY,EAA9B;AACA,MAAMS,WAAW,GAAGR,cAAc,EAAlC;;AACA,wBAAcT,cAAc,EAA5B;AAAA,MAAQkB,CAAR,mBAAQA,CAAR;;AACA,wBAAgCnB,KAAK,CAACoB,QAAN,CAAmC,IAAnC,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAACH,QAAD,CAApB;AACA,MAAMI,aAAa,GAAGnB,UAAU,CAACC,oBAAD,CAAhC;;AACA,MAAMmB,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA0C;AAC5DL,IAAAA,WAAW,CAACK,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAGA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD,CAXsE,CAetE;AACA;;;AACA,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,WAAD,EAAyB;AAC/C,QAAIA,WAAJ,EACE,OAAOA,WAAW,CAACC,MAAZ,CAAmB,CAAnB,EAAsBC,WAAtB,KAAsCF,WAAW,CAACG,KAAZ,CAAkB,CAAlB,CAA7C;AACF,WAAO,eAAP;AACD,GAJD;;AAMA,kBAAwC/C,QAAQ,CAG9CkB,qBAH8C,EAGvB;AACvB8B,IAAAA,SAAS,EAAE;AACTC,MAAAA,aAAa,EAAE;AACbC,QAAAA,UAAU,EAAEpB,SADC;AAEbqB,QAAAA,YAAY,EAAE,sBAACxB,IAAI,CAACyB,WAAN,iEAAqB,EAArB;AAFD;AADN;AADY,GAHuB,CAAhD;AAAA,MAAcC,qBAAd,aAAQ1B,IAAR;;AAYA,yBAAsCd,KAAK,CAACoB,QAAN,CACpC,IADoC,CAAtC;AAAA;AAAA,MAAOqB,WAAP;AAAA,MAAoBC,cAApB;;AAGA,MAAMC,MAAM,GAAGnB,OAAO,CAACiB,WAAD,CAAtB;AACA,MAAMG,EAAE,GAAGD,MAAM,GAAG,gBAAH,GAAsBE,SAAvC;;AACA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAGA,MAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACpB,KAAD,EAA0C;AACnEe,IAAAA,cAAc,CAACf,KAAK,CAACC,aAAP,CAAd;AACD,GAFD;AAIA;AACF;AACA;;;AACE,yBACE5B,KAAK,CAACoB,QAAN,CAAmC,IAAnC,CADF;AAAA;AAAA,MAAO4B,kBAAP;AAAA,MAA2BC,qBAA3B;;AAEA,MAAMC,aAAa,GAAG1B,OAAO,CAACwB,kBAAD,CAA7B;AACA,MAAMG,SAAS,GAAGD,aAAa,GAAG,gBAAH,GAAsBL,SAArD;;AACA,MAAMO,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM;AACtCH,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAFD;;AAGA,MAAMI,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAC1B,KAAD,EAA0C;AAC1EsB,IAAAA,qBAAqB,CAACtB,KAAK,CAACC,aAAP,CAArB;AACD,GAFD;AAIA;AACF;AACA;;;AACE,qBAAuB1C,WAAW,CAACkB,aAAD,EAAgB;AAChDkD,IAAAA,WAAW,EAAE,qBAACxC,IAAD,EAAU;AACrB,UAAIA,IAAI,CAACyC,YAAT,EAAuB;AACrBH,QAAAA,yBAAyB;AACzBrC,QAAAA,YAAY;AACb;AACF;AAN+C,GAAhB,CAAlC;AAAA;AAAA,MAAOwC,YAAP;AASA;AACF;AACA;;;AACE,sBAAyBrE,WAAW,CAACiB,eAAD,EAAkB;AACpDmD,IAAAA,WAAW,EAAE,qBAACxC,IAAD,EAAU;AACrB,UAAIA,IAAI,CAAC0C,mBAAT,EAA8B;AAC5BJ,QAAAA,yBAAyB;AACzBrC,QAAAA,YAAY;AACb;AACF;AANmD,GAAlB,CAApC;AAAA;AAAA,MAAO0C,cAAP;;AASA,WAASC,uBAAT,CAAiCC,KAAjC,EAAgD;AAC9C,QAAIA,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAO3C,OAAO,CAAC4C,IAAf;AACD;;AACD,QAAID,KAAK,GAAG,EAAR,IAAcA,KAAK,GAAG,EAA1B,EAA8B;AAC5B,aAAO3C,OAAO,CAAC6C,MAAf;AACD;;AACD,WAAO7C,OAAO,CAAC8C,IAAf;AACD,GA7FqE,CA+FtE;;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD,EAAsBC,WAAtB,EAA8C;AAC7D,QAAMC,OAAO,GAAGF,WAAhB;AACA,QAAMG,IAAI,GAAGC,QAAQ,CAACH,WAAD,EAAc,EAAd,CAAR,GAA4B,IAAzC;AACA,QAAMI,cAAc,GAAG,CAACH,OAAO,GAAGC,IAAX,KAAoB,KAAK,IAAzB,CAAvB;AACA,WAAOE,cAAP;AACD,GALD;;AAOA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAiC;AAClD,YAAQA,OAAR;AACE,WAAK,WAAL;AACE,eAAO,WAAP;;AACF,WAAK,QAAL;AACE,eAAO,QAAP;;AACF,WAAK,SAAL;AACE,eAAO,SAAP;;AACF;AACE,eAAO,SAAP;AARJ;AAUD,GAXD;;AAaA,sBACE,uDAEE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEvD,OAAO,CAACwD,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QAAQ,CAAC,IAAIU,IAAJ,GAAWC,OAAX,EAAD,wBAAuB5D,IAAI,CAAC6D,YAA5B,mEAA4C,EAA5C,CAAR,IAA2D,EAA3D,IACD,gBAAA7D,IAAI,CAAC8D,KAAL,4DAAYC,WAAZ,QAA8B,SAD7B,gBAEC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAExB,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAC,qBAAT;AAA+B,IAAA,GAAG,EAAC,SAAnC;AAA6C,IAAA,KAAK,EAAC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFD,gBAMC,yCAPJ,eAUE,oBAAC,OAAD;AACE,IAAA,EAAE,EAAEF,SADN;AAEE,IAAA,IAAI,EAAED,aAFR;AAGE,IAAA,QAAQ,EAAEF,kBAHZ;AAIE,IAAA,OAAO,EAAEI,yBAJX;AAKE,IAAA,YAAY,EAAE;AACZ0B,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KALhB;AASE,IAAA,eAAe,EAAE;AACfD,MAAAA,QAAQ,EAAE,KADK;AAEfC,MAAAA,UAAU,EAAE;AAFG,KATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcE;AAAK,IAAA,SAAS,EAAE/D,OAAO,CAACgE,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG7D,CAAC,CAAC,wCAAD,CADJ,CADF,eAIE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACiE,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAC,oBADN;AAEE,IAAA,GAAG,EAAC,SAFN;AAGE,IAAA,SAAS,EAAEjE,OAAO,CAACkE,gBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKK,GALL,eAME,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAElE,OAAO,CAACmE,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhE,CAAC,CAAC,4CAAD,CADJ,EACoD,GADpD,EAEGiE,IAAI,CAACC,KAAL,CACCtB,QAAQ,CAAC,IAAIU,IAAJ,GAAWC,OAAX,EAAD,yBAAuB5D,IAAI,CAAC6D,YAA5B,qEAA4C,EAA5C,CADT,CAFH,EAIK,GAJL,EAKGxD,CAAC,CAAC,oCAAD,CALJ,CANF,CAJF,eAmBE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACsE,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,SAAS,EAAEtE,OAAO,CAACuE,OADrB;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbhC,MAAAA,YAAY,CAAC;AACXpB,QAAAA,SAAS,EAAE;AACTqD,UAAAA,UAAU,EAAE1E,IAAI,CAACyB,WADR;AAETkD,UAAAA,eAAe,EAAE3E,IAAI,CAAC2E;AAFb;AADA,OAAD,CAAZ;AAMD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AAAK,IAAA,GAAG,EAAC,qBAAT;AAA+B,IAAA,GAAG,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAYE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEzE,OAAO,CAAC0E,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvE,CAAC,CAAC,qCAAD,CADJ,CAZF,CADF,eAiBE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbsC,MAAAA,cAAc,CAAC;AACbtB,QAAAA,SAAS,EAAE;AACTqD,UAAAA,UAAU,EAAE1E,IAAI,CAACyB,WADR;AAETkD,UAAAA,eAAe,EAAE3E,IAAI,CAAC2E;AAFb;AADE,OAAD,CAAd;AAMD,KARH;AASE,IAAA,SAAS,EAAEzE,OAAO,CAAC2E,aATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AAAK,IAAA,GAAG,EAAC,0BAAT;AAAoC,IAAA,GAAG,EAAC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAYE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE3E,OAAO,CAAC0E,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvE,CAAC,CAAC,0CAAD,CADJ,CAZF,CAjBF,CAnBF,CAdF,CAVF,CAFF,eAkFE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,OAAO,EAAEmD,UAAU,iBAACxD,IAAI,CAAC8D,KAAN,iDAAC,aAAYC,WAAZ,EAAD,CAFrB;AAGE,IAAA,KAAK,kBAAE/D,IAAI,CAAC8D,KAAP,uDAAgB,EAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlFF,eAyFE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAE5D,OAAO,CAAC4E,gBADrB;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAFT;AAGE,IAAA,OAAO,EAAE,mBAAM;AAAA;;AACbpE,MAAAA,aAAa,CAACqE,UAAd,CAAyB;AACvBC,QAAAA,QAAQ,EAAE;AADa,OAAzB;AAGA,UAAI,iBAAAjF,IAAI,CAAC8D,KAAL,8DAAYC,WAAZ,QAA8B,cAAlC,EACErE,OAAO,CAACwF,IAAR,CAAa;AACXC,QAAAA,QAAQ,uBAAgBnF,IAAI,CAAC2E,eAArB,CADG;AAEXS,QAAAA,MAAM,uBAAgBjF,SAAhB,0BAAyCC,WAAzC;AAFK,OAAb;AAIH,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,OAAO,CAACmF,QAA/B;AAAyC,eAAQ,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrF,IAAI,CAACsF,aADR,CAdF,CAzFF,eA2GE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEpF,OAAO,CAACqF,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvE,eAAe,uBAAChB,IAAI,CAACwF,YAAN,mEAAsB,EAAtB,CADlB,CADF,CA3GF,eAgHE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEtF,OAAO,CAACuF,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOpF,CAAC,CAAC,oDAAD,CAAR,CADF,EAEGL,IAAI,CAAC0F,gBAAL,KAA0B3D,SAA1B,IACD/B,IAAI,CAAC0F,gBAAL,KAA0B,IADzB,gBAEC;AAAM,IAAA,SAAS,EAAExF,OAAO,CAAC4C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzC,CAAC,CAAC,6CAAD,CADJ,CAFD,gBAMC;AACE,IAAA,SAAS,YAAKH,OAAO,CAACmF,QAAb,cAAyBzC,uBAAuB,CACvD5C,IAAI,CAAC0F,gBADkD,CAAhD,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG1F,IAAI,CAAC0F,gBALR,MARJ,CADF,eAkBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrF,CAAC,CAAC,4DAAD,CADJ,CADF,EAIGL,IAAI,CAAC2F,kBAAL,KAA4B5D,SAA5B,IACD/B,IAAI,CAAC2F,kBAAL,KAA4B,IAD3B,IAED3F,IAAI,CAAC4F,iBAAL,KAA2B7D,SAF1B,IAGD/B,IAAI,CAAC4F,iBAAL,KAA2B,IAH1B,IAID5F,IAAI,CAAC0F,gBAAL,KAA0B3D,SAJzB,IAKD/B,IAAI,CAAC0F,gBAAL,KAA0B,IALzB,gBAMC;AAAM,IAAA,SAAS,EAAExF,OAAO,CAAC4C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzC,CAAC,CAAC,6CAAD,CADJ,CAND,gBAUC;AACE,IAAA,SAAS,YAAKH,OAAO,CAACmF,QAAb,cAAyBzC,uBAAuB,CACvD5C,IAAI,CAAC0F,gBADkD,CAAhD,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG1F,IAAI,CAAC2F,kBALR,OAK6B3F,IAAI,CAAC4F,iBALlC,CAdJ,CAlBF,CAhHF,eA0JE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE3D,kBADX;AAEE,IAAA,SAAS,EAAE/B,OAAO,CAAC2F,eAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE3F,OAAO,CAACmF,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhF,CAAC,CAAC,0DAAD,CADJ,gCAEGqB,qBAFH,aAEGA,qBAFH,iDAEGA,qBAAqB,CAAEoE,YAAvB,CAAoCC,SAApC,CAA8C,CAA9C,CAFH,2DAEG,uBAAkDC,UAAlD,CACEC,MAHL,yEAGe,CAHf,MAJF,eAUE;AAAK,IAAA,SAAS,EAAE/F,OAAO,CAACgG,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrE,MAAM,gBACL,oBAAC,qBAAD;AAAuB,IAAA,SAAS,EAAE3B,OAAO,CAACiG,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAGL,oBAAC,gBAAD;AAAkB,IAAA,SAAS,EAAEjG,OAAO,CAACiG,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAVF,CADF,eAmBE,oBAAC,OAAD;AACE,IAAA,EAAE,EAAErE,EADN;AAEE,IAAA,IAAI,EAAED,MAFR;AAGE,IAAA,QAAQ,EAAEF,WAHZ;AAIE,IAAA,OAAO,EAAEK,kBAJX;AAKE,IAAA,YAAY,EAAE;AACZgC,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KALhB;AASE,IAAA,eAAe,EAAE;AACfD,MAAAA,QAAQ,EAAE,KADK;AAEfC,MAAAA,UAAU,EAAE;AAFG,KATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcE;AAAK,IAAA,SAAS,EAAE/D,OAAO,CAACkG,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1E,qBADH,aACGA,qBADH,iDACGA,qBAAqB,CAAEoE,YAAvB,CAAoCC,SAApC,CAA8C,CAA9C,CADH,2DACG,uBAAkDC,UAAlD,CAA6DK,GAA7D,CACC,UAACC,WAAD;AAAA,wBACE;AACE,MAAA,GAAG,EAAEA,WAAW,CAACC,eADnB;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,gBAAD;AACE,MAAA,OAAO,EAAEF,WAAW,CAACC,eADvB;AAEE,MAAA,MAAM,EAAED,WAAW,CAACG,SAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAAA,GADD,CADH,CAdF,CAnBF,CADF,CA1JF,eA8ME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,QAAQ,yBAAEzG,IAAI,CAAC6D,YAAP,qEAAuB,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA9MF,eAiNE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,kBAAW,MADb;AAEE,qBAAc,WAFhB;AAGE,qBAAc,MAHhB;AAIE,IAAA,OAAO,EAAEjD,WAJX;AAKE,IAAA,SAAS,EAAEV,OAAO,CAACwG,SALrB;AAME,eAAQ,uBANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,eAWE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,QAAQ,EAAEnG,QAFZ;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,IAAI,EAAEE,IAJR;AAKE,IAAA,OAAO,EAAEM,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,OAAO,EAAE,mBAAM;AAAA;;AACbJ,MAAAA,aAAa,CAACqE,UAAd,CAAyB;AACvBC,QAAAA,QAAQ,EAAE;AADa,OAAzB;AAGA,UAAI,iBAAAjF,IAAI,CAAC8D,KAAL,8DAAYC,WAAZ,QAA8B,cAAlC,EACErE,OAAO,CAACwF,IAAR,CAAa;AACXC,QAAAA,QAAQ,uBAAgBnF,IAAI,CAAC2E,eAArB,CADG;AAEXS,QAAAA,MAAM,uBAAgBjF,SAAhB,0BAAyCC,WAAzC;AAFK,OAAb;AAIH,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACyG,MAAxB;AAAgC,eAAQ,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAC,0BADN;AAEE,IAAA,GAAG,EAAC,kBAFN;AAGE,IAAA,SAAS,EAAEzG,OAAO,CAAC0G,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE1G,OAAO,CAAC2G,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxG,CAAC,CAAC,0DAAD,CADJ,CANF,CAbF,CAPF,eA+BE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,OAAO,EAAE,mBAAM;AAAA;;AACb,UAAI,iBAAAL,IAAI,CAAC8D,KAAL,8DAAYC,WAAZ,QAA8B,cAAlC,EACErE,OAAO,CAACwF,IAAR,CAAa;AACXC,QAAAA,QAAQ,iCAA0BnF,IAAI,CAACyB,WAA/B,CADG;AAEX2D,QAAAA,MAAM,uBAAgBjF,SAAhB,0BAAyCC,WAAzC;AAFK,OAAb;AAIH,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACyG,MAAxB;AAAgC,eAAQ,mBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAC,2BADN;AAEE,IAAA,GAAG,EAAC,mBAFN;AAGE,IAAA,SAAS,EAAEzG,OAAO,CAAC0G,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE1G,OAAO,CAAC2G,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxG,CAAC,CAAC,2DAAD,CADJ,CANF,CAVF,CA/BF,CAXF,CAjNF,CADF;AAwRD,CA5YD;;AA6YA,eAAeN,SAAf","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport {\n  Button,\n  IconButton,\n  Menu,\n  MenuItem,\n  Popover,\n  TableCell,\n  Typography,\n} from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { ButtonFilled, OutlinedPills } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport TimePopOver from '../../../components/TimePopOver';\nimport {\n  DELETE_WORKFLOW,\n  SYNC_WORKFLOW,\n  WORKFLOW_LIST_DETAILS,\n} from '../../../graphql';\nimport { WorkflowRun } from '../../../models/graphql/workflowData';\nimport {\n  ListWorkflowsInput,\n  ScheduledWorkflows,\n} from '../../../models/graphql/workflowListData';\nimport useActions from '../../../redux/actions';\nimport * as NodeSelectionActions from '../../../redux/actions/nodeSelection';\nimport { history } from '../../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport ExperimentPoints from '../BrowseSchedule/ExperimentPoints';\nimport useStyles from './styles';\n\ninterface TableDataProps {\n  data: Partial<WorkflowRun>;\n  refetchQuery: any;\n}\n\nconst TableData: React.FC<TableDataProps> = ({ data, refetchQuery }) => {\n  const classes = useStyles();\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n  const { t } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const nodeSelection = useActions(NodeSelectionActions);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  // Function to capitalize the first letter of the word\n  // eg: internal to Internal\n  const nameCapitalized = (clusterType: string) => {\n    if (clusterType)\n      return clusterType.charAt(0).toUpperCase() + clusterType.slice(1);\n    return 'Not Available';\n  };\n\n  const { data: scheduledWorkflowData } = useQuery<\n    ScheduledWorkflows,\n    ListWorkflowsInput\n  >(WORKFLOW_LIST_DETAILS, {\n    variables: {\n      workflowInput: {\n        project_id: projectID,\n        workflow_ids: [data.workflow_id ?? ''],\n      },\n    },\n  });\n\n  const [popAnchorEl, setPopAnchorEl] = React.useState<null | HTMLElement>(\n    null\n  );\n  const isOpen = Boolean(popAnchorEl);\n  const id = isOpen ? 'simple-popover' : undefined;\n  const handlePopOverClose = () => {\n    setPopAnchorEl(null);\n  };\n  const handlePopOverClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPopAnchorEl(event.currentTarget);\n  };\n\n  /**\n   * State variables for warning popover\n   */\n  const [popWarningAnchorEl, setWarningPopAnchorEl] =\n    React.useState<null | HTMLElement>(null);\n  const isWarningOpen = Boolean(popWarningAnchorEl);\n  const idWarning = isWarningOpen ? 'simple-popover' : undefined;\n  const handleWarningPopOverClose = () => {\n    setWarningPopAnchorEl(null);\n  };\n  const handleWarningPopOverClick = (event: React.MouseEvent<HTMLElement>) => {\n    setWarningPopAnchorEl(event.currentTarget);\n  };\n\n  /**\n   * Sync workflow to sync a chaos workflow\n   */\n  const [syncWorkflow] = useMutation(SYNC_WORKFLOW, {\n    onCompleted: (data) => {\n      if (data.syncWorkflow) {\n        handleWarningPopOverClose();\n        refetchQuery();\n      }\n    },\n  });\n\n  /**\n   * Delete workflow mutation to delete a chaos workflow\n   */\n  const [deleteWorkflow] = useMutation(DELETE_WORKFLOW, {\n    onCompleted: (data) => {\n      if (data.deleteChaosWorkflow) {\n        handleWarningPopOverClose();\n        refetchQuery();\n      }\n    },\n  });\n\n  function getResiliencyScoreColor(score: number) {\n    if (score < 39) {\n      return classes.less;\n    }\n    if (score > 40 && score < 79) {\n      return classes.medium;\n    }\n    return classes.high;\n  }\n\n  // Function to find the time different in minutes\n  const timeDiff = (currentTime: number, lastUpdated: string) => {\n    const current = currentTime;\n    const last = parseInt(lastUpdated, 10) * 1000;\n    const timeDifference = (current - last) / (60 * 1000);\n    return timeDifference;\n  };\n\n  const getVariant = (variant: string | undefined) => {\n    switch (variant) {\n      case 'succeeded':\n        return 'succeeded';\n      case 'failed':\n        return 'failed';\n      case 'running':\n        return 'running';\n      default:\n        return 'pending';\n    }\n  };\n\n  return (\n    <>\n      {/* Table cell for warning (if the workflow is in running state from 20 mins) */}\n      <TableCell className={classes.warningTableCell}>\n        {timeDiff(new Date().getTime(), data.last_updated ?? '') >= 20 &&\n        data.phase?.toLowerCase() === 'running' ? (\n          <IconButton onClick={handleWarningPopOverClick}>\n            <img src=\"./icons/warning.svg\" alt=\"warning\" width=\"20\" />\n          </IconButton>\n        ) : (\n          <></>\n        )}\n        {/* Warning PopOver */}\n        <Popover\n          id={idWarning}\n          open={isWarningOpen}\n          anchorEl={popWarningAnchorEl}\n          onClose={handleWarningPopOverClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <div className={classes.popoverWarning}>\n            <Typography>\n              {t('chaosWorkflows.browseWorkflows.wfIssue')}\n            </Typography>\n            <div className={classes.imageRunning}>\n              <img\n                src=\"/icons/running.svg\"\n                alt=\"running\"\n                className={classes.runningSmallIcon}\n              />{' '}\n              <Typography className={classes.runningText}>\n                {t('chaosWorkflows.browseWorkflows.runningFrom')}{' '}\n                {Math.round(\n                  timeDiff(new Date().getTime(), data.last_updated ?? '')\n                )}{' '}\n                {t('chaosWorkflows.browseWorkflows.min')}\n              </Typography>\n            </div>\n            {/* Buttons to sync and terminate the workflow */}\n            <div className={classes.warningBtnDiv}>\n              <ButtonFilled\n                className={classes.syncBtn}\n                onClick={() => {\n                  syncWorkflow({\n                    variables: {\n                      workflowid: data.workflow_id,\n                      workflow_run_id: data.workflow_run_id,\n                    },\n                  });\n                }}\n              >\n                <img src=\"./icons/sync-wf.svg\" alt=\"sync\" />\n                <Typography className={classes.waitingBtnText}>\n                  {t('chaosWorkflows.browseWorkflows.sync')}\n                </Typography>\n              </ButtonFilled>\n              <ButtonFilled\n                onClick={() => {\n                  deleteWorkflow({\n                    variables: {\n                      workflowid: data.workflow_id,\n                      workflow_run_id: data.workflow_run_id,\n                    },\n                  });\n                }}\n                className={classes.terminateText}\n              >\n                <img src=\"./icons/terminate-wf.svg\" alt=\"terminate\" />\n                <Typography className={classes.waitingBtnText}>\n                  {t('chaosWorkflows.browseWorkflows.terminate')}\n                </Typography>\n              </ButtonFilled>\n            </div>\n          </div>\n        </Popover>\n      </TableCell>\n      <TableCell>\n        <OutlinedPills\n          size=\"small\"\n          variant={getVariant(data.phase?.toLowerCase())}\n          label={data.phase ?? ''}\n        />\n      </TableCell>\n      <TableCell\n        className={classes.workflowNameData}\n        style={{ cursor: 'pointer' }}\n        onClick={() => {\n          nodeSelection.selectNode({\n            pod_name: '',\n          });\n          if (data.phase?.toLowerCase() !== 'notavailable')\n            history.push({\n              pathname: `/workflows/${data.workflow_run_id}`,\n              search: `?projectID=${projectID}&projectRole=${projectRole}`,\n            });\n        }}\n      >\n        <Typography className={classes.boldText} data-cy=\"workflowName\">\n          {data.workflow_name}\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <Typography className={classes.clusterName}>\n          {nameCapitalized(data.cluster_name ?? '')}\n        </Typography>\n      </TableCell>\n      <TableCell className={classes.reliabiltyData}>\n        <Typography>\n          <span>{t('chaosWorkflows.browseWorkflows.tableData.overallRR')}</span>\n          {data.resiliency_score === undefined ||\n          data.resiliency_score === null ? (\n            <span className={classes.less}>\n              {t('chaosWorkflows.browseWorkflows.tableData.na')}\n            </span>\n          ) : (\n            <span\n              className={`${classes.boldText} ${getResiliencyScoreColor(\n                data.resiliency_score\n              )}`}\n            >\n              {data.resiliency_score}%\n            </span>\n          )}\n        </Typography>\n        <Typography>\n          <span>\n            {t('chaosWorkflows.browseWorkflows.tableData.experimentsPassed')}\n          </span>\n          {data.experiments_passed === undefined ||\n          data.experiments_passed === null ||\n          data.total_experiments === undefined ||\n          data.total_experiments === null ||\n          data.resiliency_score === undefined ||\n          data.resiliency_score === null ? (\n            <span className={classes.less}>\n              {t('chaosWorkflows.browseWorkflows.tableData.na')}\n            </span>\n          ) : (\n            <span\n              className={`${classes.boldText} ${getResiliencyScoreColor(\n                data.resiliency_score\n              )}`}\n            >\n              {data.experiments_passed}/{data.total_experiments}\n            </span>\n          )}\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <div>\n          <Button\n            onClick={handlePopOverClick}\n            className={classes.buttonTransform}\n          >\n            <Typography className={classes.boldText}>\n              {t('chaosWorkflows.browseWorkflows.tableData.showExperiments')}(\n              {scheduledWorkflowData?.ListWorkflow.workflows[0]?.weightages\n                .length ?? 0}\n              )\n            </Typography>\n            <div className={classes.experimentDetails}>\n              {isOpen ? (\n                <KeyboardArrowDownIcon className={classes.arrowMargin} />\n              ) : (\n                <ChevronRightIcon className={classes.arrowMargin} />\n              )}\n            </div>\n          </Button>\n          <Popover\n            id={id}\n            open={isOpen}\n            anchorEl={popAnchorEl}\n            onClose={handlePopOverClose}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center',\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'center',\n            }}\n          >\n            <div className={classes.popover}>\n              {scheduledWorkflowData?.ListWorkflow.workflows[0]?.weightages.map(\n                (weightEntry) => (\n                  <div\n                    key={weightEntry.experiment_name}\n                    style={{ marginBottom: 8 }}\n                  >\n                    <ExperimentPoints\n                      expName={weightEntry.experiment_name}\n                      weight={weightEntry.weightage}\n                    />\n                  </div>\n                )\n              )}\n            </div>\n          </Popover>\n        </div>\n      </TableCell>\n      <TableCell>\n        <TimePopOver unixTime={data.last_updated ?? ''} />\n      </TableCell>\n      <TableCell>\n        <IconButton\n          aria-label=\"more\"\n          aria-controls=\"long-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n          className={classes.optionBtn}\n          data-cy=\"browseWorkflowOptions\"\n        >\n          <MoreVertIcon />\n        </IconButton>\n        <Menu\n          id=\"long-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={open}\n          onClose={handleClose}\n        >\n          <MenuItem\n            value=\"Workflow\"\n            onClick={() => {\n              nodeSelection.selectNode({\n                pod_name: '',\n              });\n              if (data.phase?.toLowerCase() !== 'notavailable')\n                history.push({\n                  pathname: `/workflows/${data.workflow_run_id}`,\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n            }}\n          >\n            <div className={classes.expDiv} data-cy=\"workflowDetails\">\n              <img\n                src=\"/icons/show-workflow.svg\"\n                alt=\"Display Workflow\"\n                className={classes.btnImg}\n              />\n              <Typography className={classes.btnText}>\n                {t('chaosWorkflows.browseWorkflows.tableData.showTheWorkflow')}\n              </Typography>\n            </div>\n          </MenuItem>\n          <MenuItem\n            value=\"Analysis\"\n            onClick={() => {\n              if (data.phase?.toLowerCase() !== 'notavailable')\n                history.push({\n                  pathname: `/workflows/analytics/${data.workflow_id}`,\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n            }}\n          >\n            <div className={classes.expDiv} data-cy=\"workflowAnalytics\">\n              <img\n                src=\"/icons/show-analytics.svg\"\n                alt=\"Display Analytics\"\n                className={classes.btnImg}\n              />\n              <Typography className={classes.btnText}>\n                {t('chaosWorkflows.browseWorkflows.tableData.showTheAnalytics')}\n              </Typography>\n            </div>\n          </MenuItem>\n          {/* <MenuItem value=\"Scheduler\" onClick={handleMenu}>\n            Show the scheduler\n          </MenuItem> */}\n        </Menu>\n      </TableCell>\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}