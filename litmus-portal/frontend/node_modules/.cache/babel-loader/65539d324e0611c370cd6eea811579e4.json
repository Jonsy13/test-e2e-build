{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable no-unused-expressions */ /* eslint-disable no-loop-func */import{useQuery}from'@apollo/client';import{Typography}from'@material-ui/core';import moment from'moment';import React,{useEffect}from'react';import{useTranslation}from'react-i18next';import{useLocation}from'react-router-dom';import BackButton from'../../components/Button/BackButton';import Loader from'../../components/Loader';import Scaffold from'../../containers/layouts/Scaffold';import{WORKFLOW_LIST_DETAILS}from'../../graphql';import{getProjectID}from'../../utils/getSearchParams';import PopOver from'../../views/Analytics/WorkflowDashboard/PopOver';import WorkflowDetailsTable from'../../views/Analytics/WorkflowDashboard/WorkflowRunDetailsTable';import WorkflowRunsBarChart from'../../views/Analytics/WorkflowDashboard/WorkflowRunsBarChart';import useStyles from'./styles';var AnalyticsPage=function AnalyticsPage(){var _selectedWorkflowSche5,_workflowRuns$length;var classes=useStyles();var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),popoverOpen=_React$useState2[0],setPopoverOpen=_React$useState2[1];var _React$useState3=React.useState(true),_React$useState4=_slicedToArray(_React$useState3,2),workflowRunPresent=_React$useState4[0],setWorkflowRunPresent=_React$useState4[1];var _useLocation=useLocation(),pathname=_useLocation.pathname;// Getting the workflow nome from the pathname\nvar workflowId=pathname.split('/')[3];var _useTranslation=useTranslation(),t=_useTranslation.t;var _React$useState5=React.useState(''),_React$useState6=_slicedToArray(_React$useState5,2),selectedWorkflowRunID=_React$useState6[0],setSelectedWorkflowRunID=_React$useState6[1];var _React$useState7=React.useState(),_React$useState8=_slicedToArray(_React$useState7,2),selectedWorkflowRunDetails=_React$useState8[0],setSelectedWorkflowRunDetails=_React$useState8[1];var _React$useState9=React.useState([]),_React$useState10=_slicedToArray(_React$useState9,2),workflowRunDataForPlot=_React$useState10[0],setWorkflowRunDataForPlot=_React$useState10[1];var _React$useState11=React.useState({testsPassed:0,testsFailed:0,resilienceScore:0,testDate:'',xLoc:0,yLoc:0,workflowRunID:''}),_React$useState12=_slicedToArray(_React$useState11,2),selectedWorkflowRunData=_React$useState12[0],setSelectedWorkflowRunData=_React$useState12[1];// get ProjectID\nvar projectID=getProjectID();// Apollo query to get the scheduled workflow data\nvar _useQuery=useQuery(WORKFLOW_LIST_DETAILS,{variables:{workflowInput:{project_id:projectID,workflow_ids:[workflowId]}},pollInterval:5000}),data=_useQuery.data,error=_useQuery.error;var setPopOverDisplay=function setPopOverDisplay(selectedWorkflowRunDetails,visible){setSelectedWorkflowRunData(selectedWorkflowRunDetails);setPopoverOpen(visible);};useEffect(function(){var workflowRuns=[];var experimentTestResultsArray=[];var chaosDataArray=[];var validWorkflowRunsData=[];try{var _selectedWorkflowSche;var _selectedWorkflowSchedule=data===null||data===void 0?void 0:data.ListWorkflow.workflows;var selectedWorkflows=_selectedWorkflowSchedule?(_selectedWorkflowSche=_selectedWorkflowSchedule[0])===null||_selectedWorkflowSche===void 0?void 0:_selectedWorkflowSche.workflow_runs:[];selectedWorkflows===null||selectedWorkflows===void 0?void 0:selectedWorkflows.forEach(function(data){try{(function(){var executionData=JSON.parse(data.execution_data);var nodes=executionData.nodes;var experimentTestResultsArrayPerWorkflowRun=[];var weightsSum=0;var isValid=false;var totalExperimentsPassed=0;for(var _i=0,_Object$keys=Object.keys(nodes);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];var node=nodes[key];if(node.chaosData){(function(){var chaosData=node.chaosData;chaosDataArray.push(chaosData);if(chaosData.experimentVerdict==='Pass'||chaosData.experimentVerdict==='Fail'){var _selectedWorkflowSche2;var weightageMap=_selectedWorkflowSchedule?(_selectedWorkflowSche2=_selectedWorkflowSchedule[0])===null||_selectedWorkflowSche2===void 0?void 0:_selectedWorkflowSche2.weightages:[];weightageMap.forEach(function(weightage){if(weightage.experiment_name===chaosData.experimentName){if(chaosData.experimentVerdict==='Pass'){experimentTestResultsArray.push(weightage.weightage*parseInt(chaosData.probeSuccessPercentage,10)/100);totalExperimentsPassed+=1;}if(chaosData.experimentVerdict==='Fail'){experimentTestResultsArray.push(0);}if(chaosData.experimentVerdict==='Pass'||chaosData.experimentVerdict==='Fail'){experimentTestResultsArrayPerWorkflowRun.push(chaosData.experimentVerdict==='Fail'?0:weightage.weightage*parseInt(chaosData.probeSuccessPercentage,10)/100);weightsSum+=weightage.weightage;isValid=true;}}});}})();}}if(executionData.event_type==='UPDATE'&&isValid){var workflowRun={testsPassed:totalExperimentsPassed,testsFailed:experimentTestResultsArrayPerWorkflowRun.length-totalExperimentsPassed,resilienceScore:experimentTestResultsArrayPerWorkflowRun.length?experimentTestResultsArrayPerWorkflowRun.reduce(function(a,b){return a+b;},0)/weightsSum*100:0,testDate:data.last_updated,workflowRunID:data.workflow_run_id,workflowID:workflowId};validWorkflowRunsData.push(workflowRun);}})();}catch(error){console.error(error);}});}catch(error){setWorkflowRunPresent(false);return;}if(validWorkflowRunsData.length===1){var resDate=moment(new Date(parseInt(validWorkflowRunsData[0].testDate,10)*1000).toString()).format('YYYY-MM-DD');var edgeLow={testsPassed:0,testsFailed:0,resilienceScore:0,testDate:Math.round(parseInt(moment(resDate).subtract(1.5,'days').endOf('day').format('x'),10)/1000).toString(),workflowRunID:'edge_low',workflowID:workflowId};var edgeHigh={testsPassed:0,testsFailed:0,resilienceScore:0,testDate:Math.round(parseInt(moment(resDate).add(1.5,'days').startOf('day').format('x'),10)/1000).toString(),workflowRunID:'edge_high',workflowID:workflowId};workflowRuns.push(edgeLow);workflowRuns.push(validWorkflowRunsData[0]);workflowRuns.push(edgeHigh);setWorkflowRunDataForPlot(workflowRuns);}else{setWorkflowRunDataForPlot(validWorkflowRunsData);}},[selectedWorkflowRunID,data]);useEffect(function(){var workflowTestsArray=[];try{var _selectedWorkflowSche3;var _selectedWorkflowSchedule2=data===null||data===void 0?void 0:data.ListWorkflow.workflows;var _workflowRuns=_selectedWorkflowSchedule2?(_selectedWorkflowSche3=_selectedWorkflowSchedule2[0])===null||_selectedWorkflowSche3===void 0?void 0:_selectedWorkflowSche3.workflow_runs:[];var selectedWorkflows=_workflowRuns===null||_workflowRuns===void 0?void 0:_workflowRuns.filter(function(w){return w.workflow_run_id===selectedWorkflowRunID;});selectedWorkflows===null||selectedWorkflows===void 0?void 0:selectedWorkflows.forEach(function(data){try{(function(){var executionData=JSON.parse(data.execution_data);var nodes=executionData.nodes;var index=1;for(var _i2=0,_Object$keys2=Object.keys(nodes);_i2<_Object$keys2.length;_i2++){var key=_Object$keys2[_i2];var node=nodes[key];if(node.chaosData){(function(){var _selectedWorkflowSche4;var chaosData=node.chaosData;var weightageMap=_selectedWorkflowSchedule2?(_selectedWorkflowSche4=_selectedWorkflowSchedule2[0])===null||_selectedWorkflowSche4===void 0?void 0:_selectedWorkflowSche4.weightages:[];weightageMap.forEach(function(weightage){if(weightage.experiment_name===chaosData.experimentName){workflowTestsArray.push({test_id:index,test_name:chaosData.experimentName,test_result:chaosData.experimentVerdict,test_weight:weightage.weightage,resulting_points:chaosData.experimentVerdict==='Pass'||chaosData.experimentVerdict==='Fail'?weightage.weightage*parseInt(chaosData.probeSuccessPercentage,10)/100:0,last_run:chaosData.lastUpdatedAt});}});})();}index+=1;}})();}catch(error){console.error(error);}});setSelectedWorkflowRunDetails(workflowTestsArray);}catch(error){setWorkflowRunPresent(false);}},[selectedWorkflowRunID,data]);// Number of Workflow Runs for the selected Schedule\nvar selectedWorkflowSchedule=data===null||data===void 0?void 0:data.ListWorkflow.workflows;var workflowRuns=selectedWorkflowSchedule?(_selectedWorkflowSche5=selectedWorkflowSchedule[0])===null||_selectedWorkflowSche5===void 0?void 0:_selectedWorkflowSche5.workflow_runs:[];return/*#__PURE__*/React.createElement(Scaffold,null,workflowRunPresent?/*#__PURE__*/React.createElement(\"div\",null,workflowRunDataForPlot.length?/*#__PURE__*/React.createElement(\"div\",{className:classes.rootContainer},/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.button},/*#__PURE__*/React.createElement(BackButton,null)),/*#__PURE__*/React.createElement(Typography,{variant:\"h4\"},/*#__PURE__*/React.createElement(\"strong\",null,\" \",t('analytics.workflowAnalytics'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.headerDiv},/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},t('analytics.viewTestResult'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.analyticsDiv},/*#__PURE__*/React.createElement(WorkflowRunsBarChart,{numberOfWorkflowRuns:(_workflowRuns$length=workflowRuns===null||workflowRuns===void 0?void 0:workflowRuns.length)!==null&&_workflowRuns$length!==void 0?_workflowRuns$length:0,workflowRunData:workflowRunDataForPlot,callBackToShowPopOver:setPopOverDisplay,callBackToSelectWorkflowRun:function callBackToSelectWorkflowRun(selectedWorkflowRunID){setSelectedWorkflowRunID(selectedWorkflowRunID);}}),selectedWorkflowRunID!==''?/*#__PURE__*/React.createElement(WorkflowDetailsTable,{workflowRunDetails:selectedWorkflowRunDetails!==null&&selectedWorkflowRunDetails!==void 0?selectedWorkflowRunDetails:[],workflowID:workflowId,reloadAnalytics:function reloadAnalytics(){setSelectedWorkflowRunID('');}}):/*#__PURE__*/React.createElement(\"div\",null),popoverOpen?/*#__PURE__*/React.createElement(PopOver,{testsPassed:selectedWorkflowRunData.testsPassed,testsFailed:selectedWorkflowRunData.testsFailed,resilienceScore:selectedWorkflowRunData.resilienceScore,testDate:selectedWorkflowRunData.testDate,xLoc:selectedWorkflowRunData.xLoc,yLoc:selectedWorkflowRunData.yLoc}):/*#__PURE__*/React.createElement(\"div\",null)))):error?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:classes.waitingText},t('analytics.fetchError'))):/*#__PURE__*/React.createElement(\"div\",{className:classes.waitingScreen},/*#__PURE__*/React.createElement(Typography,{className:classes.waitingText},t('analytics.chaosCompleteWaitingMessage')),/*#__PURE__*/React.createElement(Loader,null))):/*#__PURE__*/React.createElement(\"div\",{className:classes.waitingScreen},/*#__PURE__*/React.createElement(Typography,{className:classes.waitingText},t('analytics.waitingMessage')),/*#__PURE__*/React.createElement(Loader,null)));};export default AnalyticsPage;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/WorkflowAnalytics/index.tsx"],"names":["useQuery","Typography","moment","React","useEffect","useTranslation","useLocation","BackButton","Loader","Scaffold","WORKFLOW_LIST_DETAILS","getProjectID","PopOver","WorkflowDetailsTable","WorkflowRunsBarChart","useStyles","AnalyticsPage","classes","useState","popoverOpen","setPopoverOpen","workflowRunPresent","setWorkflowRunPresent","pathname","workflowId","split","t","selectedWorkflowRunID","setSelectedWorkflowRunID","selectedWorkflowRunDetails","setSelectedWorkflowRunDetails","workflowRunDataForPlot","setWorkflowRunDataForPlot","testsPassed","testsFailed","resilienceScore","testDate","xLoc","yLoc","workflowRunID","selectedWorkflowRunData","setSelectedWorkflowRunData","projectID","variables","workflowInput","project_id","workflow_ids","pollInterval","data","error","setPopOverDisplay","visible","workflowRuns","experimentTestResultsArray","chaosDataArray","validWorkflowRunsData","selectedWorkflowSchedule","ListWorkflow","workflows","selectedWorkflows","workflow_runs","forEach","executionData","JSON","parse","execution_data","nodes","experimentTestResultsArrayPerWorkflowRun","weightsSum","isValid","totalExperimentsPassed","Object","keys","key","node","chaosData","push","experimentVerdict","weightageMap","weightages","weightage","experiment_name","experimentName","parseInt","probeSuccessPercentage","event_type","workflowRun","length","reduce","a","b","last_updated","workflow_run_id","workflowID","console","resDate","Date","toString","format","edgeLow","Math","round","subtract","endOf","edgeHigh","add","startOf","workflowTestsArray","filter","w","index","test_id","test_name","test_result","test_weight","resulting_points","last_run","lastUpdatedAt","rootContainer","root","button","headerDiv","analyticsDiv","waitingText","waitingScreen"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-loop-func */\nimport { useQuery } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport BackButton from '../../components/Button/BackButton';\nimport Loader from '../../components/Loader';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { WORKFLOW_LIST_DETAILS } from '../../graphql';\nimport { ChaosData, ExecutionData } from '../../models/graphql/workflowData';\nimport {\n  ListWorkflowsInput,\n  ScheduledWorkflows,\n  WeightageMap,\n} from '../../models/graphql/workflowListData';\nimport { getProjectID } from '../../utils/getSearchParams';\nimport PopOver from '../../views/Analytics/WorkflowDashboard/PopOver';\nimport WorkflowDetailsTable from '../../views/Analytics/WorkflowDashboard/WorkflowRunDetailsTable';\nimport WorkflowRunsBarChart from '../../views/Analytics/WorkflowDashboard/WorkflowRunsBarChart';\nimport useStyles from './styles';\n\ninterface WorkflowRunData {\n  testsPassed: number;\n  testsFailed: number;\n  resilienceScore: number;\n  testDate: string;\n  workflowRunID: string;\n  workflowID: string;\n}\n\ninterface SelectedWorkflowRunData {\n  testsPassed: number;\n  testsFailed: number;\n  resilienceScore: number;\n  testDate: string;\n  xLoc: number;\n  yLoc: number;\n  workflowRunID: string;\n}\n\ninterface WorkFlowTests {\n  test_id: number;\n  test_name: string;\n  test_result: string;\n  test_weight: number;\n  resulting_points: number;\n  last_run: string;\n}\n\nconst AnalyticsPage: React.FC = () => {\n  const classes = useStyles();\n  const [popoverOpen, setPopoverOpen] = React.useState<boolean>(false);\n  const [workflowRunPresent, setWorkflowRunPresent] =\n    React.useState<boolean>(true);\n  const { pathname } = useLocation();\n  // Getting the workflow nome from the pathname\n  const workflowId = pathname.split('/')[3];\n  const { t } = useTranslation();\n  const [selectedWorkflowRunID, setSelectedWorkflowRunID] =\n    React.useState<string>('');\n  const [selectedWorkflowRunDetails, setSelectedWorkflowRunDetails] =\n    React.useState<WorkFlowTests[]>();\n  const [workflowRunDataForPlot, setWorkflowRunDataForPlot] = React.useState<\n    WorkflowRunData[]\n  >([]);\n  const [selectedWorkflowRunData, setSelectedWorkflowRunData] =\n    React.useState<SelectedWorkflowRunData>({\n      testsPassed: 0,\n      testsFailed: 0,\n      resilienceScore: 0,\n      testDate: '',\n      xLoc: 0,\n      yLoc: 0,\n      workflowRunID: '',\n    });\n\n  // get ProjectID\n  const projectID = getProjectID();\n\n  // Apollo query to get the scheduled workflow data\n  const { data, error } = useQuery<ScheduledWorkflows, ListWorkflowsInput>(\n    WORKFLOW_LIST_DETAILS,\n    {\n      variables: {\n        workflowInput: { project_id: projectID, workflow_ids: [workflowId] },\n      },\n      pollInterval: 5000,\n    }\n  );\n\n  const setPopOverDisplay = (\n    selectedWorkflowRunDetails: SelectedWorkflowRunData,\n    visible: boolean\n  ) => {\n    setSelectedWorkflowRunData(selectedWorkflowRunDetails);\n    setPopoverOpen(visible);\n  };\n\n  useEffect(() => {\n    const workflowRuns: WorkflowRunData[] = [];\n    const experimentTestResultsArray: number[] = [];\n    const chaosDataArray: ChaosData[] = [];\n    const validWorkflowRunsData: WorkflowRunData[] = [];\n    try {\n      const selectedWorkflowSchedule = data?.ListWorkflow.workflows;\n      const selectedWorkflows = selectedWorkflowSchedule\n        ? selectedWorkflowSchedule[0]?.workflow_runs\n        : [];\n      selectedWorkflows?.forEach((data) => {\n        try {\n          const executionData: ExecutionData = JSON.parse(data.execution_data);\n          const { nodes } = executionData;\n          const experimentTestResultsArrayPerWorkflowRun: number[] = [];\n          let weightsSum: number = 0;\n          let isValid: boolean = false;\n          let totalExperimentsPassed: number = 0;\n          for (const key of Object.keys(nodes)) {\n            const node = nodes[key];\n            if (node.chaosData) {\n              const { chaosData } = node;\n              chaosDataArray.push(chaosData);\n              if (\n                chaosData.experimentVerdict === 'Pass' ||\n                chaosData.experimentVerdict === 'Fail'\n              ) {\n                const weightageMap: WeightageMap[] = selectedWorkflowSchedule\n                  ? selectedWorkflowSchedule[0]?.weightages\n                  : [];\n                weightageMap.forEach((weightage) => {\n                  if (weightage.experiment_name === chaosData.experimentName) {\n                    if (chaosData.experimentVerdict === 'Pass') {\n                      experimentTestResultsArray.push(\n                        (weightage.weightage *\n                          parseInt(chaosData.probeSuccessPercentage, 10)) /\n                          100\n                      );\n                      totalExperimentsPassed += 1;\n                    }\n                    if (chaosData.experimentVerdict === 'Fail') {\n                      experimentTestResultsArray.push(0);\n                    }\n                    if (\n                      chaosData.experimentVerdict === 'Pass' ||\n                      chaosData.experimentVerdict === 'Fail'\n                    ) {\n                      experimentTestResultsArrayPerWorkflowRun.push(\n                        chaosData.experimentVerdict === 'Fail'\n                          ? 0\n                          : (weightage.weightage *\n                              parseInt(chaosData.probeSuccessPercentage, 10)) /\n                              100\n                      );\n                      weightsSum += weightage.weightage;\n                      isValid = true;\n                    }\n                  }\n                });\n              }\n            }\n          }\n          if (executionData.event_type === 'UPDATE' && isValid) {\n            const workflowRun = {\n              testsPassed: totalExperimentsPassed,\n              testsFailed:\n                experimentTestResultsArrayPerWorkflowRun.length -\n                totalExperimentsPassed,\n              resilienceScore: experimentTestResultsArrayPerWorkflowRun.length\n                ? (experimentTestResultsArrayPerWorkflowRun.reduce(\n                    (a, b) => a + b,\n                    0\n                  ) /\n                    weightsSum) *\n                  100\n                : 0,\n              testDate: data.last_updated,\n              workflowRunID: data.workflow_run_id,\n              workflowID: workflowId,\n            };\n            validWorkflowRunsData.push(workflowRun);\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      });\n    } catch (error) {\n      setWorkflowRunPresent(false);\n      return;\n    }\n    if (validWorkflowRunsData.length === 1) {\n      const resDate = moment(\n        new Date(\n          parseInt(validWorkflowRunsData[0].testDate, 10) * 1000\n        ).toString()\n      ).format('YYYY-MM-DD');\n      const edgeLow = {\n        testsPassed: 0,\n        testsFailed: 0,\n        resilienceScore: 0,\n        testDate: Math.round(\n          parseInt(\n            moment(resDate).subtract(1.5, 'days').endOf('day').format('x'),\n            10\n          ) / 1000\n        ).toString(),\n        workflowRunID: 'edge_low',\n        workflowID: workflowId,\n      };\n      const edgeHigh = {\n        testsPassed: 0,\n        testsFailed: 0,\n        resilienceScore: 0,\n        testDate: Math.round(\n          parseInt(\n            moment(resDate).add(1.5, 'days').startOf('day').format('x'),\n            10\n          ) / 1000\n        ).toString(),\n        workflowRunID: 'edge_high',\n        workflowID: workflowId,\n      };\n      workflowRuns.push(edgeLow);\n      workflowRuns.push(validWorkflowRunsData[0]);\n      workflowRuns.push(edgeHigh);\n      setWorkflowRunDataForPlot(workflowRuns);\n    } else {\n      setWorkflowRunDataForPlot(validWorkflowRunsData);\n    }\n  }, [selectedWorkflowRunID, data]);\n\n  useEffect(() => {\n    const workflowTestsArray: WorkFlowTests[] = [];\n    try {\n      const selectedWorkflowSchedule = data?.ListWorkflow.workflows;\n      const workflowRuns = selectedWorkflowSchedule\n        ? selectedWorkflowSchedule[0]?.workflow_runs\n        : [];\n      const selectedWorkflows = workflowRuns?.filter(\n        (w) => w.workflow_run_id === selectedWorkflowRunID\n      );\n      selectedWorkflows?.forEach((data) => {\n        try {\n          const executionData: ExecutionData = JSON.parse(data.execution_data);\n          const { nodes } = executionData;\n          let index: number = 1;\n          for (const key of Object.keys(nodes)) {\n            const node = nodes[key];\n            if (node.chaosData) {\n              const { chaosData } = node;\n              const weightageMap: WeightageMap[] = selectedWorkflowSchedule\n                ? selectedWorkflowSchedule[0]?.weightages\n                : [];\n              weightageMap.forEach((weightage) => {\n                if (weightage.experiment_name === chaosData.experimentName) {\n                  workflowTestsArray.push({\n                    test_id: index,\n                    test_name: chaosData.experimentName,\n                    test_result: chaosData.experimentVerdict,\n                    test_weight: weightage.weightage,\n                    resulting_points:\n                      chaosData.experimentVerdict === 'Pass' ||\n                      chaosData.experimentVerdict === 'Fail'\n                        ? (weightage.weightage *\n                            parseInt(chaosData.probeSuccessPercentage, 10)) /\n                          100\n                        : 0,\n                    last_run: chaosData.lastUpdatedAt,\n                  });\n                }\n              });\n            }\n            index += 1;\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      setSelectedWorkflowRunDetails(workflowTestsArray);\n    } catch (error) {\n      setWorkflowRunPresent(false);\n    }\n  }, [selectedWorkflowRunID, data]);\n\n  // Number of Workflow Runs for the selected Schedule\n  const selectedWorkflowSchedule = data?.ListWorkflow.workflows;\n  const workflowRuns = selectedWorkflowSchedule\n    ? selectedWorkflowSchedule[0]?.workflow_runs\n    : [];\n\n  return (\n    <Scaffold>\n      {workflowRunPresent ? (\n        <div>\n          {workflowRunDataForPlot.length ? (\n            <div className={classes.rootContainer}>\n              <div className={classes.root}>\n                <div className={classes.button}>\n                  <BackButton />\n                </div>\n                <Typography variant=\"h4\">\n                  <strong> {t('analytics.workflowAnalytics')}</strong>\n                </Typography>\n                <div className={classes.headerDiv}>\n                  <Typography variant=\"body1\">\n                    {t('analytics.viewTestResult')}\n                  </Typography>\n                </div>\n                <div className={classes.analyticsDiv}>\n                  <WorkflowRunsBarChart\n                    numberOfWorkflowRuns={workflowRuns?.length ?? 0}\n                    workflowRunData={workflowRunDataForPlot}\n                    callBackToShowPopOver={setPopOverDisplay}\n                    callBackToSelectWorkflowRun={(\n                      selectedWorkflowRunID: string\n                    ) => {\n                      setSelectedWorkflowRunID(selectedWorkflowRunID);\n                    }}\n                  />\n                  {selectedWorkflowRunID !== '' ? (\n                    <WorkflowDetailsTable\n                      workflowRunDetails={selectedWorkflowRunDetails ?? []}\n                      workflowID={workflowId}\n                      reloadAnalytics={() => {\n                        setSelectedWorkflowRunID('');\n                      }}\n                    />\n                  ) : (\n                    <div />\n                  )}\n                  {popoverOpen ? (\n                    <PopOver\n                      testsPassed={selectedWorkflowRunData.testsPassed}\n                      testsFailed={selectedWorkflowRunData.testsFailed}\n                      resilienceScore={selectedWorkflowRunData.resilienceScore}\n                      testDate={selectedWorkflowRunData.testDate}\n                      xLoc={selectedWorkflowRunData.xLoc}\n                      yLoc={selectedWorkflowRunData.yLoc}\n                    />\n                  ) : (\n                    <div />\n                  )}\n                </div>\n              </div>\n            </div>\n          ) : error ? (\n            <div>\n              <Typography className={classes.waitingText}>\n                {t('analytics.fetchError')}\n              </Typography>\n            </div>\n          ) : (\n            <div className={classes.waitingScreen}>\n              <Typography className={classes.waitingText}>\n                {t('analytics.chaosCompleteWaitingMessage')}\n              </Typography>\n              <Loader />\n            </div>\n          )}\n        </div>\n      ) : (\n        <div className={classes.waitingScreen}>\n          <Typography className={classes.waitingText}>\n            {t('analytics.waitingMessage')}\n          </Typography>\n          <Loader />\n        </div>\n      )}\n    </Scaffold>\n  );\n};\n\nexport default AnalyticsPage;\n"]},"metadata":{},"sourceType":"module"}