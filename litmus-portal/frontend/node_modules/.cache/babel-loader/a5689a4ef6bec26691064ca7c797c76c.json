{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useQuery}from'@apollo/client';import{IconButton,Typography}from'@material-ui/core';import useTheme from'@material-ui/core/styles/useTheme';import{ButtonOutlined,LineAreaGraph,Modal}from'litmus-ui';import moment from'moment';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import{useSelector}from'react-redux';import{ToolTip}from'../../../../components/ToolTip';import{PROM_QUERY}from'../../../../graphql';import{DEFAULT_REFRESH_RATE,DEFAULT_RELATIVE_TIME_RANGE,DEFAULT_TOLERANCE_LIMIT,MAX_REFRESH_RATE,MINIMUM_TOLERANCE_LIMIT,PROMETHEUS_ERROR_QUERY_RESOLUTION_LIMIT_REACHED}from'../../../../pages/ApplicationDashboard/constants';import useActions from'../../../../redux/actions';import*as DashboardActions from'../../../../redux/actions/dashboards';import{history}from'../../../../redux/configureStore';import{ReactComponent as ViewChaosMetric}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/aligment.svg\";import{ReactComponent as DisableViewChaosMetric}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/alignmentStriked.svg\";import{ReactComponent as Expand}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/arrowsOut.svg\";import{ReactComponent as Edit}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/edit.svg\";import{getProjectID,getProjectRole}from'../../../../utils/getSearchParams';import{DataParserForPrometheus,getPromQueryInput}from'../../../../utils/promUtils';import useStyles from'./styles';var PanelContent=function PanelContent(_ref){var _prometheusQueryData$,_prometheusQueryData$2;var panel_id=_ref.panel_id,panel_name=_ref.panel_name,prom_queries=_ref.prom_queries,y_axis_left=_ref.y_axis_left,unit=_ref.unit,className=_ref.className,controllerPanelID=_ref.controllerPanelID;var _useTheme=useTheme(),palette=_useTheme.palette;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;// get ProjectID\nvar projectID=getProjectID();var projectRole=getProjectRole();var dashboard=useActions(DashboardActions);var lineGraph=palette.graph.line;var areaGraph=palette.graph.area;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),popOut=_useState2[0],setPopOut=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),viewEventMetric=_useState4[0],setViewEventMetric=_useState4[1];var _React$useState=React.useState({promInput:{ds_details:{url:'',start:'',end:''},queries:[]},firstLoad:true}),_React$useState2=_slicedToArray(_React$useState,2),prometheusQueryData=_React$useState2[0],setPrometheusQueryData=_React$useState2[1];var _React$useState3=React.useState({seriesData:[],closedAreaData:[],chaosData:[]}),_React$useState4=_slicedToArray(_React$useState3,2),graphData=_React$useState4[0],setGraphData=_React$useState4[1];var selectedDashboard=useSelector(function(state){return state.selectDashboard;});var selectedDataSource=useSelector(function(state){return state.selectDataSource;});// Apollo query to get the prometheus data\nuseQuery(PROM_QUERY,{variables:{prometheusInput:(_prometheusQueryData$=prometheusQueryData===null||prometheusQueryData===void 0?void 0:prometheusQueryData.promInput)!==null&&_prometheusQueryData$!==void 0?_prometheusQueryData$:{ds_details:{url:'',start:'',end:''},queries:[]}},fetchPolicy:'no-cache',skip:(prometheusQueryData===null||prometheusQueryData===void 0?void 0:(_prometheusQueryData$2=prometheusQueryData.promInput.queries)===null||_prometheusQueryData$2===void 0?void 0:_prometheusQueryData$2.length)===0||(prometheusQueryData===null||prometheusQueryData===void 0?void 0:prometheusQueryData.promInput.ds_details.url)==='',onCompleted:function onCompleted(prometheusData){if(prometheusData){var parsedData=DataParserForPrometheus(prometheusData,lineGraph,areaGraph,prom_queries.filter(function(query){return query.close_area;}).map(function(query){return query.queryid;}));setGraphData(parsedData);}dashboard.selectDashboard({forceUpdate:false});},onError:function onError(error){if(error.message===PROMETHEUS_ERROR_QUERY_RESOLUTION_LIMIT_REACHED){if(selectedDashboard.refreshRate!==MAX_REFRESH_RATE){dashboard.selectDashboard({refreshRate:MAX_REFRESH_RATE});}setPrometheusQueryData(_objectSpread(_objectSpread({},prometheusQueryData),{},{firstLoad:true}));}}});var generatePromQueries=function generatePromQueries(){var _prometheusQueryData$3;var promQueries=(_prometheusQueryData$3=prometheusQueryData.promInput.queries)!==null&&_prometheusQueryData$3!==void 0?_prometheusQueryData$3:[];if(prometheusQueryData.firstLoad){var timeRangeDiff=new Date(moment(selectedDashboard.range.endDate).format()).getTime()/1000-new Date(moment(selectedDashboard.range.startDate).format()).getTime()/1000;promQueries=getPromQueryInput(prom_queries,timeRangeDiff,true);}setPrometheusQueryData({promInput:{ds_details:{url:selectedDataSource.selectedDataSourceURL,start:\"\".concat(new Date(moment(selectedDashboard.range.startDate).format()).getTime()/1000),end:\"\".concat(new Date(moment(selectedDashboard.range.endDate).format()).getTime()/1000)},queries:promQueries},firstLoad:false});};useEffect(function(){if(prometheusQueryData.firstLoad){generatePromQueries();if(selectedDashboard.refreshRate!==MAX_REFRESH_RATE&&panel_id===controllerPanelID){dashboard.selectDashboard({range:{startDate:moment.unix(Math.round(new Date().getTime()/1000)-DEFAULT_RELATIVE_TIME_RANGE).format(),endDate:moment.unix(Math.round(new Date().getTime()/1000)).format()}});}}if(!prometheusQueryData.firstLoad){if(panel_id===controllerPanelID){var _selectedDashboard$re,_selectedDashboard$re2;var endDate=new Date(moment(selectedDashboard.range.endDate).format()).getTime()/1000;var now=Math.round(new Date().getTime()/1000);var diff=Math.abs(now-endDate);var maxLim=((_selectedDashboard$re=selectedDashboard.refreshRate)!==null&&_selectedDashboard$re!==void 0?_selectedDashboard$re:DEFAULT_REFRESH_RATE)/1000!==0?((_selectedDashboard$re2=selectedDashboard.refreshRate)!==null&&_selectedDashboard$re2!==void 0?_selectedDashboard$re2:DEFAULT_REFRESH_RATE)/1000+MINIMUM_TOLERANCE_LIMIT:DEFAULT_TOLERANCE_LIMIT;if(diff>=0&&diff<=maxLim&&selectedDashboard.refreshRate!==MAX_REFRESH_RATE){var startDate=new Date(moment(selectedDashboard.range.startDate).format()).getTime()/1000;var interval=endDate-startDate;dashboard.selectDashboard({range:{startDate:moment.unix(Math.round(new Date().getTime()/1000)-interval).format(),endDate:moment.unix(Math.round(new Date().getTime()/1000)).format()}});}}setTimeout(function(){generatePromQueries();},selectedDashboard.refreshRate!==0?selectedDashboard.refreshRate:DEFAULT_REFRESH_RATE);}},[prometheusQueryData]);useEffect(function(){var _selectedDashboard$re3,_selectedDashboard$re4;var endDate=new Date(moment(selectedDashboard.range.endDate).format()).getTime()/1000;var now=Math.round(new Date().getTime()/1000);var diff=Math.abs(now-endDate);var maxLim=((_selectedDashboard$re3=selectedDashboard.refreshRate)!==null&&_selectedDashboard$re3!==void 0?_selectedDashboard$re3:DEFAULT_REFRESH_RATE)/1000!==0?((_selectedDashboard$re4=selectedDashboard.refreshRate)!==null&&_selectedDashboard$re4!==void 0?_selectedDashboard$re4:DEFAULT_REFRESH_RATE)/1000+MINIMUM_TOLERANCE_LIMIT:DEFAULT_TOLERANCE_LIMIT;if(!(diff>=0&&diff<=maxLim)&&selectedDashboard.refreshRate!==MAX_REFRESH_RATE){setPrometheusQueryData(_objectSpread(_objectSpread({},prometheusQueryData),{},{firstLoad:true}));dashboard.selectDashboard({refreshRate:MAX_REFRESH_RATE});}if(diff>=0&&diff<=maxLim&&selectedDashboard.refreshRate===MAX_REFRESH_RATE){setPrometheusQueryData(_objectSpread(_objectSpread({},prometheusQueryData),{},{firstLoad:true}));}},[selectedDashboard.range]);useEffect(function(){if(selectedDashboard.forceUpdate){setPrometheusQueryData(_objectSpread(_objectSpread({},prometheusQueryData),{},{firstLoad:true}));}},[selectedDashboard.forceUpdate]);return/*#__PURE__*/React.createElement(\"div\",{className:\" \".concat(classes.rootPanel,\" \").concat(className,\" \").concat(viewEventMetric?classes.expand:'')},/*#__PURE__*/React.createElement(\"div\",{className:classes.wrapperParentIconsTitle},/*#__PURE__*/React.createElement(Typography,{className:classes.title},panel_name),/*#__PURE__*/React.createElement(\"div\",{className:classes.wrapperIcons},viewEventMetric?/*#__PURE__*/React.createElement(ToolTip,{title:\"\".concat(t('analyticsDashboard.toolTip.hideChaosMetric'))},/*#__PURE__*/React.createElement(IconButton,{className:classes.panelIconButton,onClick:function onClick(){setViewEventMetric(false);}},/*#__PURE__*/React.createElement(DisableViewChaosMetric,{className:classes.panelIcon}))):/*#__PURE__*/React.createElement(ToolTip,{title:\"\".concat(t('analyticsDashboard.toolTip.viewChaosMetric'))},/*#__PURE__*/React.createElement(IconButton,{className:classes.panelIconButton,onClick:function onClick(){setViewEventMetric(true);}},/*#__PURE__*/React.createElement(ViewChaosMetric,{className:classes.panelIcon}))),/*#__PURE__*/React.createElement(IconButton,{className:classes.panelIconButton,onClick:function onClick(){dashboard.selectDashboard({selectedDashboardID:selectedDashboard.selectedDashboardID,activePanelID:panel_id});history.push({pathname:'/analytics/dashboard/configure',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});}},/*#__PURE__*/React.createElement(Edit,{className:classes.panelIcon})),/*#__PURE__*/React.createElement(ToolTip,{title:\"\".concat(t('analyticsDashboard.toolTip.popout'))},/*#__PURE__*/React.createElement(IconButton,{className:classes.panelIconButton,onClick:function onClick(){setPopOut(true);}},/*#__PURE__*/React.createElement(Expand,{className:classes.panelIcon}))))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{open:popOut,onClose:function onClose(){return setPopOut(false);},disableBackdropClick:true,disableEscapeKeyDown:true,modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){return setPopOut(false);}},\"\\u2715\"),height:\"95% !important\",width:\"95%\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.popOutModal},/*#__PURE__*/React.createElement(Typography,{className:classes.title},panel_name),/*#__PURE__*/React.createElement(LineAreaGraph,{legendTableHeight:120,openSeries:graphData.seriesData,closedSeries:graphData.closedAreaData,eventSeries:graphData.chaosData,showPoints:false,showLegendTable:true,showEventTable:true,showTips:false,showEventMarkers:true,marginLeftEventTable:10,unit:unit,yLabel:y_axis_left,yLabelOffset:55,margin:{left:75,right:20,top:20,bottom:10}})))),/*#__PURE__*/React.createElement(\"div\",{className:classes.singleGraph},/*#__PURE__*/React.createElement(LineAreaGraph,{legendTableHeight:120,openSeries:graphData.seriesData,closedSeries:graphData.closedAreaData,eventSeries:graphData.chaosData,showPoints:false,showEventTable:viewEventMetric,showLegendTable:true,showTips:false,showEventMarkers:true,unit:unit,yLabel:y_axis_left,yLabelOffset:55,margin:{left:75,right:20,top:20,bottom:10}})));};export default PanelContent;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboard/Panel/PanelContent.tsx"],"names":["useQuery","IconButton","Typography","useTheme","ButtonOutlined","LineAreaGraph","Modal","moment","React","useEffect","useState","useTranslation","useSelector","ToolTip","PROM_QUERY","DEFAULT_REFRESH_RATE","DEFAULT_RELATIVE_TIME_RANGE","DEFAULT_TOLERANCE_LIMIT","MAX_REFRESH_RATE","MINIMUM_TOLERANCE_LIMIT","PROMETHEUS_ERROR_QUERY_RESOLUTION_LIMIT_REACHED","useActions","DashboardActions","history","getProjectID","getProjectRole","DataParserForPrometheus","getPromQueryInput","useStyles","PanelContent","panel_id","panel_name","prom_queries","y_axis_left","unit","className","controllerPanelID","palette","classes","t","projectID","projectRole","dashboard","lineGraph","graph","line","areaGraph","area","popOut","setPopOut","viewEventMetric","setViewEventMetric","promInput","ds_details","url","start","end","queries","firstLoad","prometheusQueryData","setPrometheusQueryData","seriesData","closedAreaData","chaosData","graphData","setGraphData","selectedDashboard","state","selectDashboard","selectedDataSource","selectDataSource","variables","prometheusInput","fetchPolicy","skip","length","onCompleted","prometheusData","parsedData","filter","query","close_area","map","queryid","forceUpdate","onError","error","message","refreshRate","generatePromQueries","promQueries","timeRangeDiff","Date","range","endDate","format","getTime","startDate","selectedDataSourceURL","unix","Math","round","now","diff","abs","maxLim","interval","setTimeout","rootPanel","expand","wrapperParentIconsTitle","title","wrapperIcons","panelIconButton","panelIcon","selectedDashboardID","activePanelID","push","pathname","search","popOutModal","left","right","top","bottom","singleGraph"],"mappings":"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","sourcesContent":["import { ApolloError, useQuery } from '@apollo/client';\nimport { IconButton, Typography } from '@material-ui/core';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport { ButtonOutlined, LineAreaGraph, Modal } from 'litmus-ui';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { ToolTip } from '../../../../components/ToolTip';\nimport { PROM_QUERY } from '../../../../graphql';\nimport {\n  GraphPanelProps,\n  ParsedPrometheusData,\n} from '../../../../models/dashboardsData';\nimport {\n  PrometheusQueryVars,\n  PrometheusResponse,\n  promInput,\n  promQueryInput,\n} from '../../../../models/graphql/prometheus';\nimport {\n  DEFAULT_REFRESH_RATE,\n  DEFAULT_RELATIVE_TIME_RANGE,\n  DEFAULT_TOLERANCE_LIMIT,\n  MAX_REFRESH_RATE,\n  MINIMUM_TOLERANCE_LIMIT,\n  PROMETHEUS_ERROR_QUERY_RESOLUTION_LIMIT_REACHED,\n} from '../../../../pages/ApplicationDashboard/constants';\nimport useActions from '../../../../redux/actions';\nimport * as DashboardActions from '../../../../redux/actions/dashboards';\nimport { history } from '../../../../redux/configureStore';\nimport { RootState } from '../../../../redux/reducers';\nimport { ReactComponent as ViewChaosMetric } from '../../../../svg/aligment.svg';\nimport { ReactComponent as DisableViewChaosMetric } from '../../../../svg/alignmentStriked.svg';\nimport { ReactComponent as Expand } from '../../../../svg/arrowsOut.svg';\nimport { ReactComponent as Edit } from '../../../../svg/edit.svg';\nimport {\n  getProjectID,\n  getProjectRole,\n} from '../../../../utils/getSearchParams';\nimport {\n  DataParserForPrometheus,\n  getPromQueryInput,\n} from '../../../../utils/promUtils';\nimport useStyles from './styles';\n\ninterface PrometheusQueryDataInterface {\n  promInput: promInput;\n  firstLoad: Boolean;\n}\n\nconst PanelContent: React.FC<GraphPanelProps> = ({\n  panel_id,\n  panel_name,\n  prom_queries,\n  y_axis_left,\n  unit,\n  className,\n  controllerPanelID,\n}) => {\n  const { palette } = useTheme();\n  const classes = useStyles();\n  const { t } = useTranslation();\n  // get ProjectID\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n  const dashboard = useActions(DashboardActions);\n  const lineGraph: string[] = palette.graph.line;\n  const areaGraph: string[] = palette.graph.area;\n  const [popOut, setPopOut] = useState(false);\n  const [viewEventMetric, setViewEventMetric] = useState(false);\n  const [prometheusQueryData, setPrometheusQueryData] =\n    React.useState<PrometheusQueryDataInterface>({\n      promInput: {\n        ds_details: {\n          url: '',\n          start: '',\n          end: '',\n        },\n        queries: [],\n      },\n      firstLoad: true,\n    });\n\n  const [graphData, setGraphData] = React.useState<ParsedPrometheusData>({\n    seriesData: [],\n    closedAreaData: [],\n    chaosData: [],\n  });\n\n  const selectedDashboard = useSelector(\n    (state: RootState) => state.selectDashboard\n  );\n\n  const selectedDataSource = useSelector(\n    (state: RootState) => state.selectDataSource\n  );\n\n  // Apollo query to get the prometheus data\n  useQuery<PrometheusResponse, PrometheusQueryVars>(PROM_QUERY, {\n    variables: {\n      prometheusInput: prometheusQueryData?.promInput ?? {\n        ds_details: {\n          url: '',\n          start: '',\n          end: '',\n        },\n        queries: [],\n      },\n    },\n    fetchPolicy: 'no-cache',\n    skip:\n      prometheusQueryData?.promInput.queries?.length === 0 ||\n      prometheusQueryData?.promInput.ds_details.url === '',\n    onCompleted: (prometheusData) => {\n      if (prometheusData) {\n        const parsedData: ParsedPrometheusData = DataParserForPrometheus(\n          prometheusData,\n          lineGraph,\n          areaGraph,\n          prom_queries\n            .filter((query) => query.close_area)\n            .map((query) => query.queryid)\n        );\n        setGraphData(parsedData);\n      }\n      dashboard.selectDashboard({\n        forceUpdate: false,\n      });\n    },\n    onError: (error: ApolloError) => {\n      if (error.message === PROMETHEUS_ERROR_QUERY_RESOLUTION_LIMIT_REACHED) {\n        if (selectedDashboard.refreshRate !== MAX_REFRESH_RATE) {\n          dashboard.selectDashboard({\n            refreshRate: MAX_REFRESH_RATE,\n          });\n        }\n        setPrometheusQueryData({ ...prometheusQueryData, firstLoad: true });\n      }\n    },\n  });\n\n  const generatePromQueries = () => {\n    let promQueries: promQueryInput[] =\n      prometheusQueryData.promInput.queries ?? [];\n    if (prometheusQueryData.firstLoad) {\n      const timeRangeDiff: number =\n        new Date(moment(selectedDashboard.range.endDate).format()).getTime() /\n          1000 -\n        new Date(moment(selectedDashboard.range.startDate).format()).getTime() /\n          1000;\n      promQueries = getPromQueryInput(prom_queries, timeRangeDiff, true);\n    }\n    setPrometheusQueryData({\n      promInput: {\n        ds_details: {\n          url: selectedDataSource.selectedDataSourceURL,\n          start: `${\n            new Date(\n              moment(selectedDashboard.range.startDate).format()\n            ).getTime() / 1000\n          }`,\n          end: `${\n            new Date(\n              moment(selectedDashboard.range.endDate).format()\n            ).getTime() / 1000\n          }`,\n        },\n        queries: promQueries,\n      },\n      firstLoad: false,\n    });\n  };\n\n  useEffect(() => {\n    if (prometheusQueryData.firstLoad) {\n      generatePromQueries();\n      if (\n        selectedDashboard.refreshRate !== MAX_REFRESH_RATE &&\n        panel_id === controllerPanelID\n      ) {\n        dashboard.selectDashboard({\n          range: {\n            startDate: moment\n              .unix(\n                Math.round(new Date().getTime() / 1000) -\n                  DEFAULT_RELATIVE_TIME_RANGE\n              )\n              .format(),\n            endDate: moment\n              .unix(Math.round(new Date().getTime() / 1000))\n              .format(),\n          },\n        });\n      }\n    }\n    if (!prometheusQueryData.firstLoad) {\n      if (panel_id === controllerPanelID) {\n        const endDate: number =\n          new Date(moment(selectedDashboard.range.endDate).format()).getTime() /\n          1000;\n        const now: number = Math.round(new Date().getTime() / 1000);\n        const diff: number = Math.abs(now - endDate);\n        const maxLim: number =\n          (selectedDashboard.refreshRate ?? DEFAULT_REFRESH_RATE) / 1000 !== 0\n            ? (selectedDashboard.refreshRate ?? DEFAULT_REFRESH_RATE) / 1000 +\n              MINIMUM_TOLERANCE_LIMIT\n            : DEFAULT_TOLERANCE_LIMIT;\n        if (\n          diff >= 0 &&\n          diff <= maxLim &&\n          selectedDashboard.refreshRate !== MAX_REFRESH_RATE\n        ) {\n          const startDate: number =\n            new Date(\n              moment(selectedDashboard.range.startDate).format()\n            ).getTime() / 1000;\n          const interval: number = endDate - startDate;\n          dashboard.selectDashboard({\n            range: {\n              startDate: moment\n                .unix(Math.round(new Date().getTime() / 1000) - interval)\n                .format(),\n              endDate: moment\n                .unix(Math.round(new Date().getTime() / 1000))\n                .format(),\n            },\n          });\n        }\n      }\n      setTimeout(\n        () => {\n          generatePromQueries();\n        },\n        selectedDashboard.refreshRate !== 0\n          ? selectedDashboard.refreshRate\n          : DEFAULT_REFRESH_RATE\n      );\n    }\n  }, [prometheusQueryData]);\n\n  useEffect(() => {\n    const endDate: number =\n      new Date(moment(selectedDashboard.range.endDate).format()).getTime() /\n      1000;\n    const now: number = Math.round(new Date().getTime() / 1000);\n    const diff: number = Math.abs(now - endDate);\n    const maxLim: number =\n      (selectedDashboard.refreshRate ?? DEFAULT_REFRESH_RATE) / 1000 !== 0\n        ? (selectedDashboard.refreshRate ?? DEFAULT_REFRESH_RATE) / 1000 +\n          MINIMUM_TOLERANCE_LIMIT\n        : DEFAULT_TOLERANCE_LIMIT;\n    if (\n      !(diff >= 0 && diff <= maxLim) &&\n      selectedDashboard.refreshRate !== MAX_REFRESH_RATE\n    ) {\n      setPrometheusQueryData({ ...prometheusQueryData, firstLoad: true });\n      dashboard.selectDashboard({\n        refreshRate: MAX_REFRESH_RATE,\n      });\n    }\n    if (\n      diff >= 0 &&\n      diff <= maxLim &&\n      selectedDashboard.refreshRate === MAX_REFRESH_RATE\n    ) {\n      setPrometheusQueryData({ ...prometheusQueryData, firstLoad: true });\n    }\n  }, [selectedDashboard.range]);\n\n  useEffect(() => {\n    if (selectedDashboard.forceUpdate) {\n      setPrometheusQueryData({ ...prometheusQueryData, firstLoad: true });\n    }\n  }, [selectedDashboard.forceUpdate]);\n\n  return (\n    <div\n      className={` ${classes.rootPanel} ${className} ${\n        viewEventMetric ? classes.expand : ''\n      }`}\n    >\n      <div className={classes.wrapperParentIconsTitle}>\n        <Typography className={classes.title}>{panel_name}</Typography>\n        <div className={classes.wrapperIcons}>\n          {viewEventMetric ? (\n            <ToolTip\n              title={`${t('analyticsDashboard.toolTip.hideChaosMetric')}`}\n            >\n              <IconButton\n                className={classes.panelIconButton}\n                onClick={() => {\n                  setViewEventMetric(false);\n                }}\n              >\n                <DisableViewChaosMetric className={classes.panelIcon} />\n              </IconButton>\n            </ToolTip>\n          ) : (\n            <ToolTip\n              title={`${t('analyticsDashboard.toolTip.viewChaosMetric')}`}\n            >\n              <IconButton\n                className={classes.panelIconButton}\n                onClick={() => {\n                  setViewEventMetric(true);\n                }}\n              >\n                <ViewChaosMetric className={classes.panelIcon} />\n              </IconButton>\n            </ToolTip>\n          )}\n          <IconButton\n            className={classes.panelIconButton}\n            onClick={() => {\n              dashboard.selectDashboard({\n                selectedDashboardID: selectedDashboard.selectedDashboardID,\n                activePanelID: panel_id,\n              });\n              history.push({\n                pathname: '/analytics/dashboard/configure',\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              });\n            }}\n          >\n            <Edit className={classes.panelIcon} />\n          </IconButton>\n          <ToolTip title={`${t('analyticsDashboard.toolTip.popout')}`}>\n            <IconButton\n              className={classes.panelIconButton}\n              onClick={() => {\n                setPopOut(true);\n              }}\n            >\n              <Expand className={classes.panelIcon} />\n            </IconButton>\n          </ToolTip>\n        </div>\n      </div>\n      <div>\n        <Modal\n          open={popOut}\n          onClose={() => setPopOut(false)}\n          disableBackdropClick\n          disableEscapeKeyDown\n          modalActions={\n            <ButtonOutlined onClick={() => setPopOut(false)}>\n              &#x2715;\n            </ButtonOutlined>\n          }\n          height=\"95% !important\"\n          width=\"95%\"\n        >\n          <div className={classes.popOutModal}>\n            <Typography className={classes.title}>{panel_name}</Typography>\n            <LineAreaGraph\n              legendTableHeight={120}\n              openSeries={graphData.seriesData}\n              closedSeries={graphData.closedAreaData}\n              eventSeries={graphData.chaosData}\n              showPoints={false}\n              showLegendTable\n              showEventTable\n              showTips={false}\n              showEventMarkers\n              marginLeftEventTable={10}\n              unit={unit}\n              yLabel={y_axis_left}\n              yLabelOffset={55}\n              margin={{ left: 75, right: 20, top: 20, bottom: 10 }}\n            />\n          </div>\n        </Modal>\n      </div>\n      <div className={classes.singleGraph}>\n        <LineAreaGraph\n          legendTableHeight={120}\n          openSeries={graphData.seriesData}\n          closedSeries={graphData.closedAreaData}\n          eventSeries={graphData.chaosData}\n          showPoints={false}\n          showEventTable={viewEventMetric}\n          showLegendTable\n          showTips={false}\n          showEventMarkers\n          unit={unit}\n          yLabel={y_axis_left}\n          yLabelOffset={55}\n          margin={{ left: 75, right: 20, top: 20, bottom: 10 }}\n        />\n      </div>\n    </div>\n  );\n};\nexport default PanelContent;\n"]},"metadata":{},"sourceType":"module"}