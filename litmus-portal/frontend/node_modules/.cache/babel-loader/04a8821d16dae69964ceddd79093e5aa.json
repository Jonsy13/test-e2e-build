{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17,_templateObject18,_templateObject19,_templateObject20,_templateObject21,_templateObject22,_templateObject23,_templateObject24,_templateObject25,_templateObject26,_templateObject27,_templateObject28,_templateObject29,_templateObject30,_templateObject31,_templateObject32,_templateObject33,_templateObject34,_templateObject35,_templateObject36;import{gql}from'@apollo/client';export var CREATE_WORKFLOW=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  mutation createChaosWorkFlow($ChaosWorkFlowInput: ChaosWorkFlowInput!) {\\n    createChaosWorkFlow(input: $ChaosWorkFlowInput) {\\n      workflow_id\\n      cronSyntax\\n      workflow_name\\n      workflow_description\\n      isCustomWorkflow\\n    }\\n  }\\n\"])));export var ADD_WORKFLOW_TEMPLATE=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  mutation addWorkflowTemplate($data: TemplateInput!) {\\n    createManifestTemplate(templateInput: $data) {\\n      template_name\\n      template_id\\n    }\\n  }\\n\"])));export var DELETE_WORKFLOW_TEMPLATE=gql(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  mutation deleteManifestTemplate($data: String!) {\\n    deleteManifestTemplate(template_id: $data)\\n  }\\n\"])));export var CREATE_USER=gql(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  mutation CreateUser($user: CreateUserInput!) {\\n    createUser(user: $user) {\\n      username\\n      created_at\\n      updated_at\\n      removed_at\\n    }\\n  }\\n\"])));export var CREATE_PROJECT=gql(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  mutation createProject($projectName: String!) {\\n    createProject(projectName: $projectName) {\\n      members {\\n        user_id\\n        role\\n        user_name\\n        invitation\\n        joined_at\\n      }\\n      name\\n      id\\n    }\\n  }\\n\"])));export var UPDATE_PROJECT_NAME=gql(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  mutation updateProjectName($projectID: String!, $projectName: String!) {\\n    updateProjectName(projectID: $projectID, projectName: $projectName)\\n  }\\n\"])));export var SEND_INVITE=gql(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  mutation sendInvite($member: MemberInput!) {\\n    sendInvitation(member: $member) {\\n      user_id\\n      user_name\\n      role\\n      invitation\\n    }\\n  }\\n\"])));export var REMOVE_INVITATION=gql(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  mutation RemoveInvitation($data: MemberInput!) {\\n    removeInvitation(member: $data)\\n  }\\n\"])));export var ACCEPT_INVITE=gql(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  mutation accept($member: MemberInput!) {\\n    acceptInvitation(member: $member)\\n  }\\n\"])));export var DECLINE_INVITE=gql(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  mutation decline($member: MemberInput!) {\\n    declineInvitation(member: $member)\\n  }\\n\"])));export var UPDATE_SCHEDULE=gql(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  mutation updateChaos($ChaosWorkFlowInput: ChaosWorkFlowInput!) {\\n    updateChaosWorkflow(input: $ChaosWorkFlowInput) {\\n      workflow_id\\n      workflow_name\\n      workflow_description\\n      isCustomWorkflow\\n      cronSyntax\\n    }\\n  }\\n\"])));export var UPDATE_DETAILS=gql(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  mutation updateUser($user: UpdateUserInput!) {\\n    updateUser(user: $user)\\n  }\\n\"])));export var USER_CLUSTER_REG=gql(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  mutation userCluster($ClusterInput: ClusterInput!) {\\n    userClusterReg(clusterInput: $ClusterInput) {\\n      token\\n      cluster_id\\n      cluster_name\\n    }\\n  }\\n\"])));export var ADD_MY_HUB=gql(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  mutation addMyHub($MyHubDetails: CreateMyHub!, $projectID: String!) {\\n    addMyHub(myhubInput: $MyHubDetails, projectID: $projectID) {\\n      HubName\\n      RepoURL\\n      RepoBranch\\n    }\\n  }\\n\"])));export var SAVE_MY_HUB=gql(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  mutation saveMyHub($MyHubDetails: CreateMyHub!, $projectID: String!) {\\n    saveMyHub(myhubInput: $MyHubDetails, projectID: $projectID) {\\n      HubName\\n      RepoURL\\n      RepoBranch\\n    }\\n  }\\n\"])));export var UPDATE_MY_HUB=gql(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  mutation updateMyHub($MyHubDetails: UpdateMyHub!, $projectID: String!) {\\n    updateMyHub(myhubInput: $MyHubDetails, projectID: $projectID) {\\n      HubName\\n      RepoURL\\n      RepoBranch\\n    }\\n  }\\n\"])));export var SYNC_REPO=gql(_templateObject17||(_templateObject17=_taggedTemplateLiteral([\"\\n  mutation syncHub($id: ID!) {\\n    syncHub(id: $id) {\\n      id\\n      RepoURL\\n      RepoBranch\\n      IsAvailable\\n      TotalExp\\n      HubName\\n    }\\n  }\\n\"])));export var DELETE_HUB=gql(_templateObject18||(_templateObject18=_taggedTemplateLiteral([\"\\n  mutation deleteMyHub($hub_id: String!) {\\n    deleteMyHub(hub_id: $hub_id)\\n  }\\n\"])));export var GENERATE_SSH=gql(_templateObject19||(_templateObject19=_taggedTemplateLiteral([\"\\n  mutation generateSSHKey {\\n    generaterSSHKey {\\n      privateKey\\n      publicKey\\n    }\\n  }\\n\"])));export var DELETE_CLUSTER=gql(_templateObject20||(_templateObject20=_taggedTemplateLiteral([\"\\n  mutation deleteCluster($cluster_id: String!) {\\n    deleteClusterReg(cluster_id: $cluster_id)\\n  }\\n\"])));export var ENABLE_GITOPS=gql(_templateObject21||(_templateObject21=_taggedTemplateLiteral([\"\\n  mutation enableGitOps($gitConfig: GitConfig!) {\\n    enableGitOps(config: $gitConfig)\\n  }\\n\"])));export var UPDATE_GITOPS=gql(_templateObject22||(_templateObject22=_taggedTemplateLiteral([\"\\n  mutation updateGitOps($gitConfig: GitConfig!) {\\n    updateGitOps(config: $gitConfig)\\n  }\\n\"])));export var DISABLE_GITOPS=gql(_templateObject23||(_templateObject23=_taggedTemplateLiteral([\"\\n  mutation disableGitOPs($data: String!) {\\n    disableGitOps(project_id: $data)\\n  }\\n\"])));export var RERUN_CHAOS_WORKFLOW=gql(_templateObject24||(_templateObject24=_taggedTemplateLiteral([\"\\n  mutation rerunChaosWorkflow($data: String!) {\\n    reRunChaosWorkFlow(workflowID: $data)\\n  }\\n\"])));export var LEAVE_PROJECT=gql(_templateObject25||(_templateObject25=_taggedTemplateLiteral([\"\\n  mutation LeaveProject($data: MemberInput!) {\\n    leaveProject(member: $data)\\n  }\\n\"])));export var CREATE_DATASOURCE=gql(_templateObject26||(_templateObject26=_taggedTemplateLiteral([\"\\n  mutation createDataSource($DSInput: DSInput) {\\n    createDataSource(datasource: $DSInput) {\\n      ds_id\\n      ds_name\\n      ds_type\\n      ds_url\\n      access_type\\n      auth_type\\n      basic_auth_username\\n      basic_auth_password\\n      scrape_interval\\n      query_timeout\\n      http_method\\n      project_id\\n      health_status\\n    }\\n  }\\n\"])));export var UPDATE_DATASOURCE=gql(_templateObject27||(_templateObject27=_taggedTemplateLiteral([\"\\n  mutation updateDataSource($DSInput: DSInput!) {\\n    updateDataSource(datasource: $DSInput) {\\n      ds_id\\n      ds_name\\n      ds_type\\n      ds_url\\n      access_type\\n      auth_type\\n      basic_auth_username\\n      basic_auth_password\\n      scrape_interval\\n      query_timeout\\n      http_method\\n      project_id\\n    }\\n  }\\n\"])));export var DELETE_DATASOURCE=gql(_templateObject28||(_templateObject28=_taggedTemplateLiteral([\"\\n  mutation deleteDataSource($deleteDSInput: deleteDSInput!) {\\n    deleteDataSource(input: $deleteDSInput)\\n  }\\n\"])));export var CREATE_DASHBOARD=gql(_templateObject29||(_templateObject29=_taggedTemplateLiteral([\"\\n  mutation createDashBoard($createDBInput: createDBInput) {\\n    createDashBoard(dashboard: $createDBInput) {\\n      db_id\\n    }\\n  }\\n\"])));export var UPDATE_DASHBOARD=gql(_templateObject30||(_templateObject30=_taggedTemplateLiteral([\"\\n  mutation updateDashboard($updateDBInput: updateDBInput) {\\n    updateDashboard(dashboard: $updateDBInput)\\n  }\\n\"])));export var DELETE_DASHBOARD=gql(_templateObject31||(_templateObject31=_taggedTemplateLiteral([\"\\n  mutation deleteDashboard($dbID: String) {\\n    deleteDashboard(db_id: $dbID)\\n  }\\n\"])));export var UPDATE_PANEL=gql(_templateObject32||(_templateObject32=_taggedTemplateLiteral([\"\\n  mutation updatePanel($panelInput: [panel]) {\\n    updatePanel(panelInput: $panelInput)\\n  }\\n\"])));export var ADD_IMAGE_REGISTRY=gql(_templateObject33||(_templateObject33=_taggedTemplateLiteral([\"\\n  mutation createImageRegistry(\\n    $projectID: String!\\n    $imageRegistryInfo: imageRegistryInput!\\n  ) {\\n    createImageRegistry(\\n      project_id: $projectID\\n      imageRegistryInfo: $imageRegistryInfo\\n    ) {\\n      image_registry_info {\\n        image_repo_name\\n        image_registry_name\\n        image_registry_type\\n      }\\n    }\\n  }\\n\"])));export var UPDATE_IMAGE_REGISTRY=gql(_templateObject34||(_templateObject34=_taggedTemplateLiteral([\"\\n  mutation updateImageRegistry(\\n    $imageRegistryID: String!\\n    $projectID: String!\\n    $imageRegistryInfo: imageRegistryInput!\\n  ) {\\n    updateImageRegistry(\\n      image_registry_id: $imageRegistryID\\n      project_id: $projectID\\n      imageRegistryInfo: $imageRegistryInfo\\n    ) {\\n      image_registry_info {\\n        image_repo_name\\n        image_registry_name\\n        image_registry_type\\n      }\\n    }\\n  }\\n\"])));export var SYNC_WORKFLOW=gql(_templateObject35||(_templateObject35=_taggedTemplateLiteral([\"\\n  mutation syncWorkflow($workflowid: String!, $workflow_run_id: String!) {\\n    syncWorkflow(workflowid: $workflowid, workflow_run_id: $workflow_run_id)\\n  }\\n\"])));export var DELETE_WORKFLOW=gql(_templateObject36||(_templateObject36=_taggedTemplateLiteral([\"\\n  mutation deleteWorkflow($workflowid: String!, $workflow_run_id: String!) {\\n    deleteChaosWorkflow(\\n      workflowid: $workflowid\\n      workflow_run_id: $workflow_run_id\\n    )\\n  }\\n\"])));","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/graphql/mutations.ts"],"names":["gql","CREATE_WORKFLOW","ADD_WORKFLOW_TEMPLATE","DELETE_WORKFLOW_TEMPLATE","CREATE_USER","CREATE_PROJECT","UPDATE_PROJECT_NAME","SEND_INVITE","REMOVE_INVITATION","ACCEPT_INVITE","DECLINE_INVITE","UPDATE_SCHEDULE","UPDATE_DETAILS","USER_CLUSTER_REG","ADD_MY_HUB","SAVE_MY_HUB","UPDATE_MY_HUB","SYNC_REPO","DELETE_HUB","GENERATE_SSH","DELETE_CLUSTER","ENABLE_GITOPS","UPDATE_GITOPS","DISABLE_GITOPS","RERUN_CHAOS_WORKFLOW","LEAVE_PROJECT","CREATE_DATASOURCE","UPDATE_DATASOURCE","DELETE_DATASOURCE","CREATE_DASHBOARD","UPDATE_DASHBOARD","DELETE_DASHBOARD","UPDATE_PANEL","ADD_IMAGE_REGISTRY","UPDATE_IMAGE_REGISTRY","SYNC_WORKFLOW","DELETE_WORKFLOW"],"mappings":"q0BAAA,OAASA,GAAT,KAAoB,gBAApB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAGD,GAAH,gUAArB,CAYP,MAAO,IAAME,CAAAA,qBAAqB,CAAGF,GAAH,sOAA3B,CASP,MAAO,IAAMG,CAAAA,wBAAwB,CAAGH,GAAH,+KAA9B,CAMP,MAAO,IAAMI,CAAAA,WAAW,CAAGJ,GAAH,wOAAjB,CAWP,MAAO,IAAMK,CAAAA,cAAc,CAAGL,GAAH,6TAApB,CAgBP,MAAO,IAAMM,CAAAA,mBAAmB,CAAGN,GAAH,+NAAzB,CAMP,MAAO,IAAMO,CAAAA,WAAW,CAAGP,GAAH,sOAAjB,CAWP,MAAO,IAAMQ,CAAAA,iBAAiB,CAAGR,GAAH,mKAAvB,CAMP,MAAO,IAAMS,CAAAA,aAAa,CAAGT,GAAH,6JAAnB,CAMP,MAAO,IAAMU,CAAAA,cAAc,CAAGV,GAAH,iKAApB,CAMP,MAAO,IAAMW,CAAAA,eAAe,CAAGX,GAAH,4TAArB,CAYP,MAAO,IAAMY,CAAAA,cAAc,CAAGZ,GAAH,2JAApB,CAMP,MAAO,IAAMa,CAAAA,gBAAgB,CAAGb,GAAH,iPAAtB,CAUP,MAAO,IAAMc,CAAAA,UAAU,CAAGd,GAAH,8QAAhB,CAUP,MAAO,IAAMe,CAAAA,WAAW,CAAGf,GAAH,gRAAjB,CAUP,MAAO,IAAMgB,CAAAA,aAAa,CAAGhB,GAAH,oRAAnB,CAUP,MAAO,IAAMiB,CAAAA,SAAS,CAAGjB,GAAH,wOAAf,CAaP,MAAO,IAAMkB,CAAAA,UAAU,CAAGlB,GAAH,0JAAhB,CAMP,MAAO,IAAMmB,CAAAA,YAAY,CAAGnB,GAAH,0KAAlB,CASP,MAAO,IAAMoB,CAAAA,cAAc,CAAGpB,GAAH,6KAApB,CAMP,MAAO,IAAMqB,CAAAA,aAAa,CAAGrB,GAAH,qKAAnB,CAMP,MAAO,IAAMsB,CAAAA,aAAa,CAAGtB,GAAH,qKAAnB,CAMP,MAAO,IAAMuB,CAAAA,cAAc,CAAGvB,GAAH,8JAApB,CAMP,MAAO,IAAMwB,CAAAA,oBAAoB,CAAGxB,GAAH,wKAA1B,CAMP,MAAO,IAAMyB,CAAAA,aAAa,CAAGzB,GAAH,6JAAnB,CAMP,MAAO,IAAM0B,CAAAA,iBAAiB,CAAG1B,GAAH,4aAAvB,CAoBP,MAAO,IAAM2B,CAAAA,iBAAiB,CAAG3B,GAAH,wZAAvB,CAmBP,MAAO,IAAM4B,CAAAA,iBAAiB,CAAG5B,GAAH,wLAAvB,CAMP,MAAO,IAAM6B,CAAAA,gBAAgB,CAAG7B,GAAH,+MAAtB,CAQP,MAAO,IAAM8B,CAAAA,gBAAgB,CAAG9B,GAAH,yLAAtB,CAMP,MAAO,IAAM+B,CAAAA,gBAAgB,CAAG/B,GAAH,4JAAtB,CAMP,MAAO,IAAMgC,CAAAA,YAAY,CAAGhC,GAAH,sKAAlB,CAMP,MAAO,IAAMiC,CAAAA,kBAAkB,CAAGjC,GAAH,waAAxB,CAkBP,MAAO,IAAMkC,CAAAA,qBAAqB,CAAGlC,GAAH,kfAA3B,CAoBP,MAAO,IAAMmC,CAAAA,aAAa,CAAGnC,GAAH,sOAAnB,CAMP,MAAO,IAAMoC,CAAAA,eAAe,CAAGpC,GAAH,mQAArB","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const CREATE_WORKFLOW = gql`\n  mutation createChaosWorkFlow($ChaosWorkFlowInput: ChaosWorkFlowInput!) {\n    createChaosWorkFlow(input: $ChaosWorkFlowInput) {\n      workflow_id\n      cronSyntax\n      workflow_name\n      workflow_description\n      isCustomWorkflow\n    }\n  }\n`;\n\nexport const ADD_WORKFLOW_TEMPLATE = gql`\n  mutation addWorkflowTemplate($data: TemplateInput!) {\n    createManifestTemplate(templateInput: $data) {\n      template_name\n      template_id\n    }\n  }\n`;\n\nexport const DELETE_WORKFLOW_TEMPLATE = gql`\n  mutation deleteManifestTemplate($data: String!) {\n    deleteManifestTemplate(template_id: $data)\n  }\n`;\n\nexport const CREATE_USER = gql`\n  mutation CreateUser($user: CreateUserInput!) {\n    createUser(user: $user) {\n      username\n      created_at\n      updated_at\n      removed_at\n    }\n  }\n`;\n\nexport const CREATE_PROJECT = gql`\n  mutation createProject($projectName: String!) {\n    createProject(projectName: $projectName) {\n      members {\n        user_id\n        role\n        user_name\n        invitation\n        joined_at\n      }\n      name\n      id\n    }\n  }\n`;\n\nexport const UPDATE_PROJECT_NAME = gql`\n  mutation updateProjectName($projectID: String!, $projectName: String!) {\n    updateProjectName(projectID: $projectID, projectName: $projectName)\n  }\n`;\n\nexport const SEND_INVITE = gql`\n  mutation sendInvite($member: MemberInput!) {\n    sendInvitation(member: $member) {\n      user_id\n      user_name\n      role\n      invitation\n    }\n  }\n`;\n\nexport const REMOVE_INVITATION = gql`\n  mutation RemoveInvitation($data: MemberInput!) {\n    removeInvitation(member: $data)\n  }\n`;\n\nexport const ACCEPT_INVITE = gql`\n  mutation accept($member: MemberInput!) {\n    acceptInvitation(member: $member)\n  }\n`;\n\nexport const DECLINE_INVITE = gql`\n  mutation decline($member: MemberInput!) {\n    declineInvitation(member: $member)\n  }\n`;\n\nexport const UPDATE_SCHEDULE = gql`\n  mutation updateChaos($ChaosWorkFlowInput: ChaosWorkFlowInput!) {\n    updateChaosWorkflow(input: $ChaosWorkFlowInput) {\n      workflow_id\n      workflow_name\n      workflow_description\n      isCustomWorkflow\n      cronSyntax\n    }\n  }\n`;\n\nexport const UPDATE_DETAILS = gql`\n  mutation updateUser($user: UpdateUserInput!) {\n    updateUser(user: $user)\n  }\n`;\n\nexport const USER_CLUSTER_REG = gql`\n  mutation userCluster($ClusterInput: ClusterInput!) {\n    userClusterReg(clusterInput: $ClusterInput) {\n      token\n      cluster_id\n      cluster_name\n    }\n  }\n`;\n\nexport const ADD_MY_HUB = gql`\n  mutation addMyHub($MyHubDetails: CreateMyHub!, $projectID: String!) {\n    addMyHub(myhubInput: $MyHubDetails, projectID: $projectID) {\n      HubName\n      RepoURL\n      RepoBranch\n    }\n  }\n`;\n\nexport const SAVE_MY_HUB = gql`\n  mutation saveMyHub($MyHubDetails: CreateMyHub!, $projectID: String!) {\n    saveMyHub(myhubInput: $MyHubDetails, projectID: $projectID) {\n      HubName\n      RepoURL\n      RepoBranch\n    }\n  }\n`;\n\nexport const UPDATE_MY_HUB = gql`\n  mutation updateMyHub($MyHubDetails: UpdateMyHub!, $projectID: String!) {\n    updateMyHub(myhubInput: $MyHubDetails, projectID: $projectID) {\n      HubName\n      RepoURL\n      RepoBranch\n    }\n  }\n`;\n\nexport const SYNC_REPO = gql`\n  mutation syncHub($id: ID!) {\n    syncHub(id: $id) {\n      id\n      RepoURL\n      RepoBranch\n      IsAvailable\n      TotalExp\n      HubName\n    }\n  }\n`;\n\nexport const DELETE_HUB = gql`\n  mutation deleteMyHub($hub_id: String!) {\n    deleteMyHub(hub_id: $hub_id)\n  }\n`;\n\nexport const GENERATE_SSH = gql`\n  mutation generateSSHKey {\n    generaterSSHKey {\n      privateKey\n      publicKey\n    }\n  }\n`;\n\nexport const DELETE_CLUSTER = gql`\n  mutation deleteCluster($cluster_id: String!) {\n    deleteClusterReg(cluster_id: $cluster_id)\n  }\n`;\n\nexport const ENABLE_GITOPS = gql`\n  mutation enableGitOps($gitConfig: GitConfig!) {\n    enableGitOps(config: $gitConfig)\n  }\n`;\n\nexport const UPDATE_GITOPS = gql`\n  mutation updateGitOps($gitConfig: GitConfig!) {\n    updateGitOps(config: $gitConfig)\n  }\n`;\n\nexport const DISABLE_GITOPS = gql`\n  mutation disableGitOPs($data: String!) {\n    disableGitOps(project_id: $data)\n  }\n`;\n\nexport const RERUN_CHAOS_WORKFLOW = gql`\n  mutation rerunChaosWorkflow($data: String!) {\n    reRunChaosWorkFlow(workflowID: $data)\n  }\n`;\n\nexport const LEAVE_PROJECT = gql`\n  mutation LeaveProject($data: MemberInput!) {\n    leaveProject(member: $data)\n  }\n`;\n\nexport const CREATE_DATASOURCE = gql`\n  mutation createDataSource($DSInput: DSInput) {\n    createDataSource(datasource: $DSInput) {\n      ds_id\n      ds_name\n      ds_type\n      ds_url\n      access_type\n      auth_type\n      basic_auth_username\n      basic_auth_password\n      scrape_interval\n      query_timeout\n      http_method\n      project_id\n      health_status\n    }\n  }\n`;\n\nexport const UPDATE_DATASOURCE = gql`\n  mutation updateDataSource($DSInput: DSInput!) {\n    updateDataSource(datasource: $DSInput) {\n      ds_id\n      ds_name\n      ds_type\n      ds_url\n      access_type\n      auth_type\n      basic_auth_username\n      basic_auth_password\n      scrape_interval\n      query_timeout\n      http_method\n      project_id\n    }\n  }\n`;\n\nexport const DELETE_DATASOURCE = gql`\n  mutation deleteDataSource($deleteDSInput: deleteDSInput!) {\n    deleteDataSource(input: $deleteDSInput)\n  }\n`;\n\nexport const CREATE_DASHBOARD = gql`\n  mutation createDashBoard($createDBInput: createDBInput) {\n    createDashBoard(dashboard: $createDBInput) {\n      db_id\n    }\n  }\n`;\n\nexport const UPDATE_DASHBOARD = gql`\n  mutation updateDashboard($updateDBInput: updateDBInput) {\n    updateDashboard(dashboard: $updateDBInput)\n  }\n`;\n\nexport const DELETE_DASHBOARD = gql`\n  mutation deleteDashboard($dbID: String) {\n    deleteDashboard(db_id: $dbID)\n  }\n`;\n\nexport const UPDATE_PANEL = gql`\n  mutation updatePanel($panelInput: [panel]) {\n    updatePanel(panelInput: $panelInput)\n  }\n`;\n\nexport const ADD_IMAGE_REGISTRY = gql`\n  mutation createImageRegistry(\n    $projectID: String!\n    $imageRegistryInfo: imageRegistryInput!\n  ) {\n    createImageRegistry(\n      project_id: $projectID\n      imageRegistryInfo: $imageRegistryInfo\n    ) {\n      image_registry_info {\n        image_repo_name\n        image_registry_name\n        image_registry_type\n      }\n    }\n  }\n`;\n\nexport const UPDATE_IMAGE_REGISTRY = gql`\n  mutation updateImageRegistry(\n    $imageRegistryID: String!\n    $projectID: String!\n    $imageRegistryInfo: imageRegistryInput!\n  ) {\n    updateImageRegistry(\n      image_registry_id: $imageRegistryID\n      project_id: $projectID\n      imageRegistryInfo: $imageRegistryInfo\n    ) {\n      image_registry_info {\n        image_repo_name\n        image_registry_name\n        image_registry_type\n      }\n    }\n  }\n`;\n\nexport const SYNC_WORKFLOW = gql`\n  mutation syncWorkflow($workflowid: String!, $workflow_run_id: String!) {\n    syncWorkflow(workflowid: $workflowid, workflow_run_id: $workflow_run_id)\n  }\n`;\n\nexport const DELETE_WORKFLOW = gql`\n  mutation deleteWorkflow($workflowid: String!, $workflow_run_id: String!) {\n    deleteChaosWorkflow(\n      workflowid: $workflowid\n      workflow_run_id: $workflow_run_id\n    )\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}