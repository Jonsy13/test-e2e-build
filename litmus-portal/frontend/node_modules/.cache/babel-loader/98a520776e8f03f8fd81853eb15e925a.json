{"ast":null,"code":"import _defineProperty from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/AccountsTab/AccountSettings/index.tsx\";\n\nimport { Divider, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, InputField, Modal } from 'litmus-ui';\nimport React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../../components/Loader';\nimport config from '../../../../config';\nimport { getToken } from '../../../../utils/auth';\nimport { validateConfirmPassword, validateStartEmptySpacing } from '../../../../utils/validate';\nimport PersonalDetails from '../PersonalDetails';\nimport useStyles from './styles'; // used for password field\n\n// AccountSettings displays the starting page of \"Accounts\" tab\nvar AccountSettings = function AccountSettings() {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // used for modal\n\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var isSuccess = useRef(false);\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  }; // states for the three password fields\n\n\n  var _React$useState5 = React.useState({\n    newPassword: '',\n    currPassword: '',\n    confNewPassword: ''\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password = _React$useState6[0],\n      setPassword = _React$useState6[1]; // handleCurrPassword handles password for first password field\n\n\n  var handleCurrPassword = function handleCurrPassword(prop) {\n    return function (event) {\n      setPassword(_objectSpread(_objectSpread({}, password), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  }; // handleNewPassword handles password for second password field\n\n\n  var handleNewPassword = function handleNewPassword(prop) {\n    return function (event) {\n      setPassword(_objectSpread(_objectSpread({}, password), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  }; // handleConfPassword handles password for third password field\n\n\n  var handleConfPassword = function handleConfPassword(prop) {\n    return function (event) {\n      setPassword(_objectSpread(_objectSpread({}, password), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  };\n\n  if (password.confNewPassword.length > 0 && password.newPassword === password.confNewPassword) isSuccess.current = true;else isSuccess.current = false;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var handleChangePassword = function handleChangePassword() {\n    setLoading(true);\n    fetch(\"\".concat(config.auth.url, \"/update/password\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \".concat(getToken())\n      },\n      body: JSON.stringify({\n        old_password: password.currPassword,\n        new_password: password.newPassword\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if ('error' in data) {\n        setError(data.error_description);\n      } else {\n        setError('');\n      }\n\n      setLoading(false);\n      setOpen(true);\n      setPassword({\n        newPassword: '',\n        currPassword: '',\n        confNewPassword: ''\n      });\n    }).catch(function (err) {\n      setLoading(false);\n      setError(err.message);\n      setOpen(true);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PersonalDetails, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, t('settings.accountsTab.accountsSettings.header'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.outerPass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.innerPass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"currPassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    required: true,\n    value: password.currPassword,\n    onChange: handleCurrPassword('currPassword'),\n    type: \"password\",\n    label: t('settings.accountsTab.accountsSettings.label.currPassword'),\n    variant: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '1rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"newPassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    required: true,\n    type: \"password\",\n    onChange: handleNewPassword('newPassword'),\n    helperText: validateStartEmptySpacing(password.newPassword) ? t('settings.accountsTab.accountsSettings.passwordValidation') : '',\n    label: t('settings.accountsTab.accountsSettings.label.newPassword'),\n    variant: validateStartEmptySpacing(password.newPassword) ? 'error' : isSuccess.current ? 'success' : 'primary',\n    value: password.newPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '1rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"confPassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    helperText: validateConfirmPassword(password.newPassword, password.confNewPassword) ? t('settings.accountsTab.accountsSettings.passwordNotSame') : '',\n    required: true,\n    type: \"password\",\n    onChange: handleConfPassword('confNewPassword'),\n    label: t('settings.accountsTab.accountsSettings.label.confNewPassword'),\n    variant: validateConfirmPassword(password.newPassword, password.confNewPassword) ? 'error' : isSuccess.current ? 'success' : 'primary',\n    value: password.confNewPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"change-password\",\n    className: classes.buttonModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    \"data-cy\": \"button\",\n    disabled: !(password.newPassword.length > 0 && password.newPassword === password.confNewPassword && password.currPassword.length > 0 && !loading),\n    onClick: handleChangePassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, t('settings.accountsTab.accountsSettings.button.changePass')))), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    modalActions: /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, \"\\u2715\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, error.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.errDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, t('settings.accountsTab.accountsSettings.modal.headerErrStrong'), \":\"), ' ', t('settings.accountsTab.accountsSettings.modal.headerErr'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textSecondError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typoSub,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  }, t('settings.accountsTab.accountsSettings.modal.headerErrStrong'), \": \", error)), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"done\",\n    className: classes.buttonModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    disabled: false,\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, t('settings.accountsTab.accountsSettings.button.done'))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/lock.svg\",\n    alt: \"lock\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, t('settings.accountsTab.accountsSettings.modal.header'), ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }, t('settings.accountsTab.accountsSettings.modal.headerStrong')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.text1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  }, t('settings.accountsTab.accountsSettings.modal.info'))), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"done\",\n    className: classes.buttonModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    disabled: false,\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, t('settings.accountsTab.accountsSettings.button.done'))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.col2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/pass.svg\",\n    \"data-cy\": \"lock\",\n    alt: \"lockIcon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default AccountSettings;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/AccountsTab/AccountSettings/index.tsx"],"names":["Divider","Typography","ButtonFilled","ButtonOutlined","InputField","Modal","React","useRef","useState","useTranslation","Loader","config","getToken","validateConfirmPassword","validateStartEmptySpacing","PersonalDetails","useStyles","AccountSettings","classes","t","open","setOpen","isSuccess","loading","setLoading","handleClose","newPassword","currPassword","confNewPassword","password","setPassword","handleCurrPassword","prop","event","target","value","handleNewPassword","handleConfPassword","length","current","error","setError","handleChangePassword","fetch","auth","url","method","headers","Authorization","body","JSON","stringify","old_password","new_password","then","response","json","data","error_description","catch","err","message","container","divider","headerText","outerPass","innerPass","marginTop","buttonModal","errDiv","textError","typo","textSecondError","typoSub","text","text1","typo1","col2"],"mappings":"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","sourcesContent":["import { Divider, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, InputField, Modal } from 'litmus-ui';\nimport React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../../components/Loader';\nimport config from '../../../../config';\nimport { getToken } from '../../../../utils/auth';\nimport {\n  validateConfirmPassword,\n  validateStartEmptySpacing,\n} from '../../../../utils/validate';\nimport PersonalDetails from '../PersonalDetails';\nimport useStyles from './styles';\n\n// used for password field\ninterface Password {\n  currPassword: string;\n  newPassword: string;\n  confNewPassword: string;\n}\n\n// AccountSettings displays the starting page of \"Accounts\" tab\nconst AccountSettings: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  // used for modal\n  const [open, setOpen] = React.useState(false);\n  const isSuccess = useRef<boolean>(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // states for the three password fields\n  const [password, setPassword] = React.useState<Password>({\n    newPassword: '',\n    currPassword: '',\n    confNewPassword: '',\n  });\n\n  // handleCurrPassword handles password for first password field\n  const handleCurrPassword =\n    (prop: keyof Password) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword({\n        ...password,\n        [prop]: event.target.value,\n      });\n    };\n\n  // handleNewPassword handles password for second password field\n  const handleNewPassword =\n    (prop: keyof Password) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword({\n        ...password,\n        [prop]: event.target.value,\n      });\n    };\n\n  // handleConfPassword handles password for third password field\n  const handleConfPassword =\n    (prop: keyof Password) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword({\n        ...password,\n        [prop]: event.target.value,\n      });\n    };\n\n  if (\n    password.confNewPassword.length > 0 &&\n    password.newPassword === password.confNewPassword\n  )\n    isSuccess.current = true;\n  else isSuccess.current = false;\n  const [error, setError] = useState<string>('');\n  const handleChangePassword = () => {\n    setLoading(true);\n    fetch(`${config.auth.url}/update/password`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${getToken()}`,\n      },\n      body: JSON.stringify({\n        old_password: password.currPassword,\n        new_password: password.newPassword,\n      }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if ('error' in data) {\n          setError(data.error_description as string);\n        } else {\n          setError('');\n        }\n        setLoading(false);\n        setOpen(true);\n        setPassword({\n          newPassword: '',\n          currPassword: '',\n          confNewPassword: '',\n        });\n      })\n      .catch((err) => {\n        setLoading(false);\n        setError(err.message as string);\n        setOpen(true);\n      });\n  };\n\n  return (\n    <div className={classes.container}>\n      {/* Below component renders the upper section of the page, displays personal details */}\n      <PersonalDetails />\n      <Divider className={classes.divider} />\n\n      {/* Displays the lower segment containing the password details */}\n      <Typography className={classes.headerText}>\n        <strong>{t('settings.accountsTab.accountsSettings.header')}</strong>\n      </Typography>\n      <div className={classes.outerPass}>\n        <form className={classes.innerPass}>\n          {/* Current Password */}\n          <div data-cy=\"currPassword\">\n            <InputField\n              required\n              value={password.currPassword}\n              onChange={handleCurrPassword('currPassword')}\n              type=\"password\"\n              label={t(\n                'settings.accountsTab.accountsSettings.label.currPassword'\n              )}\n              variant=\"primary\"\n            />\n          </div>\n          {/* New Password */}\n          <div style={{ marginTop: '1rem' }} />\n          <div data-cy=\"newPassword\">\n            <InputField\n              required\n              type=\"password\"\n              onChange={handleNewPassword('newPassword')}\n              helperText={\n                validateStartEmptySpacing(password.newPassword)\n                  ? t(\n                      'settings.accountsTab.accountsSettings.passwordValidation'\n                    )\n                  : ''\n              }\n              label={t(\n                'settings.accountsTab.accountsSettings.label.newPassword'\n              )}\n              variant={\n                validateStartEmptySpacing(password.newPassword)\n                  ? 'error'\n                  : isSuccess.current\n                  ? 'success'\n                  : 'primary'\n              }\n              value={password.newPassword}\n            />\n          </div>\n          {/* Confirm new password */}\n          <div style={{ marginTop: '1rem' }} />\n          <div data-cy=\"confPassword\">\n            <InputField\n              helperText={\n                validateConfirmPassword(\n                  password.newPassword,\n                  password.confNewPassword\n                )\n                  ? t('settings.accountsTab.accountsSettings.passwordNotSame')\n                  : ''\n              }\n              required\n              type=\"password\"\n              onChange={handleConfPassword('confNewPassword')}\n              label={t(\n                'settings.accountsTab.accountsSettings.label.confNewPassword'\n              )}\n              variant={\n                validateConfirmPassword(\n                  password.newPassword,\n                  password.confNewPassword\n                )\n                  ? 'error'\n                  : isSuccess.current\n                  ? 'success'\n                  : 'primary'\n              }\n              value={password.confNewPassword}\n            />\n          </div>\n          <div data-cy=\"change-password\" className={classes.buttonModal}>\n            <ButtonFilled\n              data-cy=\"button\"\n              disabled={\n                !(\n                  password.newPassword.length > 0 &&\n                  password.newPassword === password.confNewPassword &&\n                  password.currPassword.length > 0 &&\n                  !loading\n                )\n              }\n              onClick={handleChangePassword}\n            >\n              {loading ? (\n                <div>\n                  <Loader size={20} />\n                </div>\n              ) : (\n                <>\n                  {t('settings.accountsTab.accountsSettings.button.changePass')}\n                </>\n              )}\n            </ButtonFilled>\n          </div>\n          <Modal\n            open={open}\n            onClose={handleClose}\n            modalActions={\n              <ButtonOutlined onClick={handleClose}>&#x2715;</ButtonOutlined>\n            }\n          >\n            {error.length ? (\n              <div className={classes.errDiv}>\n                <div className={classes.textError}>\n                  <Typography className={classes.typo} align=\"center\">\n                    <strong>\n                      {t(\n                        'settings.accountsTab.accountsSettings.modal.headerErrStrong'\n                      )}\n                      :\n                    </strong>{' '}\n                    {t('settings.accountsTab.accountsSettings.modal.headerErr')}\n                  </Typography>\n                </div>\n                <div className={classes.textSecondError}>\n                  <Typography className={classes.typoSub}>\n                    {t(\n                      'settings.accountsTab.accountsSettings.modal.headerErrStrong'\n                    )}\n                    : {error}\n                  </Typography>\n                </div>\n                <div data-cy=\"done\" className={classes.buttonModal}>\n                  <ButtonFilled disabled={false} onClick={handleClose}>\n                    <>\n                      {t('settings.accountsTab.accountsSettings.button.done')}\n                    </>\n                  </ButtonFilled>\n                </div>\n              </div>\n            ) : (\n              <div className={classes.body}>\n                <img src=\"./icons/lock.svg\" alt=\"lock\" />\n                <div className={classes.text}>\n                  <Typography className={classes.typo} align=\"center\">\n                    {t('settings.accountsTab.accountsSettings.modal.header')}{' '}\n                    <strong>\n                      {t(\n                        'settings.accountsTab.accountsSettings.modal.headerStrong'\n                      )}\n                    </strong>\n                  </Typography>\n                </div>\n                <div className={classes.text1}>\n                  <Typography className={classes.typo1}>\n                    {t('settings.accountsTab.accountsSettings.modal.info')}\n                  </Typography>\n                </div>\n                <div data-cy=\"done\" className={classes.buttonModal}>\n                  <ButtonFilled disabled={false} onClick={handleClose}>\n                    <>\n                      {t('settings.accountsTab.accountsSettings.button.done')}\n                    </>\n                  </ButtonFilled>\n                </div>\n              </div>\n            )}\n          </Modal>\n        </form>\n        <div className={classes.col2}>\n          <img src=\"./icons/pass.svg\" data-cy=\"lock\" alt=\"lockIcon\" />\n          {/*  <Typography className={classes.txt1}>\n                Your new password <strong>must</strong> be:\n              </Typography>\n              <Typography className={classes.txt2}>\n                1. Be at least 8 characters in length\n              </Typography>\n              <Typography className={classes.txt2}>\n                2. Not be same as your current password\n              </Typography>\n              <Typography className={classes.txt2}>\n                3. Be a combination of letters, numbers and special characters\n              </Typography> */}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default AccountSettings;\n"]},"metadata":{},"sourceType":"module"}