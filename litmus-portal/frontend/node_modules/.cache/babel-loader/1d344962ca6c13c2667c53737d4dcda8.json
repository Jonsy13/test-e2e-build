{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Typography}from'@material-ui/core';import AccordionDetails from'@material-ui/core/AccordionDetails';import AccordionSummary from'@material-ui/core/AccordionSummary';import React from'react';import{Accordion}from'../../../../components/Accordion';import{ReactComponent as ExpandAccordion}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/expandAccordion.svg\";import{ReactComponent as ShrinkAccordion}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/shrinkAccordion.svg\";import GraphPanel from'./GraphPanel';import useStyles from'./styles';var DashboardPanelGroupContent=function DashboardPanelGroupContent(_ref){var panels=_ref.panels,panel_group_id=_ref.panel_group_id,panel_group_name=_ref.panel_group_name,selectedPanels=_ref.selectedPanels;var classes=useStyles();var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];return/*#__PURE__*/React.createElement(\"div\",{className:classes.rootPanelGroup},/*#__PURE__*/React.createElement(Accordion,{expanded:open},/*#__PURE__*/React.createElement(AccordionSummary,{expandIcon:open?/*#__PURE__*/React.createElement(ShrinkAccordion,null):/*#__PURE__*/React.createElement(ExpandAccordion,null),\"aria-controls\":\"panel-group-\".concat(panel_group_id,\"-content\"),id:\"panel-group-\".concat(panel_group_id,\"-header\"),className:classes.panelGroup,key:\"\".concat(panel_group_id),onClick:function onClick(){setOpen(!open);}},/*#__PURE__*/React.createElement(Typography,{className:classes.panelGroupTitle},panel_group_name)),/*#__PURE__*/React.createElement(AccordionDetails,{className:classes.panelGroupContainer},panels&&panels.filter(function(panel){return selectedPanels&&selectedPanels.includes(panel.panel_id);}).map(function(panel){return/*#__PURE__*/React.createElement(GraphPanel,{key:panel.panel_id,\"data-cy\":\"dashboardPanel\",panel_id:panel.panel_id,created_at:panel.created_at,panel_name:panel.panel_name,panel_options:panel.panel_options,prom_queries:panel.prom_queries,y_axis_left:panel.y_axis_left,y_axis_right:panel.y_axis_right,x_axis_down:panel.x_axis_down,unit:panel.unit,controllerPanelID:selectedPanels?selectedPanels[0]:''});}))));};export default DashboardPanelGroupContent;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboard/Panel/PanelGroupContent.tsx"],"names":["Typography","AccordionDetails","AccordionSummary","React","Accordion","GraphPanel","useStyles","DashboardPanelGroupContent","panels","panel_group_id","panel_group_name","selectedPanels","classes","useState","open","setOpen","rootPanelGroup","panelGroup","panelGroupTitle","panelGroupContainer","filter","panel","includes","panel_id","map","created_at","panel_name","panel_options","prom_queries","y_axis_left","y_axis_right","x_axis_down","unit"],"mappings":"mLAAA,OAASA,UAAT,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,kCAA1B,C,8OAIA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CASA,GAAMC,CAAAA,0BAAqE,CAAG,QAAxEA,CAAAA,0BAAwE,MAKxE,IAJJC,CAAAA,MAII,MAJJA,MAII,CAHJC,cAGI,MAHJA,cAGI,CAFJC,gBAEI,MAFJA,gBAEI,CADJC,cACI,MADJA,cACI,CACJ,GAAMC,CAAAA,OAAO,CAAGN,SAAS,EAAzB,CACA,oBAAwBH,KAAK,CAACU,QAAN,CAAwB,IAAxB,CAAxB,oDAAOC,IAAP,qBAAaC,OAAb,qBAEA,mBACE,2BAAK,SAAS,CAAEH,OAAO,CAACI,cAAxB,eACE,oBAAC,SAAD,EAAW,QAAQ,CAAEF,IAArB,eACE,oBAAC,gBAAD,EACE,UAAU,CAAEA,IAAI,cAAG,oBAAC,eAAD,MAAH,cAAyB,oBAAC,eAAD,MAD3C,CAEE,sCAA8BL,cAA9B,YAFF,CAGE,EAAE,uBAAiBA,cAAjB,WAHJ,CAIE,SAAS,CAAEG,OAAO,CAACK,UAJrB,CAKE,GAAG,WAAKR,cAAL,CALL,CAME,OAAO,CAAE,kBAAM,CACbM,OAAO,CAAC,CAACD,IAAF,CAAP,CACD,CARH,eAUE,oBAAC,UAAD,EAAY,SAAS,CAAEF,OAAO,CAACM,eAA/B,EACGR,gBADH,CAVF,CADF,cAeE,oBAAC,gBAAD,EAAkB,SAAS,CAAEE,OAAO,CAACO,mBAArC,EACGX,MAAM,EACLA,MAAM,CACHY,MADH,CAEI,SAACC,KAAD,QACEV,CAAAA,cAAc,EAAIA,cAAc,CAACW,QAAf,CAAwBD,KAAK,CAACE,QAA9B,CADpB,EAFJ,EAKGC,GALH,CAKO,SAACH,KAAD,qBACH,oBAAC,UAAD,EACE,GAAG,CAAEA,KAAK,CAACE,QADb,CAEE,UAAQ,gBAFV,CAGE,QAAQ,CAAEF,KAAK,CAACE,QAHlB,CAIE,UAAU,CAAEF,KAAK,CAACI,UAJpB,CAKE,UAAU,CAAEJ,KAAK,CAACK,UALpB,CAME,aAAa,CAAEL,KAAK,CAACM,aANvB,CAOE,YAAY,CAAEN,KAAK,CAACO,YAPtB,CAQE,WAAW,CAAEP,KAAK,CAACQ,WARrB,CASE,YAAY,CAAER,KAAK,CAACS,YATtB,CAUE,WAAW,CAAET,KAAK,CAACU,WAVrB,CAWE,IAAI,CAAEV,KAAK,CAACW,IAXd,CAYE,iBAAiB,CAAErB,cAAc,CAAGA,cAAc,CAAC,CAAD,CAAjB,CAAuB,EAZ1D,EADG,EALP,CAFJ,CAfF,CADF,CADF,CA4CD,CArDD,CAuDA,cAAeJ,CAAAA,0BAAf","sourcesContent":["import { Typography } from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport React from 'react';\nimport { Accordion } from '../../../../components/Accordion';\nimport { PanelResponse } from '../../../../models/graphql/dashboardsDetails';\nimport { ReactComponent as ExpandAccordion } from '../../../../svg/expandAccordion.svg';\nimport { ReactComponent as ShrinkAccordion } from '../../../../svg/shrinkAccordion.svg';\nimport GraphPanel from './GraphPanel';\nimport useStyles from './styles';\n\ninterface DashboardPanelGroupContentProps {\n  panels: PanelResponse[];\n  panel_group_name: string;\n  panel_group_id: string;\n  selectedPanels?: string[];\n}\n\nconst DashboardPanelGroupContent: React.FC<DashboardPanelGroupContentProps> = ({\n  panels,\n  panel_group_id,\n  panel_group_name,\n  selectedPanels,\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState<boolean>(true);\n\n  return (\n    <div className={classes.rootPanelGroup}>\n      <Accordion expanded={open}>\n        <AccordionSummary\n          expandIcon={open ? <ShrinkAccordion /> : <ExpandAccordion />}\n          aria-controls={`panel-group-${panel_group_id}-content`}\n          id={`panel-group-${panel_group_id}-header`}\n          className={classes.panelGroup}\n          key={`${panel_group_id}`}\n          onClick={() => {\n            setOpen(!open);\n          }}\n        >\n          <Typography className={classes.panelGroupTitle}>\n            {panel_group_name}\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.panelGroupContainer}>\n          {panels &&\n            panels\n              .filter(\n                (panel) =>\n                  selectedPanels && selectedPanels.includes(panel.panel_id)\n              )\n              .map((panel: PanelResponse) => (\n                <GraphPanel\n                  key={panel.panel_id}\n                  data-cy=\"dashboardPanel\"\n                  panel_id={panel.panel_id}\n                  created_at={panel.created_at}\n                  panel_name={panel.panel_name}\n                  panel_options={panel.panel_options}\n                  prom_queries={panel.prom_queries}\n                  y_axis_left={panel.y_axis_left}\n                  y_axis_right={panel.y_axis_right}\n                  x_axis_down={panel.x_axis_down}\n                  unit={panel.unit}\n                  controllerPanelID={selectedPanels ? selectedPanels[0] : ''}\n                />\n              ))}\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default DashboardPanelGroupContent;\n"]},"metadata":{},"sourceType":"module"}