{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/DataSources/Table/TableData.tsx\";\n\nimport { useMutation } from '@apollo/client';\nimport { IconButton, Menu, MenuItem, Typography } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { ButtonFilled, LightPills, Modal, TextButton } from 'litmus-ui';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DELETE_DATASOURCE } from '../../../../graphql';\nimport useActions from '../../../../redux/actions';\nimport * as DataSourceActions from '../../../../redux/actions/dataSource';\nimport { history } from '../../../../redux/configureStore';\nimport { ReactComponent as ExternalLinkIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/externalLink.svg\";\nimport { getProjectID, getProjectRole } from '../../../../utils/getSearchParams';\nimport useStyles, { StyledTableCell } from './styles';\n\nvar TableData = function TableData(_ref) {\n  var data = _ref.data,\n      drawerStateHandler = _ref.drawerStateHandler,\n      alertStateHandler = _ref.alertStateHandler;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var projectID = getProjectID();\n  var projectRole = getProjectRole();\n  var dataSource = useActions(DataSourceActions);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var open = Boolean(anchorEl);\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      mutate = _React$useState4[0],\n      setMutate = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      openModal = _React$useState6[0],\n      setOpenModal = _React$useState6[1]; // Function to convert UNIX time in format of dddd, DD MMM YYYY, HH:mm\n\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var resDate = moment(updated).format('dddd, DD MMM YYYY, HH:mm');\n    return resDate;\n  };\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var _useMutation = useMutation(DELETE_DATASOURCE, {\n    onCompleted: function onCompleted() {\n      setMutate(false);\n      alertStateHandler(true);\n    },\n    onError: function onError(error) {\n      setMutate(false);\n      alertStateHandler(false);\n\n      if (error.message.includes('dashboard(s)')) {\n        var dashboardList = error.message.split(':')[1].trim();\n        var dashboardNames = dashboardList.substring(1, dashboardList.length - 1).split(',');\n        drawerStateHandler(data.ds_id, data.ds_name, dashboardNames);\n      }\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      deleteDataSource = _useMutation2[0];\n\n  useEffect(function () {\n    if (mutate === true) {\n      deleteDataSource({\n        variables: {\n          deleteDSInput: {\n            ds_id: data.ds_id,\n            force_delete: false\n          }\n        }\n      });\n    }\n  }, [mutate]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledTableCell, {\n    className: classes.tableDataStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, data.health_status === 'Active' ? /*#__PURE__*/React.createElement(LightPills, {\n    variant: \"success\",\n    label: data.health_status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }) : data.health_status === 'Not Ready' ? /*#__PURE__*/React.createElement(LightPills, {\n    variant: \"warning\",\n    label: data.health_status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(LightPills, {\n    variant: \"danger\",\n    label: data.health_status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(StyledTableCell, {\n    className: classes.columnDivider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.tableObjects, \" \").concat(classes.dataSourceNameColData),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, data.ds_name)), /*#__PURE__*/React.createElement(StyledTableCell, {\n    className: classes.dividerPadding,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.tableObjects,\n    style: {\n      maxWidth: '5rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/prometheus.svg\",\n    alt: \"Prometheus\",\n    className: classes.inlineIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), data.ds_type)), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.tableObjects,\n    style: {\n      maxWidth: '12.5rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/calendarIcon.svg\",\n    alt: \"Calender\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), formatDate(data.updated_at))), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextButton, {\n    className: classes.button,\n    onClick: function onClick() {\n      return window.open(data.ds_url);\n    },\n    endIcon: /*#__PURE__*/React.createElement(ExternalLinkIcon, {\n      className: classes.inlineIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }\n    }),\n    classes: {\n      label: classes.buttonLabel\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.tableObjects, \" \").concat(classes.dataSourceUrlColData),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, data.ds_url))), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"more\",\n    \"aria-controls\": \"long-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    \"data-cy\": \"browseDataSourceOptions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    className: classes.headerIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Menu, {\n    id: \"long-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    getContentAnchorEl: null,\n    classes: {\n      paper: classes.menuList\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Configure\",\n    onClick: function onClick() {\n      dataSource.selectDataSource({\n        selectedDataSourceID: data.ds_id,\n        selectedDataSourceName: data.ds_name\n      });\n      history.push({\n        pathname: '/analytics/datasource/configure',\n        search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n      });\n    },\n    className: classes.menuItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/cogwheel.svg\",\n    alt: \"Configure\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"configureDashboard\",\n    className: classes.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.dataSourceTable.configure')))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Delete\",\n    onClick: function onClick() {\n      setOpenModal(true);\n      handleClose();\n    },\n    className: classes.menuItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/delete.svg\",\n    alt: \"Delete\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"deleteDashboard\",\n    className: \"\".concat(classes.btnText, \" \").concat(classes.deleteText),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.dataSourceTable.delete')))))), /*#__PURE__*/React.createElement(Modal, {\n    open: openModal,\n    onClose: function onClose() {\n      return setOpenModal(false);\n    },\n    width: \"45%\",\n    height: \"fit-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalHeading,\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.dataSourceTable.modal.removeDataSource')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalBodyText,\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.dataSourceTable.modal.removeDataSourceConfirmation'), /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, \" \".concat(data.ds_name, \" \"))), \"?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.flexButtons, \" \").concat(classes.flexButtonsPadding),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextButton, {\n    onClick: function onClick() {\n      return setOpenModal(false);\n    },\n    className: classes.cancelButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.dataSourceTable.modal.cancel'))), /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: function onClick() {\n      setMutate(true);\n      setOpenModal(false);\n    },\n    variant: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.buttonText, \" \").concat(classes.confirmButtonText),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.dataSourceTable.modal.delete')))))));\n};\n\nexport default TableData;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/DataSources/Table/TableData.tsx"],"names":["useMutation","IconButton","Menu","MenuItem","Typography","MoreVertIcon","ButtonFilled","LightPills","Modal","TextButton","moment","React","useEffect","useTranslation","DELETE_DATASOURCE","useActions","DataSourceActions","history","getProjectID","getProjectRole","useStyles","StyledTableCell","TableData","data","drawerStateHandler","alertStateHandler","classes","t","projectID","projectRole","dataSource","useState","anchorEl","setAnchorEl","open","Boolean","mutate","setMutate","openModal","setOpenModal","formatDate","date","updated","Date","parseInt","toString","resDate","format","handleClick","event","currentTarget","handleClose","onCompleted","onError","error","message","includes","dashboardList","split","trim","dashboardNames","substring","length","ds_id","ds_name","deleteDataSource","variables","deleteDSInput","force_delete","tableDataStatus","health_status","columnDivider","tableObjects","dataSourceNameColData","dividerPadding","maxWidth","inlineIcon","ds_type","updated_at","button","window","ds_url","label","buttonLabel","dataSourceUrlColData","headerIcon","vertical","horizontal","paper","menuList","selectDataSource","selectedDataSourceID","selectedDataSourceName","push","pathname","search","menuItem","expDiv","btnImg","btnText","deleteText","modal","modalHeading","modalBodyText","flexButtons","flexButtonsPadding","cancelButton","buttonText","confirmButtonText"],"mappings":"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","sourcesContent":["import { ApolloError, useMutation } from '@apollo/client';\nimport { IconButton, Menu, MenuItem, Typography } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { ButtonFilled, LightPills, Modal, TextButton } from 'litmus-ui';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DELETE_DATASOURCE } from '../../../../graphql';\nimport {\n  DeleteDataSourceInput,\n  ListDataSourceResponse,\n} from '../../../../models/graphql/dataSourceDetails';\nimport useActions from '../../../../redux/actions';\nimport * as DataSourceActions from '../../../../redux/actions/dataSource';\nimport { history } from '../../../../redux/configureStore';\nimport { ReactComponent as ExternalLinkIcon } from '../../../../svg/externalLink.svg';\nimport {\n  getProjectID,\n  getProjectRole,\n} from '../../../../utils/getSearchParams';\nimport useStyles, { StyledTableCell } from './styles';\n\ninterface TableDataProps {\n  data: ListDataSourceResponse;\n  drawerStateHandler: (\n    ds_id: string,\n    ds_name: string,\n    dashboards: string[]\n  ) => void;\n  alertStateHandler: (successState: boolean) => void;\n}\n\nconst TableData: React.FC<TableDataProps> = ({\n  data,\n  drawerStateHandler,\n  alertStateHandler,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n  const dataSource = useActions(DataSourceActions);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const [mutate, setMutate] = React.useState(false);\n  const [openModal, setOpenModal] = React.useState(false);\n\n  // Function to convert UNIX time in format of dddd, DD MMM YYYY, HH:mm\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('dddd, DD MMM YYYY, HH:mm');\n    return resDate;\n  };\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [deleteDataSource] = useMutation<boolean, DeleteDataSourceInput>(\n    DELETE_DATASOURCE,\n    {\n      onCompleted: () => {\n        setMutate(false);\n        alertStateHandler(true);\n      },\n      onError: (error: ApolloError) => {\n        setMutate(false);\n        alertStateHandler(false);\n        if (error.message.includes('dashboard(s)')) {\n          const dashboardList: string = error.message.split(':')[1].trim();\n          const dashboardNames: string[] = dashboardList\n            .substring(1, dashboardList.length - 1)\n            .split(',');\n          drawerStateHandler(data.ds_id, data.ds_name, dashboardNames);\n        }\n      },\n    }\n  );\n\n  useEffect(() => {\n    if (mutate === true) {\n      deleteDataSource({\n        variables: {\n          deleteDSInput: {\n            ds_id: data.ds_id,\n            force_delete: false,\n          },\n        },\n      });\n    }\n  }, [mutate]);\n\n  return (\n    <>\n      <StyledTableCell className={classes.tableDataStatus}>\n        {data.health_status === 'Active' ? (\n          <LightPills variant=\"success\" label={data.health_status} />\n        ) : data.health_status === 'Not Ready' ? (\n          <LightPills variant=\"warning\" label={data.health_status} />\n        ) : (\n          <LightPills variant=\"danger\" label={data.health_status} />\n        )}\n      </StyledTableCell>\n      <StyledTableCell className={classes.columnDivider}>\n        <Typography\n          className={`${classes.tableObjects} ${classes.dataSourceNameColData}`}\n        >\n          {data.ds_name}\n        </Typography>\n      </StyledTableCell>\n      <StyledTableCell className={classes.dividerPadding}>\n        <Typography\n          className={classes.tableObjects}\n          style={{ maxWidth: '5rem' }}\n        >\n          <img\n            src=\"/icons/prometheus.svg\"\n            alt=\"Prometheus\"\n            className={classes.inlineIcon}\n          />\n          {data.ds_type}\n        </Typography>\n      </StyledTableCell>\n      <StyledTableCell>\n        <Typography\n          className={classes.tableObjects}\n          style={{ maxWidth: '12.5rem' }}\n        >\n          <img src=\"/icons/calendarIcon.svg\" alt=\"Calender\" />\n          {formatDate(data.updated_at)}\n        </Typography>\n      </StyledTableCell>\n\n      <StyledTableCell>\n        <TextButton\n          className={classes.button}\n          onClick={() => window.open(data.ds_url)}\n          endIcon={<ExternalLinkIcon className={classes.inlineIcon} />}\n          classes={{ label: classes.buttonLabel }}\n        >\n          <Typography\n            className={`${classes.tableObjects} ${classes.dataSourceUrlColData}`}\n          >\n            {data.ds_url}\n          </Typography>\n        </TextButton>\n      </StyledTableCell>\n\n      <StyledTableCell>\n        <IconButton\n          aria-label=\"more\"\n          aria-controls=\"long-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n          data-cy=\"browseDataSourceOptions\"\n        >\n          <MoreVertIcon className={classes.headerIcon} />\n        </IconButton>\n        <Menu\n          id=\"long-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          getContentAnchorEl={null}\n          classes={{ paper: classes.menuList }}\n        >\n          <MenuItem\n            value=\"Configure\"\n            onClick={() => {\n              dataSource.selectDataSource({\n                selectedDataSourceID: data.ds_id,\n                selectedDataSourceName: data.ds_name,\n              });\n              history.push({\n                pathname: '/analytics/datasource/configure',\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              });\n            }}\n            className={classes.menuItem}\n          >\n            <div className={classes.expDiv}>\n              <img\n                src=\"/icons/cogwheel.svg\"\n                alt=\"Configure\"\n                className={classes.btnImg}\n              />\n              <Typography\n                data-cy=\"configureDashboard\"\n                className={classes.btnText}\n              >\n                {t('analyticsDashboard.dataSourceTable.configure')}\n              </Typography>\n            </div>\n          </MenuItem>\n\n          <MenuItem\n            value=\"Delete\"\n            onClick={() => {\n              setOpenModal(true);\n              handleClose();\n            }}\n            className={classes.menuItem}\n          >\n            <div className={classes.expDiv}>\n              <img\n                src=\"/icons/delete.svg\"\n                alt=\"Delete\"\n                className={classes.btnImg}\n              />\n              <Typography\n                data-cy=\"deleteDashboard\"\n                className={`${classes.btnText} ${classes.deleteText}`}\n              >\n                {t('analyticsDashboard.dataSourceTable.delete')}\n              </Typography>\n            </div>\n          </MenuItem>\n        </Menu>\n      </StyledTableCell>\n      <Modal\n        open={openModal}\n        onClose={() => setOpenModal(false)}\n        width=\"45%\"\n        height=\"fit-content\"\n      >\n        <div className={classes.modal}>\n          <Typography className={classes.modalHeading} align=\"left\">\n            {t('analyticsDashboard.dataSourceTable.modal.removeDataSource')}\n          </Typography>\n\n          <Typography className={classes.modalBodyText} align=\"left\">\n            {t(\n              'analyticsDashboard.dataSourceTable.modal.removeDataSourceConfirmation'\n            )}\n            <b>\n              <i>{` ${data.ds_name} `}</i>\n            </b>\n            ?\n          </Typography>\n\n          <div\n            className={`${classes.flexButtons} ${classes.flexButtonsPadding}`}\n          >\n            <TextButton\n              onClick={() => setOpenModal(false)}\n              className={classes.cancelButton}\n            >\n              <Typography className={classes.buttonText}>\n                {t('analyticsDashboard.dataSourceTable.modal.cancel')}\n              </Typography>\n            </TextButton>\n            <ButtonFilled\n              onClick={() => {\n                setMutate(true);\n                setOpenModal(false);\n              }}\n              variant=\"error\"\n            >\n              <Typography\n                className={`${classes.buttonText} ${classes.confirmButtonText}`}\n              >\n                {t('analyticsDashboard.dataSourceTable.modal.delete')}\n              </Typography>\n            </ButtonFilled>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}