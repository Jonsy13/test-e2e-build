{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/UsageStatistics/UsageStats/index.tsx\";\n\nimport { useQuery } from '@apollo/client';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../components/Loader';\nimport { GET_GLOBAL_STATS } from '../../../graphql';\nimport Card from './Cards';\nimport useStyles from './styles';\n\nvar UsageStats = function UsageStats() {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useQuery = useQuery(GET_GLOBAL_STATS, {\n    variables: {\n      query: {\n        DateRange: {\n          start_date: Math.trunc(new Date(new Date().getFullYear(), new Date().getMonth(), 1).getTime() / 1000).toString(),\n          end_date: Math.trunc(new Date().getTime() / 1000).toString()\n        }\n      }\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cardDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    image: \"./icons/users.svg\",\n    header: t('usage.card.userHeader'),\n    subtitle: t('usage.card.userSubtitle'),\n    color: classes.usersData,\n    data: data === null || data === void 0 ? void 0 : data.UsageQuery.TotalCount.Users,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    image: \"./icons/viewProjects.svg\",\n    header: t('usage.card.projectHeader'),\n    subtitle: t('usage.card.projectSubtitle'),\n    color: classes.projectData,\n    data: data === null || data === void 0 ? void 0 : data.UsageQuery.TotalCount.Projects,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    image: \"./icons/targets.svg\",\n    header: t('usage.card.agentHeader'),\n    subtitle: t('usage.card.agentSubtitle'),\n    color: classes.agentsData,\n    data: data === null || data === void 0 ? void 0 : data.UsageQuery.TotalCount.Agents.Total,\n    split: true,\n    subData: [{\n      option1: data === null || data === void 0 ? void 0 : data.UsageQuery.TotalCount.Agents.Cluster,\n      option2: \"\".concat(t('usage.card.agentClusterScope'))\n    }, {\n      option1: data === null || data === void 0 ? void 0 : data.UsageQuery.TotalCount.Agents.Ns,\n      option2: \"\".concat(t('usage.card.agentNamespaceScope'))\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    image: \"./icons/workflow-calender.svg\",\n    header: t('usage.card.workflowScheduleHeader'),\n    subtitle: t('usage.card.workflowScheduleSubtitle'),\n    color: classes.schedules,\n    data: data === null || data === void 0 ? void 0 : data.UsageQuery.TotalCount.Workflows.Schedules,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    image: \"./icons/workflows-outline.svg\",\n    header: t('usage.card.workflowRunHeader'),\n    subtitle: t('usage.card.workflowRunSubtitle'),\n    color: classes.wfRuns,\n    data: data === null || data === void 0 ? void 0 : data.UsageQuery.TotalCount.Workflows.Runs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    image: \"./icons/myhub.svg\",\n    header: t('usage.card.experimentRunHeader'),\n    subtitle: t('usage.card.experimentRunSubtitle'),\n    color: classes.expRuns,\n    data: data === null || data === void 0 ? void 0 : data.UsageQuery.TotalCount.Workflows.ExpRuns,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default UsageStats;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/UsageStatistics/UsageStats/index.tsx"],"names":["useQuery","React","useTranslation","Loader","GET_GLOBAL_STATS","Card","useStyles","UsageStats","classes","t","variables","query","DateRange","start_date","Math","trunc","Date","getFullYear","getMonth","getTime","toString","end_date","data","loading","cardDiv","usersData","UsageQuery","TotalCount","Users","projectData","Projects","agentsData","Agents","Total","option1","Cluster","option2","Ns","schedules","Workflows","Schedules","wfRuns","Runs","expRuns","ExpRuns"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../components/Loader';\nimport { GET_GLOBAL_STATS } from '../../../graphql';\nimport Card from './Cards';\nimport useStyles from './styles';\n\nconst UsageStats = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { data, loading } = useQuery(GET_GLOBAL_STATS, {\n    variables: {\n      query: {\n        DateRange: {\n          start_date: Math.trunc(\n            new Date(\n              new Date().getFullYear(),\n              new Date().getMonth(),\n              1\n            ).getTime() / 1000\n          ).toString(),\n          end_date: Math.trunc(new Date().getTime() / 1000).toString(),\n        },\n      },\n    },\n  });\n\n  return (\n    <div className={classes.cardDiv}>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Card\n            image=\"./icons/users.svg\"\n            header={t('usage.card.userHeader')}\n            subtitle={t('usage.card.userSubtitle')}\n            color={classes.usersData}\n            data={data?.UsageQuery.TotalCount.Users}\n          />\n          <Card\n            image=\"./icons/viewProjects.svg\"\n            header={t('usage.card.projectHeader')}\n            subtitle={t('usage.card.projectSubtitle')}\n            color={classes.projectData}\n            data={data?.UsageQuery.TotalCount.Projects}\n          />\n          <Card\n            image=\"./icons/targets.svg\"\n            header={t('usage.card.agentHeader')}\n            subtitle={t('usage.card.agentSubtitle')}\n            color={classes.agentsData}\n            data={data?.UsageQuery.TotalCount.Agents.Total}\n            split\n            subData={[\n              {\n                option1: data?.UsageQuery.TotalCount.Agents.Cluster,\n                option2: `${t('usage.card.agentClusterScope')}`,\n              },\n              {\n                option1: data?.UsageQuery.TotalCount.Agents.Ns,\n                option2: `${t('usage.card.agentNamespaceScope')}`,\n              },\n            ]}\n          />\n\n          <Card\n            image=\"./icons/workflow-calender.svg\"\n            header={t('usage.card.workflowScheduleHeader')}\n            subtitle={t('usage.card.workflowScheduleSubtitle')}\n            color={classes.schedules}\n            data={data?.UsageQuery.TotalCount.Workflows.Schedules}\n          />\n          <Card\n            image=\"./icons/workflows-outline.svg\"\n            header={t('usage.card.workflowRunHeader')}\n            subtitle={t('usage.card.workflowRunSubtitle')}\n            color={classes.wfRuns}\n            data={data?.UsageQuery.TotalCount.Workflows.Runs}\n          />\n          <Card\n            image=\"./icons/myhub.svg\"\n            header={t('usage.card.experimentRunHeader')}\n            subtitle={t('usage.card.experimentRunSubtitle')}\n            color={classes.expRuns}\n            data={data?.UsageQuery.TotalCount.Workflows.ExpRuns}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UsageStats;\n"]},"metadata":{},"sourceType":"module"}