{"ast":null,"code":"import _defineProperty from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/AddProbe/ProbeDetails.tsx\";\n\nimport React, { useState } from 'react';\nimport { InputField } from 'litmus-ui';\nimport { MenuItem, Select, InputLabel } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\nvar ProbeDetails = function ProbeDetails(_ref) {\n  var _probeData$httpProbe, _probeData$httpProbe2, _probeData$httpProbe3, _probeData$httpProbe4, _probeData$httpProbe5, _probeData$inputs, _probeData$inputs2, _probeData$inputs3, _probeData$inputs3$co, _probeData$inputs4, _probeData$inputs4$co, _probeData$inputs5, _probeData$inputs5$co, _probeData$inputs6, _probeData$inputs7, _probeData$inputs7$co, _probeData$inputs8, _probeData$inputs8$co, _probeData$inputs9, _probeData$inputs9$co, _probeData$inputs10, _probeData$inputs10$c, _probeData$inputs11, _probeData$inputs11$c, _probeData$inputs12, _probeData$inputs12$c, _probeData$inputs13, _probeData$inputs14, _probeData$inputs15, _probeData$inputs15$c, _probeData$inputs16, _probeData$inputs16$c;\n\n  var setProbeData = _ref.setProbeData,\n      probeData = _ref.probeData;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState({\n    criteria: '',\n    responseCode: '',\n    body: '',\n    contentType: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      httpData = _useState2[0],\n      setHttpData = _useState2[1];\n\n  var _React$useState = React.useState('get'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      httpMethod = _React$useState2[0],\n      setHttpMethod = _React$useState2[1];\n\n  var handleHttp = function handleHttp(e) {\n    if (e.target.name === 'url') {\n      setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        'httpProbe/inputs': _objectSpread(_objectSpread({}, probeData['httpProbe/inputs']), {}, _defineProperty({}, e.target.name, e.target.value))\n      }));\n    }\n\n    if (e.target.name === 'responseTimeout') {\n      setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        'httpProbe/inputs': _objectSpread(_objectSpread({}, probeData['httpProbe/inputs']), {}, _defineProperty({}, e.target.name, parseInt(e.target.value, 10)))\n      }));\n    }\n\n    if (e.target.name === 'insecureSkipVerify') {\n      setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        'httpProbe/inputs': _objectSpread(_objectSpread({}, probeData['httpProbe/inputs']), {}, _defineProperty({}, e.target.name, e.target.value === 'true'))\n      }));\n    }\n  };\n\n  var handleCmd = function handleCmd(e) {\n    if (e.target.name === 'command' || e.target.name === 'source') {\n      setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        'cmdProbe/inputs': _objectSpread(_objectSpread({}, probeData['cmdProbe/inputs']), {}, _defineProperty({}, e.target.name, e.target.value))\n      }));\n    } else {\n      setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        'cmdProbe/inputs': _objectSpread(_objectSpread({}, probeData['cmdProbe/inputs']), {}, {\n          comparator: _objectSpread(_objectSpread({}, probeData['cmdProbe/inputs'].comparator), {}, _defineProperty({}, e.target.name, e.target.value))\n        })\n      }));\n    }\n  };\n\n  var handleK8s = function handleK8s(e) {\n    if (e.target.name !== 'operation') {\n      setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        'k8sProbe/inputs': _objectSpread(_objectSpread({}, probeData['k8sProbe/inputs']), {}, {\n          command: _objectSpread(_objectSpread({}, probeData['k8sProbe/inputs'].command), {}, _defineProperty({}, e.target.name, e.target.value))\n        })\n      }));\n    } else {\n      setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        'k8sProbe/inputs': _objectSpread(_objectSpread({}, probeData['k8sProbe/inputs']), {}, _defineProperty({}, e.target.name, e.target.value))\n      }));\n    }\n  };\n\n  var handleProm = function handleProm(e) {\n    if (e.target.name === 'endpoint' || e.target.name === 'query') {\n      setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        'promProbe/inputs': _objectSpread(_objectSpread({}, probeData['promProbe/inputs']), {}, _defineProperty({}, e.target.name, e.target.value))\n      }));\n    } else {\n      setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        'promProbe/inputs': _objectSpread(_objectSpread({}, probeData['promProbe/inputs']), {}, {\n          comparator: _objectSpread(_objectSpread({}, probeData['promProbe/inputs'].comparator), {}, _defineProperty({}, e.target.name, e.target.value))\n        })\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, probeData.type === 'httpProbe' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"url\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.url')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"url\",\n    name: \"url\",\n    type: \"text\",\n    value: (_probeData$httpProbe = probeData['httpProbe/inputs']) === null || _probeData$httpProbe === void 0 ? void 0 : _probeData$httpProbe.url,\n    onChange: handleHttp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"insecure-skip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.insecure')), /*#__PURE__*/React.createElement(Select, {\n    value: typeof ((_probeData$httpProbe2 = probeData['httpProbe/inputs']) === null || _probeData$httpProbe2 === void 0 ? void 0 : _probeData$httpProbe2.insecureSkipVerify) === 'boolean' ? (_probeData$httpProbe3 = probeData['httpProbe/inputs']) === null || _probeData$httpProbe3 === void 0 ? void 0 : _probeData$httpProbe3.insecureSkipVerify.toString() : (_probeData$httpProbe4 = probeData['httpProbe/inputs']) === null || _probeData$httpProbe4 === void 0 ? void 0 : _probeData$httpProbe4.insecureSkipVerify,\n    className: classes.inputSelect,\n    variant: \"outlined\",\n    onChange: handleHttp,\n    inputProps: {\n      id: 'insecure-skip',\n      name: 'insecureSkipVerify'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"True\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"false\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"False\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"responseTimeout\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.responseTimeout'), \"(ms)\"), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"responseTimeout\",\n    name: \"responseTimeout\",\n    type: \"number\",\n    value: (_probeData$httpProbe5 = probeData['httpProbe/inputs']) === null || _probeData$httpProbe5 === void 0 ? void 0 : _probeData$httpProbe5.responseTimeout,\n    onChange: handleHttp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputSub,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.request')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"method\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.method')), /*#__PURE__*/React.createElement(Select, {\n    value: httpMethod,\n    className: classes.inputSelect,\n    variant: \"outlined\",\n    onChange: function onChange(e) {\n      setHttpMethod(e.target.value);\n    },\n    inputProps: {\n      id: 'method',\n      name: 'method'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"get\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, \"GET\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, \"POST\"))), httpMethod === 'post' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.body')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"body\",\n    name: \"body\",\n    type: \"text\",\n    value: httpData.body,\n    onChange: function onChange(e) {\n      setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        'httpProbe/inputs': _objectSpread(_objectSpread({}, probeData['httpProbe/inputs']), {}, {\n          method: {\n            post: {\n              criteria: httpData.criteria,\n              responseCode: httpData.responseCode,\n              body: e.target.value,\n              contentType: httpData.contentType\n            }\n          }\n        })\n      }));\n      setHttpData(_objectSpread(_objectSpread({}, httpData), {}, {\n        body: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"contentType\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.contentType')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"contentType\",\n    name: \"contentType\",\n    type: \"text\",\n    value: httpData.contentType,\n    onChange: function onChange(e) {\n      setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n        'httpProbe/inputs': _objectSpread(_objectSpread({}, probeData['httpProbe/inputs']), {}, {\n          method: {\n            post: {\n              criteria: httpData.criteria,\n              responseCode: httpData.responseCode,\n              body: httpData.body,\n              contentType: e.target.value\n            }\n          }\n        })\n      }));\n      setHttpData(_objectSpread(_objectSpread({}, httpData), {}, {\n        contentType: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"criteria\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.criteria')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"criteria\",\n    name: \"criteria\",\n    type: \"text\",\n    value: httpData.criteria,\n    onChange: function onChange(e) {\n      if (httpMethod === 'get') {\n        setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n          'httpProbe/inputs': _objectSpread(_objectSpread({}, probeData['httpProbe/inputs']), {}, {\n            method: {\n              get: {\n                criteria: e.target.value,\n                responseCode: httpData.responseCode\n              }\n            }\n          })\n        }));\n      }\n\n      if (httpMethod === 'post') {\n        setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n          'httpProbe/inputs': _objectSpread(_objectSpread({}, probeData['httpProbe/inputs']), {}, {\n            method: {\n              post: {\n                criteria: e.target.value,\n                responseCode: httpData.responseCode,\n                body: httpData.body,\n                contentType: httpData.contentType\n              }\n            }\n          })\n        }));\n      }\n\n      setHttpData(_objectSpread(_objectSpread({}, httpData), {}, {\n        criteria: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"response-code\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.responseCode')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"response-code\",\n    name: \"responseCode\",\n    type: \"text\",\n    value: httpData.responseCode,\n    onChange: function onChange(e) {\n      if (httpMethod === 'get') {\n        setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n          'httpProbe/inputs': _objectSpread(_objectSpread({}, probeData['httpProbe/inputs']), {}, {\n            method: {\n              get: {\n                criteria: httpData.criteria,\n                responseCode: e.target.value\n              }\n            }\n          })\n        }));\n      }\n\n      if (httpMethod === 'post') {\n        setProbeData(_objectSpread(_objectSpread({}, probeData), {}, {\n          'httpProbe/inputs': _objectSpread(_objectSpread({}, probeData['httpProbe/inputs']), {}, {\n            method: {\n              post: {\n                criteria: httpData.criteria,\n                responseCode: e.target.value,\n                body: httpData.body,\n                contentType: httpData.contentType\n              }\n            }\n          })\n        }));\n      }\n\n      setHttpData(_objectSpread(_objectSpread({}, httpData), {}, {\n        responseCode: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }\n  }))), probeData.type === 'cmdProbe' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"command\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.command')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    id: \"command\",\n    name: \"command\",\n    type: \"text\",\n    value: (_probeData$inputs = probeData.inputs) === null || _probeData$inputs === void 0 ? void 0 : _probeData$inputs.command,\n    onChange: handleCmd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"source\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.source')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    id: \"source\",\n    name: \"source\",\n    type: \"text\",\n    value: (_probeData$inputs2 = probeData.inputs) === null || _probeData$inputs2 === void 0 ? void 0 : _probeData$inputs2.source,\n    onChange: handleCmd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputSub,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 11\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.comparator')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"comparator-type\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.type')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    id: \"comparator-type\",\n    name: \"type\",\n    type: \"text\",\n    value: (_probeData$inputs3 = probeData.inputs) === null || _probeData$inputs3 === void 0 ? void 0 : (_probeData$inputs3$co = _probeData$inputs3.comparator) === null || _probeData$inputs3$co === void 0 ? void 0 : _probeData$inputs3$co.type,\n    onChange: handleCmd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"criteria\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.criteria')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    id: \"criteria\",\n    name: \"criteria\",\n    type: \"text\",\n    value: (_probeData$inputs4 = probeData.inputs) === null || _probeData$inputs4 === void 0 ? void 0 : (_probeData$inputs4$co = _probeData$inputs4.comparator) === null || _probeData$inputs4$co === void 0 ? void 0 : _probeData$inputs4$co.criteria,\n    onChange: handleCmd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.value')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    id: \"response-code\",\n    name: \"value\",\n    type: \"text\",\n    value: (_probeData$inputs5 = probeData.inputs) === null || _probeData$inputs5 === void 0 ? void 0 : (_probeData$inputs5$co = _probeData$inputs5.comparator) === null || _probeData$inputs5$co === void 0 ? void 0 : _probeData$inputs5$co.value,\n    onChange: handleCmd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }\n  }))), probeData.type === 'k8sProbe' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"operation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.operation')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"operation\",\n    name: \"operation\",\n    type: \"text\",\n    value: (_probeData$inputs6 = probeData.inputs) === null || _probeData$inputs6 === void 0 ? void 0 : _probeData$inputs6.operation,\n    onChange: handleK8s,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputSub,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 11\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.command')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.group')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"group\",\n    name: \"group\",\n    type: \"text\",\n    value: (_probeData$inputs7 = probeData.inputs) === null || _probeData$inputs7 === void 0 ? void 0 : (_probeData$inputs7$co = _probeData$inputs7.command) === null || _probeData$inputs7$co === void 0 ? void 0 : _probeData$inputs7$co.group,\n    onChange: handleK8s,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"version\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.version')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"version\",\n    name: \"version\",\n    type: \"text\",\n    value: (_probeData$inputs8 = probeData.inputs) === null || _probeData$inputs8 === void 0 ? void 0 : (_probeData$inputs8$co = _probeData$inputs8.command) === null || _probeData$inputs8$co === void 0 ? void 0 : _probeData$inputs8$co.version,\n    onChange: handleK8s,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"resource\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.resource')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"resource\",\n    name: \"resource\",\n    type: \"text\",\n    value: (_probeData$inputs9 = probeData.inputs) === null || _probeData$inputs9 === void 0 ? void 0 : (_probeData$inputs9$co = _probeData$inputs9.command) === null || _probeData$inputs9$co === void 0 ? void 0 : _probeData$inputs9$co.resource,\n    onChange: handleK8s,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"namespace\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.namespace')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"namespace\",\n    name: \"namespace\",\n    type: \"text\",\n    value: (_probeData$inputs10 = probeData.inputs) === null || _probeData$inputs10 === void 0 ? void 0 : (_probeData$inputs10$c = _probeData$inputs10.command) === null || _probeData$inputs10$c === void 0 ? void 0 : _probeData$inputs10$c.namespace,\n    onChange: handleK8s,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"field-selector\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.fieldSel')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"field-selector\",\n    name: \"fieldSelector\",\n    type: \"text\",\n    value: (_probeData$inputs11 = probeData.inputs) === null || _probeData$inputs11 === void 0 ? void 0 : (_probeData$inputs11$c = _probeData$inputs11.command) === null || _probeData$inputs11$c === void 0 ? void 0 : _probeData$inputs11$c.fieldSelector,\n    onChange: handleK8s,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"label-selector\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.labelSel')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"label-selector\",\n    name: \"labelSelector\",\n    type: \"text\",\n    value: (_probeData$inputs12 = probeData.inputs) === null || _probeData$inputs12 === void 0 ? void 0 : (_probeData$inputs12$c = _probeData$inputs12.command) === null || _probeData$inputs12$c === void 0 ? void 0 : _probeData$inputs12$c.labelSelector,\n    onChange: handleK8s,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 13\n    }\n  }))), probeData.type === 'promProbe' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"endpoint\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.endpoint')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"endpoint\",\n    name: \"endpoint\",\n    type: \"text\",\n    value: (_probeData$inputs13 = probeData.inputs) === null || _probeData$inputs13 === void 0 ? void 0 : _probeData$inputs13.endpoint,\n    onChange: handleProm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"query\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.query')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"query\",\n    name: \"query\",\n    type: \"text\",\n    value: (_probeData$inputs14 = probeData.inputs) === null || _probeData$inputs14 === void 0 ? void 0 : _probeData$inputs14.query,\n    onChange: handleProm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputSub,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 11\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.comparator')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"criteria\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.criteria')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"criteria\",\n    name: \"criteria\",\n    type: \"text\",\n    value: (_probeData$inputs15 = probeData.inputs) === null || _probeData$inputs15 === void 0 ? void 0 : (_probeData$inputs15$c = _probeData$inputs15.comparator) === null || _probeData$inputs15$c === void 0 ? void 0 : _probeData$inputs15$c.criteria,\n    onChange: handleProm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFormField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.formLabel,\n    htmlFor: \"value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.tuneWorkflow.addProbe.inputLabels.value')), /*#__PURE__*/React.createElement(InputField, {\n    variant: \"primary\",\n    width: \"50%\",\n    id: \"value\",\n    name: \"value\",\n    type: \"text\",\n    value: (_probeData$inputs16 = probeData.inputs) === null || _probeData$inputs16 === void 0 ? void 0 : (_probeData$inputs16$c = _probeData$inputs16.comparator) === null || _probeData$inputs16$c === void 0 ? void 0 : _probeData$inputs16$c.value,\n    onChange: handleProm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default ProbeDetails;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/AddProbe/ProbeDetails.tsx"],"names":["React","useState","InputField","MenuItem","Select","InputLabel","useTranslation","useStyles","ProbeDetails","setProbeData","probeData","classes","t","criteria","responseCode","body","contentType","httpData","setHttpData","httpMethod","setHttpMethod","handleHttp","e","target","name","value","parseInt","handleCmd","comparator","handleK8s","command","handleProm","type","formField","formLabel","url","insecureSkipVerify","toString","inputSelect","id","responseTimeout","inputSub","inputFormField","method","post","get","inputs","source","operation","group","version","resource","namespace","fieldSelector","labelSelector","endpoint","query"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { InputField } from 'litmus-ui';\nimport { MenuItem, Select, InputLabel } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\ninterface ProbeDetailsProps {\n  setProbeData: any;\n  probeData: any;\n}\n\ninterface HTTPDataType {\n  criteria: string;\n  responseCode: string;\n  body: string;\n  contentType: string;\n}\n\nconst ProbeDetails: React.FC<ProbeDetailsProps> = ({\n  setProbeData,\n  probeData,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [httpData, setHttpData] = useState<HTTPDataType>({\n    criteria: '',\n    responseCode: '',\n    body: '',\n    contentType: '',\n  });\n  const [httpMethod, setHttpMethod] = React.useState('get');\n\n  const handleHttp = (\n    e: React.ChangeEvent<\n      | HTMLInputElement\n      | HTMLTextAreaElement\n      | { name?: string | undefined; value: unknown }\n    >\n  ) => {\n    if (e.target.name === 'url') {\n      setProbeData({\n        ...probeData,\n        'httpProbe/inputs': {\n          ...probeData['httpProbe/inputs'],\n          [e.target.name]: e.target.value,\n        },\n      });\n    }\n    if (e.target.name === 'responseTimeout') {\n      setProbeData({\n        ...probeData,\n        'httpProbe/inputs': {\n          ...probeData['httpProbe/inputs'],\n          [e.target.name]: parseInt(e.target.value as string, 10),\n        },\n      });\n    }\n    if (e.target.name === 'insecureSkipVerify') {\n      setProbeData({\n        ...probeData,\n        'httpProbe/inputs': {\n          ...probeData['httpProbe/inputs'],\n          [e.target.name]: e.target.value === 'true',\n        },\n      });\n    }\n  };\n\n  const handleCmd = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    if (e.target.name === 'command' || e.target.name === 'source') {\n      setProbeData({\n        ...probeData,\n        'cmdProbe/inputs': {\n          ...probeData['cmdProbe/inputs'],\n          [e.target.name]: e.target.value,\n        },\n      });\n    } else {\n      setProbeData({\n        ...probeData,\n        'cmdProbe/inputs': {\n          ...probeData['cmdProbe/inputs'],\n          comparator: {\n            ...probeData['cmdProbe/inputs'].comparator,\n            [e.target.name]: e.target.value,\n          },\n        },\n      });\n    }\n  };\n\n  const handleK8s = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    if (e.target.name !== 'operation') {\n      setProbeData({\n        ...probeData,\n        'k8sProbe/inputs': {\n          ...probeData['k8sProbe/inputs'],\n          command: {\n            ...probeData['k8sProbe/inputs'].command,\n            [e.target.name]: e.target.value,\n          },\n        },\n      });\n    } else {\n      setProbeData({\n        ...probeData,\n        'k8sProbe/inputs': {\n          ...probeData['k8sProbe/inputs'],\n          [e.target.name]: e.target.value,\n        },\n      });\n    }\n  };\n\n  const handleProm = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    if (e.target.name === 'endpoint' || e.target.name === 'query') {\n      setProbeData({\n        ...probeData,\n        'promProbe/inputs': {\n          ...probeData['promProbe/inputs'],\n          [e.target.name]: e.target.value,\n        },\n      });\n    } else {\n      setProbeData({\n        ...probeData,\n        'promProbe/inputs': {\n          ...probeData['promProbe/inputs'],\n          comparator: {\n            ...probeData['promProbe/inputs'].comparator,\n            [e.target.name]: e.target.value,\n          },\n        },\n      });\n    }\n  };\n\n  return (\n    <>\n      {probeData.type === 'httpProbe' && (\n        <>\n          <div className={classes.formField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"url\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.url')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"url\"\n              name=\"url\"\n              type=\"text\"\n              value={probeData['httpProbe/inputs']?.url}\n              onChange={handleHttp}\n            />\n          </div>\n          <div className={classes.formField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"insecure-skip\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.insecure')}\n            </InputLabel>\n            <Select\n              value={\n                typeof probeData['httpProbe/inputs']?.insecureSkipVerify ===\n                'boolean'\n                  ? probeData['httpProbe/inputs']?.insecureSkipVerify.toString()\n                  : probeData['httpProbe/inputs']?.insecureSkipVerify\n              }\n              className={classes.inputSelect}\n              variant=\"outlined\"\n              onChange={handleHttp}\n              inputProps={{\n                id: 'insecure-skip',\n                name: 'insecureSkipVerify',\n              }}\n            >\n              <MenuItem value=\"true\">True</MenuItem>\n              <MenuItem value=\"false\">False</MenuItem>\n            </Select>\n          </div>\n          <div className={classes.formField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"responseTimeout\">\n              {t(\n                'createWorkflow.tuneWorkflow.addProbe.inputLabels.responseTimeout'\n              )}\n              (ms)\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"responseTimeout\"\n              name=\"responseTimeout\"\n              type=\"number\"\n              value={probeData['httpProbe/inputs']?.responseTimeout}\n              onChange={handleHttp}\n            />\n          </div>\n          <div className={classes.inputSub}>\n            {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.request')}\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"method\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.method')}\n            </InputLabel>\n            <Select\n              value={httpMethod}\n              className={classes.inputSelect}\n              variant=\"outlined\"\n              onChange={(e) => {\n                setHttpMethod(e.target.value as string);\n              }}\n              inputProps={{\n                id: 'method',\n                name: 'method',\n              }}\n            >\n              <MenuItem value=\"get\">GET</MenuItem>\n              <MenuItem value=\"post\">POST</MenuItem>\n            </Select>\n          </div>\n          {httpMethod === 'post' && (\n            <>\n              <div className={classes.inputFormField}>\n                <InputLabel className={classes.formLabel} htmlFor=\"body\">\n                  {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.body')}\n                </InputLabel>\n                <InputField\n                  variant=\"primary\"\n                  width=\"50%\"\n                  id=\"body\"\n                  name=\"body\"\n                  type=\"text\"\n                  value={httpData.body}\n                  onChange={(e) => {\n                    setProbeData({\n                      ...probeData,\n                      'httpProbe/inputs': {\n                        ...probeData['httpProbe/inputs'],\n                        method: {\n                          post: {\n                            criteria: httpData.criteria,\n                            responseCode: httpData.responseCode,\n                            body: e.target.value,\n                            contentType: httpData.contentType,\n                          },\n                        },\n                      },\n                    });\n                    setHttpData({\n                      ...httpData,\n                      body: e.target.value,\n                    });\n                  }}\n                />\n              </div>\n              <div className={classes.inputFormField}>\n                <InputLabel className={classes.formLabel} htmlFor=\"contentType\">\n                  {t(\n                    'createWorkflow.tuneWorkflow.addProbe.inputLabels.contentType'\n                  )}\n                </InputLabel>\n                <InputField\n                  variant=\"primary\"\n                  width=\"50%\"\n                  id=\"contentType\"\n                  name=\"contentType\"\n                  type=\"text\"\n                  value={httpData.contentType}\n                  onChange={(e) => {\n                    setProbeData({\n                      ...probeData,\n                      'httpProbe/inputs': {\n                        ...probeData['httpProbe/inputs'],\n                        method: {\n                          post: {\n                            criteria: httpData.criteria,\n                            responseCode: httpData.responseCode,\n                            body: httpData.body,\n                            contentType: e.target.value,\n                          },\n                        },\n                      },\n                    });\n                    setHttpData({\n                      ...httpData,\n                      contentType: e.target.value,\n                    });\n                  }}\n                />\n              </div>\n            </>\n          )}\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"criteria\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.criteria')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"criteria\"\n              name=\"criteria\"\n              type=\"text\"\n              value={httpData.criteria}\n              onChange={(e) => {\n                if (httpMethod === 'get') {\n                  setProbeData({\n                    ...probeData,\n                    'httpProbe/inputs': {\n                      ...probeData['httpProbe/inputs'],\n                      method: {\n                        get: {\n                          criteria: e.target.value,\n                          responseCode: httpData.responseCode,\n                        },\n                      },\n                    },\n                  });\n                }\n                if (httpMethod === 'post') {\n                  setProbeData({\n                    ...probeData,\n                    'httpProbe/inputs': {\n                      ...probeData['httpProbe/inputs'],\n                      method: {\n                        post: {\n                          criteria: e.target.value,\n                          responseCode: httpData.responseCode,\n                          body: httpData.body,\n                          contentType: httpData.contentType,\n                        },\n                      },\n                    },\n                  });\n                }\n                setHttpData({\n                  ...httpData,\n                  criteria: e.target.value,\n                });\n              }}\n            />\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"response-code\">\n              {t(\n                'createWorkflow.tuneWorkflow.addProbe.inputLabels.responseCode'\n              )}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"response-code\"\n              name=\"responseCode\"\n              type=\"text\"\n              value={httpData.responseCode}\n              onChange={(e) => {\n                if (httpMethod === 'get') {\n                  setProbeData({\n                    ...probeData,\n                    'httpProbe/inputs': {\n                      ...probeData['httpProbe/inputs'],\n                      method: {\n                        get: {\n                          criteria: httpData.criteria,\n                          responseCode: e.target.value,\n                        },\n                      },\n                    },\n                  });\n                }\n                if (httpMethod === 'post') {\n                  setProbeData({\n                    ...probeData,\n                    'httpProbe/inputs': {\n                      ...probeData['httpProbe/inputs'],\n                      method: {\n                        post: {\n                          criteria: httpData.criteria,\n                          responseCode: e.target.value,\n                          body: httpData.body,\n                          contentType: httpData.contentType,\n                        },\n                      },\n                    },\n                  });\n                }\n                setHttpData({\n                  ...httpData,\n                  responseCode: e.target.value,\n                });\n              }}\n            />\n          </div>\n        </>\n      )}\n\n      {probeData.type === 'cmdProbe' && (\n        <>\n          <div className={classes.formField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"command\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.command')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              id=\"command\"\n              name=\"command\"\n              type=\"text\"\n              value={probeData.inputs?.command}\n              onChange={handleCmd}\n            />\n          </div>\n          <div className={classes.formField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"source\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.source')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              id=\"source\"\n              name=\"source\"\n              type=\"text\"\n              value={probeData.inputs?.source}\n              onChange={handleCmd}\n            />\n          </div>\n          <div className={classes.inputSub}>\n            {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.comparator')}\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"comparator-type\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.type')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              id=\"comparator-type\"\n              name=\"type\"\n              type=\"text\"\n              value={probeData.inputs?.comparator?.type}\n              onChange={handleCmd}\n            />\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"criteria\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.criteria')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              id=\"criteria\"\n              name=\"criteria\"\n              type=\"text\"\n              value={probeData.inputs?.comparator?.criteria}\n              onChange={handleCmd}\n            />\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"value\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.value')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              id=\"response-code\"\n              name=\"value\"\n              type=\"text\"\n              value={probeData.inputs?.comparator?.value}\n              onChange={handleCmd}\n            />\n          </div>\n        </>\n      )}\n\n      {probeData.type === 'k8sProbe' && (\n        <>\n          <div className={classes.formField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"operation\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.operation')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"operation\"\n              name=\"operation\"\n              type=\"text\"\n              value={probeData.inputs?.operation}\n              onChange={handleK8s}\n            />\n          </div>\n          <div className={classes.inputSub}>\n            {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.command')}\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"group\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.group')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"group\"\n              name=\"group\"\n              type=\"text\"\n              value={probeData.inputs?.command?.group}\n              onChange={handleK8s}\n            />\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"version\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.version')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"version\"\n              name=\"version\"\n              type=\"text\"\n              value={probeData.inputs?.command?.version}\n              onChange={handleK8s}\n            />\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"resource\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.resource')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"resource\"\n              name=\"resource\"\n              type=\"text\"\n              value={probeData.inputs?.command?.resource}\n              onChange={handleK8s}\n            />\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"namespace\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.namespace')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"namespace\"\n              name=\"namespace\"\n              type=\"text\"\n              value={probeData.inputs?.command?.namespace}\n              onChange={handleK8s}\n            />\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"field-selector\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.fieldSel')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"field-selector\"\n              name=\"fieldSelector\"\n              type=\"text\"\n              value={probeData.inputs?.command?.fieldSelector}\n              onChange={handleK8s}\n            />\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"label-selector\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.labelSel')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"label-selector\"\n              name=\"labelSelector\"\n              type=\"text\"\n              value={probeData.inputs?.command?.labelSelector}\n              onChange={handleK8s}\n            />\n          </div>\n        </>\n      )}\n\n      {probeData.type === 'promProbe' && (\n        <>\n          <div className={classes.formField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"endpoint\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.endpoint')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"endpoint\"\n              name=\"endpoint\"\n              type=\"text\"\n              value={probeData.inputs?.endpoint}\n              onChange={handleProm}\n            />\n          </div>\n          <div className={classes.formField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"query\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.query')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"query\"\n              name=\"query\"\n              type=\"text\"\n              value={probeData.inputs?.query}\n              onChange={handleProm}\n            />\n          </div>\n          <div className={classes.inputSub}>\n            {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.comparator')}\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"criteria\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.criteria')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"criteria\"\n              name=\"criteria\"\n              type=\"text\"\n              value={probeData.inputs?.comparator?.criteria}\n              onChange={handleProm}\n            />\n          </div>\n          <div className={classes.inputFormField}>\n            <InputLabel className={classes.formLabel} htmlFor=\"value\">\n              {t('createWorkflow.tuneWorkflow.addProbe.inputLabels.value')}\n            </InputLabel>\n            <InputField\n              variant=\"primary\"\n              width=\"50%\"\n              id=\"value\"\n              name=\"value\"\n              type=\"text\"\n              value={probeData.inputs?.comparator?.value}\n              onChange={handleProm}\n            />\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProbeDetails;\n"]},"metadata":{},"sourceType":"module"}