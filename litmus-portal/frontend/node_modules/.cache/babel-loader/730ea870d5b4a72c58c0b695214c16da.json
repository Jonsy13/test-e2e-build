{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/UserDetails/index.tsx\";\n\nimport { Avatar, Typography } from '@material-ui/core';\nimport { ButtonOutlined, InputField, Modal } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { validateEmail, validateStartEmptySpacing } from '../../utils/validate';\nimport ChooseAvatarModal from '../ChooseAvatarModal';\nimport useStyles from './styles';\n\n// Displays the personals details on the \"accounts\" tab\nvar UserDetails = function UserDetails(_ref) {\n  var handleNameChange = _ref.handleNameChange,\n      nameValue = _ref.nameValue,\n      userValue = _ref.userValue,\n      handleEmailChange = _ref.handleEmailChange,\n      emailValue = _ref.emailValue,\n      handleUserChange = _ref.handleUserChange,\n      isUsernameDisabled = _ref.isUsernameDisabled,\n      isNameDisabled = _ref.isNameDisabled,\n      isEmailDisabled = _ref.isEmailDisabled;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1]; // avatar image source string\n\n\n  var _useState = useState('./avatars/default.svg'),\n      _useState2 = _slicedToArray(_useState, 2),\n      avatar = _useState2[0],\n      setAvatar = _useState2[1]; // const handleOpen = () => {\n  //   setOpen(true);\n  // };\n\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, t('settings.userManagementTab.createUser.userDetails.header'))), /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    \"data-cy\": \"avatar\",\n    alt: \"User\",\n    className: classes.avatarBackground,\n    src: avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    modalActions: /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"\\u2715\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChooseAvatarModal, {\n    avatar: avatar,\n    setAvatar: setAvatar,\n    handleSubmit: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"InputName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    helperText: validateStartEmptySpacing(nameValue) ? 'Should not start with an empty space' : '',\n    disabled: isNameDisabled,\n    value: nameValue,\n    onChange: handleNameChange,\n    variant: validateStartEmptySpacing(nameValue) ? 'error' : 'primary',\n    label: t('settings.userManagementTab.createUser.userDetails.label.fullName'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"InputEmail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    helperText: validateEmail(emailValue) ? 'Should be a valid email' : '',\n    type: \"email\",\n    disabled: isEmailDisabled,\n    value: emailValue,\n    onChange: handleEmailChange,\n    variant: validateEmail(emailValue) ? 'error' : 'primary',\n    label: t('settings.userManagementTab.createUser.userDetails.label.email'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    helperText: validateStartEmptySpacing(userValue) ? t('settings.userManagementTab.createUser.userDetails.validationEmptySpace') : '',\n    label: t('settings.userManagementTab.createUser.label.username'),\n    required: true,\n    value: userValue,\n    disabled: isUsernameDisabled,\n    onChange: handleUserChange,\n    variant: validateStartEmptySpacing(userValue) ? 'error' : 'primary',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default UserDetails;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/UserDetails/index.tsx"],"names":["Avatar","Typography","ButtonOutlined","InputField","Modal","React","useState","useTranslation","validateEmail","validateStartEmptySpacing","ChooseAvatarModal","useStyles","UserDetails","handleNameChange","nameValue","userValue","handleEmailChange","emailValue","handleUserChange","isUsernameDisabled","isNameDisabled","isEmailDisabled","classes","t","open","setOpen","avatar","setAvatar","handleClose","headerText","details","dp","avatarBackground","details1"],"mappings":"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","sourcesContent":["import { Avatar, Typography } from '@material-ui/core';\nimport { ButtonOutlined, InputField, Modal } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { validateEmail, validateStartEmptySpacing } from '../../utils/validate';\nimport ChooseAvatarModal from '../ChooseAvatarModal';\nimport useStyles from './styles';\n\ninterface PersonalDetailsProps {\n  handleNameChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  nameValue: string;\n  handleUserChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  userValue: string;\n  handleEmailChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  emailValue: string;\n  isUsernameDisabled: boolean;\n  isNameDisabled: boolean;\n  isEmailDisabled: boolean;\n}\n\n// Displays the personals details on the \"accounts\" tab\nconst UserDetails: React.FC<PersonalDetailsProps> = ({\n  handleNameChange,\n  nameValue,\n  userValue,\n  handleEmailChange,\n  emailValue,\n  handleUserChange,\n  isUsernameDisabled,\n  isNameDisabled,\n  isEmailDisabled,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [open, setOpen] = React.useState(false);\n  // avatar image source string\n  const [avatar, setAvatar] = useState<string>('./avatars/default.svg');\n\n  // const handleOpen = () => {\n  //   setOpen(true);\n  // };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Typography className={classes.headerText}>\n        <strong>\n          {t('settings.userManagementTab.createUser.userDetails.header')}\n        </strong>\n      </Typography>\n      <form>\n        <div className={classes.details}>\n          <div className={classes.dp}>\n            <Avatar\n              data-cy=\"avatar\"\n              alt=\"User\"\n              className={classes.avatarBackground}\n              src={avatar}\n            />\n            {/* <Button className={classes.edit} onClick={handleOpen} disabled>\n              {t('settings.userManagementTab.createUser.userDetails.button')}\n            </Button> */}\n            <Modal\n              open={open}\n              onClose={handleClose}\n              modalActions={\n                <ButtonOutlined onClick={handleClose}>&#x2715;</ButtonOutlined>\n              }\n            >\n              <ChooseAvatarModal\n                avatar={avatar}\n                setAvatar={setAvatar}\n                handleSubmit={handleClose}\n              />\n            </Modal>\n          </div>\n          {/* Fields for details including Full name, email, username */}\n          <div className={classes.details1}>\n            <div data-cy=\"InputName\">\n              <InputField\n                helperText={\n                  validateStartEmptySpacing(nameValue)\n                    ? 'Should not start with an empty space'\n                    : ''\n                }\n                disabled={isNameDisabled}\n                value={nameValue}\n                onChange={handleNameChange}\n                variant={\n                  validateStartEmptySpacing(nameValue) ? 'error' : 'primary'\n                }\n                label={t(\n                  'settings.userManagementTab.createUser.userDetails.label.fullName'\n                )}\n              />\n            </div>\n            <div data-cy=\"InputEmail\">\n              <InputField\n                helperText={\n                  validateEmail(emailValue) ? 'Should be a valid email' : ''\n                }\n                type=\"email\"\n                disabled={isEmailDisabled}\n                value={emailValue}\n                onChange={handleEmailChange}\n                variant={validateEmail(emailValue) ? 'error' : 'primary'}\n                label={t(\n                  'settings.userManagementTab.createUser.userDetails.label.email'\n                )}\n              />\n            </div>\n            {/* Username is not editable by non admin user */}\n            <div data-cy=\"username\">\n              <InputField\n                helperText={\n                  validateStartEmptySpacing(userValue)\n                    ? t(\n                        'settings.userManagementTab.createUser.userDetails.validationEmptySpace'\n                      )\n                    : ''\n                }\n                label={t(\n                  'settings.userManagementTab.createUser.label.username'\n                )}\n                required\n                value={userValue}\n                disabled={isUsernameDisabled}\n                onChange={handleUserChange}\n                variant={\n                  validateStartEmptySpacing(userValue) ? 'error' : 'primary'\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default UserDetails;\n"]},"metadata":{},"sourceType":"module"}