{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable no-unused-expressions */import{useQuery}from'@apollo/client';import{Paper,Table,TableBody,TableCell,TableContainer,TablePagination,TableRow,Typography}from'@material-ui/core';import moment from'moment';import React from'react';import{useTranslation}from'react-i18next';import Loader from'../../../../components/Loader';import{LIST_DASHBOARD}from'../../../../graphql/queries';import{getProjectID}from'../../../../utils/getSearchParams';import{sortAlphaAsc,sortAlphaDesc,sortNumAsc,sortNumDesc}from'../../../../utils/sort';import useStyles from'./styles';import TableData from'./TableData';import TableHeader from'./TableHeader';import TableToolBar from'./TableToolbar';var DashboardTable=function DashboardTable(){var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _React$useState=React.useState({range:{startDate:'all',endDate:'all'},selectedDataSourceType:'All',selectedDashboardType:'All',sortData:{name:{sort:false,ascending:true},lastViewed:{sort:true,ascending:false},agent:{sort:false,ascending:true},dataSourceType:{sort:false,ascending:true},dashboardType:{sort:false,ascending:true}},selectedAgentName:'All',searchTokens:['']}),_React$useState2=_slicedToArray(_React$useState,2),filter=_React$useState2[0],setFilter=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),page=_React$useState4[0],setPage=_React$useState4[1];var _React$useState5=React.useState(5),_React$useState6=_slicedToArray(_React$useState5,2),rowsPerPage=_React$useState6[0],setRowsPerPage=_React$useState6[1];var projectID=getProjectID();var handleChangePage=function handleChangePage(event,newPage){setPage(newPage);};var handleChangeRowsPerPage=function handleChangeRowsPerPage(event){setRowsPerPage(parseInt(event.target.value,10));setPage(0);};// Apollo query to get the dashboard data\nvar _useQuery=useQuery(LIST_DASHBOARD,{variables:{projectID:projectID},fetchPolicy:'cache-and-network'}),data=_useQuery.data,loading=_useQuery.loading,error=_useQuery.error;var getDataSourceType=function getDataSourceType(searchingData){var uniqueList=[];searchingData.forEach(function(data){if(!uniqueList.includes(data.ds_type)){uniqueList.push(data.ds_type);}});return uniqueList;};var getDashboardType=function getDashboardType(searchingData){var uniqueList=[];searchingData.forEach(function(data){if(!uniqueList.includes(data.db_type)){uniqueList.push(data.db_type);}});return uniqueList;};var getAgentName=function getAgentName(searchingData){var uniqueList=[];searchingData.forEach(function(data){if(!uniqueList.includes(data.cluster_name)){uniqueList.push(data.cluster_name);}});return uniqueList;};var payload=data?!data.ListDashboard?[]:data.ListDashboard.filter(function(db){return filter.searchTokens.every(function(s){return db.db_name.toLowerCase().includes(s)||db.db_type.toLowerCase().includes(s)||db.ds_type.toLowerCase().includes(s)||db.cluster_name.toLowerCase().includes(s);});}).filter(function(data){return filter.selectedDataSourceType==='All'?true:data.ds_type===filter.selectedDataSourceType;}).filter(function(data){return filter.selectedDashboardType==='All'?true:data.db_type===filter.selectedDashboardType;}).filter(function(data){return filter.selectedAgentName==='All'?true:data.cluster_name===filter.selectedAgentName;}).filter(function(data){return filter.range.startDate==='all'||filter.range.startDate&&filter.range.endDate===undefined?true:parseInt(data.updated_at,10)*1000>=new Date(moment(filter.range.startDate).format()).getTime()&&parseInt(data.updated_at,10)*1000<=new Date(new Date(moment(filter.range.endDate).format()).setHours(23,59,59)).getTime();}).sort(function(a,b){// Sorting based on unique fields\nif(filter.sortData.name.sort){var x=a.db_name;var y=b.db_name;return filter.sortData.name.ascending?sortAlphaAsc(x,y):sortAlphaDesc(x,y);}if(filter.sortData.lastViewed.sort){var _x=parseInt(a.updated_at,10);var _y=parseInt(b.updated_at,10);return filter.sortData.lastViewed.ascending?sortNumAsc(_y,_x):sortNumDesc(_y,_x);}if(filter.sortData.dashboardType.sort){var _x2=a.db_type;var _y2=b.db_type;return filter.sortData.dashboardType.ascending?sortAlphaAsc(_x2,_y2):sortAlphaDesc(_x2,_y2);}if(filter.sortData.dataSourceType.sort){var _x3=a.ds_type;var _y3=b.ds_type;return filter.sortData.dataSourceType.ascending?sortAlphaAsc(_x3,_y3):sortAlphaDesc(_x3,_y3);}if(filter.sortData.agent.sort){var _x4=a.cluster_name;var _y4=b.cluster_name;return filter.sortData.agent.ascending?sortAlphaAsc(_x4,_y4):sortAlphaDesc(_x4,_y4);}return 0;}):[];return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Paper,null,/*#__PURE__*/React.createElement(\"section\",{className:\"Heading section\"},/*#__PURE__*/React.createElement(TableToolBar,{searchToken:filter.searchTokens[0],handleSearch:function handleSearch(event,token){return setFilter(_objectSpread(_objectSpread({},filter),{},{searchTokens:(event!==undefined?event.target.value:token||'').toLowerCase().split(' ').filter(function(s){return s!=='';})}));},dataSourceTypes:getDataSourceType(payload),dashboardTypes:getDashboardType(payload),agentNames:getAgentName(payload),callbackToSetDataSourceType:function callbackToSetDataSourceType(dataSourceType){setFilter(_objectSpread(_objectSpread({},filter),{},{selectedDataSourceType:dataSourceType}));},callbackToSetDashboardType:function callbackToSetDashboardType(dashboardType){setFilter(_objectSpread(_objectSpread({},filter),{},{selectedDashboardType:dashboardType}));},callbackToSetAgentName:function callbackToSetAgentName(agentName){setFilter(_objectSpread(_objectSpread({},filter),{},{selectedAgentName:agentName}));},callbackToSetRange:function callbackToSetRange(selectedStartDate,selectedEndDate){setFilter(_objectSpread(_objectSpread({},filter),{},{range:{startDate:selectedStartDate,endDate:selectedEndDate}}));}}))),/*#__PURE__*/React.createElement(Paper,null,/*#__PURE__*/React.createElement(\"section\",{className:\"table section\"},/*#__PURE__*/React.createElement(TableContainer,{className:classes.tableMain},/*#__PURE__*/React.createElement(Table,{\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHeader,{callBackToSort:function callBackToSort(sortConfigurations){setFilter(_objectSpread(_objectSpread({},filter),{},{sortData:sortConfigurations}));}}),/*#__PURE__*/React.createElement(TableBody,null,error?/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{colSpan:6},/*#__PURE__*/React.createElement(Typography,{align:\"center\"},t('analyticsDashboardViews.kubernetesDashboard.table.error')))):loading?/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{colSpan:6},/*#__PURE__*/React.createElement(Loader,null),/*#__PURE__*/React.createElement(Typography,{align:\"center\"},t('analyticsDashboardViews.kubernetesDashboard.table.loading')))):!payload.length?/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{colSpan:6},/*#__PURE__*/React.createElement(Typography,{align:\"center\"},t('analyticsDashboardViews.kubernetesDashboard.table.noRecords')))):payload.length>0?payload.slice(0).slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(function(data){return/*#__PURE__*/React.createElement(TableRow,{hover:true,tabIndex:-1,key:data.db_id,className:classes.tableRow},/*#__PURE__*/React.createElement(TableData,{data:data}));}):/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{colSpan:6},/*#__PURE__*/React.createElement(Typography,{align:\"center\"},t('analyticsDashboardViews.kubernetesDashboard.table.noRecords'))))))),/*#__PURE__*/React.createElement(TablePagination,{rowsPerPageOptions:[5,10,25,50],component:\"div\",count:payload.length,rowsPerPage:rowsPerPage,page:page,onChangePage:handleChangePage,onChangeRowsPerPage:handleChangeRowsPerPage,className:classes.tablePagination}))));};export default DashboardTable;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Table/index.tsx"],"names":["useQuery","Paper","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Typography","moment","React","useTranslation","Loader","LIST_DASHBOARD","getProjectID","sortAlphaAsc","sortAlphaDesc","sortNumAsc","sortNumDesc","useStyles","TableData","TableHeader","TableToolBar","DashboardTable","classes","t","useState","range","startDate","endDate","selectedDataSourceType","selectedDashboardType","sortData","name","sort","ascending","lastViewed","agent","dataSourceType","dashboardType","selectedAgentName","searchTokens","filter","setFilter","page","setPage","rowsPerPage","setRowsPerPage","projectID","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","variables","fetchPolicy","data","loading","error","getDataSourceType","searchingData","uniqueList","forEach","includes","ds_type","push","getDashboardType","db_type","getAgentName","cluster_name","payload","ListDashboard","db","every","s","db_name","toLowerCase","undefined","updated_at","Date","format","getTime","setHours","a","b","x","y","root","token","split","agentName","selectedStartDate","selectedEndDate","tableMain","sortConfigurations","length","slice","map","db_id","tableRow","tablePagination"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { useQuery } from '@apollo/client';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../../components/Loader';\nimport { LIST_DASHBOARD } from '../../../../graphql/queries';\nimport {\n  DashboardList,\n  ListDashboardResponse,\n  ListDashboardVars,\n} from '../../../../models/graphql/dashboardsDetails';\nimport { getProjectID } from '../../../../utils/getSearchParams';\nimport {\n  sortAlphaAsc,\n  sortAlphaDesc,\n  sortNumAsc,\n  sortNumDesc,\n} from '../../../../utils/sort';\nimport useStyles from './styles';\nimport TableData from './TableData';\nimport TableHeader from './TableHeader';\nimport TableToolBar from './TableToolbar';\n\ninterface RangeType {\n  startDate: string;\n  endDate: string;\n}\n\ninterface SortData {\n  lastViewed: { sort: boolean; ascending: boolean };\n  name: { sort: boolean; ascending: boolean };\n  agent: { sort: boolean; ascending: boolean };\n  dataSourceType: { sort: boolean; ascending: boolean };\n  dashboardType: { sort: boolean; ascending: boolean };\n}\n\ninterface Filter {\n  range: RangeType;\n  selectedDataSourceType: string;\n  selectedDashboardType: string;\n  sortData: SortData;\n  selectedAgentName: string;\n  searchTokens: string[];\n}\n\nconst DashboardTable: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [filter, setFilter] = React.useState<Filter>({\n    range: { startDate: 'all', endDate: 'all' },\n    selectedDataSourceType: 'All',\n    selectedDashboardType: 'All',\n    sortData: {\n      name: { sort: false, ascending: true },\n      lastViewed: { sort: true, ascending: false },\n      agent: { sort: false, ascending: true },\n      dataSourceType: { sort: false, ascending: true },\n      dashboardType: { sort: false, ascending: true },\n    },\n    selectedAgentName: 'All',\n    searchTokens: [''],\n  });\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const projectID = getProjectID();\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Apollo query to get the dashboard data\n  const { data, loading, error } = useQuery<DashboardList, ListDashboardVars>(\n    LIST_DASHBOARD,\n    {\n      variables: { projectID },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  const getDataSourceType = (searchingData: ListDashboardResponse[]) => {\n    const uniqueList: string[] = [];\n    searchingData.forEach((data) => {\n      if (!uniqueList.includes(data.ds_type)) {\n        uniqueList.push(data.ds_type);\n      }\n    });\n    return uniqueList;\n  };\n\n  const getDashboardType = (searchingData: ListDashboardResponse[]) => {\n    const uniqueList: string[] = [];\n    searchingData.forEach((data) => {\n      if (!uniqueList.includes(data.db_type)) {\n        uniqueList.push(data.db_type);\n      }\n    });\n    return uniqueList;\n  };\n\n  const getAgentName = (searchingData: ListDashboardResponse[]) => {\n    const uniqueList: string[] = [];\n    searchingData.forEach((data) => {\n      if (!uniqueList.includes(data.cluster_name)) {\n        uniqueList.push(data.cluster_name);\n      }\n    });\n    return uniqueList;\n  };\n\n  const payload: ListDashboardResponse[] = data\n    ? !data.ListDashboard\n      ? []\n      : data.ListDashboard.filter((db: ListDashboardResponse) => {\n          return filter.searchTokens.every(\n            (s: string) =>\n              db.db_name.toLowerCase().includes(s) ||\n              db.db_type.toLowerCase().includes(s) ||\n              db.ds_type.toLowerCase().includes(s) ||\n              db.cluster_name.toLowerCase().includes(s)\n          );\n        })\n          .filter((data) => {\n            return filter.selectedDataSourceType === 'All'\n              ? true\n              : data.ds_type === filter.selectedDataSourceType;\n          })\n          .filter((data) => {\n            return filter.selectedDashboardType === 'All'\n              ? true\n              : data.db_type === filter.selectedDashboardType;\n          })\n          .filter((data) => {\n            return filter.selectedAgentName === 'All'\n              ? true\n              : data.cluster_name === filter.selectedAgentName;\n          })\n          .filter((data) => {\n            return filter.range.startDate === 'all' ||\n              (filter.range.startDate && filter.range.endDate === undefined)\n              ? true\n              : parseInt(data.updated_at, 10) * 1000 >=\n                  new Date(moment(filter.range.startDate).format()).getTime() &&\n                  parseInt(data.updated_at, 10) * 1000 <=\n                    new Date(\n                      new Date(moment(filter.range.endDate).format()).setHours(\n                        23,\n                        59,\n                        59\n                      )\n                    ).getTime();\n          })\n          .sort((a: ListDashboardResponse, b: ListDashboardResponse) => {\n            // Sorting based on unique fields\n            if (filter.sortData.name.sort) {\n              const x = a.db_name;\n              const y = b.db_name;\n              return filter.sortData.name.ascending\n                ? sortAlphaAsc(x, y)\n                : sortAlphaDesc(x, y);\n            }\n            if (filter.sortData.lastViewed.sort) {\n              const x = parseInt(a.updated_at, 10);\n              const y = parseInt(b.updated_at, 10);\n              return filter.sortData.lastViewed.ascending\n                ? sortNumAsc(y, x)\n                : sortNumDesc(y, x);\n            }\n            if (filter.sortData.dashboardType.sort) {\n              const x = a.db_type;\n              const y = b.db_type;\n              return filter.sortData.dashboardType.ascending\n                ? sortAlphaAsc(x, y)\n                : sortAlphaDesc(x, y);\n            }\n            if (filter.sortData.dataSourceType.sort) {\n              const x = a.ds_type;\n              const y = b.ds_type;\n              return filter.sortData.dataSourceType.ascending\n                ? sortAlphaAsc(x, y)\n                : sortAlphaDesc(x, y);\n            }\n            if (filter.sortData.agent.sort) {\n              const x = a.cluster_name;\n              const y = b.cluster_name;\n              return filter.sortData.agent.ascending\n                ? sortAlphaAsc(x, y)\n                : sortAlphaDesc(x, y);\n            }\n            return 0;\n          })\n    : [];\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <section className=\"Heading section\">\n          <TableToolBar\n            searchToken={filter.searchTokens[0]}\n            handleSearch={(\n              event: React.ChangeEvent<{ value: unknown }> | undefined,\n              token: string | undefined\n            ) =>\n              setFilter({\n                ...filter,\n                searchTokens: (event !== undefined\n                  ? ((event.target as HTMLInputElement).value as string)\n                  : token || ''\n                )\n                  .toLowerCase()\n                  .split(' ')\n                  .filter((s) => s !== ''),\n              })\n            }\n            dataSourceTypes={getDataSourceType(payload)}\n            dashboardTypes={getDashboardType(payload)}\n            agentNames={getAgentName(payload)}\n            callbackToSetDataSourceType={(dataSourceType: string) => {\n              setFilter({\n                ...filter,\n                selectedDataSourceType: dataSourceType,\n              });\n            }}\n            callbackToSetDashboardType={(dashboardType: string) => {\n              setFilter({\n                ...filter,\n                selectedDashboardType: dashboardType,\n              });\n            }}\n            callbackToSetAgentName={(agentName: string) => {\n              setFilter({\n                ...filter,\n                selectedAgentName: agentName,\n              });\n            }}\n            callbackToSetRange={(\n              selectedStartDate: string,\n              selectedEndDate: string\n            ) => {\n              setFilter({\n                ...filter,\n                range: {\n                  startDate: selectedStartDate,\n                  endDate: selectedEndDate,\n                },\n              });\n            }}\n          />\n        </section>\n      </Paper>\n      <Paper>\n        <section className=\"table section\">\n          <TableContainer className={classes.tableMain}>\n            <Table aria-label=\"simple table\">\n              <TableHeader\n                callBackToSort={(sortConfigurations: SortData) => {\n                  setFilter({\n                    ...filter,\n                    sortData: sortConfigurations,\n                  });\n                }}\n              />\n              <TableBody>\n                {error ? (\n                  <TableRow>\n                    <TableCell colSpan={6}>\n                      <Typography align=\"center\">\n                        {t(\n                          'analyticsDashboardViews.kubernetesDashboard.table.error'\n                        )}\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ) : loading ? (\n                  <TableRow>\n                    <TableCell colSpan={6}>\n                      <Loader />\n                      <Typography align=\"center\">\n                        {t(\n                          'analyticsDashboardViews.kubernetesDashboard.table.loading'\n                        )}\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ) : !payload.length ? (\n                  <TableRow>\n                    <TableCell colSpan={6}>\n                      <Typography align=\"center\">\n                        {t(\n                          'analyticsDashboardViews.kubernetesDashboard.table.noRecords'\n                        )}\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ) : payload.length > 0 ? (\n                  payload\n                    .slice(0)\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((data: ListDashboardResponse) => {\n                      return (\n                        <TableRow\n                          hover\n                          tabIndex={-1}\n                          key={data.db_id}\n                          className={classes.tableRow}\n                        >\n                          <TableData data={data} />\n                        </TableRow>\n                      );\n                    })\n                ) : (\n                  <TableRow>\n                    <TableCell colSpan={6}>\n                      <Typography align=\"center\">\n                        {t(\n                          'analyticsDashboardViews.kubernetesDashboard.table.noRecords'\n                        )}\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={payload.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            className={classes.tablePagination}\n          />\n        </section>\n      </Paper>\n    </div>\n  );\n};\n\nexport default DashboardTable;\n"]},"metadata":{},"sourceType":"module"}