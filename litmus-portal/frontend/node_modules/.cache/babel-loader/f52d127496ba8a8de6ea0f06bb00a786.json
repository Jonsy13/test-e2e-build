{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/EditSchedule/index.tsx\";\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport cronstrue from 'cronstrue';\nimport { ButtonFilled, ButtonOutlined, Modal } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport YAML from 'yaml';\nimport AdjustedWeights from '../../components/AdjustedWeights';\nimport BackButton from '../../components/Button/BackButton';\nimport Loader from '../../components/Loader';\nimport YamlEditor from '../../components/YamlEditor/Editor';\nimport { parseYamlValidations } from '../../components/YamlEditor/Validations';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { UPDATE_SCHEDULE } from '../../graphql/mutations';\nimport { WORKFLOW_LIST_DETAILS } from '../../graphql/queries';\nimport useActions from '../../redux/actions';\nimport * as TabActions from '../../redux/actions/tabs';\nimport * as TemplateSelectionActions from '../../redux/actions/template';\nimport * as WorkflowActions from '../../redux/actions/workflow';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport { fetchWorkflowNameFromManifest } from '../../utils/yamlUtils';\nimport { useStyles } from './styles';\n\nvar EditSchedule = function EditSchedule() {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState({\n    name: '',\n    description: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      workflow = _useState2[0],\n      setWorkflow = _useState2[1];\n\n  var _useState3 = useState([{\n    experimentName: '',\n    weight: 0\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      weights = _useState4[0],\n      setWeights = _useState4[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      finishModalOpen = _useState6[0],\n      setFinishModalOpen = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorModal = _useState8[0],\n      setErrorModal = _useState8[1];\n\n  var template = useActions(TemplateSelectionActions);\n  var workflowData = useSelector(function (state) {\n    return state.workflowData;\n  });\n  var workflowAction = useActions(WorkflowActions); // Get Parameters from URL\n\n  var paramData = useParams();\n  var projectID = getProjectID();\n  var userRole = getProjectRole();\n\n  var _useQuery = useQuery(WORKFLOW_LIST_DETAILS, {\n    variables: {\n      workflowInput: {\n        project_id: projectID,\n        filter: {\n          workflow_name: paramData.workflowName\n        }\n      }\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  var manifest = useSelector(function (state) {\n    return state.workflowManifest.manifest;\n  });\n  var wfDetails = data && data.ListWorkflow.workflows[0];\n  var doc = new YAML.Document();\n  var w = [];\n  var cronSyntax = workflowData.cronSyntax,\n      clusterid = workflowData.clusterid,\n      clustername = workflowData.clustername;\n\n  var _useMutation = useMutation(UPDATE_SCHEDULE, {\n    onCompleted: function onCompleted() {\n      setFinishModalOpen(true);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createChaosWorkFlow = _useMutation2[0],\n      workflowError = _useMutation2[1].error;\n\n  var handleMutation = function handleMutation() {\n    if (workflow.name.length !== 0 && workflow.description.length !== 0 && weights.length !== 0) {\n      var weightData = [];\n      weights.forEach(function (data) {\n        weightData.push({\n          experiment_name: data.experimentName,\n          weightage: data.weight\n        });\n      });\n      /* JSON.stringify takes 3 parameters [object to be converted,\n      a function to alter the conversion, spaces to be shown in final result for indentation ] */\n\n      var yml = YAML.parse(manifest);\n      var yamlJson = JSON.stringify(yml, null, 2); // Converted to Stringified JSON\n\n      var chaosWorkFlowInputs = {\n        workflow_id: wfDetails === null || wfDetails === void 0 ? void 0 : wfDetails.workflow_id,\n        workflow_manifest: yamlJson,\n        cronSyntax: cronSyntax,\n        workflow_name: fetchWorkflowNameFromManifest(manifest),\n        workflow_description: workflow.description,\n        isCustomWorkflow: false,\n        weightages: weightData,\n        project_id: projectID,\n        cluster_id: clusterid\n      };\n      createChaosWorkFlow({\n        variables: {\n          ChaosWorkFlowInput: chaosWorkFlowInputs\n        }\n      });\n    }\n  };\n\n  useEffect(function () {\n    localforage.getItem('editSchedule').then(function (isCronEdited) {\n      if (wfDetails !== undefined) {\n        for (var i = 0; i < (wfDetails === null || wfDetails === void 0 ? void 0 : wfDetails.weightages.length); i++) {\n          w.push({\n            experimentName: wfDetails === null || wfDetails === void 0 ? void 0 : wfDetails.weightages[i].experiment_name,\n            weight: wfDetails === null || wfDetails === void 0 ? void 0 : wfDetails.weightages[i].weightage\n          });\n        }\n\n        doc.contents = JSON.parse(wfDetails === null || wfDetails === void 0 ? void 0 : wfDetails.workflow_manifest);\n        workflowAction.setWorkflowManifest({\n          manifest: isCronEdited === null ? doc.toString() : manifest\n        });\n        setWorkflow({\n          name: wfDetails === null || wfDetails === void 0 ? void 0 : wfDetails.workflow_name,\n          description: wfDetails === null || wfDetails === void 0 ? void 0 : wfDetails.workflow_description\n        });\n        localforage.setItem('weights', w);\n        workflowAction.setWorkflowDetails({\n          workflow_id: wfDetails === null || wfDetails === void 0 ? void 0 : wfDetails.workflow_id,\n          clusterid: wfDetails === null || wfDetails === void 0 ? void 0 : wfDetails.cluster_id,\n          cronSyntax: isCronEdited === null ? wfDetails === null || wfDetails === void 0 ? void 0 : wfDetails.cronSyntax : cronSyntax,\n          scheduleType: {\n            scheduleOnce: (wfDetails === null || wfDetails === void 0 ? void 0 : wfDetails.cronSyntax) === '' ? 'now' : 'recurringSchedule',\n            recurringSchedule: ''\n          },\n          scheduleInput: {\n            hour_interval: 0,\n            day: 1,\n            weekday: 'Monday',\n            time: new Date(),\n            date: new Date()\n          }\n        });\n      }\n    });\n    template.selectTemplate({\n      selectTemplateID: 0,\n      isDisable: false\n    });\n    setWeights(w);\n  }, [data]);\n  var tabs = useActions(TabActions);\n\n  var _React$useState3 = React.useState(\"\".concat(t('createWorkflow.verifyCommit.codeIsFine'))),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      yamlStatus = _React$useState4[0],\n      setYamlStatus = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      modified = _React$useState6[0],\n      setModified = _React$useState6[1];\n\n  var handleEditOpen = function handleEditOpen() {\n    setModified(false);\n    setOpen(true);\n  };\n\n  var handleEditClose = function handleEditClose() {\n    setModified(true);\n    setOpen(false);\n  };\n\n  var handleNext = function handleNext() {\n    handleMutation();\n  };\n\n  useEffect(function () {\n    var editorValidations = parseYamlValidations(manifest, classes);\n    var stateObject = {\n      markers: editorValidations.markers,\n      annotations: editorValidations.annotations\n    };\n\n    if (stateObject.annotations.length > 0) {\n      setYamlStatus(\"\".concat(t('createWorkflow.verifyCommit.errYaml')));\n    } else {\n      setYamlStatus(\"\".concat(t('createWorkflow.verifyCommit.codeIsFine')));\n    }\n  }, [modified]);\n\n  var handleFinishModal = function handleFinishModal() {\n    history.push({\n      pathname: \"/workflows\",\n      search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(userRole)\n    });\n    setFinishModalOpen(false);\n  };\n\n  var handleErrorModalClose = function handleErrorModalClose() {\n    setErrorModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 5\n    }\n  }, loading || !manifest ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, t('editSchedule.title')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.sumText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.verifyCommit.summary.header')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.outerSum,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSumDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.verifyCommit.summary.workflowName'), \":\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.col2,\n    \"data-cy\": \"WorkflowName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, fetchWorkflowNameFromManifest(manifest)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSumDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.verifyCommit.summary.clustername'), \":\")), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.schCol2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 19\n    }\n  }, clustername)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSumDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.verifyCommit.summary.desc'), \":\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.col2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  }, workflow.description))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSumDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.verifyCommit.summary.schedule'), \":\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.schCol2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }, cronSyntax === '' ? /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 23\n    }\n  }, t('createWorkflow.verifyCommit.summary.schedulingNow')) : /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 23\n    }\n  }, cronstrue.toString(cronSyntax)), /*#__PURE__*/React.createElement(ButtonOutlined, {\n    className: classes.editButton,\n    onClick: function onClick() {\n      return history.push({\n        pathname: \"/workflows/schedule/\".concat(projectID, \"/\").concat(fetchWorkflowNameFromManifest(manifest), \"/set\"),\n        search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(userRole)\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    className: classes.editIcon,\n    \"data-cy\": \"edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 23\n    }\n  }), t('editSchedule.edit')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSumDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.verifyCommit.summary.adjustedWeights'), \":\")), weights.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 23\n    }\n  }, t('createWorkflow.verifyCommit.error'))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.adjWeights,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 23\n    }\n  }, weights.map(function (Test) {\n    return /*#__PURE__*/React.createElement(AdjustedWeights, {\n      key: Test.weight,\n      testName: \"\".concat(Test.experimentName, \" \").concat(t('createWorkflow.verifyCommit.test')),\n      testValue: Test.weight,\n      spacing: false,\n      icon: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 27\n      }\n    });\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSumDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.verifyCommit.YAML'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yamlFlex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 19\n    }\n  }, weights.length === 0 ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.spacingHorizontal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 23\n    }\n  }, t('createWorkflow.verifyCommit.errYaml')) : /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 25\n    }\n  }, yamlStatus), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.spacingHorizontal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 25\n    }\n  }, t('createWorkflow.verifyCommit.youCanMoveOn'))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ButtonFilled, {\n    className: classes.verifyYAMLButton,\n    onClick: handleEditOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.verifyCommit.button.viewYaml'))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonDiv,\n    \"aria-label\": \"buttons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n    onClick: function onClick() {\n      history.push({\n        pathname: \"/workflows/\",\n        search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(userRole)\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  }, t('editSchedule.cancel')), /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: function onClick() {\n      return handleNext();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  }, t('editSchedule.save'))), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleEditClose,\n    width: \"60%\",\n    modalActions: /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: handleEditClose,\n      className: classes.closeBtn,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 15\n      }\n    }, \"\\u2715\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(YamlEditor, {\n    content: manifest,\n    filename: workflow.name,\n    readOnly: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    \"data-cy\": \"FinishModal\",\n    open: finishModalOpen,\n    onClose: handleFinishModal,\n    width: \"60%\",\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    modalActions: /*#__PURE__*/React.createElement(\"div\", {\n      \"data-cy\": \"GoToWorkflowButton\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: handleFinishModal,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 19\n      }\n    }, \"\\u2715\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/finish.svg\",\n    alt: \"mark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 17\n    }\n  }, t('editSchedule.theSchedule'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.successful,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 19\n    }\n  }, workflow.name), \",\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 19\n    }\n  }, t('editSchedule.successfullyCreated'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headWorkflow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 17\n    }\n  }, t('workflowStepper.congratulationsSub1'), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 62\n    }\n  }), ' ', t('workflowStepper.congratulationsSub2')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    \"data-cy\": \"selectFinish\",\n    onClick: function onClick() {\n      handleFinishModal();\n      tabs.changeWorkflowsTabs(0);\n      history.push({\n        pathname: '/workflows',\n        search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(userRole)\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 21\n    }\n  }, t('workflowStepper.workflowBtn')))))), /*#__PURE__*/React.createElement(Modal, {\n    open: errorModal,\n    onClose: handleErrorModalClose,\n    width: \"60%\",\n    modalActions: /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: handleErrorModalClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }\n    }, \"\\u2715\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/red-cross.svg\",\n    alt: \"mark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 19\n    }\n  }, t('workflowStepper.workflowFailed'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headWorkflow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 19\n    }\n  }, t('workflowStepper.error'), \" : \", workflowError === null || workflowError === void 0 ? void 0 : workflowError.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    \"data-cy\": \"selectFinish\",\n    onClick: function onClick() {\n      setErrorModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 21\n    }\n  }, t('workflowStepper.back')))))))));\n};\n\nexport default EditSchedule;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/EditSchedule/index.tsx"],"names":["useMutation","useQuery","Typography","EditIcon","cronstrue","ButtonFilled","ButtonOutlined","Modal","localforage","React","useEffect","useState","useTranslation","useSelector","useParams","YAML","AdjustedWeights","BackButton","Loader","YamlEditor","parseYamlValidations","Scaffold","UPDATE_SCHEDULE","WORKFLOW_LIST_DETAILS","useActions","TabActions","TemplateSelectionActions","WorkflowActions","history","getProjectID","getProjectRole","fetchWorkflowNameFromManifest","useStyles","EditSchedule","classes","t","name","description","workflow","setWorkflow","experimentName","weight","weights","setWeights","open","setOpen","finishModalOpen","setFinishModalOpen","errorModal","setErrorModal","template","workflowData","state","workflowAction","paramData","projectID","userRole","variables","workflowInput","project_id","filter","workflow_name","workflowName","fetchPolicy","data","loading","manifest","workflowManifest","wfDetails","ListWorkflow","workflows","doc","Document","w","cronSyntax","clusterid","clustername","onCompleted","createChaosWorkFlow","workflowError","error","handleMutation","length","weightData","forEach","push","experiment_name","weightage","yml","parse","yamlJson","JSON","stringify","chaosWorkFlowInputs","workflow_id","workflow_manifest","workflow_description","isCustomWorkflow","weightages","cluster_id","ChaosWorkFlowInput","getItem","then","isCronEdited","undefined","i","contents","setWorkflowManifest","toString","setItem","setWorkflowDetails","scheduleType","scheduleOnce","recurringSchedule","scheduleInput","hour_interval","day","weekday","time","Date","date","selectTemplate","selectTemplateID","isDisable","tabs","yamlStatus","setYamlStatus","modified","setModified","handleEditOpen","handleEditClose","handleNext","editorValidations","stateObject","markers","annotations","handleFinishModal","pathname","search","handleErrorModalClose","title","root","innerContainer","sumText","outerSum","summaryDiv","innerSumDiv","col1","col2","schCol2","editButton","editIcon","adjWeights","progress","map","Test","yamlFlex","spacingHorizontal","verifyYAMLButton","buttonDiv","closeBtn","modal","heading","successful","bold","headWorkflow","button","changeWorkflowsTabs","message"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport cronstrue from 'cronstrue';\nimport { ButtonFilled, ButtonOutlined, Modal } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport YAML from 'yaml';\nimport AdjustedWeights from '../../components/AdjustedWeights';\nimport BackButton from '../../components/Button/BackButton';\nimport Loader from '../../components/Loader';\nimport YamlEditor from '../../components/YamlEditor/Editor';\nimport { parseYamlValidations } from '../../components/YamlEditor/Validations';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { UPDATE_SCHEDULE } from '../../graphql/mutations';\nimport { WORKFLOW_LIST_DETAILS } from '../../graphql/queries';\nimport {\n  CreateWorkFlowInput,\n  UpdateWorkflowResponse,\n  WeightMap,\n} from '../../models/graphql/createWorkflowData';\nimport {\n  ListWorkflowsInput,\n  ScheduledWorkflows,\n} from '../../models/graphql/workflowListData';\nimport { experimentMap, WorkflowData } from '../../models/redux/workflow';\nimport useActions from '../../redux/actions';\nimport * as TabActions from '../../redux/actions/tabs';\nimport * as TemplateSelectionActions from '../../redux/actions/template';\nimport * as WorkflowActions from '../../redux/actions/workflow';\nimport { history } from '../../redux/configureStore';\nimport { RootState } from '../../redux/reducers';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport { fetchWorkflowNameFromManifest } from '../../utils/yamlUtils';\nimport { useStyles } from './styles';\n\ninterface URLParams {\n  workflowName: string;\n  scheduleProjectID: string;\n}\n\ninterface Weights {\n  experimentName: string;\n  weight: number;\n}\n\ninterface WorkflowProps {\n  name: string;\n  description: string;\n}\n\nconst EditSchedule: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [workflow, setWorkflow] = useState<WorkflowProps>({\n    name: '',\n    description: '',\n  });\n  const [weights, setWeights] = useState<experimentMap[]>([\n    {\n      experimentName: '',\n      weight: 0,\n    },\n  ]);\n\n  const [open, setOpen] = React.useState(false);\n  const [finishModalOpen, setFinishModalOpen] = useState(false);\n  const [errorModal, setErrorModal] = useState(false);\n\n  const template = useActions(TemplateSelectionActions);\n  const workflowData: WorkflowData = useSelector(\n    (state: RootState) => state.workflowData\n  );\n  const workflowAction = useActions(WorkflowActions);\n  // Get Parameters from URL\n  const paramData: URLParams = useParams();\n  const projectID = getProjectID();\n  const userRole = getProjectRole();\n\n  const { data, loading } = useQuery<ScheduledWorkflows, ListWorkflowsInput>(\n    WORKFLOW_LIST_DETAILS,\n    {\n      variables: {\n        workflowInput: {\n          project_id: projectID,\n          filter: {\n            workflow_name: paramData.workflowName,\n          },\n        },\n      },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  const manifest = useSelector(\n    (state: RootState) => state.workflowManifest.manifest\n  );\n\n  const wfDetails = data && data.ListWorkflow.workflows[0];\n  const doc = new YAML.Document();\n  const w: Weights[] = [];\n  const { cronSyntax, clusterid, clustername } = workflowData;\n\n  const [createChaosWorkFlow, { error: workflowError }] = useMutation<\n    UpdateWorkflowResponse,\n    CreateWorkFlowInput\n  >(UPDATE_SCHEDULE, {\n    onCompleted: () => {\n      setFinishModalOpen(true);\n    },\n  });\n\n  const handleMutation = () => {\n    if (\n      workflow.name.length !== 0 &&\n      workflow.description.length !== 0 &&\n      weights.length !== 0\n    ) {\n      const weightData: WeightMap[] = [];\n\n      weights.forEach((data) => {\n        weightData.push({\n          experiment_name: data.experimentName,\n          weightage: data.weight,\n        });\n      });\n\n      /* JSON.stringify takes 3 parameters [object to be converted,\n      a function to alter the conversion, spaces to be shown in final result for indentation ] */\n      const yml = YAML.parse(manifest);\n      const yamlJson = JSON.stringify(yml, null, 2); // Converted to Stringified JSON\n\n      const chaosWorkFlowInputs = {\n        workflow_id: wfDetails?.workflow_id,\n        workflow_manifest: yamlJson,\n        cronSyntax,\n        workflow_name: fetchWorkflowNameFromManifest(manifest),\n        workflow_description: workflow.description,\n        isCustomWorkflow: false,\n        weightages: weightData,\n        project_id: projectID,\n        cluster_id: clusterid,\n      };\n\n      createChaosWorkFlow({\n        variables: { ChaosWorkFlowInput: chaosWorkFlowInputs },\n      });\n    }\n  };\n\n  useEffect(() => {\n    localforage.getItem('editSchedule').then((isCronEdited) => {\n      if (wfDetails !== undefined) {\n        for (let i = 0; i < wfDetails?.weightages.length; i++) {\n          w.push({\n            experimentName: wfDetails?.weightages[i].experiment_name,\n            weight: wfDetails?.weightages[i].weightage,\n          });\n        }\n        doc.contents = JSON.parse(wfDetails?.workflow_manifest);\n        workflowAction.setWorkflowManifest({\n          manifest: isCronEdited === null ? doc.toString() : manifest,\n        });\n        setWorkflow({\n          name: wfDetails?.workflow_name,\n          description: wfDetails?.workflow_description,\n        });\n        localforage.setItem('weights', w);\n        workflowAction.setWorkflowDetails({\n          workflow_id: wfDetails?.workflow_id,\n          clusterid: wfDetails?.cluster_id,\n          cronSyntax:\n            isCronEdited === null ? wfDetails?.cronSyntax : cronSyntax,\n          scheduleType: {\n            scheduleOnce:\n              wfDetails?.cronSyntax === '' ? 'now' : 'recurringSchedule',\n            recurringSchedule: '',\n          },\n          scheduleInput: {\n            hour_interval: 0,\n            day: 1,\n            weekday: 'Monday',\n            time: new Date(),\n            date: new Date(),\n          },\n        });\n      }\n    });\n\n    template.selectTemplate({ selectTemplateID: 0, isDisable: false });\n    setWeights(w);\n  }, [data]);\n\n  const tabs = useActions(TabActions);\n\n  const [yamlStatus, setYamlStatus] = React.useState(\n    `${t('createWorkflow.verifyCommit.codeIsFine')}`\n  );\n  const [modified, setModified] = React.useState(false);\n\n  const handleEditOpen = () => {\n    setModified(false);\n    setOpen(true);\n  };\n\n  const handleEditClose = () => {\n    setModified(true);\n    setOpen(false);\n  };\n\n  const handleNext = () => {\n    handleMutation();\n  };\n\n  useEffect(() => {\n    const editorValidations = parseYamlValidations(manifest, classes);\n    const stateObject = {\n      markers: editorValidations.markers,\n      annotations: editorValidations.annotations,\n    };\n    if (stateObject.annotations.length > 0) {\n      setYamlStatus(`${t('createWorkflow.verifyCommit.errYaml')}`);\n    } else {\n      setYamlStatus(`${t('createWorkflow.verifyCommit.codeIsFine')}`);\n    }\n  }, [modified]);\n\n  const handleFinishModal = () => {\n    history.push({\n      pathname: `/workflows`,\n      search: `?projectID=${projectID}&projectRole=${userRole}`,\n    });\n    setFinishModalOpen(false);\n  };\n\n  const handleErrorModalClose = () => {\n    setErrorModal(false);\n  };\n\n  return (\n    <Scaffold>\n      {loading || !manifest ? (\n        <Loader />\n      ) : (\n        <>\n          <BackButton />\n          <Typography className={classes.title}>\n            {t('editSchedule.title')}\n          </Typography>\n          <div className={classes.root}>\n            <div className={classes.innerContainer}>\n              <Typography className={classes.sumText}>\n                {t('createWorkflow.verifyCommit.summary.header')}\n              </Typography>\n\n              <div className={classes.outerSum}>\n                <div className={classes.summaryDiv}>\n                  <div className={classes.innerSumDiv}>\n                    <Typography className={classes.col1}>\n                      {t('createWorkflow.verifyCommit.summary.workflowName')}:\n                    </Typography>\n                  </div>\n                  <div className={classes.col2} data-cy=\"WorkflowName\">\n                    <Typography>\n                      {fetchWorkflowNameFromManifest(manifest)}\n                    </Typography>\n                  </div>\n                </div>\n\n                <div className={classes.summaryDiv}>\n                  <div className={classes.innerSumDiv}>\n                    <Typography className={classes.col1}>\n                      {t('createWorkflow.verifyCommit.summary.clustername')}:\n                    </Typography>\n                  </div>\n                  <Typography className={classes.schCol2}>\n                    {clustername}\n                  </Typography>\n                </div>\n\n                <div className={classes.summaryDiv}>\n                  <div className={classes.innerSumDiv}>\n                    <Typography className={classes.col1}>\n                      {t('createWorkflow.verifyCommit.summary.desc')}:\n                    </Typography>\n                  </div>\n                  <div className={classes.col2}>\n                    <Typography>{workflow.description}</Typography>\n                  </div>\n                </div>\n                <div className={classes.summaryDiv}>\n                  <div className={classes.innerSumDiv}>\n                    <Typography className={classes.col1}>\n                      {t('createWorkflow.verifyCommit.summary.schedule')}:\n                    </Typography>\n                  </div>\n                  <div className={classes.schCol2}>\n                    {cronSyntax === '' ? (\n                      <Typography>\n                        {t('createWorkflow.verifyCommit.summary.schedulingNow')}\n                      </Typography>\n                    ) : (\n                      <Typography>{cronstrue.toString(cronSyntax)}</Typography>\n                    )}\n\n                    <ButtonOutlined\n                      className={classes.editButton}\n                      onClick={() =>\n                        history.push({\n                          pathname: `/workflows/schedule/${projectID}/${fetchWorkflowNameFromManifest(\n                            manifest\n                          )}/set`,\n                          search: `?projectID=${projectID}&projectRole=${userRole}`,\n                        })\n                      }\n                    >\n                      <EditIcon className={classes.editIcon} data-cy=\"edit\" />\n                      {t('editSchedule.edit')}\n                    </ButtonOutlined>\n                  </div>\n                </div>\n                <div className={classes.summaryDiv}>\n                  <div className={classes.innerSumDiv}>\n                    <Typography className={classes.col1}>\n                      {t('createWorkflow.verifyCommit.summary.adjustedWeights')}\n                      :\n                    </Typography>\n                  </div>\n                  {weights.length === 0 ? (\n                    <div>\n                      <Typography className={classes.col2}>\n                        {t('createWorkflow.verifyCommit.error')}\n                      </Typography>\n                    </div>\n                  ) : (\n                    <div className={classes.adjWeights}>\n                      <div className={classes.progress}>\n                        {weights.map((Test) => (\n                          <AdjustedWeights\n                            key={Test.weight}\n                            testName={`${Test.experimentName} ${t(\n                              'createWorkflow.verifyCommit.test'\n                            )}`}\n                            testValue={Test.weight}\n                            spacing={false}\n                            icon={false}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className={classes.summaryDiv}>\n                  <div className={classes.innerSumDiv}>\n                    <Typography className={classes.col1}>\n                      {t('createWorkflow.verifyCommit.YAML')}\n                    </Typography>\n                  </div>\n                  <div className={classes.yamlFlex}>\n                    {weights.length === 0 ? (\n                      <Typography className={classes.spacingHorizontal}>\n                        {t('createWorkflow.verifyCommit.errYaml')}\n                      </Typography>\n                    ) : (\n                      <Typography>\n                        <b>{yamlStatus}</b>\n                        <span className={classes.spacingHorizontal}>\n                          {t('createWorkflow.verifyCommit.youCanMoveOn')}\n                        </span>\n                      </Typography>\n                    )}\n                    <br />\n                    <ButtonFilled\n                      className={classes.verifyYAMLButton}\n                      onClick={handleEditOpen}\n                    >\n                      {t('createWorkflow.verifyCommit.button.viewYaml')}\n                    </ButtonFilled>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Cancel and Save Button */}\n          <div className={classes.buttonDiv} aria-label=\"buttons\">\n            <ButtonOutlined\n              onClick={() => {\n                history.push({\n                  pathname: `/workflows/`,\n                  search: `?projectID=${projectID}&projectRole=${userRole}`,\n                });\n              }}\n            >\n              {t('editSchedule.cancel')}\n            </ButtonOutlined>\n            <ButtonFilled onClick={() => handleNext()}>\n              {t('editSchedule.save')}\n            </ButtonFilled>\n          </div>\n\n          <Modal\n            open={open}\n            onClose={handleEditClose}\n            width=\"60%\"\n            modalActions={\n              <ButtonOutlined\n                onClick={handleEditClose}\n                className={classes.closeBtn}\n              >\n                &#x2715;\n              </ButtonOutlined>\n            }\n          >\n            <YamlEditor content={manifest} filename={workflow.name} readOnly />\n          </Modal>\n\n          {/* Finish Modal */}\n          <div>\n            <Modal\n              data-cy=\"FinishModal\"\n              open={finishModalOpen}\n              onClose={handleFinishModal}\n              width=\"60%\"\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              modalActions={\n                <div data-cy=\"GoToWorkflowButton\">\n                  <ButtonOutlined onClick={handleFinishModal}>\n                    &#x2715;\n                  </ButtonOutlined>\n                </div>\n              }\n            >\n              <div className={classes.modal}>\n                <img src=\"/icons/finish.svg\" alt=\"mark\" />\n                <div className={classes.heading}>\n                  {t('editSchedule.theSchedule')}\n                  <br />\n                  <span className={classes.successful}>{workflow.name}</span>,\n                  <br />\n                  <span className={classes.bold}>\n                    {t('editSchedule.successfullyCreated')}\n                  </span>\n                </div>\n                <div className={classes.headWorkflow}>\n                  {t('workflowStepper.congratulationsSub1')} <br />{' '}\n                  {t('workflowStepper.congratulationsSub2')}\n                </div>\n                <div className={classes.button}>\n                  <ButtonFilled\n                    data-cy=\"selectFinish\"\n                    onClick={() => {\n                      handleFinishModal();\n                      tabs.changeWorkflowsTabs(0);\n                      history.push({\n                        pathname: '/workflows',\n                        search: `?projectID=${projectID}&projectRole=${userRole}`,\n                      });\n                    }}\n                  >\n                    <div>{t('workflowStepper.workflowBtn')}</div>\n                  </ButtonFilled>\n                </div>\n              </div>\n            </Modal>\n            <Modal\n              open={errorModal}\n              onClose={handleErrorModalClose}\n              width=\"60%\"\n              modalActions={\n                <ButtonOutlined onClick={handleErrorModalClose}>\n                  &#x2715;\n                </ButtonOutlined>\n              }\n            >\n              <div className={classes.modal}>\n                <img src=\"/icons/red-cross.svg\" alt=\"mark\" />\n                <div className={classes.heading}>\n                  <strong>{t('workflowStepper.workflowFailed')}</strong>\n                </div>\n                <div className={classes.headWorkflow}>\n                  <Typography>\n                    {t('workflowStepper.error')} : {workflowError?.message}\n                  </Typography>\n                </div>\n                <div className={classes.button}>\n                  <ButtonFilled\n                    data-cy=\"selectFinish\"\n                    onClick={() => {\n                      setErrorModal(false);\n                    }}\n                  >\n                    <div>{t('workflowStepper.back')}</div>\n                  </ButtonFilled>\n                </div>\n              </div>\n            </Modal>\n          </div>\n        </>\n      )}\n    </Scaffold>\n  );\n};\n\nexport default EditSchedule;\n"]},"metadata":{},"sourceType":"module"}