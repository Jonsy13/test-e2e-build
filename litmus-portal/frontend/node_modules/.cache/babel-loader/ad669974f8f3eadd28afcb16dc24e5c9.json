{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useQuery}from'@apollo/client';import{Avatar,IconButton,Popover,Typography}from'@material-ui/core';import{ButtonFilled,ButtonOutlined}from'litmus-ui';import React,{useState}from'react';import{useTranslation}from'react-i18next';import{Link}from'react-router-dom';import{GET_USER_INFO}from'../../graphql';import useActions from'../../redux/actions';import*as TabActions from'../../redux/actions/tabs';import{history}from'../../redux/configureStore';import{getUserEmail,getUsername,logout}from'../../utils/auth';import{getProjectID,getProjectRole}from'../../utils/getSearchParams';import{userInitials}from'../../utils/userInitials';import useStyles from'./styles';var ProfileDropdown=function ProfileDropdown(){var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var tabs=useActions(TabActions);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),anchorEl=_useState2[0],setAnchorEl=_useState2[1];// Get username from JWT\nvar username=getUsername();// Get the userEmail from JWT\nvar userEmailToken=getUserEmail();var projectID=getProjectID();var projectRole=getProjectRole();var _useState3=useState(userEmailToken),_useState4=_slicedToArray(_useState3,2),userEmail=_useState4[0],setuserEmail=_useState4[1];// Run query to get the data in case it is not present in the JWT\nuseQuery(GET_USER_INFO,{skip:userEmail!==undefined&&userEmail!=='',variables:{username:username},onCompleted:function onCompleted(data){setuserEmail(data.getUser.email);}});// Handle clicks\nvar handleClick=function handleClick(event){setAnchorEl(event.currentTarget);};var handleClose=function handleClose(){setAnchorEl(null);};var open=Boolean(anchorEl);var id=open?'headerProfileDropdown':undefined;var initials=userInitials(username);return/*#__PURE__*/React.createElement(\"div\",{className:classes.profileDropdown,\"data-cy\":\"headerProfileDropdown\"},/*#__PURE__*/React.createElement(IconButton,{edge:\"end\",onClick:handleClick},/*#__PURE__*/React.createElement(Avatar,{className:classes.avatarBackground},initials)),/*#__PURE__*/React.createElement(Popover,{id:id,open:open,anchorEl:anchorEl,onClose:handleClose,anchorOrigin:{vertical:'bottom',horizontal:'left'},transformOrigin:{vertical:'top',horizontal:'left'}},/*#__PURE__*/React.createElement(\"div\",{className:classes.profileDropdownPopover},/*#__PURE__*/React.createElement(Typography,null,t('header.profileDropdown.signedIn')),userEmail?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Typography,{className:classes.profileSet},userEmail)):/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.profileDropdownRow,\" \").concat(classes.profileUnset)},/*#__PURE__*/React.createElement(Typography,{className:classes.emailUnset},t('header.profileDropdown.emailUnset')),projectRole==='Owner'?/*#__PURE__*/React.createElement(Link,{to:{pathname:'/settings',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)},onClick:function onClick(){return tabs.changeSettingsTabs(0);}},/*#__PURE__*/React.createElement(Typography,{title:\"Go to settings\"},t('header.profileDropdown.emailSet'))):/*#__PURE__*/React.createElement(Typography,{className:classes.projectRoleHint},t('header.profileDropdown.switchProject'))),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.profileDropdownRow,\" \").concat(classes.profileButtons)},/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"logoutButton\"},/*#__PURE__*/React.createElement(ButtonFilled,{title:\"Logout from the portal\",onClick:function onClick(){return logout();}},t('header.profileDropdown.logout'),/*#__PURE__*/React.createElement(\"img\",{id:\"logoutIcon\",src:\"./icons/logout.svg\",alt:\"logout\"}))),/*#__PURE__*/React.createElement(ButtonOutlined,{title:\"Edit your profile\",disabled:projectRole!=='Owner',onClick:function onClick(){tabs.changeSettingsTabs(0);history.push({pathname:'/settings',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});}},t('header.profileDropdown.editProfile'))))));};export default ProfileDropdown;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/Header/ProfileDropDown.tsx"],"names":["useQuery","Avatar","IconButton","Popover","Typography","ButtonFilled","ButtonOutlined","React","useState","useTranslation","Link","GET_USER_INFO","useActions","TabActions","history","getUserEmail","getUsername","logout","getProjectID","getProjectRole","userInitials","useStyles","ProfileDropdown","classes","t","tabs","anchorEl","setAnchorEl","username","userEmailToken","projectID","projectRole","userEmail","setuserEmail","skip","undefined","variables","onCompleted","data","getUser","email","handleClick","event","currentTarget","handleClose","open","Boolean","id","initials","profileDropdown","avatarBackground","vertical","horizontal","profileDropdownPopover","profileSet","profileDropdownRow","profileUnset","emailUnset","pathname","search","changeSettingsTabs","projectRoleHint","profileButtons","push"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Avatar, IconButton, Popover, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { GET_USER_INFO } from '../../graphql';\nimport { CurrentUserDetails } from '../../models/graphql/user';\nimport useActions from '../../redux/actions';\nimport * as TabActions from '../../redux/actions/tabs';\nimport { history } from '../../redux/configureStore';\nimport { getUserEmail, getUsername, logout } from '../../utils/auth';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport { userInitials } from '../../utils/userInitials';\nimport useStyles from './styles';\n\nconst ProfileDropdown: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const tabs = useActions(TabActions);\n\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n  // Get username from JWT\n  const username = getUsername();\n\n  // Get the userEmail from JWT\n  const userEmailToken = getUserEmail();\n\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n\n  const [userEmail, setuserEmail] = useState<string>(userEmailToken);\n\n  // Run query to get the data in case it is not present in the JWT\n  useQuery<CurrentUserDetails>(GET_USER_INFO, {\n    skip: userEmail !== undefined && userEmail !== '',\n    variables: { username },\n    onCompleted: (data) => {\n      setuserEmail(data.getUser.email);\n    },\n  });\n\n  // Handle clicks\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'headerProfileDropdown' : undefined;\n\n  const initials = userInitials(username);\n\n  return (\n    <div className={classes.profileDropdown} data-cy=\"headerProfileDropdown\">\n      <IconButton edge=\"end\" onClick={handleClick}>\n        <Avatar className={classes.avatarBackground}>{initials}</Avatar>\n      </IconButton>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <div className={classes.profileDropdownPopover}>\n          <Typography>{t('header.profileDropdown.signedIn')}</Typography>\n          {userEmail ? (\n            <>\n              <Typography className={classes.profileSet}>\n                {userEmail}\n              </Typography>\n            </>\n          ) : (\n            <div\n              className={`${classes.profileDropdownRow} ${classes.profileUnset}`}\n            >\n              <Typography className={classes.emailUnset}>\n                {t('header.profileDropdown.emailUnset')}\n              </Typography>\n              {projectRole === 'Owner' ? (\n                <Link\n                  to={{\n                    pathname: '/settings',\n                    search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                  }}\n                  onClick={() => tabs.changeSettingsTabs(0)}\n                >\n                  <Typography title=\"Go to settings\">\n                    {t('header.profileDropdown.emailSet')}\n                  </Typography>\n                </Link>\n              ) : (\n                <Typography className={classes.projectRoleHint}>\n                  {t('header.profileDropdown.switchProject')}\n                </Typography>\n              )}\n            </div>\n          )}\n          <div\n            className={`${classes.profileDropdownRow} ${classes.profileButtons}`}\n          >\n            <div data-cy=\"logoutButton\">\n              <ButtonFilled\n                title=\"Logout from the portal\"\n                onClick={() => logout()}\n              >\n                {t('header.profileDropdown.logout')}\n                <img id=\"logoutIcon\" src=\"./icons/logout.svg\" alt=\"logout\" />\n              </ButtonFilled>\n            </div>\n\n            <ButtonOutlined\n              title=\"Edit your profile\"\n              disabled={projectRole !== 'Owner'}\n              onClick={() => {\n                tabs.changeSettingsTabs(0);\n                history.push({\n                  pathname: '/settings',\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n              }}\n            >\n              {t('header.profileDropdown.editProfile')}\n            </ButtonOutlined>\n          </div>\n        </div>\n      </Popover>\n    </div>\n  );\n};\n\nexport default ProfileDropdown;\n"]},"metadata":{},"sourceType":"module"}