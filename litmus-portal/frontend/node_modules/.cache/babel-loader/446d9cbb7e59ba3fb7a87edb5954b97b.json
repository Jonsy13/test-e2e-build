{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable no-unused-expressions */ /* eslint-disable @typescript-eslint/no-unused-vars */import{useLazyQuery}from'@apollo/client';import{FormControl,IconButton,InputLabel,MenuItem,Select,TextField,Typography}from'@material-ui/core';import AccordionDetails from'@material-ui/core/AccordionDetails';import AccordionSummary from'@material-ui/core/AccordionSummary';import{Autocomplete}from'@material-ui/lab';import{AutocompleteChipInput,InputField}from'litmus-ui';import moment from'moment';import React,{useEffect}from'react';import{useTranslation}from'react-i18next';import{Accordion}from'../../../../../../../../components/Accordion';import InfoTooltip from'../../../../../../../../components/InfoTooltip';import{PROM_LABEL_VALUES}from'../../../../../../../../graphql';import{ReactComponent as ExpandAccordion}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../../../../svg/expandQueryAccordion.svg\";import{ReactComponent as CopyQuery}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../../../../svg/queryCopy.svg\";import{ReactComponent as DeleteQuery}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../../../../svg/queryDelete.svg\";import{ReactComponent as ShowHideQuery}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../../../../svg/queryHide.svg\";import{ReactComponent as ShrinkAccordion}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../../../../svg/shrinkQueryAccordion.svg\";import{getLabelsAndValues,setLabelsAndValues}from'../../../../../../../../utils/promUtils';import{validateTimeInSeconds}from'../../../../../../../../utils/validate';import PrometheusQueryEditor from'./PrometheusQueryBox';import useStyles from'./styles';var resolutions=['1/1','1/2','1/3','1/4','1/5','1/10'];var QueryEditor=function QueryEditor(_ref){var _localQuery$base_quer,_localQuery$base_quer2,_labelValueData$GetPr2,_localQuery$prom_quer2,_seriesList$map,_labelValueData$GetPr3,_labelValueData$GetPr4,_labelValueData$GetPr5;var index=_ref.index,promQuery=_ref.promQuery,selectedApps=_ref.selectedApps,dsURL=_ref.dsURL,seriesList=_ref.seriesList,handleDeleteQuery=_ref.handleDeleteQuery,handleShowAndHideQuery=_ref.handleShowAndHideQuery,handleUpdateQuery=_ref.handleUpdateQuery;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),selectedValuesForLabel=_React$useState4[0],setSelectedValuesForLabel=_React$useState4[1];var _React$useState5=React.useState(''),_React$useState6=_slicedToArray(_React$useState5,2),selectedLabel=_React$useState6[0],setSelectedLabel=_React$useState6[1];var _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),update=_React$useState8[0],setUpdate=_React$useState8[1];var _React$useState9=React.useState(true),_React$useState10=_slicedToArray(_React$useState9,2),firstLoad=_React$useState10[0],setFirstLoad=_React$useState10[1];var _React$useState11=React.useState(_objectSpread(_objectSpread({},promQuery),{},{base_query:promQuery.prom_query_name.split('{')[0].includes('(')?promQuery.prom_query_name.split('{')[0].substring(promQuery.prom_query_name.split('{')[0].lastIndexOf('(')+1):promQuery.prom_query_name.split('{')[0],labels_and_values_list:getLabelsAndValues(promQuery.prom_query_name)})),_React$useState12=_slicedToArray(_React$useState11,2),localQuery=_React$useState12[0],setLocalQuery=_React$useState12[1];var _useLazyQuery=useLazyQuery(PROM_LABEL_VALUES,{variables:{prometheusInput:{ds_details:{url:dsURL,start:\"\".concat(new Date(moment.unix(Math.round(new Date().getTime()/1000)-900).format()).getTime()/1000),end:\"\".concat(new Date(moment.unix(Math.round(new Date().getTime()/1000)).format()).getTime()/1000)},series:(_localQuery$base_quer=localQuery.base_query)!==null&&_localQuery$base_quer!==void 0?_localQuery$base_quer:''}},fetchPolicy:'network-only'}),_useLazyQuery2=_slicedToArray(_useLazyQuery,2),getLabelValues=_useLazyQuery2[0],labelValueData=_useLazyQuery2[1].data;var getAvailableValues=function getAvailableValues(label){var options=[];if(labelValueData){var _labelValueData$GetPr;(_labelValueData$GetPr=labelValueData.GetPromLabelNamesAndValues.labelValues)===null||_labelValueData$GetPr===void 0?void 0:_labelValueData$GetPr.forEach(function(labelValue){if(labelValue.label===label){var _labelValue$values;options=(_labelValue$values=labelValue.values)!==null&&_labelValue$values!==void 0?_labelValue$values:[];}});}return options;};var getSelectedValuesForLabel=function getSelectedValuesForLabel(label){var allOptions=getAvailableValues(label).map(function(option){return option.name;});var labelValuesList=getLabelsAndValues(localQuery.prom_query_name);var options=[];labelValuesList.forEach(function(labelValue){if(labelValue.label===label){labelValue.value.forEach(function(item){options.push({name:item});});}});selectedApps.forEach(function(app){app.applications.forEach(function(appRes){if(label!=='job'&&label.toLowerCase().includes(appRes.kind.toLowerCase())){appRes.names.forEach(function(name){if(allOptions.includes(name)){options.push({name:name});}});}if(label==='job'){appRes.names.forEach(function(name){if(allOptions.includes(name)){options.push({name:name});}else if(allOptions.includes(\"\".concat(app.namespace,\"/\").concat(name))){options.push({name:\"\".concat(app.namespace,\"/\").concat(name)});}});}});});setSelectedValuesForLabel(options);};useEffect(function(){if(firstLoad&&localQuery.base_query!==''&&dsURL!==''){getLabelValues();getSelectedValuesForLabel(selectedLabel!==null&&selectedLabel!==void 0?selectedLabel:'');setFirstLoad(false);}},[firstLoad]);useEffect(function(){if(update){handleUpdateQuery(localQuery,index);setUpdate(false);}},[update]);var getValueList=function getValueList(list){var completionOptions=[];list.forEach(function(labelValue){var _labelValue$values2;(_labelValue$values2=labelValue.values)===null||_labelValue$values2===void 0?void 0:_labelValue$values2.forEach(function(value){completionOptions.push({value:value,score:3,meta:\"Value for \".concat(labelValue.label)});});});return completionOptions;};var copyTextToClipboard=function copyTextToClipboard(text){if(!navigator.clipboard){console.error('Oops Could not copy text: ');return;}navigator.clipboard.writeText(text).catch(function(err){return console.error('Async: Could not copy text: ',err);});};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Accordion,{expanded:open},/*#__PURE__*/React.createElement(AccordionSummary,{expandIcon:open?/*#__PURE__*/React.createElement(ShrinkAccordion,{onClick:function onClick(){setOpen(false);}}):/*#__PURE__*/React.createElement(ExpandAccordion,{onClick:function onClick(){setOpen(true);}}),IconButtonProps:{edge:'start'},\"aria-controls\":\"query-\".concat(promQuery.queryid,\"-content\"),id:\"query-\".concat(promQuery.queryid,\"-header\"),className:classes.query,key:\"\".concat(promQuery.queryid)},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.flex,\" \").concat(classes.summaryHeader)},/*#__PURE__*/React.createElement(Typography,{className:classes.queryTitle},String.fromCharCode(65+index)),/*#__PURE__*/React.createElement(\"div\",{className:classes.flex},/*#__PURE__*/React.createElement(IconButton,{className:classes.iconButton,onClick:function onClick(){copyTextToClipboard(localQuery.prom_query_name);}},/*#__PURE__*/React.createElement(CopyQuery,{className:classes.icon})),/*#__PURE__*/React.createElement(IconButton,{className:classes.iconButton,onClick:function onClick(){handleShowAndHideQuery(index);}},/*#__PURE__*/React.createElement(ShowHideQuery,{className:classes.icon})),/*#__PURE__*/React.createElement(IconButton,{className:classes.iconButton,onClick:function onClick(){handleDeleteQuery(index);}},/*#__PURE__*/React.createElement(DeleteQuery,{className:classes.icon}))))),/*#__PURE__*/React.createElement(AccordionDetails,{className:classes.queryContainer},/*#__PURE__*/React.createElement(\"div\",{style:{width:'98.5%'}},/*#__PURE__*/React.createElement(Autocomplete,{value:{name:(_localQuery$base_quer2=localQuery.base_query)!==null&&_localQuery$base_quer2!==void 0?_localQuery$base_quer2:''},freeSolo:true,id:\"query-\".concat(promQuery.queryid,\"-query-name\"),options:seriesList,getOptionLabel:function getOptionLabel(option){return option.name;},style:{width:'45%'},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:t('analyticsDashboard.applicationDashboards.tuneTheQueries.metric'),variant:\"outlined\",size:\"medium\",InputLabelProps:{className:classes.formLabel}}));},onChange:function onChange(event,value,reason){var newQuery=value?reason==='create-option'?value:value.name:'';setLocalQuery(_objectSpread(_objectSpread({},localQuery),{},{base_query:newQuery,prom_query_name:newQuery,labels_and_values_list:[]}));if(newQuery!==''&&dsURL!==''){setSelectedValuesForLabel([]);getLabelValues();}setUpdate(true);}}),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.flex,\" \").concat(classes.paddedTop),style:{gap:'1rem'}},/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formControl,style:{width:'25%'},color:\"primary\"},/*#__PURE__*/React.createElement(InputLabel,{className:classes.selectTextLabel},t('analyticsDashboard.applicationDashboards.tuneTheQueries.keys')),/*#__PURE__*/React.createElement(Select,{value:selectedLabel,onChange:function onChange(event){setSelectedLabel(event.target.value);getSelectedValuesForLabel(event.target.value);},label:t('analyticsDashboard.applicationDashboards.tuneTheQueries.selectKey'),className:classes.selectText},labelValueData&&((_labelValueData$GetPr2=labelValueData.GetPromLabelNamesAndValues.labelValues)===null||_labelValueData$GetPr2===void 0?void 0:_labelValueData$GetPr2.map(function(labelValue){return/*#__PURE__*/React.createElement(MenuItem,{key:labelValue.label,value:labelValue.label},labelValue.label);})))),/*#__PURE__*/React.createElement(AutocompleteChipInput,{value:selectedValuesForLabel,onChange:function onChange(event,value,reason){var _localQuery$labels_an,_localQuery$base_quer3,_localQuery$prom_quer;var selectedValues=value;var existingLabelValuesList=(_localQuery$labels_an=localQuery.labels_and_values_list)!==null&&_localQuery$labels_an!==void 0?_localQuery$labels_an:[];var updateStatus=false;existingLabelValuesList.forEach(function(labelValue,index){if(labelValue.label===selectedLabel){existingLabelValuesList[index].value=selectedValues.map(function(option){return option.name;});updateStatus=true;}});if(!updateStatus){existingLabelValuesList.push({label:selectedLabel,value:selectedValues.map(function(option){return option.name;})});}setLocalQuery(_objectSpread(_objectSpread({},localQuery),{},{prom_query_name:setLabelsAndValues((_localQuery$base_quer3=localQuery.base_query)!==null&&_localQuery$base_quer3!==void 0?_localQuery$base_quer3:'',(_localQuery$prom_quer=localQuery.prom_query_name)!==null&&_localQuery$prom_quer!==void 0?_localQuery$prom_quer:'',existingLabelValuesList),labels_and_values_list:existingLabelValuesList}));getSelectedValuesForLabel(selectedLabel!==null&&selectedLabel!==void 0?selectedLabel:'');setUpdate(true);},options:getAvailableValues(selectedLabel!==null&&selectedLabel!==void 0?selectedLabel:''),label:t('analyticsDashboard.applicationDashboards.tuneTheQueries.values'),placeholder:\"\".concat(t('analyticsDashboard.applicationDashboards.tuneTheQueries.addValue')),disableCloseOnSelect:true,disableClearable:false,limitTags:4,style:{width:'75%'}})),/*#__PURE__*/React.createElement(PrometheusQueryEditor,{index:index,content:(_localQuery$prom_quer2=localQuery.prom_query_name)!==null&&_localQuery$prom_quer2!==void 0?_localQuery$prom_quer2:'',seriesListCompletionOptions:(_seriesList$map=seriesList.map(function(option){return{value:option.name,score:1,meta:t('analyticsDashboard.applicationDashboards.tuneTheQueries.seriesName')};}))!==null&&_seriesList$map!==void 0?_seriesList$map:[],labelListCompletionOptions:(_labelValueData$GetPr3=labelValueData===null||labelValueData===void 0?void 0:(_labelValueData$GetPr4=labelValueData.GetPromLabelNamesAndValues.labelValues)===null||_labelValueData$GetPr4===void 0?void 0:_labelValueData$GetPr4.map(function(labelValue){return{value:labelValue.label,score:2,meta:localQuery.base_query?\"\".concat(t('analyticsDashboard.applicationDashboards.tuneTheQueries.labelFor'),\" \").concat(localQuery.base_query):t('analyticsDashboard.applicationDashboards.tuneTheQueries.label')};}))!==null&&_labelValueData$GetPr3!==void 0?_labelValueData$GetPr3:[],valueListCompletionOptions:getValueList((_labelValueData$GetPr5=labelValueData===null||labelValueData===void 0?void 0:labelValueData.GetPromLabelNamesAndValues.labelValues)!==null&&_labelValueData$GetPr5!==void 0?_labelValueData$GetPr5:[]),saveQueryChange:function saveQueryChange(updatedQuery){var _localQuery$base_quer4;var existingBaseQuery=(_localQuery$base_quer4=localQuery.base_query)!==null&&_localQuery$base_quer4!==void 0?_localQuery$base_quer4:'';var newBaseQuery=updatedQuery.split('{')[0].includes('(')?updatedQuery.split('{')[0].substring(updatedQuery.split('{')[0].lastIndexOf('(')+1):updatedQuery.split('{')[0];setLocalQuery(_objectSpread(_objectSpread({},localQuery),{},{base_query:newBaseQuery,labels_and_values_list:getLabelsAndValues(updatedQuery),prom_query_name:updatedQuery}));if(existingBaseQuery!==newBaseQuery&&localQuery.base_query!==''&&dsURL!==''){getLabelValues();setSelectedValuesForLabel([]);}setUpdate(true);}}),/*#__PURE__*/React.createElement(Typography,{className:classes.configHeader},t('analyticsDashboard.applicationDashboards.tuneTheQueries.configuration')),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.flex,\" \").concat(classes.paddedTop),style:{gap:'2.5rem',width:'98.5%',flexWrap:'wrap'}},/*#__PURE__*/React.createElement(\"div\",{className:classes.flex},/*#__PURE__*/React.createElement(InputField,{label:t('analyticsDashboard.applicationDashboards.tuneTheQueries.legend'),\"data-cy\":\"queryLegend\",width:\"16rem\",variant:\"primary\",value:localQuery.legend,onChange:function onChange(event){setLocalQuery(_objectSpread(_objectSpread({},localQuery),{},{legend:event.target.value}));setUpdate(true);}}),/*#__PURE__*/React.createElement(InfoTooltip,{value:t('analyticsDashboard.applicationDashboards.tuneTheQueries.legendInfo'),className:classes.infoIcon})),/*#__PURE__*/React.createElement(\"div\",{className:classes.flex},/*#__PURE__*/React.createElement(InputField,{label:t('analyticsDashboard.applicationDashboards.tuneTheQueries.minStep'),\"data-cy\":\"minStep\",width:\"9rem\",variant:!validateTimeInSeconds(\"\".concat(localQuery.minstep,\"s\"))?'error':'primary',value:\"\".concat(localQuery.minstep,\"s\"),onChange:function onChange(event){setLocalQuery(_objectSpread(_objectSpread({},localQuery),{},{minstep:event.target.value.split('s')[0]}));setUpdate(true);}}),/*#__PURE__*/React.createElement(InfoTooltip,{value:t('analyticsDashboard.applicationDashboards.tuneTheQueries.minStepInfo'),className:classes.infoIcon})),/*#__PURE__*/React.createElement(\"div\",{className:classes.flex},/*#__PURE__*/React.createElement(InputField,{label:t('analyticsDashboard.applicationDashboards.tuneTheQueries.format'),\"data-cy\":\"dataFormat\",width:\"9rem\",variant:\"primary\",disabled:true,value:t('analyticsDashboard.applicationDashboards.tuneTheQueries.timeSeries')}),/*#__PURE__*/React.createElement(InfoTooltip,{value:t('analyticsDashboard.applicationDashboards.tuneTheQueries.formatInfo'),className:classes.infoIcon}))),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.flex,\" \").concat(classes.paddedTop),style:{gap:'2.5rem'}},/*#__PURE__*/React.createElement(\"div\",{className:classes.flex},/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formControl,style:{width:'12.5rem'},color:\"primary\"},/*#__PURE__*/React.createElement(InputLabel,{className:classes.selectTextLabel},t('analyticsDashboard.applicationDashboards.tuneTheQueries.graph')),/*#__PURE__*/React.createElement(Select,{value:localQuery.line?t('analyticsDashboard.applicationDashboards.tuneTheQueries.lineGraph'):t('analyticsDashboard.applicationDashboards.tuneTheQueries.areaGraph'),onChange:function onChange(event){var line=event.target.value===t('analyticsDashboard.applicationDashboards.tuneTheQueries.areaGraph');setLocalQuery(_objectSpread(_objectSpread({},localQuery),{},{line:line,close_area:!line}));setUpdate(true);},label:t('analyticsDashboard.applicationDashboards.tuneTheQueries.graph'),className:classes.selectText},/*#__PURE__*/React.createElement(MenuItem,{key:\"\".concat(t('analyticsDashboard.applicationDashboards.tuneTheQueries.lineGraph')),value:t('analyticsDashboard.applicationDashboards.tuneTheQueries.lineGraph')},t('analyticsDashboard.applicationDashboards.tuneTheQueries.lineGraph')),/*#__PURE__*/React.createElement(MenuItem,{key:\"\".concat(t('analyticsDashboard.applicationDashboards.tuneTheQueries.areaGraph')),value:t('analyticsDashboard.applicationDashboards.tuneTheQueries.areaGraph')},t('analyticsDashboard.applicationDashboards.tuneTheQueries.areaGraph')))),/*#__PURE__*/React.createElement(InfoTooltip,{value:t('analyticsDashboard.applicationDashboards.tuneTheQueries.graphInfo'),className:classes.infoIcon})),/*#__PURE__*/React.createElement(\"div\",{className:classes.flex},/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",className:classes.formControl,style:{width:'8.5rem'},color:\"primary\"},/*#__PURE__*/React.createElement(InputLabel,{className:classes.selectTextLabel},t('analyticsDashboard.applicationDashboards.tuneTheQueries.resolution')),/*#__PURE__*/React.createElement(Select,{value:localQuery.resolution,onChange:function onChange(event){setLocalQuery(_objectSpread(_objectSpread({},localQuery),{},{resolution:event.target.value}));setUpdate(true);},label:t('analyticsDashboard.applicationDashboards.tuneTheQueries.resolution'),className:classes.selectText},resolutions.map(function(resolution){return/*#__PURE__*/React.createElement(MenuItem,{key:resolution,value:resolution},resolution);}))),/*#__PURE__*/React.createElement(InfoTooltip,{value:t('analyticsDashboard.applicationDashboards.tuneTheQueries.resolutionInfo'),className:classes.infoIcon})))))));};export default QueryEditor;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/TuneTheQueries/EditPanelsWizard/QueryEditingWizard/QueryEditor/index.tsx"],"names":["useLazyQuery","FormControl","IconButton","InputLabel","MenuItem","Select","TextField","Typography","AccordionDetails","AccordionSummary","Autocomplete","AutocompleteChipInput","InputField","moment","React","useEffect","useTranslation","Accordion","InfoTooltip","PROM_LABEL_VALUES","getLabelsAndValues","setLabelsAndValues","validateTimeInSeconds","PrometheusQueryEditor","useStyles","resolutions","QueryEditor","index","promQuery","selectedApps","dsURL","seriesList","handleDeleteQuery","handleShowAndHideQuery","handleUpdateQuery","classes","t","useState","open","setOpen","selectedValuesForLabel","setSelectedValuesForLabel","selectedLabel","setSelectedLabel","update","setUpdate","firstLoad","setFirstLoad","base_query","prom_query_name","split","includes","substring","lastIndexOf","labels_and_values_list","localQuery","setLocalQuery","variables","prometheusInput","ds_details","url","start","Date","unix","Math","round","getTime","format","end","series","fetchPolicy","getLabelValues","labelValueData","data","getAvailableValues","label","options","GetPromLabelNamesAndValues","labelValues","forEach","labelValue","values","getSelectedValuesForLabel","allOptions","map","option","name","labelValuesList","value","item","push","app","applications","appRes","toLowerCase","kind","names","namespace","getValueList","list","completionOptions","score","meta","copyTextToClipboard","text","navigator","clipboard","console","error","writeText","catch","err","root","edge","queryid","query","flex","summaryHeader","queryTitle","String","fromCharCode","iconButton","icon","queryContainer","width","params","className","formLabel","event","reason","newQuery","paddedTop","gap","formControl","selectTextLabel","target","selectText","selectedValues","existingLabelValuesList","updateStatus","updatedQuery","existingBaseQuery","newBaseQuery","configHeader","flexWrap","legend","infoIcon","minstep","line","close_area","resolution"],"mappings":"qWAAA,0C,CACA,sDACA,OAASA,YAAT,KAA6B,gBAA7B,CACA,OACEC,WADF,CAEEC,UAFF,CAGEC,UAHF,CAIEC,QAJF,CAKEC,MALF,CAMEC,SANF,CAOEC,UAPF,KAQO,mBARP,CASA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,qBAAT,CAAgCC,UAAhC,KAAkD,WAAlD,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,SAAT,KAA0B,8CAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,gDAAxB,CACA,OAASC,iBAAT,KAAkC,iCAAlC,C,6nBAgBA,OACEC,kBADF,CAEEC,kBAFF,KAGO,yCAHP,CAIA,OAASC,qBAAT,KAAsC,wCAAtC,CACA,MAAOC,CAAAA,qBAAP,KAAkC,sBAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAkBA,GAAMC,CAAAA,WAAqB,CAAG,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAsB,KAAtB,CAA6B,KAA7B,CAAoC,MAApC,CAA9B,CAEA,GAAMC,CAAAA,WAAuC,CAAG,QAA1CA,CAAAA,WAA0C,MAS1C,wLARJC,CAAAA,KAQI,MARJA,KAQI,CAPJC,SAOI,MAPJA,SAOI,CANJC,YAMI,MANJA,YAMI,CALJC,KAKI,MALJA,KAKI,CAJJC,UAII,MAJJA,UAII,CAHJC,iBAGI,MAHJA,iBAGI,CAFJC,sBAEI,MAFJA,sBAEI,CADJC,iBACI,MADJA,iBACI,CACJ,GAAMC,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CACA,oBAAcR,cAAc,EAA5B,CAAQoB,CAAR,iBAAQA,CAAR,CACA,oBAAwBtB,KAAK,CAACuB,QAAN,CAAwB,IAAxB,CAAxB,oDAAOC,IAAP,qBAAaC,OAAb,qBACA,qBAA4DzB,KAAK,CAACuB,QAAN,CAE1D,EAF0D,CAA5D,qDAAOG,sBAAP,qBAA+BC,yBAA/B,qBAIA,qBAA0C3B,KAAK,CAACuB,QAAN,CAAuB,EAAvB,CAA1C,qDAAOK,aAAP,qBAAsBC,gBAAtB,qBACA,qBAA4B7B,KAAK,CAACuB,QAAN,CAAwB,KAAxB,CAA5B,qDAAOO,MAAP,qBAAeC,SAAf,qBACA,qBAAkC/B,KAAK,CAACuB,QAAN,CAAwB,IAAxB,CAAlC,sDAAOS,SAAP,sBAAkBC,YAAlB,sBACA,sBAAoCjC,KAAK,CAACuB,QAAN,gCAC/BT,SAD+B,MAElCoB,UAAU,CAAEpB,SAAS,CAACqB,eAAV,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,EAAwCC,QAAxC,CAAiD,GAAjD,EACRvB,SAAS,CAACqB,eAAV,CACGC,KADH,CACS,GADT,EACc,CADd,EAEGE,SAFH,CAGIxB,SAAS,CAACqB,eAAV,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,EAAwCG,WAAxC,CAAoD,GAApD,EAA2D,CAH/D,CADQ,CAMRzB,SAAS,CAACqB,eAAV,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAR8B,CASlCI,sBAAsB,CAAElC,kBAAkB,CAACQ,SAAS,CAACqB,eAAX,CATR,GAApC,uDAAOM,UAAP,sBAAmBC,aAAnB,sBAYA,kBAAmDxD,YAAY,CAG7DmB,iBAH6D,CAG1C,CACnBsC,SAAS,CAAE,CACTC,eAAe,CAAE,CACfC,UAAU,CAAE,CACVC,GAAG,CAAE9B,KADK,CAEV+B,KAAK,WACH,GAAIC,CAAAA,IAAJ,CACEjD,MAAM,CACHkD,IADH,CACQC,IAAI,CAACC,KAAL,CAAW,GAAIH,CAAAA,IAAJ,GAAWI,OAAX,GAAuB,IAAlC,EAA0C,GADlD,EAEGC,MAFH,EADF,EAIED,OAJF,GAIc,IALX,CAFK,CASVE,GAAG,WACD,GAAIN,CAAAA,IAAJ,CACEjD,MAAM,CAACkD,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAW,GAAIH,CAAAA,IAAJ,GAAWI,OAAX,GAAuB,IAAlC,CAAZ,EAAqDC,MAArD,EADF,EAEED,OAFF,GAEc,IAHb,CATO,CADG,CAgBfG,MAAM,wBAAEd,UAAU,CAACP,UAAb,+DAA2B,EAhBlB,CADR,CADQ,CAqBnBsB,WAAW,CAAE,cArBM,CAH0C,CAA/D,gDAAOC,cAAP,mBAA+BC,cAA/B,mBAAyBC,IAAzB,CA2BA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAmB,CAC5C,GAAIC,CAAAA,OAAsB,CAAG,EAA7B,CACA,GAAIJ,cAAJ,CAAoB,2BAClB,uBAAAA,cAAc,CAACK,0BAAf,CAA0CC,WAA1C,sEAAuDC,OAAvD,CACE,SAACC,UAAD,CAAgB,CACd,GAAIA,UAAU,CAACL,KAAX,GAAqBA,KAAzB,CAAgC,wBAC9BC,OAAO,qBAAGI,UAAU,CAACC,MAAd,yDAAwB,EAA/B,CACD,CACF,CALH,EAOD,CACD,MAAOL,CAAAA,OAAP,CACD,CAZD,CAcA,GAAMM,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACP,KAAD,CAAmB,CACnD,GAAMQ,CAAAA,UAAoB,CAAGT,kBAAkB,CAACC,KAAD,CAAlB,CAA0BS,GAA1B,CAC3B,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACC,IAAnB,EAD2B,CAA7B,CAGA,GAAMC,CAAAA,eAAkC,CAAGnE,kBAAkB,CAC3DmC,UAAU,CAACN,eADgD,CAA7D,CAGA,GAAM2B,CAAAA,OAAsB,CAAG,EAA/B,CACAW,eAAe,CAACR,OAAhB,CAAwB,SAACC,UAAD,CAAgB,CACtC,GAAIA,UAAU,CAACL,KAAX,GAAqBA,KAAzB,CAAgC,CAC9BK,UAAU,CAACQ,KAAX,CAAiBT,OAAjB,CAAyB,SAACU,IAAD,CAAU,CACjCb,OAAO,CAACc,IAAR,CAAa,CAAEJ,IAAI,CAAEG,IAAR,CAAb,EACD,CAFD,EAGD,CACF,CAND,EAOA5D,YAAY,CAACkD,OAAb,CAAqB,SAACY,GAAD,CAAS,CAC5BA,GAAG,CAACC,YAAJ,CAAiBb,OAAjB,CAAyB,SAACc,MAAD,CAAY,CACnC,GACElB,KAAK,GAAK,KAAV,EACAA,KAAK,CAACmB,WAAN,GAAoB3C,QAApB,CAA6B0C,MAAM,CAACE,IAAP,CAAYD,WAAZ,EAA7B,CAFF,CAGE,CACAD,MAAM,CAACG,KAAP,CAAajB,OAAb,CAAqB,SAACO,IAAD,CAAU,CAC7B,GAAIH,UAAU,CAAChC,QAAX,CAAoBmC,IAApB,CAAJ,CAA+B,CAC7BV,OAAO,CAACc,IAAR,CAAa,CAAEJ,IAAI,CAAJA,IAAF,CAAb,EACD,CACF,CAJD,EAKD,CACD,GAAIX,KAAK,GAAK,KAAd,CAAqB,CACnBkB,MAAM,CAACG,KAAP,CAAajB,OAAb,CAAqB,SAACO,IAAD,CAAU,CAC7B,GAAIH,UAAU,CAAChC,QAAX,CAAoBmC,IAApB,CAAJ,CAA+B,CAC7BV,OAAO,CAACc,IAAR,CAAa,CAAEJ,IAAI,CAAJA,IAAF,CAAb,EACD,CAFD,IAEO,IAAIH,UAAU,CAAChC,QAAX,WAAuBwC,GAAG,CAACM,SAA3B,aAAwCX,IAAxC,EAAJ,CAAqD,CAC1DV,OAAO,CAACc,IAAR,CAAa,CAAEJ,IAAI,WAAKK,GAAG,CAACM,SAAT,aAAsBX,IAAtB,CAAN,CAAb,EACD,CACF,CAND,EAOD,CACF,CApBD,EAqBD,CAtBD,EAuBA7C,yBAAyB,CAACmC,OAAD,CAAzB,CACD,CAvCD,CAyCA7D,SAAS,CAAC,UAAM,CACd,GAAI+B,SAAS,EAAIS,UAAU,CAACP,UAAX,GAA0B,EAAvC,EAA6ClB,KAAK,GAAK,EAA3D,CAA+D,CAC7DyC,cAAc,GACdW,yBAAyB,CAACxC,aAAD,SAACA,aAAD,UAACA,aAAD,CAAkB,EAAlB,CAAzB,CACAK,YAAY,CAAC,KAAD,CAAZ,CACD,CACF,CANQ,CAMN,CAACD,SAAD,CANM,CAAT,CAQA/B,SAAS,CAAC,UAAM,CACd,GAAI6B,MAAJ,CAAY,CACVV,iBAAiB,CAACqB,UAAD,CAAa5B,KAAb,CAAjB,CACAkB,SAAS,CAAC,KAAD,CAAT,CACD,CACF,CALQ,CAKN,CAACD,MAAD,CALM,CAAT,CAOA,GAAMsD,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAwB,CAC3C,GAAMC,CAAAA,iBAAwB,CAAG,EAAjC,CACAD,IAAI,CAACpB,OAAL,CAAa,SAACC,UAAD,CAAgB,yBAC3B,qBAAAA,UAAU,CAACC,MAAX,kEAAmBF,OAAnB,CAA2B,SAACS,KAAD,CAAW,CACpCY,iBAAiB,CAACV,IAAlB,CAAuB,CACrBF,KAAK,CAALA,KADqB,CAErBa,KAAK,CAAE,CAFc,CAGrBC,IAAI,qBAAetB,UAAU,CAACL,KAA1B,CAHiB,CAAvB,EAKD,CAND,EAOD,CARD,EASA,MAAOyB,CAAAA,iBAAP,CACD,CAZD,CAcA,GAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,IAAD,CAAkB,CAC5C,GAAI,CAACC,SAAS,CAACC,SAAf,CAA0B,CACxBC,OAAO,CAACC,KAAR,CAAc,4BAAd,EACA,OACD,CACDH,SAAS,CAACC,SAAV,CACGG,SADH,CACaL,IADb,EAEGM,KAFH,CAES,SAACC,GAAD,QAASJ,CAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,CAA8CG,GAA9C,CAAT,EAFT,EAGD,CARD,CAUA,mBACE,2BAAK,SAAS,CAAE5E,OAAO,CAAC6E,IAAxB,eACE,oBAAC,SAAD,EAAW,QAAQ,CAAE1E,IAArB,eACE,oBAAC,gBAAD,EACE,UAAU,CACRA,IAAI,cACF,oBAAC,eAAD,EACE,OAAO,CAAE,kBAAM,CACbC,OAAO,CAAC,KAAD,CAAP,CACD,CAHH,EADE,cAOF,oBAAC,eAAD,EACE,OAAO,CAAE,kBAAM,CACbA,OAAO,CAAC,IAAD,CAAP,CACD,CAHH,EATN,CAgBE,eAAe,CAAE,CAAE0E,IAAI,CAAE,OAAR,CAhBnB,CAiBE,gCAAwBrF,SAAS,CAACsF,OAAlC,YAjBF,CAkBE,EAAE,iBAAWtF,SAAS,CAACsF,OAArB,WAlBJ,CAmBE,SAAS,CAAE/E,OAAO,CAACgF,KAnBrB,CAoBE,GAAG,WAAKvF,SAAS,CAACsF,OAAf,CApBL,eAsBE,2BAAK,SAAS,WAAK/E,OAAO,CAACiF,IAAb,aAAqBjF,OAAO,CAACkF,aAA7B,CAAd,eACE,oBAAC,UAAD,EAAY,SAAS,CAAElF,OAAO,CAACmF,UAA/B,EACGC,MAAM,CAACC,YAAP,CAAoB,GAAK7F,KAAzB,CADH,CADF,cAKE,2BAAK,SAAS,CAAEQ,OAAO,CAACiF,IAAxB,eACE,oBAAC,UAAD,EACE,SAAS,CAAEjF,OAAO,CAACsF,UADrB,CAEE,OAAO,CAAE,kBAAM,CACblB,mBAAmB,CAAChD,UAAU,CAACN,eAAZ,CAAnB,CACD,CAJH,eAME,oBAAC,SAAD,EAAW,SAAS,CAAEd,OAAO,CAACuF,IAA9B,EANF,CADF,cAUE,oBAAC,UAAD,EACE,SAAS,CAAEvF,OAAO,CAACsF,UADrB,CAEE,OAAO,CAAE,kBAAM,CACbxF,sBAAsB,CAACN,KAAD,CAAtB,CACD,CAJH,eAME,oBAAC,aAAD,EAAe,SAAS,CAAEQ,OAAO,CAACuF,IAAlC,EANF,CAVF,cAmBE,oBAAC,UAAD,EACE,SAAS,CAAEvF,OAAO,CAACsF,UADrB,CAEE,OAAO,CAAE,kBAAM,CACbzF,iBAAiB,CAACL,KAAD,CAAjB,CACD,CAJH,eAME,oBAAC,WAAD,EAAa,SAAS,CAAEQ,OAAO,CAACuF,IAAhC,EANF,CAnBF,CALF,CAtBF,CADF,cA0DE,oBAAC,gBAAD,EAAkB,SAAS,CAAEvF,OAAO,CAACwF,cAArC,eACE,2BAAK,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAZ,eACE,oBAAC,YAAD,EACE,KAAK,CAAE,CAAEtC,IAAI,yBAAE/B,UAAU,CAACP,UAAb,iEAA2B,EAAjC,CADT,CAEE,QAAQ,KAFV,CAGE,EAAE,iBAAWpB,SAAS,CAACsF,OAArB,eAHJ,CAIE,OAAO,CAAEnF,UAJX,CAKE,cAAc,CAAE,wBAACsD,MAAD,QAAoBA,CAAAA,MAAM,CAACC,IAA3B,EALlB,CAME,KAAK,CAAE,CAAEsC,KAAK,CAAE,KAAT,CANT,CAOE,WAAW,CAAE,qBAACC,MAAD,qBACX,oBAAC,SAAD,kBACMA,MADN,EAEE,KAAK,CAAEzF,CAAC,CACN,gEADM,CAFV,CAKE,OAAO,CAAC,UALV,CAME,IAAI,CAAC,QANP,CAOE,eAAe,CAAE,CAAE0F,SAAS,CAAE3F,OAAO,CAAC4F,SAArB,CAPnB,GADW,EAPf,CAkBE,QAAQ,CAAE,kBAACC,KAAD,CAAQxC,KAAR,CAAeyC,MAAf,CAA0B,CAClC,GAAMC,CAAAA,QAAgB,CAAG1C,KAAK,CAC1ByC,MAAM,GAAK,eAAX,CACGzC,KADH,CAEGA,KAAD,CAAkBF,IAHM,CAI1B,EAJJ,CAKA9B,aAAa,gCACRD,UADQ,MAEXP,UAAU,CAAEkF,QAFD,CAGXjF,eAAe,CAAEiF,QAHN,CAIX5E,sBAAsB,CAAE,EAJb,GAAb,CAMA,GAAI4E,QAAQ,GAAK,EAAb,EAAmBpG,KAAK,GAAK,EAAjC,CAAqC,CACnCW,yBAAyB,CAAC,EAAD,CAAzB,CACA8B,cAAc,GACf,CACD1B,SAAS,CAAC,IAAD,CAAT,CACD,CAnCH,EADF,cAsCE,2BACE,SAAS,WAAKV,OAAO,CAACiF,IAAb,aAAqBjF,OAAO,CAACgG,SAA7B,CADX,CAEE,KAAK,CAAE,CAAEC,GAAG,CAAE,MAAP,CAFT,eAIE,oBAAC,WAAD,EACE,OAAO,CAAC,UADV,CAEE,SAAS,CAAEjG,OAAO,CAACkG,WAFrB,CAGE,KAAK,CAAE,CAAET,KAAK,CAAE,KAAT,CAHT,CAIE,KAAK,CAAC,SAJR,eAME,oBAAC,UAAD,EAAY,SAAS,CAAEzF,OAAO,CAACmG,eAA/B,EACGlG,CAAC,CACA,8DADA,CADJ,CANF,cAWE,oBAAC,MAAD,EACE,KAAK,CAAEM,aADT,CAEE,QAAQ,CAAE,kBAACsF,KAAD,CAAgB,CACxBrF,gBAAgB,CAACqF,KAAK,CAACO,MAAN,CAAa/C,KAAd,CAAhB,CACAN,yBAAyB,CAAC8C,KAAK,CAACO,MAAN,CAAa/C,KAAd,CAAzB,CACD,CALH,CAME,KAAK,CAAEpD,CAAC,CACN,mEADM,CANV,CASE,SAAS,CAAED,OAAO,CAACqG,UATrB,EAWGhE,cAAc,2BACbA,cAAc,CAACK,0BAAf,CAA0CC,WAD7B,iDACb,uBAAuDM,GAAvD,CACE,SAACJ,UAAD,qBACE,oBAAC,QAAD,EACE,GAAG,CAAEA,UAAU,CAACL,KADlB,CAEE,KAAK,CAAEK,UAAU,CAACL,KAFpB,EAIGK,UAAU,CAACL,KAJd,CADF,EADF,CADa,CAXjB,CAXF,CAJF,cAwCE,oBAAC,qBAAD,EACE,KAAK,CAAEnC,sBADT,CAEE,QAAQ,CAAE,kBAACwF,KAAD,CAAQxC,KAAR,CAAeyC,MAAf,CAA0B,wEAClC,GAAMQ,CAAAA,cAA6B,CAAGjD,KAAtC,CACA,GAAMkD,CAAAA,uBAA0C,wBAC9CnF,UAAU,CAACD,sBADmC,+DACT,EADvC,CAEA,GAAIqF,CAAAA,YAAY,CAAG,KAAnB,CACAD,uBAAuB,CAAC3D,OAAxB,CAAgC,SAACC,UAAD,CAAarD,KAAb,CAAuB,CACrD,GAAIqD,UAAU,CAACL,KAAX,GAAqBjC,aAAzB,CAAwC,CACtCgG,uBAAuB,CAAC/G,KAAD,CAAvB,CAA+B6D,KAA/B,CAAuCiD,cAAc,CAACrD,GAAf,CACrC,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACC,IAAnB,EADqC,CAAvC,CAGAqD,YAAY,CAAG,IAAf,CACD,CACF,CAPD,EAQA,GAAI,CAACA,YAAL,CAAmB,CACjBD,uBAAuB,CAAChD,IAAxB,CAA6B,CAC3Bf,KAAK,CAAEjC,aADoB,CAE3B8C,KAAK,CAAEiD,cAAc,CAACrD,GAAf,CAAmB,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACC,IAAnB,EAAnB,CAFoB,CAA7B,EAID,CACD9B,aAAa,gCACRD,UADQ,MAEXN,eAAe,CAAE5B,kBAAkB,yBACjCkC,UAAU,CAACP,UADsB,iEACR,EADQ,wBAEjCO,UAAU,CAACN,eAFsB,+DAEH,EAFG,CAGjCyF,uBAHiC,CAFxB,CAOXpF,sBAAsB,CAAEoF,uBAPb,GAAb,CASAxD,yBAAyB,CAACxC,aAAD,SAACA,aAAD,UAACA,aAAD,CAAkB,EAAlB,CAAzB,CACAG,SAAS,CAAC,IAAD,CAAT,CACD,CAhCH,CAiCE,OAAO,CAAE6B,kBAAkB,CAAChC,aAAD,SAACA,aAAD,UAACA,aAAD,CAAkB,EAAlB,CAjC7B,CAkCE,KAAK,CAAEN,CAAC,CACN,gEADM,CAlCV,CAqCE,WAAW,WAAKA,CAAC,CACf,kEADe,CAAN,CArCb,CAwCE,oBAAoB,KAxCtB,CAyCE,gBAAgB,CAAE,KAzCpB,CA0CE,SAAS,CAAE,CA1Cb,CA2CE,KAAK,CAAE,CAAEwF,KAAK,CAAE,KAAT,CA3CT,EAxCF,CAtCF,cA6HE,oBAAC,qBAAD,EACE,KAAK,CAAEjG,KADT,CAEE,OAAO,yBAAE4B,UAAU,CAACN,eAAb,iEAAgC,EAFzC,CAGE,2BAA2B,kBACzBlB,UAAU,CAACqD,GAAX,CAAe,SAACC,MAAD,QAAqB,CAClCG,KAAK,CAAEH,MAAM,CAACC,IADoB,CAElCe,KAAK,CAAE,CAF2B,CAGlCC,IAAI,CAAElE,CAAC,CACL,oEADK,CAH2B,CAArB,EAAf,CADyB,mDAOlB,EAVX,CAYE,0BAA0B,yBACxBoC,cADwB,SACxBA,cADwB,yCACxBA,cAAc,CAAEK,0BAAhB,CAA2CC,WADnB,iDACxB,uBAAwDM,GAAxD,CACE,SAACJ,UAAD,QAA6B,CAC3BQ,KAAK,CAAER,UAAU,CAACL,KADS,CAE3B0B,KAAK,CAAE,CAFoB,CAG3BC,IAAI,CAAE/C,UAAU,CAACP,UAAX,WACCZ,CAAC,CACF,kEADE,CADF,aAGGmB,UAAU,CAACP,UAHd,EAIFZ,CAAC,CACC,+DADD,CAPsB,CAA7B,EADF,CADwB,iEAanB,EAzBT,CA2BE,0BAA0B,CAAE8D,YAAY,yBACtC1B,cADsC,SACtCA,cADsC,iBACtCA,cAAc,CAAEK,0BAAhB,CAA2CC,WADL,iEACoB,EADpB,CA3B1C,CA8BE,eAAe,CAAE,yBAAC8D,YAAD,CAA0B,4BACzC,GAAMC,CAAAA,iBAAyB,yBAAGtF,UAAU,CAACP,UAAd,iEAA4B,EAA3D,CACA,GAAM8F,CAAAA,YAAoB,CAAGF,YAAY,CACtC1F,KAD0B,CACpB,GADoB,EACf,CADe,EAE1BC,QAF0B,CAEjB,GAFiB,EAGzByF,YAAY,CACT1F,KADH,CACS,GADT,EACc,CADd,EAEGE,SAFH,CAGIwF,YAAY,CAAC1F,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,EAA2BG,WAA3B,CAAuC,GAAvC,EAA8C,CAHlD,CAHyB,CAQzBuF,YAAY,CAAC1F,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CARJ,CASAM,aAAa,gCACRD,UADQ,MAEXP,UAAU,CAAE8F,YAFD,CAGXxF,sBAAsB,CAAElC,kBAAkB,CAACwH,YAAD,CAH/B,CAIX3F,eAAe,CAAE2F,YAJN,GAAb,CAMA,GACEC,iBAAiB,GAAKC,YAAtB,EACAvF,UAAU,CAACP,UAAX,GAA0B,EAD1B,EAEAlB,KAAK,GAAK,EAHZ,CAIE,CACAyC,cAAc,GACd9B,yBAAyB,CAAC,EAAD,CAAzB,CACD,CACDI,SAAS,CAAC,IAAD,CAAT,CACD,CAxDH,EA7HF,cAwLE,oBAAC,UAAD,EAAY,SAAS,CAAEV,OAAO,CAAC4G,YAA/B,EACG3G,CAAC,CACA,uEADA,CADJ,CAxLF,cA8LE,2BACE,SAAS,WAAKD,OAAO,CAACiF,IAAb,aAAqBjF,OAAO,CAACgG,SAA7B,CADX,CAEE,KAAK,CAAE,CAAEC,GAAG,CAAE,QAAP,CAAiBR,KAAK,CAAE,OAAxB,CAAiCoB,QAAQ,CAAE,MAA3C,CAFT,eAIE,2BAAK,SAAS,CAAE7G,OAAO,CAACiF,IAAxB,eACE,oBAAC,UAAD,EACE,KAAK,CAAEhF,CAAC,CACN,gEADM,CADV,CAIE,UAAQ,aAJV,CAKE,KAAK,CAAC,OALR,CAME,OAAO,CAAC,SANV,CAOE,KAAK,CAAEmB,UAAU,CAAC0F,MAPpB,CAQE,QAAQ,CAAE,kBAACjB,KAAD,CAAiD,CACzDxE,aAAa,gCACRD,UADQ,MAEX0F,MAAM,CAAGjB,KAAK,CAACO,MAAP,CAAmC/C,KAFhC,GAAb,CAIA3C,SAAS,CAAC,IAAD,CAAT,CACD,CAdH,EADF,cAiBE,oBAAC,WAAD,EACE,KAAK,CAAET,CAAC,CACN,oEADM,CADV,CAIE,SAAS,CAAED,OAAO,CAAC+G,QAJrB,EAjBF,CAJF,cA6BE,2BAAK,SAAS,CAAE/G,OAAO,CAACiF,IAAxB,eACE,oBAAC,UAAD,EACE,KAAK,CAAEhF,CAAC,CACN,iEADM,CADV,CAIE,UAAQ,SAJV,CAKE,KAAK,CAAC,MALR,CAME,OAAO,CACL,CAACd,qBAAqB,WAAIiC,UAAU,CAAC4F,OAAf,MAAtB,CACI,OADJ,CAEI,SATR,CAWE,KAAK,WAAK5F,UAAU,CAAC4F,OAAhB,KAXP,CAYE,QAAQ,CAAE,kBAACnB,KAAD,CAAiD,CACzDxE,aAAa,gCACRD,UADQ,MAEX4F,OAAO,CAAGnB,KAAK,CAACO,MAAP,CAAmC/C,KAAnC,CAAyCtC,KAAzC,CACP,GADO,EAEP,CAFO,CAFE,GAAb,CAMAL,SAAS,CAAC,IAAD,CAAT,CACD,CApBH,EADF,cAuBE,oBAAC,WAAD,EACE,KAAK,CAAET,CAAC,CACN,qEADM,CADV,CAIE,SAAS,CAAED,OAAO,CAAC+G,QAJrB,EAvBF,CA7BF,cA4DE,2BAAK,SAAS,CAAE/G,OAAO,CAACiF,IAAxB,eACE,oBAAC,UAAD,EACE,KAAK,CAAEhF,CAAC,CACN,gEADM,CADV,CAIE,UAAQ,YAJV,CAKE,KAAK,CAAC,MALR,CAME,OAAO,CAAC,SANV,CAOE,QAAQ,KAPV,CAQE,KAAK,CAAEA,CAAC,CACN,oEADM,CARV,EADF,cAaE,oBAAC,WAAD,EACE,KAAK,CAAEA,CAAC,CACN,oEADM,CADV,CAIE,SAAS,CAAED,OAAO,CAAC+G,QAJrB,EAbF,CA5DF,CA9LF,cAgRE,2BACE,SAAS,WAAK/G,OAAO,CAACiF,IAAb,aAAqBjF,OAAO,CAACgG,SAA7B,CADX,CAEE,KAAK,CAAE,CAAEC,GAAG,CAAE,QAAP,CAFT,eAIE,2BAAK,SAAS,CAAEjG,OAAO,CAACiF,IAAxB,eACE,oBAAC,WAAD,EACE,OAAO,CAAC,UADV,CAEE,SAAS,CAAEjF,OAAO,CAACkG,WAFrB,CAGE,KAAK,CAAE,CAAET,KAAK,CAAE,SAAT,CAHT,CAIE,KAAK,CAAC,SAJR,eAME,oBAAC,UAAD,EAAY,SAAS,CAAEzF,OAAO,CAACmG,eAA/B,EACGlG,CAAC,CACA,+DADA,CADJ,CANF,cAWE,oBAAC,MAAD,EACE,KAAK,CACHmB,UAAU,CAAC6F,IAAX,CACIhH,CAAC,CACC,mEADD,CADL,CAIIA,CAAC,CACC,mEADD,CANT,CAUE,QAAQ,CAAE,kBAAC4F,KAAD,CAAW,CACnB,GAAMoB,CAAAA,IAAI,CACPpB,KAAK,CAACO,MAAN,CAAa/C,KAAd,GACApD,CAAC,CACC,mEADD,CAFH,CAKAoB,aAAa,gCACRD,UADQ,MAEX6F,IAAI,CAAJA,IAFW,CAGXC,UAAU,CAAE,CAACD,IAHF,GAAb,CAKAvG,SAAS,CAAC,IAAD,CAAT,CACD,CAtBH,CAuBE,KAAK,CAAET,CAAC,CACN,+DADM,CAvBV,CA0BE,SAAS,CAAED,OAAO,CAACqG,UA1BrB,eA4BE,oBAAC,QAAD,EACE,GAAG,WAAKpG,CAAC,CACP,mEADO,CAAN,CADL,CAIE,KAAK,CAAEA,CAAC,CACN,mEADM,CAJV,EAQGA,CAAC,CACA,mEADA,CARJ,CA5BF,cAwCE,oBAAC,QAAD,EACE,GAAG,WAAKA,CAAC,CACP,mEADO,CAAN,CADL,CAIE,KAAK,CAAEA,CAAC,CACN,mEADM,CAJV,EAQGA,CAAC,CACA,mEADA,CARJ,CAxCF,CAXF,CADF,cAkEE,oBAAC,WAAD,EACE,KAAK,CAAEA,CAAC,CACN,mEADM,CADV,CAIE,SAAS,CAAED,OAAO,CAAC+G,QAJrB,EAlEF,CAJF,cA8EE,2BAAK,SAAS,CAAE/G,OAAO,CAACiF,IAAxB,eACE,oBAAC,WAAD,EACE,OAAO,CAAC,UADV,CAEE,SAAS,CAAEjF,OAAO,CAACkG,WAFrB,CAGE,KAAK,CAAE,CAAET,KAAK,CAAE,QAAT,CAHT,CAIE,KAAK,CAAC,SAJR,eAME,oBAAC,UAAD,EAAY,SAAS,CAAEzF,OAAO,CAACmG,eAA/B,EACGlG,CAAC,CACA,oEADA,CADJ,CANF,cAWE,oBAAC,MAAD,EACE,KAAK,CAAEmB,UAAU,CAAC+F,UADpB,CAEE,QAAQ,CAAE,kBAACtB,KAAD,CAAW,CACnBxE,aAAa,gCACRD,UADQ,MAEX+F,UAAU,CAAEtB,KAAK,CAACO,MAAN,CAAa/C,KAFd,GAAb,CAIA3C,SAAS,CAAC,IAAD,CAAT,CACD,CARH,CASE,KAAK,CAAET,CAAC,CACN,oEADM,CATV,CAYE,SAAS,CAAED,OAAO,CAACqG,UAZrB,EAcG/G,WAAW,CAAC2D,GAAZ,CAAgB,SAACkE,UAAD,qBACf,oBAAC,QAAD,EAAU,GAAG,CAAEA,UAAf,CAA2B,KAAK,CAAEA,UAAlC,EACGA,UADH,CADe,EAAhB,CAdH,CAXF,CADF,cAiCE,oBAAC,WAAD,EACE,KAAK,CAAElH,CAAC,CACN,wEADM,CADV,CAIE,SAAS,CAAED,OAAO,CAAC+G,QAJrB,EAjCF,CA9EF,CAhRF,CADF,CA1DF,CADF,CADF,CAycD,CAlmBD,CAomBA,cAAexH,CAAAA,WAAf","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useLazyQuery } from '@apollo/client';\nimport {\n  FormControl,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport { Autocomplete } from '@material-ui/lab';\nimport { AutocompleteChipInput, InputField } from 'litmus-ui';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Accordion } from '../../../../../../../../components/Accordion';\nimport InfoTooltip from '../../../../../../../../components/InfoTooltip';\nimport { PROM_LABEL_VALUES } from '../../../../../../../../graphql';\nimport {\n  PromQueryDetails,\n  QueryLabelValue,\n} from '../../../../../../../../models/dashboardsData';\nimport { ApplicationMetadata } from '../../../../../../../../models/graphql/dashboardsDetails';\nimport {\n  LabelValue,\n  PrometheusSeriesQueryVars,\n  PrometheusSeriesResponse,\n} from '../../../../../../../../models/graphql/prometheus';\nimport { ReactComponent as ExpandAccordion } from '../../../../../../../../svg/expandQueryAccordion.svg';\nimport { ReactComponent as CopyQuery } from '../../../../../../../../svg/queryCopy.svg';\nimport { ReactComponent as DeleteQuery } from '../../../../../../../../svg/queryDelete.svg';\nimport { ReactComponent as ShowHideQuery } from '../../../../../../../../svg/queryHide.svg';\nimport { ReactComponent as ShrinkAccordion } from '../../../../../../../../svg/shrinkQueryAccordion.svg';\nimport {\n  getLabelsAndValues,\n  setLabelsAndValues,\n} from '../../../../../../../../utils/promUtils';\nimport { validateTimeInSeconds } from '../../../../../../../../utils/validate';\nimport PrometheusQueryEditor from './PrometheusQueryBox';\nimport useStyles from './styles';\n\ninterface QueryEditorProps {\n  index: number;\n  promQuery: PromQueryDetails;\n  selectedApps: ApplicationMetadata[];\n  dsURL: string;\n  seriesList: Option[];\n  handleDeleteQuery: (index: number) => void;\n  handleShowAndHideQuery: (index: number) => void;\n  handleUpdateQuery: (query: PromQueryDetails, index: number) => void;\n}\n\ninterface Option {\n  name: string;\n  [index: string]: any;\n}\n\nconst resolutions: string[] = ['1/1', '1/2', '1/3', '1/4', '1/5', '1/10'];\n\nconst QueryEditor: React.FC<QueryEditorProps> = ({\n  index,\n  promQuery,\n  selectedApps,\n  dsURL,\n  seriesList,\n  handleDeleteQuery,\n  handleShowAndHideQuery,\n  handleUpdateQuery,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [open, setOpen] = React.useState<boolean>(true);\n  const [selectedValuesForLabel, setSelectedValuesForLabel] = React.useState<\n    Array<Option>\n  >([]);\n\n  const [selectedLabel, setSelectedLabel] = React.useState<string>('');\n  const [update, setUpdate] = React.useState<boolean>(false);\n  const [firstLoad, setFirstLoad] = React.useState<boolean>(true);\n  const [localQuery, setLocalQuery] = React.useState<PromQueryDetails>({\n    ...promQuery,\n    base_query: promQuery.prom_query_name.split('{')[0].includes('(')\n      ? promQuery.prom_query_name\n          .split('{')[0]\n          .substring(\n            promQuery.prom_query_name.split('{')[0].lastIndexOf('(') + 1\n          )\n      : promQuery.prom_query_name.split('{')[0],\n    labels_and_values_list: getLabelsAndValues(promQuery.prom_query_name),\n  });\n\n  const [getLabelValues, { data: labelValueData }] = useLazyQuery<\n    PrometheusSeriesResponse,\n    PrometheusSeriesQueryVars\n  >(PROM_LABEL_VALUES, {\n    variables: {\n      prometheusInput: {\n        ds_details: {\n          url: dsURL,\n          start: `${\n            new Date(\n              moment\n                .unix(Math.round(new Date().getTime() / 1000) - 900)\n                .format()\n            ).getTime() / 1000\n          }`,\n          end: `${\n            new Date(\n              moment.unix(Math.round(new Date().getTime() / 1000)).format()\n            ).getTime() / 1000\n          }`,\n        },\n        series: localQuery.base_query ?? '',\n      },\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  const getAvailableValues = (label: string) => {\n    let options: Array<Option> = [];\n    if (labelValueData) {\n      labelValueData.GetPromLabelNamesAndValues.labelValues?.forEach(\n        (labelValue) => {\n          if (labelValue.label === label) {\n            options = labelValue.values ?? [];\n          }\n        }\n      );\n    }\n    return options;\n  };\n\n  const getSelectedValuesForLabel = (label: string) => {\n    const allOptions: string[] = getAvailableValues(label).map(\n      (option) => option.name\n    );\n    const labelValuesList: QueryLabelValue[] = getLabelsAndValues(\n      localQuery.prom_query_name\n    );\n    const options: Array<Option> = [];\n    labelValuesList.forEach((labelValue) => {\n      if (labelValue.label === label) {\n        labelValue.value.forEach((item) => {\n          options.push({ name: item });\n        });\n      }\n    });\n    selectedApps.forEach((app) => {\n      app.applications.forEach((appRes) => {\n        if (\n          label !== 'job' &&\n          label.toLowerCase().includes(appRes.kind.toLowerCase())\n        ) {\n          appRes.names.forEach((name) => {\n            if (allOptions.includes(name)) {\n              options.push({ name });\n            }\n          });\n        }\n        if (label === 'job') {\n          appRes.names.forEach((name) => {\n            if (allOptions.includes(name)) {\n              options.push({ name });\n            } else if (allOptions.includes(`${app.namespace}/${name}`)) {\n              options.push({ name: `${app.namespace}/${name}` });\n            }\n          });\n        }\n      });\n    });\n    setSelectedValuesForLabel(options);\n  };\n\n  useEffect(() => {\n    if (firstLoad && localQuery.base_query !== '' && dsURL !== '') {\n      getLabelValues();\n      getSelectedValuesForLabel(selectedLabel ?? '');\n      setFirstLoad(false);\n    }\n  }, [firstLoad]);\n\n  useEffect(() => {\n    if (update) {\n      handleUpdateQuery(localQuery, index);\n      setUpdate(false);\n    }\n  }, [update]);\n\n  const getValueList = (list: LabelValue[]) => {\n    const completionOptions: any[] = [];\n    list.forEach((labelValue) => {\n      labelValue.values?.forEach((value) => {\n        completionOptions.push({\n          value,\n          score: 3,\n          meta: `Value for ${labelValue.label}`,\n        });\n      });\n    });\n    return completionOptions;\n  };\n\n  const copyTextToClipboard = (text: string) => {\n    if (!navigator.clipboard) {\n      console.error('Oops Could not copy text: ');\n      return;\n    }\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n  };\n\n  return (\n    <div className={classes.root}>\n      <Accordion expanded={open}>\n        <AccordionSummary\n          expandIcon={\n            open ? (\n              <ShrinkAccordion\n                onClick={() => {\n                  setOpen(false);\n                }}\n              />\n            ) : (\n              <ExpandAccordion\n                onClick={() => {\n                  setOpen(true);\n                }}\n              />\n            )\n          }\n          IconButtonProps={{ edge: 'start' }}\n          aria-controls={`query-${promQuery.queryid}-content`}\n          id={`query-${promQuery.queryid}-header`}\n          className={classes.query}\n          key={`${promQuery.queryid}`}\n        >\n          <div className={`${classes.flex} ${classes.summaryHeader}`}>\n            <Typography className={classes.queryTitle}>\n              {String.fromCharCode(65 + index)}\n            </Typography>\n\n            <div className={classes.flex}>\n              <IconButton\n                className={classes.iconButton}\n                onClick={() => {\n                  copyTextToClipboard(localQuery.prom_query_name);\n                }}\n              >\n                <CopyQuery className={classes.icon} />\n              </IconButton>\n\n              <IconButton\n                className={classes.iconButton}\n                onClick={() => {\n                  handleShowAndHideQuery(index);\n                }}\n              >\n                <ShowHideQuery className={classes.icon} />\n              </IconButton>\n\n              <IconButton\n                className={classes.iconButton}\n                onClick={() => {\n                  handleDeleteQuery(index);\n                }}\n              >\n                <DeleteQuery className={classes.icon} />\n              </IconButton>\n            </div>\n          </div>\n        </AccordionSummary>\n        <AccordionDetails className={classes.queryContainer}>\n          <div style={{ width: '98.5%' }}>\n            <Autocomplete\n              value={{ name: localQuery.base_query ?? '' }}\n              freeSolo\n              id={`query-${promQuery.queryid}-query-name`}\n              options={seriesList}\n              getOptionLabel={(option: Option) => option.name}\n              style={{ width: '45%' }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.metric'\n                  )}\n                  variant=\"outlined\"\n                  size=\"medium\"\n                  InputLabelProps={{ className: classes.formLabel }}\n                />\n              )}\n              onChange={(event, value, reason) => {\n                const newQuery: string = value\n                  ? reason === 'create-option'\n                    ? (value as string)\n                    : (value as Option).name\n                  : '';\n                setLocalQuery({\n                  ...localQuery,\n                  base_query: newQuery,\n                  prom_query_name: newQuery,\n                  labels_and_values_list: [],\n                });\n                if (newQuery !== '' && dsURL !== '') {\n                  setSelectedValuesForLabel([]);\n                  getLabelValues();\n                }\n                setUpdate(true);\n              }}\n            />\n            <div\n              className={`${classes.flex} ${classes.paddedTop}`}\n              style={{ gap: '1rem' }}\n            >\n              <FormControl\n                variant=\"outlined\"\n                className={classes.formControl}\n                style={{ width: '25%' }}\n                color=\"primary\"\n              >\n                <InputLabel className={classes.selectTextLabel}>\n                  {t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.keys'\n                  )}\n                </InputLabel>\n                <Select\n                  value={selectedLabel}\n                  onChange={(event: any) => {\n                    setSelectedLabel(event.target.value as string);\n                    getSelectedValuesForLabel(event.target.value as string);\n                  }}\n                  label={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.selectKey'\n                  )}\n                  className={classes.selectText}\n                >\n                  {labelValueData &&\n                    labelValueData.GetPromLabelNamesAndValues.labelValues?.map(\n                      (labelValue: LabelValue) => (\n                        <MenuItem\n                          key={labelValue.label}\n                          value={labelValue.label}\n                        >\n                          {labelValue.label}\n                        </MenuItem>\n                      )\n                    )}\n                </Select>\n              </FormControl>\n\n              <AutocompleteChipInput\n                value={selectedValuesForLabel}\n                onChange={(event, value, reason) => {\n                  const selectedValues: Array<Option> = value as Array<Option>;\n                  const existingLabelValuesList: QueryLabelValue[] =\n                    localQuery.labels_and_values_list ?? [];\n                  let updateStatus = false;\n                  existingLabelValuesList.forEach((labelValue, index) => {\n                    if (labelValue.label === selectedLabel) {\n                      existingLabelValuesList[index].value = selectedValues.map(\n                        (option) => option.name\n                      );\n                      updateStatus = true;\n                    }\n                  });\n                  if (!updateStatus) {\n                    existingLabelValuesList.push({\n                      label: selectedLabel,\n                      value: selectedValues.map((option) => option.name),\n                    });\n                  }\n                  setLocalQuery({\n                    ...localQuery,\n                    prom_query_name: setLabelsAndValues(\n                      localQuery.base_query ?? '',\n                      localQuery.prom_query_name ?? '',\n                      existingLabelValuesList\n                    ),\n                    labels_and_values_list: existingLabelValuesList,\n                  });\n                  getSelectedValuesForLabel(selectedLabel ?? '');\n                  setUpdate(true);\n                }}\n                options={getAvailableValues(selectedLabel ?? '')}\n                label={t(\n                  'analyticsDashboard.applicationDashboards.tuneTheQueries.values'\n                )}\n                placeholder={`${t(\n                  'analyticsDashboard.applicationDashboards.tuneTheQueries.addValue'\n                )}`}\n                disableCloseOnSelect\n                disableClearable={false}\n                limitTags={4}\n                style={{ width: '75%' }}\n              />\n            </div>\n\n            <PrometheusQueryEditor\n              index={index}\n              content={localQuery.prom_query_name ?? ''}\n              seriesListCompletionOptions={\n                seriesList.map((option: Option) => ({\n                  value: option.name,\n                  score: 1,\n                  meta: t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.seriesName'\n                  ),\n                })) ?? []\n              }\n              labelListCompletionOptions={\n                labelValueData?.GetPromLabelNamesAndValues.labelValues?.map(\n                  (labelValue: LabelValue) => ({\n                    value: labelValue.label,\n                    score: 2,\n                    meta: localQuery.base_query\n                      ? `${t(\n                          'analyticsDashboard.applicationDashboards.tuneTheQueries.labelFor'\n                        )} ${localQuery.base_query}`\n                      : t(\n                          'analyticsDashboard.applicationDashboards.tuneTheQueries.label'\n                        ),\n                  })\n                ) ?? []\n              }\n              valueListCompletionOptions={getValueList(\n                labelValueData?.GetPromLabelNamesAndValues.labelValues ?? []\n              )}\n              saveQueryChange={(updatedQuery: string) => {\n                const existingBaseQuery: string = localQuery.base_query ?? '';\n                const newBaseQuery: string = updatedQuery\n                  .split('{')[0]\n                  .includes('(')\n                  ? updatedQuery\n                      .split('{')[0]\n                      .substring(\n                        updatedQuery.split('{')[0].lastIndexOf('(') + 1\n                      )\n                  : updatedQuery.split('{')[0];\n                setLocalQuery({\n                  ...localQuery,\n                  base_query: newBaseQuery,\n                  labels_and_values_list: getLabelsAndValues(updatedQuery),\n                  prom_query_name: updatedQuery,\n                });\n                if (\n                  existingBaseQuery !== newBaseQuery &&\n                  localQuery.base_query !== '' &&\n                  dsURL !== ''\n                ) {\n                  getLabelValues();\n                  setSelectedValuesForLabel([]);\n                }\n                setUpdate(true);\n              }}\n            />\n\n            <Typography className={classes.configHeader}>\n              {t(\n                'analyticsDashboard.applicationDashboards.tuneTheQueries.configuration'\n              )}\n            </Typography>\n\n            <div\n              className={`${classes.flex} ${classes.paddedTop}`}\n              style={{ gap: '2.5rem', width: '98.5%', flexWrap: 'wrap' }}\n            >\n              <div className={classes.flex}>\n                <InputField\n                  label={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.legend'\n                  )}\n                  data-cy=\"queryLegend\"\n                  width=\"16rem\"\n                  variant=\"primary\"\n                  value={localQuery.legend}\n                  onChange={(event: React.ChangeEvent<{ value: string }>) => {\n                    setLocalQuery({\n                      ...localQuery,\n                      legend: (event.target as HTMLInputElement).value,\n                    });\n                    setUpdate(true);\n                  }}\n                />\n                <InfoTooltip\n                  value={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.legendInfo'\n                  )}\n                  className={classes.infoIcon}\n                />\n              </div>\n\n              <div className={classes.flex}>\n                <InputField\n                  label={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.minStep'\n                  )}\n                  data-cy=\"minStep\"\n                  width=\"9rem\"\n                  variant={\n                    !validateTimeInSeconds(`${localQuery.minstep}s`)\n                      ? 'error'\n                      : 'primary'\n                  }\n                  value={`${localQuery.minstep}s`}\n                  onChange={(event: React.ChangeEvent<{ value: string }>) => {\n                    setLocalQuery({\n                      ...localQuery,\n                      minstep: (event.target as HTMLInputElement).value.split(\n                        's'\n                      )[0],\n                    });\n                    setUpdate(true);\n                  }}\n                />\n                <InfoTooltip\n                  value={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.minStepInfo'\n                  )}\n                  className={classes.infoIcon}\n                />\n              </div>\n\n              <div className={classes.flex}>\n                <InputField\n                  label={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.format'\n                  )}\n                  data-cy=\"dataFormat\"\n                  width=\"9rem\"\n                  variant=\"primary\"\n                  disabled\n                  value={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.timeSeries'\n                  )}\n                />\n                <InfoTooltip\n                  value={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.formatInfo'\n                  )}\n                  className={classes.infoIcon}\n                />\n              </div>\n            </div>\n\n            <div\n              className={`${classes.flex} ${classes.paddedTop}`}\n              style={{ gap: '2.5rem' }}\n            >\n              <div className={classes.flex}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.formControl}\n                  style={{ width: '12.5rem' }}\n                  color=\"primary\"\n                >\n                  <InputLabel className={classes.selectTextLabel}>\n                    {t(\n                      'analyticsDashboard.applicationDashboards.tuneTheQueries.graph'\n                    )}\n                  </InputLabel>\n                  <Select\n                    value={\n                      localQuery.line\n                        ? t(\n                            'analyticsDashboard.applicationDashboards.tuneTheQueries.lineGraph'\n                          )\n                        : t(\n                            'analyticsDashboard.applicationDashboards.tuneTheQueries.areaGraph'\n                          )\n                    }\n                    onChange={(event) => {\n                      const line =\n                        (event.target.value as string) ===\n                        t(\n                          'analyticsDashboard.applicationDashboards.tuneTheQueries.areaGraph'\n                        );\n                      setLocalQuery({\n                        ...localQuery,\n                        line,\n                        close_area: !line,\n                      });\n                      setUpdate(true);\n                    }}\n                    label={t(\n                      'analyticsDashboard.applicationDashboards.tuneTheQueries.graph'\n                    )}\n                    className={classes.selectText}\n                  >\n                    <MenuItem\n                      key={`${t(\n                        'analyticsDashboard.applicationDashboards.tuneTheQueries.lineGraph'\n                      )}`}\n                      value={t(\n                        'analyticsDashboard.applicationDashboards.tuneTheQueries.lineGraph'\n                      )}\n                    >\n                      {t(\n                        'analyticsDashboard.applicationDashboards.tuneTheQueries.lineGraph'\n                      )}\n                    </MenuItem>\n                    <MenuItem\n                      key={`${t(\n                        'analyticsDashboard.applicationDashboards.tuneTheQueries.areaGraph'\n                      )}`}\n                      value={t(\n                        'analyticsDashboard.applicationDashboards.tuneTheQueries.areaGraph'\n                      )}\n                    >\n                      {t(\n                        'analyticsDashboard.applicationDashboards.tuneTheQueries.areaGraph'\n                      )}\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n                <InfoTooltip\n                  value={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.graphInfo'\n                  )}\n                  className={classes.infoIcon}\n                />\n              </div>\n\n              <div className={classes.flex}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.formControl}\n                  style={{ width: '8.5rem' }}\n                  color=\"primary\"\n                >\n                  <InputLabel className={classes.selectTextLabel}>\n                    {t(\n                      'analyticsDashboard.applicationDashboards.tuneTheQueries.resolution'\n                    )}\n                  </InputLabel>\n                  <Select\n                    value={localQuery.resolution}\n                    onChange={(event) => {\n                      setLocalQuery({\n                        ...localQuery,\n                        resolution: event.target.value as string,\n                      });\n                      setUpdate(true);\n                    }}\n                    label={t(\n                      'analyticsDashboard.applicationDashboards.tuneTheQueries.resolution'\n                    )}\n                    className={classes.selectText}\n                  >\n                    {resolutions.map((resolution: string) => (\n                      <MenuItem key={resolution} value={resolution}>\n                        {resolution}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <InfoTooltip\n                  value={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.resolutionInfo'\n                  )}\n                  className={classes.infoIcon}\n                />\n              </div>\n            </div>\n          </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default QueryEditor;\n"]},"metadata":{},"sourceType":"module"}