{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,Checkbox,FormControl,FormControlLabel,InputLabel,MenuItem,Select,Typography,useTheme}from'@material-ui/core';import React,{useEffect,useState}from'react';import{InputField}from'litmus-ui';import ToggleButton from'@material-ui/lab/ToggleButton';import ToggleButtonGroup from'@material-ui/lab/ToggleButtonGroup';import YAML from'yaml';import{useSelector}from'react-redux';import{useSubscription}from'@apollo/client';import{Autocomplete}from'@material-ui/lab';import{useTranslation}from'react-i18next';import useStyles from'./styles';import*as WorkflowActions from'../../../../redux/actions/workflow';import useActions from'../../../../redux/actions';import{KUBE_OBJ}from'../../../../graphql';import{constants}from'../../../../constants';var TargetApplication=function TargetApplication(_ref){var _engineManifest$spec$,_engineManifest$spec$2,_engineManifest$spec$3,_engineManifest$spec$4,_engineManifest$spec$5,_engineManifest$spec$6,_engineManifest$spec$7,_engineManifest$spec$8,_engineManifest$spec$9,_engineManifest$spec$10;var engineIndex=_ref.engineIndex,gotoStep=_ref.gotoStep;var _useTranslation=useTranslation(),t=_useTranslation.t;/**\n   * State Variables to manage theme changes\n   */var classes=useStyles();var theme=useTheme();/**\n   * State variable for redux\n   */var workflow=useActions(WorkflowActions);var manifest=useSelector(function(state){return state.workflowManifest;});var workflowData=useSelector(function(state){return state.workflowData;});var clusterid=workflowData.clusterid;var engineManifest=YAML.parse(manifest.engineYAML);/**\n   * State variable for editing the ChaosEngine Configuration\n   */var _useState=useState({appns:(_engineManifest$spec$=(_engineManifest$spec$2=engineManifest.spec.appinfo)===null||_engineManifest$spec$2===void 0?void 0:_engineManifest$spec$2.appns)!==null&&_engineManifest$spec$!==void 0?_engineManifest$spec$:'',applabel:(_engineManifest$spec$3=(_engineManifest$spec$4=engineManifest.spec.appinfo)===null||_engineManifest$spec$4===void 0?void 0:_engineManifest$spec$4.applabel)!==null&&_engineManifest$spec$3!==void 0?_engineManifest$spec$3:'',appkind:(_engineManifest$spec$5=(_engineManifest$spec$6=engineManifest.spec.appinfo)===null||_engineManifest$spec$6===void 0?void 0:_engineManifest$spec$6.appkind)!==null&&_engineManifest$spec$5!==void 0?_engineManifest$spec$5:'',annotationCheck:typeof engineManifest.spec.annotationCheck==='boolean'?engineManifest.spec.annotationCheck:engineManifest.spec.annotationCheck==='true',jobCleanUpPolicy:(_engineManifest$spec$7=engineManifest.spec.jobCleanUpPolicy)!==null&&_engineManifest$spec$7!==void 0?_engineManifest$spec$7:'retain'}),_useState2=_slicedToArray(_useState,2),targetApp=_useState2[0],setTargetApp=_useState2[1];var _useState3=useState(!!engineManifest.spec.experiments[0].spec.components['nodeSelectors']),_useState4=_slicedToArray(_useState3,2),addNodeSelector=_useState4[0],setAddNodeSelector=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),nodeSelector=_useState6[0],setNodeSelector=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),appinfoData=_useState8[0],setAppInfoData=_useState8[1];var _useState9=useState({group:'',version:'',resource:''}),_useState10=_slicedToArray(_useState9,2),GVRObj=_useState10[0],setGVRObj=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),appLabel=_useState12[0],setAppLabel=_useState12[1];/**\n   *\n   * Variable required for Menu List\n   */var applicationKind=[constants.deployment,constants.statefulset,constants.daemonset,constants.deploymentconfig,constants.rollout];/**\n   * Function to filter the lables according to the namespace provided\n   */var handleLabelChange=function handleLabelChange(){var applabel=[];if(appinfoData!==undefined){appinfoData.forEach(function(appinfo){if(appinfo.namespace===targetApp.appns){appinfo.appLabel.forEach(function(label){return applabel.push(label);});}});}return applabel.length>0?setAppLabel(applabel):setAppLabel(['No resource available']);};/**\n   * Function for handling AnnotationCheck toggle button\n   */var handleAlignment=function handleAlignment(event,newAlignment){if(newAlignment!==null){setTargetApp(_objectSpread(_objectSpread({},targetApp),{},{annotationCheck:newAlignment}));engineManifest.spec.annotationCheck=newAlignment.toString();}};/**\n   * handleMainYAMLChange handles the change in configuration\n   * of the Chaos Engine accroding to the index of the main manifest\n   */var handleMainYAMLChange=function handleMainYAMLChange(){engineManifest.spec.annotationCheck=targetApp.annotationCheck.toString();if(engineManifest.spec.appinfo!==undefined){engineManifest.spec.appinfo.appns=targetApp.appns;engineManifest.spec.appinfo.applabel=targetApp.applabel;engineManifest.spec.appinfo.appkind=targetApp.appkind;}if(typeof engineManifest.metadata.namespace==='object'){// Removes any whitespace in '{{workflow.parameters.adminModeNamespace}}'\nvar namespace=Object.keys(engineManifest.metadata.namespace)[0].replace(/\\s/g,'');engineManifest.metadata.namespace=\"{\".concat(namespace,\"}\");}/**\n     * If addNodeSelector is true, the value of nodeselector is added\n     * else if the addNodeSelector is false and it exists, the value is removed\n     */if(addNodeSelector){engineManifest.spec.experiments[0].spec.components['nodeSelectors']={'kubernetes.io/hostname':nodeSelector};}else if(!addNodeSelector&&engineManifest.spec.experiments[0].spec.components['nodeSelectors']){delete engineManifest.spec.experiments[0].spec.components['nodeSelectors'];}engineManifest.spec.jobCleanUpPolicy=targetApp.jobCleanUpPolicy;var mainManifest=YAML.parse(manifest.manifest);mainManifest.spec.templates[engineIndex].inputs.artifacts[0].raw.data=YAML.stringify(engineManifest);workflow.setWorkflowManifest({engineYAML:YAML.stringify(engineManifest)});return gotoStep(2);};/**\n   * GraphQL subscription to fetch the KubeObjData from the server\n   */var _useSubscription=useSubscription(KUBE_OBJ,{variables:{data:{cluster_id:clusterid,object_type:'kubeobject',kube_obj_request:{group:GVRObj.group,version:GVRObj.version,resource:GVRObj.resource}}},onSubscriptionComplete:function onSubscriptionComplete(){handleLabelChange();},fetchPolicy:'network-only'}),data=_useSubscription.data;/**\n   * This useEffect is used to populate the namespace and\n   * all the labels present in that particular namespace.\n   */useEffect(function(){if(data!==undefined){var appinfo=[];try{var kubeData=JSON.parse(data.getKubeObject.kube_obj);kubeData.forEach(function(obj){var applabel=[];if(obj.data!=null){obj.data.forEach(function(objData){if(objData.labels!=null){Object.entries(objData.labels).map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],value=_ref3[1];return applabel.push(\"\".concat(key,\"=\").concat(value));});}});}appinfo.push({namespace:obj.namespace,appLabel:applabel});});}catch(err){console.error(err);appinfo.push({namespace:'',appLabel:['']});}setAppInfoData(appinfo);}},[data]);/**\n   * This useEffect is called on the first render to fetch the\n   * kubeObj data and populate it in the AutoComplete textfields\n   */useEffect(function(){if(targetApp.appkind===constants.deployment){setGVRObj({group:constants.apps,version:constants.v1,resource:constants.deployments});}else if(targetApp.appkind===constants.statefulset){setGVRObj({group:constants.apps,version:constants.v1,resource:constants.statefulsets});}else if(targetApp.appkind===constants.daemonset){setGVRObj({group:constants.apps,version:constants.v1,resource:constants.daemonsets});}else if(targetApp.appkind===constants.deploymentconfig){setGVRObj({group:constants.openshift,version:constants.v1,resource:constants.deploymentconfigs});}else if(targetApp.appkind===constants.rollout){setGVRObj({group:constants.argoproj,version:constants.v1alpha1,resource:constants.rollouts});}else{setGVRObj({group:'',version:'',resource:''});}},[]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:classes.annotationInfo},t('createWorkflow.tuneWorkflow.verticalStepper.annotationInfo')),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:classes.inputDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.flexDisplay},/*#__PURE__*/React.createElement(Typography,{className:classes.annotation},t('createWorkflow.tuneWorkflow.verticalStepper.annotation')),/*#__PURE__*/React.createElement(ToggleButtonGroup,{value:targetApp.annotationCheck,exclusive:true,onChange:handleAlignment,\"aria-label\":\"text alignment\"},/*#__PURE__*/React.createElement(ToggleButton,{className:classes.annotationToggleBtn,style:{backgroundColor:targetApp.annotationCheck?theme.palette.success.main:theme.palette.disabledBackground},value:true,\"aria-label\":\"left aligned\"},/*#__PURE__*/React.createElement(Typography,{style:{color:targetApp.annotationCheck?theme.palette.common.white:theme.palette.text.disabled},className:classes.text},t('createWorkflow.tuneWorkflow.verticalStepper.true'))),/*#__PURE__*/React.createElement(ToggleButton,{style:{backgroundColor:!targetApp.annotationCheck?theme.palette.error.main:theme.palette.disabledBackground},className:classes.annotationToggleBtn,value:false,\"aria-label\":\"centered\"},/*#__PURE__*/React.createElement(Typography,{style:{color:!targetApp.annotationCheck?theme.palette.common.white:theme.palette.text.disabled,textTransform:'none'},className:classes.text},t('createWorkflow.tuneWorkflow.verticalStepper.false'))))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Typography,{className:classes.annotationDesc},t('createWorkflow.tuneWorkflow.verticalStepper.annotationDesc')),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(React.Fragment,null,((_engineManifest$spec$8=engineManifest.spec.appinfo)===null||_engineManifest$spec$8===void 0?void 0:_engineManifest$spec$8.appns)&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Autocomplete,{id:\"combo-box-demo\",options:appinfoData.map(function(option){return option.namespace;}),freeSolo:true,value:targetApp.appns,defaultValue:targetApp.appns,className:classes.autoCompleteText,onChange:function onChange(_,v){setTargetApp(_objectSpread(_objectSpread({},targetApp),{},{appns:v}));handleLabelChange();},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(InputField,Object.assign({onChange:function onChange(event){setTargetApp(_objectSpread(_objectSpread({},targetApp),{},{appns:event.target.value}));}},params,{label:constants.appns,helperText:appinfoData.filter(function(data){return data.namespace===targetApp.appns;}).length===0?/*#__PURE__*/React.createElement(Typography,{color:\"error\"},t('createWorkflow.tuneWorkflow.verticalStepper.nsError')):''}));}}),/*#__PURE__*/React.createElement(\"br\",null)),((_engineManifest$spec$9=engineManifest.spec.appinfo)===null||_engineManifest$spec$9===void 0?void 0:_engineManifest$spec$9.appkind)&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\"},/*#__PURE__*/React.createElement(InputLabel,{id:\"appKind\",className:classes.appKind},t('createWorkflow.tuneWorkflow.verticalStepper.appkind')),/*#__PURE__*/React.createElement(Select,{labelId:\"appKind\",value:targetApp.appkind,onChange:function onChange(event){setTargetApp(_objectSpread(_objectSpread({},targetApp),{},{appkind:event.target.value}));handleLabelChange();if(event.target.value===constants.deployment){setGVRObj({group:constants.apps,version:constants.v1,resource:constants.deployments});}else if(event.target.value===constants.statefulset){setGVRObj({group:constants.apps,version:constants.v1,resource:constants.statefulsets});}else if(event.target.value===constants.daemonset){setGVRObj({group:constants.apps,version:constants.v1,resource:constants.daemonsets});}else if(event.target.value===constants.deploymentconfig){setGVRObj({group:constants.openshift,version:constants.v1,resource:constants.deploymentconfigs});}else if(event.target.value===constants.rollout){setGVRObj({group:constants.argoproj,version:constants.v1alpha1,resource:constants.rollouts});}else{setGVRObj({group:'',version:'',resource:''});}},label:constants.appKind},/*#__PURE__*/React.createElement(MenuItem,{\"aria-label\":\"None\",value:\"\"}),applicationKind.map(function(kind){return/*#__PURE__*/React.createElement(MenuItem,{key:kind,value:kind},kind);}))),/*#__PURE__*/React.createElement(\"br\",null)),((_engineManifest$spec$10=engineManifest.spec.appinfo)===null||_engineManifest$spec$10===void 0?void 0:_engineManifest$spec$10.applabel)&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Autocomplete,{id:\"combo-box-demo\",options:appLabel,freeSolo:true,value:targetApp.applabel,defaultValue:targetApp.applabel,className:classes.autoCompleteText,onChange:function onChange(_,v){setTargetApp(_objectSpread(_objectSpread({},targetApp),{},{applabel:v}));},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(InputField,Object.assign({onChange:function onChange(event){setTargetApp(_objectSpread(_objectSpread({},targetApp),{},{applabel:event.target.value}));},helperText:appLabel.filter(function(data){return data===targetApp.applabel;}).length===0?/*#__PURE__*/React.createElement(Typography,{color:\"error\"},t('createWorkflow.tuneWorkflow.verticalStepper.labelError')):''},params,{label:constants.appLabel}));}}),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(InputField,{label:constants.jobCleanUp,width:\"auto\",value:targetApp.jobCleanUpPolicy,onChange:function onChange(event){setTargetApp(_objectSpread(_objectSpread({},targetApp),{},{jobCleanUpPolicy:event.target.value}));}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{checked:addNodeSelector,onChange:function onChange(event){return setAddNodeSelector(event.target.checked);},className:classes.checkBoxDefault,name:\"checkedB\",color:\"primary\"}),label:/*#__PURE__*/React.createElement(Typography,{className:classes.checkBoxText},t('createWorkflow.tuneWorkflow.verticalStepper.nodeselector'))}),addNodeSelector&&/*#__PURE__*/React.createElement(\"div\",{className:classes.flexDisplay},/*#__PURE__*/React.createElement(Typography,{className:classes.nodeSelectorText},t('createWorkflow.tuneWorkflow.verticalStepper.selector')),/*#__PURE__*/React.createElement(InputField,{label:constants.nodeselector,width:\"50%\",value:nodeSelector,onChange:function onChange(event){setNodeSelector(event.target.value);}})))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return gotoStep(0);},className:classes.button},t('workflowStepper.back')),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(){return handleMainYAMLChange();},className:classes.button},t('workflowStepper.next'))));};export default TargetApplication;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/TuneWorkflowSteps/TargetApplication.tsx"],"names":["Button","Checkbox","FormControl","FormControlLabel","InputLabel","MenuItem","Select","Typography","useTheme","React","useEffect","useState","InputField","ToggleButton","ToggleButtonGroup","YAML","useSelector","useSubscription","Autocomplete","useTranslation","useStyles","WorkflowActions","useActions","KUBE_OBJ","constants","TargetApplication","engineIndex","gotoStep","t","classes","theme","workflow","manifest","state","workflowManifest","workflowData","clusterid","engineManifest","parse","engineYAML","appns","spec","appinfo","applabel","appkind","annotationCheck","jobCleanUpPolicy","targetApp","setTargetApp","experiments","components","addNodeSelector","setAddNodeSelector","nodeSelector","setNodeSelector","appinfoData","setAppInfoData","group","version","resource","GVRObj","setGVRObj","appLabel","setAppLabel","applicationKind","deployment","statefulset","daemonset","deploymentconfig","rollout","handleLabelChange","undefined","forEach","namespace","label","push","length","handleAlignment","event","newAlignment","toString","handleMainYAMLChange","metadata","Object","keys","replace","mainManifest","templates","inputs","artifacts","raw","data","stringify","setWorkflowManifest","variables","cluster_id","object_type","kube_obj_request","onSubscriptionComplete","fetchPolicy","kubeData","JSON","getKubeObject","kube_obj","obj","objData","labels","entries","map","key","value","err","console","error","apps","v1","deployments","statefulsets","daemonsets","openshift","deploymentconfigs","argoproj","v1alpha1","rollouts","annotationInfo","inputDiv","flexDisplay","annotation","annotationToggleBtn","backgroundColor","palette","success","main","disabledBackground","color","common","white","text","disabled","textTransform","annotationDesc","option","autoCompleteText","_","v","params","target","filter","appKind","kind","jobCleanUp","checked","checkBoxDefault","checkBoxText","nodeSelectorText","nodeselector","button"],"mappings":"qWAAA,OACEA,MADF,CAEEC,QAFF,CAGEC,WAHF,CAIEC,gBAJF,CAKEC,UALF,CAMEC,QANF,CAOEC,MAPF,CAQEC,UARF,CASEC,QATF,KAUO,mBAVP,CAWA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,WAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,oCAA9B,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,eAAT,KAAgC,gBAAhC,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,MAAO,GAAKC,CAAAA,eAAZ,KAAiC,oCAAjC,CAMA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CAQA,OAASC,QAAT,KAAyB,qBAAzB,CACA,OAASC,SAAT,KAA0B,uBAA1B,CAoBA,GAAMC,CAAAA,iBAAkD,CAAG,QAArDA,CAAAA,iBAAqD,MAGrD,8OAFJC,CAAAA,WAEI,MAFJA,WAEI,CADJC,QACI,MADJA,QACI,CACJ,oBAAcR,cAAc,EAA5B,CAAQS,CAAR,iBAAQA,CAAR,CACA;AACF;AACA,KACE,GAAMC,CAAAA,OAAO,CAAGT,SAAS,EAAzB,CACA,GAAMU,CAAAA,KAAK,CAAGtB,QAAQ,EAAtB,CAEA;AACF;AACA,KACE,GAAMuB,CAAAA,QAAQ,CAAGT,UAAU,CAACD,eAAD,CAA3B,CACA,GAAMW,CAAAA,QAA0B,CAAGhB,WAAW,CAC5C,SAACiB,KAAD,QAAsBA,CAAAA,KAAK,CAACC,gBAA5B,EAD4C,CAA9C,CAGA,GAAMC,CAAAA,YAA0B,CAAGnB,WAAW,CAC5C,SAACiB,KAAD,QAAsBA,CAAAA,KAAK,CAACE,YAA5B,EAD4C,CAA9C,CAGA,GAAQC,CAAAA,SAAR,CAAsBD,YAAtB,CAAQC,SAAR,CACA,GAAMC,CAAAA,cAAc,CAAGtB,IAAI,CAACuB,KAAL,CAAWN,QAAQ,CAACO,UAApB,CAAvB,CAEA;AACF;AACA,KACE,cAAkC5B,QAAQ,CAAwB,CAChE6B,KAAK,gDAAEH,cAAc,CAACI,IAAf,CAAoBC,OAAtB,iDAAE,uBAA6BF,KAA/B,+DAAwC,EADmB,CAEhEG,QAAQ,iDAAEN,cAAc,CAACI,IAAf,CAAoBC,OAAtB,iDAAE,uBAA6BC,QAA/B,iEAA2C,EAFa,CAGhEC,OAAO,iDAAEP,cAAc,CAACI,IAAf,CAAoBC,OAAtB,iDAAE,uBAA6BE,OAA/B,iEAA0C,EAHe,CAIhEC,eAAe,CACb,MAAOR,CAAAA,cAAc,CAACI,IAAf,CAAoBI,eAA3B,GAA+C,SAA/C,CACIR,cAAc,CAACI,IAAf,CAAoBI,eADxB,CAEIR,cAAc,CAACI,IAAf,CAAoBI,eAApB,GAAwC,MAPkB,CAQhEC,gBAAgB,yBAAET,cAAc,CAACI,IAAf,CAAoBK,gBAAtB,iEAA0C,QARM,CAAxB,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eAUA,eAA8CrC,QAAQ,CACpD,CAAC,CAAC0B,cAAc,CAACI,IAAf,CAAoBQ,WAApB,CAAgC,CAAhC,EAAmCR,IAAnC,CAAwCS,UAAxC,CAAmD,eAAnD,CADkD,CAAtD,yCAAOC,eAAP,eAAwBC,kBAAxB,eAGA,eAAwCzC,QAAQ,CAAC,EAAD,CAAhD,yCAAO0C,YAAP,eAAqBC,eAArB,eACA,eAAsC3C,QAAQ,CAAgB,EAAhB,CAA9C,yCAAO4C,WAAP,eAAoBC,cAApB,eACA,eAA4B7C,QAAQ,CAAa,CAC/C8C,KAAK,CAAE,EADwC,CAE/CC,OAAO,CAAE,EAFsC,CAG/CC,QAAQ,CAAE,EAHqC,CAAb,CAApC,0CAAOC,MAAP,gBAAeC,SAAf,gBAKA,gBAAgClD,QAAQ,CAAW,EAAX,CAAxC,2CAAOmD,QAAP,gBAAiBC,WAAjB,gBAEA;AACF;AACA;AACA,KACE,GAAMC,CAAAA,eAAyB,CAAG,CAChCxC,SAAS,CAACyC,UADsB,CAEhCzC,SAAS,CAAC0C,WAFsB,CAGhC1C,SAAS,CAAC2C,SAHsB,CAIhC3C,SAAS,CAAC4C,gBAJsB,CAKhC5C,SAAS,CAAC6C,OALsB,CAAlC,CAOA;AACF;AACA,KACE,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAM3B,CAAAA,QAAkB,CAAG,EAA3B,CACA,GAAIY,WAAW,GAAKgB,SAApB,CAA+B,CAC7BhB,WAAW,CAACiB,OAAZ,CAAoB,SAAC9B,OAAD,CAAa,CAC/B,GAAIA,OAAO,CAAC+B,SAAR,GAAsB1B,SAAS,CAACP,KAApC,CAA2C,CACzCE,OAAO,CAACoB,QAAR,CAAiBU,OAAjB,CAAyB,SAACE,KAAD,QAAW/B,CAAAA,QAAQ,CAACgC,IAAT,CAAcD,KAAd,CAAX,EAAzB,EACD,CACF,CAJD,EAKD,CACD,MAAO/B,CAAAA,QAAQ,CAACiC,MAAT,CAAkB,CAAlB,CACHb,WAAW,CAACpB,QAAD,CADR,CAEHoB,WAAW,CAAC,CAAC,uBAAD,CAAD,CAFf,CAGD,CAZD,CAcA;AACF;AACA,KACE,GAAMc,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CACtBC,KADsB,CAEtBC,YAFsB,CAGnB,CACH,GAAIA,YAAY,GAAK,IAArB,CAA2B,CACzB/B,YAAY,gCAAMD,SAAN,MAAiBF,eAAe,CAAEkC,YAAlC,GAAZ,CACA1C,cAAc,CAACI,IAAf,CAAoBI,eAApB,CAAsCkC,YAAY,CAACC,QAAb,EAAtC,CACD,CACF,CARD,CAUA;AACF;AACA;AACA,KACE,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC5C,cAAc,CAACI,IAAf,CAAoBI,eAApB,CAAsCE,SAAS,CAACF,eAAV,CAA0BmC,QAA1B,EAAtC,CACA,GAAI3C,cAAc,CAACI,IAAf,CAAoBC,OAApB,GAAgC6B,SAApC,CAA+C,CAC7ClC,cAAc,CAACI,IAAf,CAAoBC,OAApB,CAA4BF,KAA5B,CAAoCO,SAAS,CAACP,KAA9C,CACAH,cAAc,CAACI,IAAf,CAAoBC,OAApB,CAA4BC,QAA5B,CAAuCI,SAAS,CAACJ,QAAjD,CACAN,cAAc,CAACI,IAAf,CAAoBC,OAApB,CAA4BE,OAA5B,CAAsCG,SAAS,CAACH,OAAhD,CACD,CACD,GAAI,MAAOP,CAAAA,cAAc,CAAC6C,QAAf,CAAwBT,SAA/B,GAA6C,QAAjD,CAA2D,CACzD;AACA,GAAMA,CAAAA,SAAS,CAAGU,MAAM,CAACC,IAAP,CAChB/C,cAAc,CAAC6C,QAAf,CAAwBT,SADR,EAEhB,CAFgB,EAEbY,OAFa,CAEL,KAFK,CAEE,EAFF,CAAlB,CAGAhD,cAAc,CAAC6C,QAAf,CAAwBT,SAAxB,YAAwCA,SAAxC,MACD,CACD;AACJ;AACA;AACA,OACI,GAAItB,eAAJ,CAAqB,CACnBd,cAAc,CAACI,IAAf,CAAoBQ,WAApB,CAAgC,CAAhC,EAAmCR,IAAnC,CAAwCS,UAAxC,CAAmD,eAAnD,EAAsE,CACpE,yBAA0BG,YAD0C,CAAtE,CAGD,CAJD,IAIO,IACL,CAACF,eAAD,EACAd,cAAc,CAACI,IAAf,CAAoBQ,WAApB,CAAgC,CAAhC,EAAmCR,IAAnC,CAAwCS,UAAxC,CAAmD,eAAnD,CAFK,CAGL,CACA,MAAOb,CAAAA,cAAc,CAACI,IAAf,CAAoBQ,WAApB,CAAgC,CAAhC,EAAmCR,IAAnC,CAAwCS,UAAxC,CACL,eADK,CAAP,CAGD,CACDb,cAAc,CAACI,IAAf,CAAoBK,gBAApB,CAAuCC,SAAS,CAACD,gBAAjD,CACA,GAAMwC,CAAAA,YAAY,CAAGvE,IAAI,CAACuB,KAAL,CAAWN,QAAQ,CAACA,QAApB,CAArB,CACAsD,YAAY,CAAC7C,IAAb,CAAkB8C,SAAlB,CAA4B7D,WAA5B,EAAyC8D,MAAzC,CAAgDC,SAAhD,CAA0D,CAA1D,EAA6DC,GAA7D,CAAiEC,IAAjE,CACE5E,IAAI,CAAC6E,SAAL,CAAevD,cAAf,CADF,CAEAN,QAAQ,CAAC8D,mBAAT,CAA6B,CAC3BtD,UAAU,CAAExB,IAAI,CAAC6E,SAAL,CAAevD,cAAf,CADe,CAA7B,EAGA,MAAOV,CAAAA,QAAQ,CAAC,CAAD,CAAf,CACD,CAtCD,CAwCA;AACF;AACA,KACE,qBAAiBV,eAAe,CAAkCM,QAAlC,CAA4C,CAC1EuE,SAAS,CAAE,CACTH,IAAI,CAAE,CACJI,UAAU,CAAE3D,SADR,CAEJ4D,WAAW,CAAE,YAFT,CAGJC,gBAAgB,CAAE,CAChBxC,KAAK,CAAEG,MAAM,CAACH,KADE,CAEhBC,OAAO,CAAEE,MAAM,CAACF,OAFA,CAGhBC,QAAQ,CAAEC,MAAM,CAACD,QAHD,CAHd,CADG,CAD+D,CAY1EuC,sBAAsB,CAAE,iCAAM,CAC5B5B,iBAAiB,GAClB,CAdyE,CAe1E6B,WAAW,CAAE,cAf6D,CAA5C,CAAhC,CAAQR,IAAR,kBAAQA,IAAR,CAkBA;AACF;AACA;AACA,KACEjF,SAAS,CAAC,UAAM,CACd,GAAIiF,IAAI,GAAKpB,SAAb,CAAwB,CACtB,GAAM7B,CAAAA,OAAsB,CAAG,EAA/B,CACA,GAAI,CACF,GAAM0D,CAAAA,QAAuB,CAAGC,IAAI,CAAC/D,KAAL,CAAWqD,IAAI,CAACW,aAAL,CAAmBC,QAA9B,CAAhC,CACAH,QAAQ,CAAC5B,OAAT,CAAiB,SAACgC,GAAD,CAAsB,CACrC,GAAM7D,CAAAA,QAAkB,CAAG,EAA3B,CACA,GAAI6D,GAAG,CAACb,IAAJ,EAAY,IAAhB,CAAsB,CACpBa,GAAG,CAACb,IAAJ,CAASnB,OAAT,CAAiB,SAACiC,OAAD,CAA8B,CAC7C,GAAIA,OAAO,CAACC,MAAR,EAAkB,IAAtB,CAA4B,CAC1BvB,MAAM,CAACwB,OAAP,CAAeF,OAAO,CAACC,MAAvB,EAA+BE,GAA/B,CAAmC,kDAAEC,GAAF,UAAOC,KAAP,gBACjCnE,CAAAA,QAAQ,CAACgC,IAAT,WAAiBkC,GAAjB,aAAwBC,KAAxB,EADiC,EAAnC,EAGD,CACF,CAND,EAOD,CACDpE,OAAO,CAACiC,IAAR,CAAa,CACXF,SAAS,CAAE+B,GAAG,CAAC/B,SADJ,CAEXX,QAAQ,CAAEnB,QAFC,CAAb,EAID,CAfD,EAgBD,CAAC,MAAOoE,GAAP,CAAY,CACZC,OAAO,CAACC,KAAR,CAAcF,GAAd,EACArE,OAAO,CAACiC,IAAR,CAAa,CACXF,SAAS,CAAE,EADA,CAEXX,QAAQ,CAAE,CAAC,EAAD,CAFC,CAAb,EAID,CACDN,cAAc,CAACd,OAAD,CAAd,CACD,CACF,CA9BQ,CA8BN,CAACiD,IAAD,CA9BM,CAAT,CAgCA;AACF;AACA;AACA,KACEjF,SAAS,CAAC,UAAM,CACd,GAAIqC,SAAS,CAACH,OAAV,GAAsBpB,SAAS,CAACyC,UAApC,CAAgD,CAC9CJ,SAAS,CAAC,CACRJ,KAAK,CAAEjC,SAAS,CAAC0F,IADT,CAERxD,OAAO,CAAElC,SAAS,CAAC2F,EAFX,CAGRxD,QAAQ,CAAEnC,SAAS,CAAC4F,WAHZ,CAAD,CAAT,CAKD,CAND,IAMO,IAAIrE,SAAS,CAACH,OAAV,GAAsBpB,SAAS,CAAC0C,WAApC,CAAiD,CACtDL,SAAS,CAAC,CACRJ,KAAK,CAAEjC,SAAS,CAAC0F,IADT,CAERxD,OAAO,CAAElC,SAAS,CAAC2F,EAFX,CAGRxD,QAAQ,CAAEnC,SAAS,CAAC6F,YAHZ,CAAD,CAAT,CAKD,CANM,IAMA,IAAItE,SAAS,CAACH,OAAV,GAAsBpB,SAAS,CAAC2C,SAApC,CAA+C,CACpDN,SAAS,CAAC,CACRJ,KAAK,CAAEjC,SAAS,CAAC0F,IADT,CAERxD,OAAO,CAAElC,SAAS,CAAC2F,EAFX,CAGRxD,QAAQ,CAAEnC,SAAS,CAAC8F,UAHZ,CAAD,CAAT,CAKD,CANM,IAMA,IAAIvE,SAAS,CAACH,OAAV,GAAsBpB,SAAS,CAAC4C,gBAApC,CAAsD,CAC3DP,SAAS,CAAC,CACRJ,KAAK,CAAEjC,SAAS,CAAC+F,SADT,CAER7D,OAAO,CAAElC,SAAS,CAAC2F,EAFX,CAGRxD,QAAQ,CAAEnC,SAAS,CAACgG,iBAHZ,CAAD,CAAT,CAKD,CANM,IAMA,IAAIzE,SAAS,CAACH,OAAV,GAAsBpB,SAAS,CAAC6C,OAApC,CAA6C,CAClDR,SAAS,CAAC,CACRJ,KAAK,CAAEjC,SAAS,CAACiG,QADT,CAER/D,OAAO,CAAElC,SAAS,CAACkG,QAFX,CAGR/D,QAAQ,CAAEnC,SAAS,CAACmG,QAHZ,CAAD,CAAT,CAKD,CANM,IAMA,CACL9D,SAAS,CAAC,CACRJ,KAAK,CAAE,EADC,CAERC,OAAO,CAAE,EAFD,CAGRC,QAAQ,CAAE,EAHF,CAAD,CAAT,CAKD,CACF,CAtCQ,CAsCN,EAtCM,CAAT,CAwCA,mBACE,4CACE,oBAAC,UAAD,EAAY,SAAS,CAAE9B,OAAO,CAAC+F,cAA/B,EACGhG,CAAC,CAAC,4DAAD,CADJ,CADF,cAIE,8BAJF,cAKE,2BAAK,SAAS,CAAEC,OAAO,CAACgG,QAAxB,eAEE,2BAAK,SAAS,CAAEhG,OAAO,CAACiG,WAAxB,eACE,oBAAC,UAAD,EAAY,SAAS,CAAEjG,OAAO,CAACkG,UAA/B,EACGnG,CAAC,CAAC,wDAAD,CADJ,CADF,cAIE,oBAAC,iBAAD,EACE,KAAK,CAAEmB,SAAS,CAACF,eADnB,CAEE,SAAS,KAFX,CAGE,QAAQ,CAAEgC,eAHZ,CAIE,aAAW,gBAJb,eAME,oBAAC,YAAD,EACE,SAAS,CAAEhD,OAAO,CAACmG,mBADrB,CAEE,KAAK,CAAE,CACLC,eAAe,CAAElF,SAAS,CAACF,eAAV,CACbf,KAAK,CAACoG,OAAN,CAAcC,OAAd,CAAsBC,IADT,CAEbtG,KAAK,CAACoG,OAAN,CAAcG,kBAHb,CAFT,CAOE,KAAK,KAPP,CAQE,aAAW,cARb,eAUE,oBAAC,UAAD,EACE,KAAK,CAAE,CACLC,KAAK,CAAEvF,SAAS,CAACF,eAAV,CACHf,KAAK,CAACoG,OAAN,CAAcK,MAAd,CAAqBC,KADlB,CAEH1G,KAAK,CAACoG,OAAN,CAAcO,IAAd,CAAmBC,QAHlB,CADT,CAME,SAAS,CAAE7G,OAAO,CAAC4G,IANrB,EAQG7G,CAAC,CAAC,kDAAD,CARJ,CAVF,CANF,cA2BE,oBAAC,YAAD,EACE,KAAK,CAAE,CACLqG,eAAe,CAAE,CAAClF,SAAS,CAACF,eAAX,CACbf,KAAK,CAACoG,OAAN,CAAcjB,KAAd,CAAoBmB,IADP,CAEbtG,KAAK,CAACoG,OAAN,CAAcG,kBAHb,CADT,CAME,SAAS,CAAExG,OAAO,CAACmG,mBANrB,CAOE,KAAK,CAAE,KAPT,CAQE,aAAW,UARb,eAUE,oBAAC,UAAD,EACE,KAAK,CAAE,CACLM,KAAK,CAAE,CAACvF,SAAS,CAACF,eAAX,CACHf,KAAK,CAACoG,OAAN,CAAcK,MAAd,CAAqBC,KADlB,CAEH1G,KAAK,CAACoG,OAAN,CAAcO,IAAd,CAAmBC,QAHlB,CAILC,aAAa,CAAE,MAJV,CADT,CAOE,SAAS,CAAE9G,OAAO,CAAC4G,IAPrB,EASG7G,CAAC,CAAC,mDAAD,CATJ,CAVF,CA3BF,CAJF,CAFF,cAyDE,8BAzDF,cA0DE,oBAAC,UAAD,EAAY,SAAS,CAAEC,OAAO,CAAC+G,cAA/B,EACGhH,CAAC,CAAC,4DAAD,CADJ,CA1DF,cA6DE,8BA7DF,cA8DE,wCAEG,yBAAAS,cAAc,CAACI,IAAf,CAAoBC,OAApB,wEAA6BF,KAA7B,gBACC,qDACE,oBAAC,YAAD,EACE,EAAE,CAAC,gBADL,CAEE,OAAO,CAAEe,WAAW,CAACqD,GAAZ,CAAgB,SAACiC,MAAD,QAAYA,CAAAA,MAAM,CAACpE,SAAnB,EAAhB,CAFX,CAGE,QAAQ,KAHV,CAIE,KAAK,CAAE1B,SAAS,CAACP,KAJnB,CAKE,YAAY,CAAEO,SAAS,CAACP,KAL1B,CAME,SAAS,CAAEX,OAAO,CAACiH,gBANrB,CAOE,QAAQ,CAAE,kBAACC,CAAD,CAAIC,CAAJ,CAAe,CACvBhG,YAAY,gCACPD,SADO,MAEVP,KAAK,CAAEwG,CAFG,GAAZ,CAIA1E,iBAAiB,GAClB,CAbH,CAcE,WAAW,CAAE,qBAAC2E,MAAD,qBACX,oBAAC,UAAD,gBACE,QAAQ,CAAE,kBAACnE,KAAD,CAAW,CACnB9B,YAAY,gCACPD,SADO,MAEVP,KAAK,CAAEsC,KAAK,CAACoE,MAAN,CAAapC,KAFV,GAAZ,CAID,CANH,EAOMmC,MAPN,EAQE,KAAK,CAAEzH,SAAS,CAACgB,KARnB,CASE,UAAU,CACRe,WAAW,CAAC4F,MAAZ,CACE,SAACxD,IAAD,QAAUA,CAAAA,IAAI,CAAClB,SAAL,GAAmB1B,SAAS,CAACP,KAAvC,EADF,EAEEoC,MAFF,GAEa,CAFb,cAGE,oBAAC,UAAD,EAAY,KAAK,CAAC,OAAlB,EACGhD,CAAC,CACA,qDADA,CADJ,CAHF,CASE,EAnBN,GADW,EAdf,EADF,cAyCE,8BAzCF,CAHJ,CAiDG,yBAAAS,cAAc,CAACI,IAAf,CAAoBC,OAApB,wEAA6BE,OAA7B,gBACC,qDACE,oBAAC,WAAD,EAAa,OAAO,CAAC,UAArB,eACE,oBAAC,UAAD,EAAY,EAAE,CAAC,SAAf,CAAyB,SAAS,CAAEf,OAAO,CAACuH,OAA5C,EACGxH,CAAC,CAAC,qDAAD,CADJ,CADF,cAIE,oBAAC,MAAD,EACE,OAAO,CAAC,SADV,CAEE,KAAK,CAAEmB,SAAS,CAACH,OAFnB,CAGE,QAAQ,CAAE,kBAACkC,KAAD,CAAW,CACnB9B,YAAY,gCACPD,SADO,MAEVH,OAAO,CAAEkC,KAAK,CAACoE,MAAN,CAAapC,KAFZ,GAAZ,CAIAxC,iBAAiB,GACjB,GAAIQ,KAAK,CAACoE,MAAN,CAAapC,KAAb,GAAuBtF,SAAS,CAACyC,UAArC,CAAiD,CAC/CJ,SAAS,CAAC,CACRJ,KAAK,CAAEjC,SAAS,CAAC0F,IADT,CAERxD,OAAO,CAAElC,SAAS,CAAC2F,EAFX,CAGRxD,QAAQ,CAAEnC,SAAS,CAAC4F,WAHZ,CAAD,CAAT,CAKD,CAND,IAMO,IAAItC,KAAK,CAACoE,MAAN,CAAapC,KAAb,GAAuBtF,SAAS,CAAC0C,WAArC,CAAkD,CACvDL,SAAS,CAAC,CACRJ,KAAK,CAAEjC,SAAS,CAAC0F,IADT,CAERxD,OAAO,CAAElC,SAAS,CAAC2F,EAFX,CAGRxD,QAAQ,CAAEnC,SAAS,CAAC6F,YAHZ,CAAD,CAAT,CAKD,CANM,IAMA,IAAIvC,KAAK,CAACoE,MAAN,CAAapC,KAAb,GAAuBtF,SAAS,CAAC2C,SAArC,CAAgD,CACrDN,SAAS,CAAC,CACRJ,KAAK,CAAEjC,SAAS,CAAC0F,IADT,CAERxD,OAAO,CAAElC,SAAS,CAAC2F,EAFX,CAGRxD,QAAQ,CAAEnC,SAAS,CAAC8F,UAHZ,CAAD,CAAT,CAKD,CANM,IAMA,IACLxC,KAAK,CAACoE,MAAN,CAAapC,KAAb,GAAuBtF,SAAS,CAAC4C,gBAD5B,CAEL,CACAP,SAAS,CAAC,CACRJ,KAAK,CAAEjC,SAAS,CAAC+F,SADT,CAER7D,OAAO,CAAElC,SAAS,CAAC2F,EAFX,CAGRxD,QAAQ,CAAEnC,SAAS,CAACgG,iBAHZ,CAAD,CAAT,CAKD,CARM,IAQA,IAAI1C,KAAK,CAACoE,MAAN,CAAapC,KAAb,GAAuBtF,SAAS,CAAC6C,OAArC,CAA8C,CACnDR,SAAS,CAAC,CACRJ,KAAK,CAAEjC,SAAS,CAACiG,QADT,CAER/D,OAAO,CAAElC,SAAS,CAACkG,QAFX,CAGR/D,QAAQ,CAAEnC,SAAS,CAACmG,QAHZ,CAAD,CAAT,CAKD,CANM,IAMA,CACL9D,SAAS,CAAC,CACRJ,KAAK,CAAE,EADC,CAERC,OAAO,CAAE,EAFD,CAGRC,QAAQ,CAAE,EAHF,CAAD,CAAT,CAKD,CACF,CAhDH,CAiDE,KAAK,CAAEnC,SAAS,CAAC4H,OAjDnB,eAmDE,oBAAC,QAAD,EAAU,aAAW,MAArB,CAA4B,KAAK,CAAC,EAAlC,EAnDF,CAoDGpF,eAAe,CAAC4C,GAAhB,CAAoB,SAACyC,IAAD,CAAU,CAC7B,mBACE,oBAAC,QAAD,EAAU,GAAG,CAAEA,IAAf,CAAqB,KAAK,CAAEA,IAA5B,EACGA,IADH,CADF,CAKD,CANA,CApDH,CAJF,CADF,cAkEE,8BAlEF,CAlDJ,CAyHG,0BAAAhH,cAAc,CAACI,IAAf,CAAoBC,OAApB,0EAA6BC,QAA7B,gBACC,qDACE,oBAAC,YAAD,EACE,EAAE,CAAC,gBADL,CAEE,OAAO,CAAEmB,QAFX,CAGE,QAAQ,KAHV,CAIE,KAAK,CAAEf,SAAS,CAACJ,QAJnB,CAKE,YAAY,CAAEI,SAAS,CAACJ,QAL1B,CAME,SAAS,CAAEd,OAAO,CAACiH,gBANrB,CAOE,QAAQ,CAAE,kBAACC,CAAD,CAAIC,CAAJ,CAAe,CACvBhG,YAAY,gCACPD,SADO,MAEVJ,QAAQ,CAAEqG,CAFA,GAAZ,CAID,CAZH,CAaE,WAAW,CAAE,qBAACC,MAAD,qBACX,oBAAC,UAAD,gBACE,QAAQ,CAAE,kBAACnE,KAAD,CAAW,CACnB9B,YAAY,gCACPD,SADO,MAEVJ,QAAQ,CAAEmC,KAAK,CAACoE,MAAN,CAAapC,KAFb,GAAZ,CAID,CANH,CAOE,UAAU,CACRhD,QAAQ,CAACqF,MAAT,CAAgB,SAACxD,IAAD,QAAUA,CAAAA,IAAI,GAAK5C,SAAS,CAACJ,QAA7B,EAAhB,EACGiC,MADH,GACc,CADd,cAEE,oBAAC,UAAD,EAAY,KAAK,CAAC,OAAlB,EACGhD,CAAC,CACA,wDADA,CADJ,CAFF,CAQE,EAhBN,EAmBMqH,MAnBN,EAoBE,KAAK,CAAEzH,SAAS,CAACsC,QApBnB,GADW,EAbf,EADF,cAuCE,8BAvCF,CA1HJ,cAsKE,oBAAC,UAAD,EACE,KAAK,CAAEtC,SAAS,CAAC8H,UADnB,CAEE,KAAK,CAAC,MAFR,CAGE,KAAK,CAAEvG,SAAS,CAACD,gBAHnB,CAIE,QAAQ,CAAE,kBAACgC,KAAD,CAAW,CACnB9B,YAAY,gCACPD,SADO,MAEVD,gBAAgB,CAAEgC,KAAK,CAACoE,MAAN,CAAapC,KAFrB,GAAZ,CAID,CATH,EAtKF,cAiLE,8BAjLF,cAoLE,oBAAC,gBAAD,EACE,OAAO,cACL,oBAAC,QAAD,EACE,OAAO,CAAE3D,eADX,CAEE,QAAQ,CAAE,kBAAC2B,KAAD,CAAW,CACnB,MAAO1B,CAAAA,kBAAkB,CAAC0B,KAAK,CAACoE,MAAN,CAAaK,OAAd,CAAzB,CACD,CAJH,CAKE,SAAS,CAAE1H,OAAO,CAAC2H,eALrB,CAME,IAAI,CAAC,UANP,CAOE,KAAK,CAAC,SAPR,EAFJ,CAYE,KAAK,cACH,oBAAC,UAAD,EAAY,SAAS,CAAE3H,OAAO,CAAC4H,YAA/B,EACG7H,CAAC,CAAC,0DAAD,CADJ,CAbJ,EApLF,CAsMGuB,eAAe,eACd,2BAAK,SAAS,CAAEtB,OAAO,CAACiG,WAAxB,eACE,oBAAC,UAAD,EAAY,SAAS,CAAEjG,OAAO,CAAC6H,gBAA/B,EACG9H,CAAC,CAAC,sDAAD,CADJ,CADF,cAIE,oBAAC,UAAD,EACE,KAAK,CAAEJ,SAAS,CAACmI,YADnB,CAEE,KAAK,CAAC,KAFR,CAGE,KAAK,CAAEtG,YAHT,CAIE,QAAQ,CAAE,kBAACyB,KAAD,CAAW,CACnBxB,eAAe,CAACwB,KAAK,CAACoE,MAAN,CAAapC,KAAd,CAAf,CACD,CANH,EAJF,CAvMJ,CA9DF,CALF,cA0RE,8BA1RF,cA4RE,4CACE,oBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMnF,CAAAA,QAAQ,CAAC,CAAD,CAAd,EAAjB,CAAoC,SAAS,CAAEE,OAAO,CAAC+H,MAAvD,EACGhI,CAAC,CAAC,sBAAD,CADJ,CADF,cAKE,oBAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,KAAK,CAAC,SAFR,CAGE,OAAO,CAAE,yBAAMqD,CAAAA,oBAAoB,EAA1B,EAHX,CAIE,SAAS,CAAEpD,OAAO,CAAC+H,MAJrB,EAMGhI,CAAC,CAAC,sBAAD,CANJ,CALF,CA5RF,CADF,CA6SD,CAxhBD,CA0hBA,cAAeH,CAAAA,iBAAf","sourcesContent":["import {\n  Button,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { InputField } from 'litmus-ui';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport YAML from 'yaml';\nimport { useSelector } from 'react-redux';\nimport { useSubscription } from '@apollo/client';\nimport { Autocomplete } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\nimport * as WorkflowActions from '../../../../redux/actions/workflow';\nimport {\n  WorkflowData,\n  WorkflowManifest,\n} from '../../../../models/redux/workflow';\nimport { RootState } from '../../../../redux/reducers';\nimport useActions from '../../../../redux/actions';\nimport {\n  GVRRequest,\n  KubeObjData,\n  KubeObjRequest,\n  KubeObjResource,\n  KubeObjResponse,\n} from '../../../../models/graphql/createWorkflowData';\nimport { KUBE_OBJ } from '../../../../graphql';\nimport { constants } from '../../../../constants';\n\ninterface AppInfoData {\n  namespace: string;\n  appLabel: string[];\n}\n\ninterface TargetApplicationData {\n  appns: string | undefined;\n  appkind: string;\n  applabel: string;\n  annotationCheck: boolean;\n  jobCleanUpPolicy: string;\n}\n\ninterface TargetApplicationProp {\n  engineIndex: number;\n  gotoStep: (page: number) => void;\n}\n\nconst TargetApplication: React.FC<TargetApplicationProp> = ({\n  engineIndex,\n  gotoStep,\n}) => {\n  const { t } = useTranslation();\n  /**\n   * State Variables to manage theme changes\n   */\n  const classes = useStyles();\n  const theme = useTheme();\n\n  /**\n   * State variable for redux\n   */\n  const workflow = useActions(WorkflowActions);\n  const manifest: WorkflowManifest = useSelector(\n    (state: RootState) => state.workflowManifest\n  );\n  const workflowData: WorkflowData = useSelector(\n    (state: RootState) => state.workflowData\n  );\n  const { clusterid } = workflowData;\n  const engineManifest = YAML.parse(manifest.engineYAML);\n\n  /**\n   * State variable for editing the ChaosEngine Configuration\n   */\n  const [targetApp, setTargetApp] = useState<TargetApplicationData>({\n    appns: engineManifest.spec.appinfo?.appns ?? '',\n    applabel: engineManifest.spec.appinfo?.applabel ?? '',\n    appkind: engineManifest.spec.appinfo?.appkind ?? '',\n    annotationCheck:\n      typeof engineManifest.spec.annotationCheck === 'boolean'\n        ? engineManifest.spec.annotationCheck\n        : engineManifest.spec.annotationCheck === 'true',\n    jobCleanUpPolicy: engineManifest.spec.jobCleanUpPolicy ?? 'retain',\n  });\n  const [addNodeSelector, setAddNodeSelector] = useState<boolean>(\n    !!engineManifest.spec.experiments[0].spec.components['nodeSelectors']\n  );\n  const [nodeSelector, setNodeSelector] = useState('');\n  const [appinfoData, setAppInfoData] = useState<AppInfoData[]>([]);\n  const [GVRObj, setGVRObj] = useState<GVRRequest>({\n    group: '',\n    version: '',\n    resource: '',\n  });\n  const [appLabel, setAppLabel] = useState<string[]>([]);\n\n  /**\n   *\n   * Variable required for Menu List\n   */\n  const applicationKind: string[] = [\n    constants.deployment,\n    constants.statefulset,\n    constants.daemonset,\n    constants.deploymentconfig,\n    constants.rollout,\n  ];\n  /**\n   * Function to filter the lables according to the namespace provided\n   */\n  const handleLabelChange = () => {\n    const applabel: string[] = [];\n    if (appinfoData !== undefined) {\n      appinfoData.forEach((appinfo) => {\n        if (appinfo.namespace === targetApp.appns) {\n          appinfo.appLabel.forEach((label) => applabel.push(label));\n        }\n      });\n    }\n    return applabel.length > 0\n      ? setAppLabel(applabel)\n      : setAppLabel(['No resource available']);\n  };\n\n  /**\n   * Function for handling AnnotationCheck toggle button\n   */\n  const handleAlignment = (\n    event: React.MouseEvent<HTMLElement>,\n    newAlignment: boolean\n  ) => {\n    if (newAlignment !== null) {\n      setTargetApp({ ...targetApp, annotationCheck: newAlignment });\n      engineManifest.spec.annotationCheck = newAlignment.toString();\n    }\n  };\n\n  /**\n   * handleMainYAMLChange handles the change in configuration\n   * of the Chaos Engine accroding to the index of the main manifest\n   */\n  const handleMainYAMLChange = () => {\n    engineManifest.spec.annotationCheck = targetApp.annotationCheck.toString();\n    if (engineManifest.spec.appinfo !== undefined) {\n      engineManifest.spec.appinfo.appns = targetApp.appns;\n      engineManifest.spec.appinfo.applabel = targetApp.applabel;\n      engineManifest.spec.appinfo.appkind = targetApp.appkind;\n    }\n    if (typeof engineManifest.metadata.namespace === 'object') {\n      // Removes any whitespace in '{{workflow.parameters.adminModeNamespace}}'\n      const namespace = Object.keys(\n        engineManifest.metadata.namespace\n      )[0].replace(/\\s/g, '');\n      engineManifest.metadata.namespace = `{${namespace}}`;\n    }\n    /**\n     * If addNodeSelector is true, the value of nodeselector is added\n     * else if the addNodeSelector is false and it exists, the value is removed\n     */\n    if (addNodeSelector) {\n      engineManifest.spec.experiments[0].spec.components['nodeSelectors'] = {\n        'kubernetes.io/hostname': nodeSelector,\n      };\n    } else if (\n      !addNodeSelector &&\n      engineManifest.spec.experiments[0].spec.components['nodeSelectors']\n    ) {\n      delete engineManifest.spec.experiments[0].spec.components[\n        'nodeSelectors'\n      ];\n    }\n    engineManifest.spec.jobCleanUpPolicy = targetApp.jobCleanUpPolicy;\n    const mainManifest = YAML.parse(manifest.manifest);\n    mainManifest.spec.templates[engineIndex].inputs.artifacts[0].raw.data =\n      YAML.stringify(engineManifest);\n    workflow.setWorkflowManifest({\n      engineYAML: YAML.stringify(engineManifest),\n    });\n    return gotoStep(2);\n  };\n\n  /**\n   * GraphQL subscription to fetch the KubeObjData from the server\n   */\n  const { data } = useSubscription<KubeObjResponse, KubeObjRequest>(KUBE_OBJ, {\n    variables: {\n      data: {\n        cluster_id: clusterid,\n        object_type: 'kubeobject',\n        kube_obj_request: {\n          group: GVRObj.group,\n          version: GVRObj.version,\n          resource: GVRObj.resource,\n        },\n      },\n    },\n    onSubscriptionComplete: () => {\n      handleLabelChange();\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  /**\n   * This useEffect is used to populate the namespace and\n   * all the labels present in that particular namespace.\n   */\n  useEffect(() => {\n    if (data !== undefined) {\n      const appinfo: AppInfoData[] = [];\n      try {\n        const kubeData: KubeObjData[] = JSON.parse(data.getKubeObject.kube_obj);\n        kubeData.forEach((obj: KubeObjData) => {\n          const applabel: string[] = [];\n          if (obj.data != null) {\n            obj.data.forEach((objData: KubeObjResource) => {\n              if (objData.labels != null) {\n                Object.entries(objData.labels).map(([key, value]) =>\n                  applabel.push(`${key}=${value}`)\n                );\n              }\n            });\n          }\n          appinfo.push({\n            namespace: obj.namespace,\n            appLabel: applabel,\n          });\n        });\n      } catch (err) {\n        console.error(err);\n        appinfo.push({\n          namespace: '',\n          appLabel: [''],\n        });\n      }\n      setAppInfoData(appinfo);\n    }\n  }, [data]);\n\n  /**\n   * This useEffect is called on the first render to fetch the\n   * kubeObj data and populate it in the AutoComplete textfields\n   */\n  useEffect(() => {\n    if (targetApp.appkind === constants.deployment) {\n      setGVRObj({\n        group: constants.apps,\n        version: constants.v1,\n        resource: constants.deployments,\n      });\n    } else if (targetApp.appkind === constants.statefulset) {\n      setGVRObj({\n        group: constants.apps,\n        version: constants.v1,\n        resource: constants.statefulsets,\n      });\n    } else if (targetApp.appkind === constants.daemonset) {\n      setGVRObj({\n        group: constants.apps,\n        version: constants.v1,\n        resource: constants.daemonsets,\n      });\n    } else if (targetApp.appkind === constants.deploymentconfig) {\n      setGVRObj({\n        group: constants.openshift,\n        version: constants.v1,\n        resource: constants.deploymentconfigs,\n      });\n    } else if (targetApp.appkind === constants.rollout) {\n      setGVRObj({\n        group: constants.argoproj,\n        version: constants.v1alpha1,\n        resource: constants.rollouts,\n      });\n    } else {\n      setGVRObj({\n        group: '',\n        version: '',\n        resource: '',\n      });\n    }\n  }, []);\n\n  return (\n    <div>\n      <Typography className={classes.annotationInfo}>\n        {t('createWorkflow.tuneWorkflow.verticalStepper.annotationInfo')}\n      </Typography>\n      <br />\n      <div className={classes.inputDiv}>\n        {/* Annotation Check  */}\n        <div className={classes.flexDisplay}>\n          <Typography className={classes.annotation}>\n            {t('createWorkflow.tuneWorkflow.verticalStepper.annotation')}\n          </Typography>\n          <ToggleButtonGroup\n            value={targetApp.annotationCheck}\n            exclusive\n            onChange={handleAlignment}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton\n              className={classes.annotationToggleBtn}\n              style={{\n                backgroundColor: targetApp.annotationCheck\n                  ? theme.palette.success.main\n                  : theme.palette.disabledBackground,\n              }}\n              value\n              aria-label=\"left aligned\"\n            >\n              <Typography\n                style={{\n                  color: targetApp.annotationCheck\n                    ? theme.palette.common.white\n                    : theme.palette.text.disabled,\n                }}\n                className={classes.text}\n              >\n                {t('createWorkflow.tuneWorkflow.verticalStepper.true')}\n              </Typography>\n            </ToggleButton>\n            <ToggleButton\n              style={{\n                backgroundColor: !targetApp.annotationCheck\n                  ? theme.palette.error.main\n                  : theme.palette.disabledBackground,\n              }}\n              className={classes.annotationToggleBtn}\n              value={false}\n              aria-label=\"centered\"\n            >\n              <Typography\n                style={{\n                  color: !targetApp.annotationCheck\n                    ? theme.palette.common.white\n                    : theme.palette.text.disabled,\n                  textTransform: 'none',\n                }}\n                className={classes.text}\n              >\n                {t('createWorkflow.tuneWorkflow.verticalStepper.false')}\n              </Typography>\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n        <br />\n        <Typography className={classes.annotationDesc}>\n          {t('createWorkflow.tuneWorkflow.verticalStepper.annotationDesc')}\n        </Typography>\n        <br />\n        <>\n          {/* AutoComplete textfield for Namespace */}\n          {engineManifest.spec.appinfo?.appns && (\n            <>\n              <Autocomplete\n                id=\"combo-box-demo\"\n                options={appinfoData.map((option) => option.namespace)}\n                freeSolo\n                value={targetApp.appns}\n                defaultValue={targetApp.appns}\n                className={classes.autoCompleteText}\n                onChange={(_, v: any) => {\n                  setTargetApp({\n                    ...targetApp,\n                    appns: v,\n                  });\n                  handleLabelChange();\n                }}\n                renderInput={(params) => (\n                  <InputField\n                    onChange={(event) => {\n                      setTargetApp({\n                        ...targetApp,\n                        appns: event.target.value,\n                      });\n                    }}\n                    {...params}\n                    label={constants.appns}\n                    helperText={\n                      appinfoData.filter(\n                        (data) => data.namespace === targetApp.appns\n                      ).length === 0 ? (\n                        <Typography color=\"error\">\n                          {t(\n                            'createWorkflow.tuneWorkflow.verticalStepper.nsError'\n                          )}\n                        </Typography>\n                      ) : (\n                        ''\n                      )\n                    }\n                  />\n                )}\n              />\n              <br />\n            </>\n          )}\n\n          {/* AppKind MenuList */}\n          {engineManifest.spec.appinfo?.appkind && (\n            <>\n              <FormControl variant=\"outlined\">\n                <InputLabel id=\"appKind\" className={classes.appKind}>\n                  {t('createWorkflow.tuneWorkflow.verticalStepper.appkind')}\n                </InputLabel>\n                <Select\n                  labelId=\"appKind\"\n                  value={targetApp.appkind}\n                  onChange={(event) => {\n                    setTargetApp({\n                      ...targetApp,\n                      appkind: event.target.value as string,\n                    });\n                    handleLabelChange();\n                    if (event.target.value === constants.deployment) {\n                      setGVRObj({\n                        group: constants.apps,\n                        version: constants.v1,\n                        resource: constants.deployments,\n                      });\n                    } else if (event.target.value === constants.statefulset) {\n                      setGVRObj({\n                        group: constants.apps,\n                        version: constants.v1,\n                        resource: constants.statefulsets,\n                      });\n                    } else if (event.target.value === constants.daemonset) {\n                      setGVRObj({\n                        group: constants.apps,\n                        version: constants.v1,\n                        resource: constants.daemonsets,\n                      });\n                    } else if (\n                      event.target.value === constants.deploymentconfig\n                    ) {\n                      setGVRObj({\n                        group: constants.openshift,\n                        version: constants.v1,\n                        resource: constants.deploymentconfigs,\n                      });\n                    } else if (event.target.value === constants.rollout) {\n                      setGVRObj({\n                        group: constants.argoproj,\n                        version: constants.v1alpha1,\n                        resource: constants.rollouts,\n                      });\n                    } else {\n                      setGVRObj({\n                        group: '',\n                        version: '',\n                        resource: '',\n                      });\n                    }\n                  }}\n                  label={constants.appKind}\n                >\n                  <MenuItem aria-label=\"None\" value=\"\" />\n                  {applicationKind.map((kind) => {\n                    return (\n                      <MenuItem key={kind} value={kind}>\n                        {kind}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n              <br />\n            </>\n          )}\n\n          {/* AutoComplete textfield for applabel */}\n          {engineManifest.spec.appinfo?.applabel && (\n            <>\n              <Autocomplete\n                id=\"combo-box-demo\"\n                options={appLabel}\n                freeSolo\n                value={targetApp.applabel}\n                defaultValue={targetApp.applabel}\n                className={classes.autoCompleteText}\n                onChange={(_, v: any) => {\n                  setTargetApp({\n                    ...targetApp,\n                    applabel: v,\n                  });\n                }}\n                renderInput={(params) => (\n                  <InputField\n                    onChange={(event) => {\n                      setTargetApp({\n                        ...targetApp,\n                        applabel: event.target.value,\n                      });\n                    }}\n                    helperText={\n                      appLabel.filter((data) => data === targetApp.applabel)\n                        .length === 0 ? (\n                        <Typography color=\"error\">\n                          {t(\n                            'createWorkflow.tuneWorkflow.verticalStepper.labelError'\n                          )}\n                        </Typography>\n                      ) : (\n                        ''\n                      )\n                    }\n                    {...params}\n                    label={constants.appLabel}\n                  />\n                )}\n              />\n              <br />\n            </>\n          )}\n\n          {/* JobCleanUpPolicy textfield */}\n          <InputField\n            label={constants.jobCleanUp}\n            width=\"auto\"\n            value={targetApp.jobCleanUpPolicy}\n            onChange={(event) => {\n              setTargetApp({\n                ...targetApp,\n                jobCleanUpPolicy: event.target.value,\n              });\n            }}\n          />\n          <br />\n\n          {/* Checkbox for adding NodeSelector */}\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={addNodeSelector}\n                onChange={(event) => {\n                  return setAddNodeSelector(event.target.checked);\n                }}\n                className={classes.checkBoxDefault}\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label={\n              <Typography className={classes.checkBoxText}>\n                {t('createWorkflow.tuneWorkflow.verticalStepper.nodeselector')}\n              </Typography>\n            }\n          />\n          {addNodeSelector && (\n            <div className={classes.flexDisplay}>\n              <Typography className={classes.nodeSelectorText}>\n                {t('createWorkflow.tuneWorkflow.verticalStepper.selector')}\n              </Typography>\n              <InputField\n                label={constants.nodeselector}\n                width=\"50%\"\n                value={nodeSelector}\n                onChange={(event) => {\n                  setNodeSelector(event.target.value);\n                }}\n              />\n            </div>\n          )}\n        </>\n      </div>\n      <br />\n\n      <div>\n        <Button onClick={() => gotoStep(0)} className={classes.button}>\n          {t('workflowStepper.back')}\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleMainYAMLChange()}\n          className={classes.button}\n        >\n          {t('workflowStepper.next')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TargetApplication;\n"]},"metadata":{},"sourceType":"module"}