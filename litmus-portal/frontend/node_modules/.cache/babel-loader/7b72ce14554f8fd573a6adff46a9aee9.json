{"ast":null,"code":"import _toConsumableArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ReliabilityScore/index.tsx\";\n\nimport { Typography } from '@material-ui/core';\nimport localforage from 'localforage';\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport WeightSlider from '../WeightSlider';\nimport useStyles from './styles';\nvar ReliablityScore = forwardRef(function (_, ref) {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState([{\n    experimentName: '',\n    weight: 0\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      weights = _useState2[0],\n      setWeights = _useState2[1];\n\n  function _handleChange(_ref) {\n    var newValue = _ref.newValue,\n        index = _ref.index;\n    weights[index].weight = newValue;\n    setWeights(_toConsumableArray(weights));\n  }\n\n  useEffect(function () {\n    localforage.getItem('weights').then(function (value) {\n      return value !== null ? setWeights(value) : setWeights([]);\n    });\n  }, []);\n\n  function onNext() {\n    localforage.setItem('weights', weights);\n    return true;\n  }\n\n  useImperativeHandle(ref, function () {\n    return {\n      onNext: onNext\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.reliabilityScore.header'))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.reliabilityScore.info'), \" \", weights.length, ' ', t('createWorkflow.reliabilityScore.infoNext'), ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.reliabilityScore.infoNextStrong')))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.horizontalLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), weights.map(function (Data, index) {\n    return /*#__PURE__*/React.createElement(WeightSlider, {\n      key: Data.experimentName + index.toString(),\n      index: index,\n      testName: Data.experimentName,\n      weight: Data.weight,\n      handleChange: function handleChange(newValue, index) {\n        return _handleChange({\n          newValue: newValue,\n          index: index\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    });\n  }))));\n});\nexport default ReliablityScore;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ReliabilityScore/index.tsx"],"names":["Typography","localforage","React","forwardRef","useEffect","useImperativeHandle","useState","useTranslation","WeightSlider","useStyles","ReliablityScore","_","ref","classes","t","experimentName","weight","weights","setWeights","handleChange","newValue","index","getItem","then","value","onNext","setItem","root","innerContainer","headerText","description","length","horizontalLine","map","Data","toString"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport localforage from 'localforage';\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { experimentMap } from '../../../models/redux/workflow';\nimport WeightSlider from '../WeightSlider';\nimport useStyles from './styles';\n\nconst ReliablityScore = forwardRef((_, ref) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [weights, setWeights] = useState<experimentMap[]>([\n    {\n      experimentName: '',\n      weight: 0,\n    },\n  ]);\n\n  function handleChange({\n    newValue,\n    index,\n  }: {\n    newValue: number;\n    index: number;\n  }) {\n    weights[index].weight = newValue;\n    setWeights([...weights]);\n  }\n\n  useEffect(() => {\n    localforage\n      .getItem('weights')\n      .then((value) =>\n        value !== null ? setWeights(value as experimentMap[]) : setWeights([])\n      );\n  }, []);\n\n  function onNext() {\n    localforage.setItem('weights', weights);\n    return true;\n  }\n\n  useImperativeHandle(ref, () => ({\n    onNext,\n  }));\n\n  return (\n    <div>\n      <form className={classes.root}>\n        <div className={classes.innerContainer}>\n          <div>\n            <Typography className={classes.headerText}>\n              <strong>{t('createWorkflow.reliabilityScore.header')}</strong>\n            </Typography>\n            <Typography className={classes.description}>\n              {t('createWorkflow.reliabilityScore.info')} {weights.length}{' '}\n              {t('createWorkflow.reliabilityScore.infoNext')}{' '}\n              <strong>\n                {t('createWorkflow.reliabilityScore.infoNextStrong')}\n              </strong>\n            </Typography>\n          </div>\n          <hr className={classes.horizontalLine} />\n          {weights.map((Data: experimentMap, index: number) => (\n            <WeightSlider\n              key={Data.experimentName + index.toString()}\n              index={index}\n              testName={Data.experimentName}\n              weight={Data.weight}\n              handleChange={(newValue, index) =>\n                handleChange({ newValue, index })\n              }\n            />\n          ))}\n        </div>\n      </form>\n    </div>\n  );\n});\n\nexport default ReliablityScore;\n"]},"metadata":{},"sourceType":"module"}