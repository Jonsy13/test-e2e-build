{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ChooseWorkflow/choosePreDefinedExperiments.tsx\";\n\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { AccordionDetails, FormControl, InputLabel, MenuItem, RadioGroup, Select, Typography, useTheme } from '@material-ui/core';\nimport { LitmusCard, RadioButton, Search } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport config from '../../../config';\nimport { GET_HUB_STATUS, GET_PREDEFINED_WORKFLOW_LIST } from '../../../graphql';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport useStyles, { MenuProps } from './styles';\n\nvar ChoosePreDefinedExperiments = function ChoosePreDefinedExperiments(_ref) {\n  var selectedExp = _ref.selectedExp;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette; // Local States\n\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var selectedProjectID = getProjectID();\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedHub = _useState6[0],\n      setSelectedHub = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      availableHubs = _useState8[0],\n      setAvailableHubs = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      workflowList = _useState10[0],\n      setWorkflowlist = _useState10[1]; // Get all MyHubs with status\n\n\n  var _useQuery = useQuery(GET_HUB_STATUS, {\n    variables: {\n      data: selectedProjectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery.data;\n  /**\n   * Query to get the list of Pre-defined workflows\n   */\n\n\n  var _useLazyQuery = useLazyQuery(GET_PREDEFINED_WORKFLOW_LIST, {\n    fetchPolicy: 'network-only',\n    onCompleted: function onCompleted(data) {\n      if (data.GetPredefinedWorkflowList !== undefined) {\n        setWorkflowlist(data.GetPredefinedWorkflowList);\n      }\n    },\n    onError: function onError() {\n      setWorkflowlist([]);\n    }\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 1),\n      getPredefinedWorkflow = _useLazyQuery2[0];\n  /**\n   * Function to handle changes in Radio Buttons\n   */\n\n\n  var handleChange = function handleChange(event) {\n    setSelected(event.target.value);\n    var selection = {\n      selected: 'A',\n      id: event.target.value\n    };\n    selectedExp(selection.id);\n    localforage.setItem('selectedScheduleOption', selection);\n    localforage.setItem('hasSetWorkflowData', false);\n  };\n\n  var filteredPreDefinedWorkflows = workflowList.filter(function (w) {\n    if (search === null) return w;\n    if (w.toLowerCase().includes(search.toLowerCase())) return w;\n    return null;\n  });\n  /**\n   * Function to handle change in MyHub dropdown\n   */\n\n  var handleMyHubChange = function handleMyHubChange(event) {\n    setSelectedHub(event.target.value);\n    getPredefinedWorkflow({\n      variables: {\n        hubname: event.target.value,\n        projectid: selectedProjectID\n      }\n    });\n    localforage.setItem('selectedHub', event.target.value);\n  };\n  /**\n   * UseEffect to check if Chaos Hub exists and if exists\n   * fetch the pre-defined workflows\n   */\n\n\n  useEffect(function () {\n    if ((data === null || data === void 0 ? void 0 : data.getHubStatus) !== undefined) {\n      if (data.getHubStatus.length) {\n        var hubDetails = [];\n        data.getHubStatus.forEach(function (hub) {\n          /**\n           * Push only available hub\n           */\n          if (hub.IsAvailable) {\n            hubDetails.push({\n              id: hub.id,\n              HubName: hub.HubName,\n              RepoBranch: hub.RepoBranch,\n              RepoURL: hub.RepoURL\n            });\n          }\n        });\n        setAvailableHubs(hubDetails);\n      }\n\n      data.getHubStatus.forEach(function (hubData) {\n        if (hubData.HubName.toLowerCase() === 'chaos hub') {\n          setSelectedHub('Chaos Hub');\n          localforage.setItem('selectedHub', 'Chaos Hub');\n          getPredefinedWorkflow({\n            variables: {\n              hubname: 'Chaos Hub',\n              projectid: selectedProjectID\n            }\n          });\n        }\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputMyHubDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.chooseWorkflow.selectMyHub')), /*#__PURE__*/React.createElement(Select, {\n    \"data-cy\": \"selectPreDefinedMyHub\",\n    value: selectedHub,\n    onChange: function onChange(e) {\n      handleMyHubChange(e);\n    },\n    label: \"Select MyHub\",\n    MenuProps: MenuProps,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, availableHubs.map(function (hubs) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: hubs.HubName,\n      value: hubs.HubName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      \"data-cy\": \"PreDefinedHubOption\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    }, hubs.HubName));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    \"data-cy\": \"agentSearch\",\n    id: \"input-with-icon-textfield\",\n    placeholder: \"Search\",\n    value: search,\n    onChange: function onChange(event) {\n      return setSearch(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.predefinedWorkflowDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, selectedHub === '' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noTemplatesDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.noTemplatesText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.chooseWorkflow.noMyHub'))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.noTemplatesDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.chooseWorkflow.selectHub'))) : workflowList.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noTemplatesDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.noTemplatesText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.chooseWorkflow.noPredefined'))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.noTemplatesDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.chooseWorkflow.addPredefined'))) : /*#__PURE__*/React.createElement(RadioGroup, {\n    value: selected,\n    \"data-cy\": \"PredefinedWorkflowsRadioGroup\",\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, (filteredPreDefinedWorkflows === null || filteredPreDefinedWorkflows === void 0 ? void 0 : filteredPreDefinedWorkflows.length) > 0 ? filteredPreDefinedWorkflows === null || filteredPreDefinedWorkflows === void 0 ? void 0 : filteredPreDefinedWorkflows.map(function (wfData) {\n    return /*#__PURE__*/React.createElement(LitmusCard, {\n      width: \"100%\",\n      height: \"5rem\",\n      key: wfData,\n      borderColor: palette.border.main,\n      className: classes.predefinedWorkflowCard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      value: wfData,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"left-div\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.experimentIcon,\n      src: \"\".concat(config.grahqlEndpoint, \"/icon/\").concat(selectedProjectID, \"/\").concat(selectedHub, \"/predefined/\").concat(wfData, \".png\"),\n      alt: \"Experiment Icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.predefinedWorkflowName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }, wfData)))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noTemplatesDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.noTemplatesText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 23\n    }\n  }, t('createWorkflow.chooseWorkflow.noPredefined'))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.noTemplatesDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.chooseWorkflow.searchTerm'))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.blur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ChoosePreDefinedExperiments;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ChooseWorkflow/choosePreDefinedExperiments.tsx"],"names":["useLazyQuery","useQuery","AccordionDetails","FormControl","InputLabel","MenuItem","RadioGroup","Select","Typography","useTheme","LitmusCard","RadioButton","Search","localforage","React","useEffect","useState","useTranslation","config","GET_HUB_STATUS","GET_PREDEFINED_WORKFLOW_LIST","getProjectID","useStyles","MenuProps","ChoosePreDefinedExperiments","selectedExp","t","classes","palette","search","setSearch","selected","setSelected","selectedProjectID","selectedHub","setSelectedHub","availableHubs","setAvailableHubs","workflowList","setWorkflowlist","variables","data","fetchPolicy","onCompleted","GetPredefinedWorkflowList","undefined","onError","getPredefinedWorkflow","handleChange","event","target","value","selection","id","setItem","filteredPreDefinedWorkflows","filter","w","toLowerCase","includes","handleMyHubChange","hubname","projectid","getHubStatus","length","hubDetails","forEach","hub","IsAvailable","push","HubName","RepoBranch","RepoURL","hubData","width","display","inputMyHubDiv","formControl","label","e","map","hubs","searchDiv","predefinedWorkflowDiv","noTemplatesDiv","noTemplatesText","noTemplatesDesc","wfData","border","main","predefinedWorkflowCard","experimentIcon","grahqlEndpoint","predefinedWorkflowName","blur"],"mappings":"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","sourcesContent":["import { useLazyQuery, useQuery } from '@apollo/client';\nimport {\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  RadioGroup,\n  Select,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport { LitmusCard, RadioButton, Search } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport config from '../../../config';\nimport { GET_HUB_STATUS, GET_PREDEFINED_WORKFLOW_LIST } from '../../../graphql';\nimport { MyHubDetail } from '../../../models/graphql/user';\nimport { HubStatus } from '../../../models/redux/myhub';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport useStyles, { MenuProps } from './styles';\n\ninterface ChooseWorkflowRadio {\n  selected: string;\n  id: string;\n}\n\ninterface ChoosePreDefinedExperimentsProps {\n  selectedExp: (expID: string) => void;\n}\n\nconst ChoosePreDefinedExperiments: React.FC<ChoosePreDefinedExperimentsProps> =\n  ({ selectedExp }) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { palette } = useTheme();\n\n    // Local States\n    const [search, setSearch] = useState<string | null>(null);\n    const [selected, setSelected] = useState<string>('');\n\n    const selectedProjectID = getProjectID();\n    const [selectedHub, setSelectedHub] = useState('');\n    const [availableHubs, setAvailableHubs] = useState<MyHubDetail[]>([]);\n    const [workflowList, setWorkflowlist] = useState([]);\n\n    // Get all MyHubs with status\n    const { data } = useQuery<HubStatus>(GET_HUB_STATUS, {\n      variables: { data: selectedProjectID },\n      fetchPolicy: 'cache-and-network',\n    });\n\n    /**\n     * Query to get the list of Pre-defined workflows\n     */\n    const [getPredefinedWorkflow] = useLazyQuery(GET_PREDEFINED_WORKFLOW_LIST, {\n      fetchPolicy: 'network-only',\n      onCompleted: (data) => {\n        if (data.GetPredefinedWorkflowList !== undefined) {\n          setWorkflowlist(data.GetPredefinedWorkflowList);\n        }\n      },\n      onError: () => {\n        setWorkflowlist([]);\n      },\n    });\n\n    /**\n     * Function to handle changes in Radio Buttons\n     */\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setSelected(event.target.value);\n      const selection: ChooseWorkflowRadio = {\n        selected: 'A',\n        id: event.target.value,\n      };\n      selectedExp(selection.id);\n      localforage.setItem('selectedScheduleOption', selection);\n      localforage.setItem('hasSetWorkflowData', false);\n    };\n\n    const filteredPreDefinedWorkflows = workflowList.filter((w: string) => {\n      if (search === null) return w;\n      if (w.toLowerCase().includes(search.toLowerCase())) return w;\n      return null;\n    });\n\n    /**\n     * Function to handle change in MyHub dropdown\n     */\n    const handleMyHubChange = (\n      event: React.ChangeEvent<{\n        name?: string | undefined;\n        value: unknown;\n      }>\n    ) => {\n      setSelectedHub(event.target.value as string);\n      getPredefinedWorkflow({\n        variables: {\n          hubname: event.target.value as string,\n          projectid: selectedProjectID,\n        },\n      });\n      localforage.setItem('selectedHub', event.target.value as string);\n    };\n\n    /**\n     * UseEffect to check if Chaos Hub exists and if exists\n     * fetch the pre-defined workflows\n     */\n    useEffect(() => {\n      if (data?.getHubStatus !== undefined) {\n        if (data.getHubStatus.length) {\n          const hubDetails: MyHubDetail[] = [];\n          data.getHubStatus.forEach((hub) => {\n            /**\n             * Push only available hub\n             */\n            if (hub.IsAvailable) {\n              hubDetails.push({\n                id: hub.id,\n                HubName: hub.HubName,\n                RepoBranch: hub.RepoBranch,\n                RepoURL: hub.RepoURL,\n              });\n            }\n          });\n          setAvailableHubs(hubDetails);\n        }\n        data.getHubStatus.forEach((hubData) => {\n          if (hubData.HubName.toLowerCase() === 'chaos hub') {\n            setSelectedHub('Chaos Hub');\n            localforage.setItem('selectedHub', 'Chaos Hub');\n            getPredefinedWorkflow({\n              variables: {\n                hubname: 'Chaos Hub',\n                projectid: selectedProjectID,\n              },\n            });\n          }\n        });\n      }\n    }, [data]);\n\n    return (\n      <AccordionDetails>\n        {/* Wrapping content inside the Accordion to take full width */}\n        <div style={{ width: '100%' }}>\n          <div style={{ display: 'flex' }}>\n            <div className={classes.inputMyHubDiv}>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel className={classes.label}>\n                  {t('createWorkflow.chooseWorkflow.selectMyHub')}\n                </InputLabel>\n                <Select\n                  data-cy=\"selectPreDefinedMyHub\"\n                  value={selectedHub}\n                  onChange={(e) => {\n                    handleMyHubChange(e);\n                  }}\n                  label=\"Select MyHub\"\n                  MenuProps={MenuProps}\n                >\n                  {availableHubs.map((hubs) => (\n                    <MenuItem key={hubs.HubName} value={hubs.HubName}>\n                      <Typography data-cy=\"PreDefinedHubOption\">\n                        {hubs.HubName}\n                      </Typography>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n            <div className={classes.searchDiv}>\n              <Search\n                data-cy=\"agentSearch\"\n                id=\"input-with-icon-textfield\"\n                placeholder=\"Search\"\n                value={search}\n                onChange={(event) => setSearch(event.target.value)}\n              />\n            </div>\n          </div>\n\n          {/* Leaving some space between the search and pre-defined workflow cards */}\n          <br />\n\n          {/* List of Pre-defined workflows */}\n          <div className={classes.predefinedWorkflowDiv}>\n            {selectedHub === '' ? (\n              <div className={classes.noTemplatesDiv}>\n                <Typography className={classes.noTemplatesText}>\n                  <strong>{t('createWorkflow.chooseWorkflow.noMyHub')}</strong>\n                </Typography>\n                <Typography className={classes.noTemplatesDesc}>\n                  {t('createWorkflow.chooseWorkflow.selectHub')}\n                </Typography>\n              </div>\n            ) : workflowList.length === 0 ? (\n              <div className={classes.noTemplatesDiv}>\n                <Typography className={classes.noTemplatesText}>\n                  <strong>\n                    {t('createWorkflow.chooseWorkflow.noPredefined')}\n                  </strong>\n                </Typography>\n                <Typography className={classes.noTemplatesDesc}>\n                  {t('createWorkflow.chooseWorkflow.addPredefined')}\n                </Typography>\n              </div>\n            ) : (\n              <RadioGroup\n                value={selected}\n                data-cy=\"PredefinedWorkflowsRadioGroup\"\n                onChange={handleChange}\n              >\n                {filteredPreDefinedWorkflows?.length > 0 ? (\n                  filteredPreDefinedWorkflows?.map((wfData) => (\n                    <LitmusCard\n                      width=\"100%\"\n                      height=\"5rem\"\n                      key={wfData}\n                      borderColor={palette.border.main}\n                      className={classes.predefinedWorkflowCard}\n                    >\n                      <RadioButton value={wfData}>\n                        {/* Wrap the entire body with 100% width to divide into 40-60 */}\n                        <div id=\"body\">\n                          {/* Left Div => Icon + Name of Workflow */}\n                          <div id=\"left-div\">\n                            <img\n                              className={classes.experimentIcon}\n                              src={`${config.grahqlEndpoint}/icon/${selectedProjectID}/${selectedHub}/predefined/${wfData}.png`}\n                              alt=\"Experiment Icon\"\n                            />\n                            <Typography\n                              className={classes.predefinedWorkflowName}\n                            >\n                              {wfData}\n                            </Typography>\n                          </div>\n                        </div>\n                      </RadioButton>\n                    </LitmusCard>\n                  ))\n                ) : (\n                  <div className={classes.noTemplatesDiv}>\n                    <Typography className={classes.noTemplatesText}>\n                      <strong>\n                        {t('createWorkflow.chooseWorkflow.noPredefined')}\n                      </strong>\n                    </Typography>\n                    <Typography className={classes.noTemplatesDesc}>\n                      {t('createWorkflow.chooseWorkflow.searchTerm')}\n                    </Typography>\n                  </div>\n                )}\n              </RadioGroup>\n            )}\n          </div>\n          {/* Bottom Blur */}\n          <div className={classes.blur} />\n        </div>\n      </AccordionDetails>\n    );\n  };\n\nexport default ChoosePreDefinedExperiments;\n"]},"metadata":{},"sourceType":"module"}