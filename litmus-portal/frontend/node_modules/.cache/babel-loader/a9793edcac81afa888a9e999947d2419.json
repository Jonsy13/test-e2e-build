{"ast":null,"code":"function userInitials(name) {\n  /**\n   * Funtion to return the initials of a users name\n   * @param {string} name - The string from which initials need to be extracted\n   * @return {string} instance - The concatenated initials of the @param name\n   */\n  try {\n    // Trim to ensure no trailing whitespaces, and,\n    // Split the name based on white spaces in between\n    var nameArray = name.trim().split(' '); // if no last name is entered, return the first name's initial letter\n\n    if (nameArray.length < 2) {\n      return nameArray[0][0].toUpperCase();\n    } // concatenate first and last word's first letter to ensure\n    // middle name, aliases, etc. don't get counted\n\n\n    return nameArray[0][0].toUpperCase() + nameArray[nameArray.length - 1][0].toUpperCase();\n  } catch (error) {\n    console.error('Error in extracting the user name: ', error, \"returning '' for now...\");\n    return '';\n  }\n}\n\nexport { userInitials };","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/utils/userInitials.ts"],"names":["userInitials","name","nameArray","trim","split","length","toUpperCase","error","console"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,IAAtB,EAA4C;AAC1C;AACF;AACA;AACA;AACA;AAEE,MAAI;AACF;AACA;AACA,QAAMC,SAAS,GAAGD,IAAI,CAACE,IAAL,GAAYC,KAAZ,CAAkB,GAAlB,CAAlB,CAHE,CAIF;;AACA,QAAIF,SAAS,CAACG,MAAV,GAAmB,CAAvB,EAA0B;AACxB,aAAOH,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,EAAgBI,WAAhB,EAAP;AACD,KAPC,CAQF;AACA;;;AACA,WACEJ,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,EAAgBI,WAAhB,KACAJ,SAAS,CAACA,SAAS,CAACG,MAAV,GAAmB,CAApB,CAAT,CAAgC,CAAhC,EAAmCC,WAAnC,EAFF;AAID,GAdD,CAcE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CACE,qCADF,EAEEA,KAFF,EAGE,yBAHF;AAKA,WAAO,EAAP;AACD;AACF;;AAED,SAASP,YAAT","sourcesContent":["function userInitials(name: string): string {\n  /**\n   * Funtion to return the initials of a users name\n   * @param {string} name - The string from which initials need to be extracted\n   * @return {string} instance - The concatenated initials of the @param name\n   */\n\n  try {\n    // Trim to ensure no trailing whitespaces, and,\n    // Split the name based on white spaces in between\n    const nameArray = name.trim().split(' ');\n    // if no last name is entered, return the first name's initial letter\n    if (nameArray.length < 2) {\n      return nameArray[0][0].toUpperCase();\n    }\n    // concatenate first and last word's first letter to ensure\n    // middle name, aliases, etc. don't get counted\n    return (\n      nameArray[0][0].toUpperCase() +\n      nameArray[nameArray.length - 1][0].toUpperCase()\n    );\n  } catch (error) {\n    console.error(\n      'Error in extracting the user name: ',\n      error,\n      \"returning '' for now...\"\n    );\n    return '';\n  }\n}\n\nexport { userInitials };\n"]},"metadata":{},"sourceType":"module"}