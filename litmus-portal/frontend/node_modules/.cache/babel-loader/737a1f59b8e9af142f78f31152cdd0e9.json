{"ast":null,"code":"import React, { useCallback, useLayoutEffect, useRef, useState } from 'react';\n/** A hook that exposes a setState(state, callback) API similar to a component class. */\n\nexport default function useStateWithCallback(initialState) {\n  var _useState = useState(initialState),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var callbackRef = useRef(null);\n  var setStateCallback = useCallback(function (nextState, callback) {\n    callbackRef.current = callback || null;\n    setState(nextState);\n  }, [setState]); // if we use useEffect, some callback invocations are skipped\n\n  useLayoutEffect(function () {\n    // `null` on initial render, so we only execute callback on state *updates*\n    if (callbackRef.current) {\n      callbackRef.current(state);\n      callbackRef.current = null; // reset callback after execution\n    }\n  }, [state]);\n  return [state, setStateCallback];\n}","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/@visx/drag/esm/util/useStateWithCallback.js"],"names":["React","useCallback","useLayoutEffect","useRef","useState","useStateWithCallback","initialState","_useState","state","setState","callbackRef","setStateCallback","nextState","callback","current"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,eAA7B,EAA8CC,MAA9C,EAAsDC,QAAtD,QAAsE,OAAtE;AAEA;;AACA,eAAe,SAASC,oBAAT,CAA8BC,YAA9B,EAA4C;AACzD,MAAIC,SAAS,GAAGH,QAAQ,CAACE,YAAD,CAAxB;AAAA,MACIE,KAAK,GAAGD,SAAS,CAAC,CAAD,CADrB;AAAA,MAEIE,QAAQ,GAAGF,SAAS,CAAC,CAAD,CAFxB;;AAIA,MAAIG,WAAW,GAAGP,MAAM,CAAC,IAAD,CAAxB;AACA,MAAIQ,gBAAgB,GAAGV,WAAW,CAAC,UAAUW,SAAV,EAAqBC,QAArB,EAA+B;AAChEH,IAAAA,WAAW,CAACI,OAAZ,GAAsBD,QAAQ,IAAI,IAAlC;AACAJ,IAAAA,QAAQ,CAACG,SAAD,CAAR;AACD,GAHiC,EAG/B,CAACH,QAAD,CAH+B,CAAlC,CANyD,CASzC;;AAEhBP,EAAAA,eAAe,CAAC,YAAY;AAC1B;AACA,QAAIQ,WAAW,CAACI,OAAhB,EAAyB;AACvBJ,MAAAA,WAAW,CAACI,OAAZ,CAAoBN,KAApB;AACAE,MAAAA,WAAW,CAACI,OAAZ,GAAsB,IAAtB,CAFuB,CAEK;AAC7B;AACF,GANc,EAMZ,CAACN,KAAD,CANY,CAAf;AAOA,SAAO,CAACA,KAAD,EAAQG,gBAAR,CAAP;AACD","sourcesContent":["import React, { useCallback, useLayoutEffect, useRef, useState } from 'react';\n\n/** A hook that exposes a setState(state, callback) API similar to a component class. */\nexport default function useStateWithCallback(initialState) {\n  var _useState = useState(initialState),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var callbackRef = useRef(null);\n  var setStateCallback = useCallback(function (nextState, callback) {\n    callbackRef.current = callback || null;\n    setState(nextState);\n  }, [setState]); // if we use useEffect, some callback invocations are skipped\n\n  useLayoutEffect(function () {\n    // `null` on initial render, so we only execute callback on state *updates*\n    if (callbackRef.current) {\n      callbackRef.current(state);\n      callbackRef.current = null; // reset callback after execution\n    }\n  }, [state]);\n  return [state, setStateCallback];\n}"]},"metadata":{},"sourceType":"module"}