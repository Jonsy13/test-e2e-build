{"ast":null,"code":"import{Tooltip,Typography}from'@material-ui/core';import{ButtonFilled}from'litmus-ui';import React from'react';import{useTranslation}from'react-i18next';import Scaffold from'../../containers/layouts/Scaffold';import{history}from'../../redux/configureStore';import{getProjectID,getProjectRole}from'../../utils/getSearchParams';import BrowseCluster from'../../views/Targets/BrowseCluster';import useStyles from'./styles';var Targets=function Targets(){var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var projectID=getProjectID();var userRole=getProjectRole();var handleCluster=function handleCluster(){history.push({pathname:'/target-connect',search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(userRole)});};return/*#__PURE__*/React.createElement(Scaffold,null,/*#__PURE__*/React.createElement(\"section\",{className:\"Header section\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.header},/*#__PURE__*/React.createElement(Typography,{variant:\"h3\"},t('targets.connectHome.head')),/*#__PURE__*/React.createElement(Tooltip,{classes:{tooltip:classes.customTooltip},disableFocusListener:true,disableHoverListener:userRole!=='Viewer',placement:\"bottom\",title:\"Insufficient Permissions\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.scheduleBtn},/*#__PURE__*/React.createElement(ButtonFilled,{variant:\"success\",onClick:handleCluster,disabled:userRole==='Viewer'},/*#__PURE__*/React.createElement(\"div\",null,t('targets.connectHome.connectText'))))))),/*#__PURE__*/React.createElement(BrowseCluster,null));};export default Targets;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/Targets/index.tsx"],"names":["Tooltip","Typography","ButtonFilled","React","useTranslation","Scaffold","history","getProjectID","getProjectRole","BrowseCluster","useStyles","Targets","classes","t","projectID","userRole","handleCluster","push","pathname","search","header","tooltip","customTooltip","scheduleBtn"],"mappings":"AAAA,OAASA,OAAT,CAAkBC,UAAlB,KAAoC,mBAApC,CACA,OAASC,YAAT,KAA6B,WAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,mCAArB,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,6BAA7C,CACA,MAAOC,CAAAA,aAAP,KAA0B,mCAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAEA,GAAMC,CAAAA,OAAiB,CAAG,QAApBA,CAAAA,OAAoB,EAAM,CAC9B,GAAMC,CAAAA,OAAO,CAAGF,SAAS,EAAzB,CACA,oBAAcN,cAAc,EAA5B,CAAQS,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,SAAS,CAAGP,YAAY,EAA9B,CACA,GAAMQ,CAAAA,QAAQ,CAAGP,cAAc,EAA/B,CAEA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BV,OAAO,CAACW,IAAR,CAAa,CACXC,QAAQ,CAAE,iBADC,CAEXC,MAAM,sBAAgBL,SAAhB,yBAAyCC,QAAzC,CAFK,CAAb,EAID,CALD,CAOA,mBACE,oBAAC,QAAD,mBACE,+BAAS,SAAS,CAAC,gBAAnB,eACE,2BAAK,SAAS,CAAEH,OAAO,CAACQ,MAAxB,eACE,oBAAC,UAAD,EAAY,OAAO,CAAC,IAApB,EAA0BP,CAAC,CAAC,0BAAD,CAA3B,CADF,cAEE,oBAAC,OAAD,EACE,OAAO,CAAE,CACPQ,OAAO,CAAET,OAAO,CAACU,aADV,CADX,CAIE,oBAAoB,KAJtB,CAKE,oBAAoB,CAAEP,QAAQ,GAAK,QALrC,CAME,SAAS,CAAC,QANZ,CAOE,KAAK,CAAC,0BAPR,eASE,2BAAK,SAAS,CAAEH,OAAO,CAACW,WAAxB,eACE,oBAAC,YAAD,EACE,OAAO,CAAC,SADV,CAEE,OAAO,CAAEP,aAFX,CAGE,QAAQ,CAAED,QAAQ,GAAK,QAHzB,eAKE,+BAAMF,CAAC,CAAC,iCAAD,CAAP,CALF,CADF,CATF,CAFF,CADF,CADF,cAyBE,oBAAC,aAAD,MAzBF,CADF,CA6BD,CA1CD,CA2CA,cAAeF,CAAAA,OAAf","sourcesContent":["import { Tooltip, Typography } from '@material-ui/core';\nimport { ButtonFilled } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport { history } from '../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../utils/getSearchParams';\nimport BrowseCluster from '../../views/Targets/BrowseCluster';\nimport useStyles from './styles';\n\nconst Targets: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const projectID = getProjectID();\n  const userRole = getProjectRole();\n\n  const handleCluster = () => {\n    history.push({\n      pathname: '/target-connect',\n      search: `?projectID=${projectID}&projectRole=${userRole}`,\n    });\n  };\n\n  return (\n    <Scaffold>\n      <section className=\"Header section\">\n        <div className={classes.header}>\n          <Typography variant=\"h3\">{t('targets.connectHome.head')}</Typography>\n          <Tooltip\n            classes={{\n              tooltip: classes.customTooltip,\n            }}\n            disableFocusListener\n            disableHoverListener={userRole !== 'Viewer'}\n            placement=\"bottom\"\n            title=\"Insufficient Permissions\"\n          >\n            <div className={classes.scheduleBtn}>\n              <ButtonFilled\n                variant=\"success\"\n                onClick={handleCluster}\n                disabled={userRole === 'Viewer'}\n              >\n                <div>{t('targets.connectHome.connectText')}</div>\n              </ButtonFilled>\n            </div>\n          </Tooltip>\n        </div>\n      </section>\n      <BrowseCluster />\n    </Scaffold>\n  );\n};\nexport default Targets;\n"]},"metadata":{},"sourceType":"module"}