{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Paper,Table,TableBody,TableContainer,TableHead,TablePagination,TableRow,Typography}from'@material-ui/core';import{useTranslation}from'react-i18next';import React,{useEffect,useState}from'react';import useStyles,{StyledTableCell}from'./styles';import useActions from'../../../redux/actions';import*as NodeSelectionActions from'../../../redux/actions/nodeSelection';import TableData from'./TableData';import{stepEmbeddedYAMLExtractor}from'../../../utils/yamlUtils';var NodeTable=function NodeTable(_ref){var data=_ref.data,_handleClose=_ref.handleClose,manifest=_ref.manifest;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState({pageNo:0,rowsPerPage:5}),_useState2=_slicedToArray(_useState,2),paginationData=_useState2[0],setPaginationData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),nodesArray=_useState4[0],setNodesArray=_useState4[1];var nodeSelection=useActions(NodeSelectionActions);var changeNodeLogs=function changeNodeLogs(selectedKey){nodeSelection.selectNode(_objectSpread(_objectSpread({},data.nodes[selectedKey]),{},{pod_name:selectedKey}));};useEffect(function(){var filteredNodes=[];Object.keys(data.nodes).forEach(function(key){if(data.nodes[key].type!=='StepGroup'&&data.nodes[key].type!=='Steps'){filteredNodes.push(_objectSpread(_objectSpread({},data.nodes[key]),{},{id:key}));}});setNodesArray([].concat(filteredNodes));},[data]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Paper,{className:classes.root},/*#__PURE__*/React.createElement(TableContainer,{\"data-cy\":\"browseScheduleTable\",className:classes.tableMain},/*#__PURE__*/React.createElement(Table,{stickyHeader:true,\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHead,{className:classes.tableHead},/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableCellWidth},/*#__PURE__*/React.createElement(Typography,null,t('workflowDetailsView.tableView.tableHeader.stepName'))),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableCellWidth},/*#__PURE__*/React.createElement(Typography,null,t('workflowDetailsView.tableView.tableHeader.status'))),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableCellWidth},/*#__PURE__*/React.createElement(Typography,null,t('workflowDetailsView.tableView.tableHeader.duration'))),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableCellWidth},/*#__PURE__*/React.createElement(Typography,null,t('workflowDetailsView.tableView.tableHeader.startTime'))),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableCellWidth},/*#__PURE__*/React.createElement(Typography,null,t('workflowDetailsView.tableView.tableHeader.applicationDetails'))),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableCellWidth},/*#__PURE__*/React.createElement(Typography,null))),/*#__PURE__*/React.createElement(TableBody,null,nodesArray.slice(paginationData.pageNo*paginationData.rowsPerPage,paginationData.pageNo*paginationData.rowsPerPage+paginationData.rowsPerPage).map(function(node){var stepYAML=stepEmbeddedYAMLExtractor(manifest,node.name);return/*#__PURE__*/React.createElement(TableRow,{key:node.id,className:classes.tableRows},/*#__PURE__*/React.createElement(TableData,{onViewLogsClick:function onViewLogsClick(){return changeNodeLogs(node.id);},embeddedYAML:stepYAML,data:node,handleClose:function handleClose(){return _handleClose();}}));})))),/*#__PURE__*/React.createElement(TablePagination,{rowsPerPageOptions:[5,10,25],component:\"div\",count:nodesArray.length,rowsPerPage:paginationData.rowsPerPage,page:paginationData.pageNo,onChangePage:function onChangePage(_,page){return setPaginationData(_objectSpread(_objectSpread({},paginationData),{},{pageNo:page}));},onChangeRowsPerPage:function onChangeRowsPerPage(event){setPaginationData(_objectSpread(_objectSpread({},paginationData),{},{pageNo:0,rowsPerPage:parseInt(event.target.value,10)}));},className:classes.pagination})));};export default NodeTable;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/WorkflowDetails/WorkflowTable/index.tsx"],"names":["Paper","Table","TableBody","TableContainer","TableHead","TablePagination","TableRow","Typography","useTranslation","React","useEffect","useState","useStyles","StyledTableCell","useActions","NodeSelectionActions","TableData","stepEmbeddedYAMLExtractor","NodeTable","data","handleClose","manifest","classes","t","pageNo","rowsPerPage","paginationData","setPaginationData","nodesArray","setNodesArray","nodeSelection","changeNodeLogs","selectedKey","selectNode","nodes","pod_name","filteredNodes","Object","keys","forEach","key","type","push","id","root","tableMain","tableHead","tableCellWidth","slice","map","node","stepYAML","name","tableRows","length","_","page","event","parseInt","target","value","pagination"],"mappings":"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","sourcesContent":["import {\n  Paper,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport React, { useEffect, useState } from 'react';\nimport useStyles, { StyledTableCell } from './styles';\nimport useActions from '../../../redux/actions';\nimport * as NodeSelectionActions from '../../../redux/actions/nodeSelection';\nimport TableData from './TableData';\nimport { ExecutionData, Node } from '../../../models/graphql/workflowData';\nimport { stepEmbeddedYAMLExtractor } from '../../../utils/yamlUtils';\n\ninterface NodeTableProps {\n  manifest: string;\n  data: ExecutionData;\n  handleClose: () => void;\n}\n\ninterface SelectedNodeType extends Node {\n  id: string;\n}\n\ninterface PaginationData {\n  pageNo: number;\n  rowsPerPage: number;\n}\n\nconst NodeTable: React.FC<NodeTableProps> = ({\n  data,\n  handleClose,\n  manifest,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [paginationData, setPaginationData] = useState<PaginationData>({\n    pageNo: 0,\n    rowsPerPage: 5,\n  });\n\n  const [nodesArray, setNodesArray] = useState<SelectedNodeType[]>([]);\n  const nodeSelection = useActions(NodeSelectionActions);\n\n  const changeNodeLogs = (selectedKey: string) => {\n    nodeSelection.selectNode({\n      ...data.nodes[selectedKey],\n      pod_name: selectedKey,\n    });\n  };\n\n  useEffect(() => {\n    const filteredNodes: SelectedNodeType[] = [];\n    Object.keys(data.nodes).forEach((key) => {\n      if (\n        data.nodes[key].type !== 'StepGroup' &&\n        data.nodes[key].type !== 'Steps'\n      ) {\n        filteredNodes.push({ ...data.nodes[key], id: key });\n      }\n    });\n    setNodesArray([...filteredNodes]);\n  }, [data]);\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        {/* Table Header Section */}\n        <TableContainer\n          data-cy=\"browseScheduleTable\"\n          className={classes.tableMain}\n        >\n          <Table stickyHeader aria-label=\"simple table\">\n            <TableHead className={classes.tableHead}>\n              {/* Step Name */}\n              <StyledTableCell className={classes.tableCellWidth}>\n                <Typography>\n                  {t('workflowDetailsView.tableView.tableHeader.stepName')}\n                </Typography>\n              </StyledTableCell>\n\n              {/* Status */}\n              <StyledTableCell className={classes.tableCellWidth}>\n                <Typography>\n                  {t('workflowDetailsView.tableView.tableHeader.status')}\n                </Typography>\n              </StyledTableCell>\n\n              {/* Duration of Node execution */}\n              <StyledTableCell className={classes.tableCellWidth}>\n                <Typography>\n                  {t('workflowDetailsView.tableView.tableHeader.duration')}\n                </Typography>\n              </StyledTableCell>\n\n              {/* Start Time */}\n              <StyledTableCell className={classes.tableCellWidth}>\n                <Typography>\n                  {t('workflowDetailsView.tableView.tableHeader.startTime')}\n                </Typography>\n              </StyledTableCell>\n\n              {/* Application Details */}\n              <StyledTableCell className={classes.tableCellWidth}>\n                <Typography>\n                  {t(\n                    'workflowDetailsView.tableView.tableHeader.applicationDetails'\n                  )}\n                </Typography>\n              </StyledTableCell>\n\n              <StyledTableCell className={classes.tableCellWidth}>\n                <Typography />\n              </StyledTableCell>\n            </TableHead>\n\n            {/* Table Body Section */}\n            <TableBody>\n              {(nodesArray as SelectedNodeType[])\n                .slice(\n                  paginationData.pageNo * paginationData.rowsPerPage,\n                  paginationData.pageNo * paginationData.rowsPerPage +\n                    paginationData.rowsPerPage\n                )\n                .map((node: SelectedNodeType) => {\n                  const stepYAML = stepEmbeddedYAMLExtractor(\n                    manifest,\n                    node.name\n                  );\n                  return (\n                    <TableRow key={node.id} className={classes.tableRows}>\n                      <TableData\n                        onViewLogsClick={() => changeNodeLogs(node.id)}\n                        embeddedYAML={stepYAML}\n                        data={node}\n                        handleClose={() => handleClose()}\n                      />\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {/* Pagination Section */}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={nodesArray.length}\n          rowsPerPage={paginationData.rowsPerPage}\n          page={paginationData.pageNo}\n          onChangePage={(_, page) =>\n            setPaginationData({ ...paginationData, pageNo: page })\n          }\n          onChangeRowsPerPage={(event) => {\n            setPaginationData({\n              ...paginationData,\n              pageNo: 0,\n              rowsPerPage: parseInt(event.target.value, 10),\n            });\n          }}\n          className={classes.pagination}\n        />\n      </Paper>\n    </>\n  );\n};\nexport default NodeTable;\n"]},"metadata":{},"sourceType":"module"}