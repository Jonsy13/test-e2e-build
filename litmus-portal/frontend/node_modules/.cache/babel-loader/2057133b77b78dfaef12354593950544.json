{"ast":null,"code":"import { getNode } from '../../../utils/createSVGNode';\nimport { getIcon } from './icons';\n// Firefox 1.0+\n// @ts-ignore\nvar isFirefox = typeof InstallTrigger !== 'undefined';\n\nvar createLabel = function createLabel(_ref) {\n  var currentNodeID = _ref.currentNodeID,\n      selectedNodeID = _ref.selectedNodeID,\n      label = _ref.label,\n      tooltip = _ref.tooltip,\n      phase = _ref.phase,\n      horizontal = _ref.horizontal;\n  var g = getNode('g');\n  var circle = getNode('circle', {\n    cx: 0,\n    cy: 0,\n    r: 15\n  });\n  g.appendChild(circle); // If Current Node is selected, then selection circle gets appended\n\n  if (currentNodeID === selectedNodeID) {\n    var outerCircle = getNode('circle', {\n      cx: 0,\n      cy: 0,\n      r: 18,\n      class: 'selected'\n    });\n    g.appendChild(outerCircle);\n  }\n\n  if (tooltip) {\n    var title = getNode('title');\n    title.innerHTML = tooltip;\n    circle.appendChild(title);\n  }\n\n  g.appendChild(getIcon(phase));\n  var text = getNode('text');\n  g.appendChild(text);\n  var increment = horizontal ? 10 : 25;\n\n  for (var i = 0; i < label.length; i += increment) {\n    var tspan = getNode('tspan', {\n      x: horizontal || label.length > 25 ? -2 * increment : -label.length * 3,\n      y: (isFirefox ? 35 : 20) + i * (horizontal ? 1.2 : 0.6),\n      dy: '1rem'\n    });\n    tspan.innerHTML = i + increment < label.length - 1 ? label.slice(i, i + increment) : label.slice(i);\n    text.appendChild(tspan);\n  }\n\n  return g;\n};\n\nexport { createLabel };","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/WorkflowDetails/ArgoWorkflow/createLabel.ts"],"names":["getNode","getIcon","isFirefox","InstallTrigger","createLabel","currentNodeID","selectedNodeID","label","tooltip","phase","horizontal","g","circle","cx","cy","r","appendChild","outerCircle","class","title","innerHTML","text","increment","i","length","tspan","x","y","dy","slice"],"mappings":"AAAA,SAASA,OAAT,QAAwB,8BAAxB;AACA,SAASC,OAAT,QAAwB,SAAxB;AAeA;AACA;AACA,IAAMC,SAAS,GAAG,OAAOC,cAAP,KAA0B,WAA5C;;AAEA,IAAMC,WAAwB,GAAG,SAA3BA,WAA2B,OAO3B;AAAA,MANJC,aAMI,QANJA,aAMI;AAAA,MALJC,cAKI,QALJA,cAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,UACI,QADJA,UACI;AACJ,MAAMC,CAAC,GAAGX,OAAO,CAAC,GAAD,CAAjB;AAEA,MAAMY,MAAM,GAAGZ,OAAO,CAAC,QAAD,EAAW;AAC/Ba,IAAAA,EAAE,EAAE,CAD2B;AAE/BC,IAAAA,EAAE,EAAE,CAF2B;AAG/BC,IAAAA,CAAC,EAAE;AAH4B,GAAX,CAAtB;AAMAJ,EAAAA,CAAC,CAACK,WAAF,CAAcJ,MAAd,EATI,CAWJ;;AACA,MAAIP,aAAa,KAAKC,cAAtB,EAAsC;AACpC,QAAMW,WAAW,GAAGjB,OAAO,CAAC,QAAD,EAAW;AACpCa,MAAAA,EAAE,EAAE,CADgC;AAEpCC,MAAAA,EAAE,EAAE,CAFgC;AAGpCC,MAAAA,CAAC,EAAE,EAHiC;AAIpCG,MAAAA,KAAK,EAAE;AAJ6B,KAAX,CAA3B;AAMAP,IAAAA,CAAC,CAACK,WAAF,CAAcC,WAAd;AACD;;AAED,MAAIT,OAAJ,EAAa;AACX,QAAMW,KAAK,GAAGnB,OAAO,CAAC,OAAD,CAArB;AACAmB,IAAAA,KAAK,CAACC,SAAN,GAAkBZ,OAAlB;AACAI,IAAAA,MAAM,CAACI,WAAP,CAAmBG,KAAnB;AACD;;AAEDR,EAAAA,CAAC,CAACK,WAAF,CAAcf,OAAO,CAACQ,KAAD,CAArB;AAEA,MAAMY,IAAI,GAAGrB,OAAO,CAAC,MAAD,CAApB;AACAW,EAAAA,CAAC,CAACK,WAAF,CAAcK,IAAd;AAEA,MAAMC,SAAS,GAAGZ,UAAU,GAAG,EAAH,GAAQ,EAApC;;AACA,OAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,KAAK,CAACiB,MAA1B,EAAkCD,CAAC,IAAID,SAAvC,EAAkD;AAChD,QAAMG,KAAK,GAAGzB,OAAO,CAAC,OAAD,EAAU;AAC7B0B,MAAAA,CAAC,EAAEhB,UAAU,IAAIH,KAAK,CAACiB,MAAN,GAAe,EAA7B,GAAkC,CAAC,CAAD,GAAKF,SAAvC,GAAmD,CAACf,KAAK,CAACiB,MAAP,GAAgB,CADzC;AAE7BG,MAAAA,CAAC,EAAE,CAACzB,SAAS,GAAG,EAAH,GAAQ,EAAlB,IAAwBqB,CAAC,IAAIb,UAAU,GAAG,GAAH,GAAS,GAAvB,CAFC;AAG7BkB,MAAAA,EAAE,EAAE;AAHyB,KAAV,CAArB;AAKAH,IAAAA,KAAK,CAACL,SAAN,GACEG,CAAC,GAAGD,SAAJ,GAAgBf,KAAK,CAACiB,MAAN,GAAe,CAA/B,GACIjB,KAAK,CAACsB,KAAN,CAAYN,CAAZ,EAAeA,CAAC,GAAGD,SAAnB,CADJ,GAEIf,KAAK,CAACsB,KAAN,CAAYN,CAAZ,CAHN;AAIAF,IAAAA,IAAI,CAACL,WAAL,CAAiBS,KAAjB;AACD;;AAED,SAAOd,CAAP;AACD,CAvDD;;AAwDA,SAASP,WAAT","sourcesContent":["import { getNode } from '../../../utils/createSVGNode';\nimport { getIcon } from './icons';\n\ninterface CreateLabelProps {\n  currentNodeID: string;\n  selectedNodeID: string;\n  label: string;\n  tooltip?: string;\n  phase: string;\n  horizontal: boolean;\n}\n\ninterface CreateLabel {\n  (props: CreateLabelProps): SVGElement;\n}\n\n// Firefox 1.0+\n// @ts-ignore\nconst isFirefox = typeof InstallTrigger !== 'undefined';\n\nconst createLabel: CreateLabel = ({\n  currentNodeID,\n  selectedNodeID,\n  label,\n  tooltip,\n  phase,\n  horizontal,\n}) => {\n  const g = getNode('g');\n\n  const circle = getNode('circle', {\n    cx: 0,\n    cy: 0,\n    r: 15,\n  });\n\n  g.appendChild(circle);\n\n  // If Current Node is selected, then selection circle gets appended\n  if (currentNodeID === selectedNodeID) {\n    const outerCircle = getNode('circle', {\n      cx: 0,\n      cy: 0,\n      r: 18,\n      class: 'selected',\n    });\n    g.appendChild(outerCircle);\n  }\n\n  if (tooltip) {\n    const title = getNode('title');\n    title.innerHTML = tooltip;\n    circle.appendChild(title);\n  }\n\n  g.appendChild(getIcon(phase));\n\n  const text = getNode('text');\n  g.appendChild(text);\n\n  const increment = horizontal ? 10 : 25;\n  for (let i = 0; i < label.length; i += increment) {\n    const tspan = getNode('tspan', {\n      x: horizontal || label.length > 25 ? -2 * increment : -label.length * 3,\n      y: (isFirefox ? 35 : 20) + i * (horizontal ? 1.2 : 0.6),\n      dy: '1rem',\n    });\n    tspan.innerHTML =\n      i + increment < label.length - 1\n        ? label.slice(i, i + increment)\n        : label.slice(i);\n    text.appendChild(tspan);\n  }\n\n  return g;\n};\nexport { createLabel };\n"]},"metadata":{},"sourceType":"module"}