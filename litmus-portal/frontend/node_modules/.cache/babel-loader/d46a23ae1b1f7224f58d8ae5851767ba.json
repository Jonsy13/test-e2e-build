{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/WorkflowStepper/index.tsx\",\n    _this = this;\n\nimport { Tooltip } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Typography from '@material-ui/core/Typography';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { ButtonFilled, ButtonOutlined } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport Row from '../../containers/layouts/Row';\nimport useActions from '../../redux/actions';\nimport * as AlertActions from '../../redux/actions/alert';\nimport { getProjectRole } from '../../utils/getSearchParams';\nimport ChooseAWorkflowAgent from '../../views/CreateWorkflow/ChooseAWorkflowAgent';\nimport ChooseWorkflow from '../../views/CreateWorkflow/ChooseWorkflow/index';\nimport ReliablityScore from '../../views/CreateWorkflow/ReliabilityScore';\nimport ScheduleWorkflow from '../../views/CreateWorkflow/ScheduleWorkflow';\nimport TuneWorkflow from '../../views/CreateWorkflow/TuneWorkflow/index';\nimport VerifyCommit from '../../views/CreateWorkflow/VerifyCommit';\nimport WorkflowSettings from '../../views/CreateWorkflow/WorkflowSettings';\nimport { LitmusStepper } from '../LitmusStepper';\nimport Loader from '../Loader';\nimport useStyles from './styles';\nvar steps = ['Choose Agent', 'Choose a workflow', 'Workflow Settings', 'Tune workflow', 'Reliability score', 'Schedule', 'Verify and Commit'];\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }));\n}\n\nvar WorkflowStepper = function WorkflowStepper() {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var childRef = useRef();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      activeStep = _React$useState4[0],\n      setActiveStep = _React$useState4[1]; // Checks if the button is in loading state or not\n\n\n  var isButtonLoading = function isButtonLoading(status) {\n    return setLoading(status);\n  }; // Set the active step to the page props\n\n\n  var goToStep = function goToStep(page) {\n    return setActiveStep(page);\n  };\n\n  function getStepContent(stepIndex, childRef) {\n    switch (stepIndex) {\n      case 0:\n        return /*#__PURE__*/React.createElement(ChooseAWorkflowAgent, {\n          ref: childRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 16\n          }\n        });\n\n      case 1:\n        return /*#__PURE__*/React.createElement(ChooseWorkflow, {\n          ref: childRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 16\n          }\n        });\n\n      case 2:\n        return /*#__PURE__*/React.createElement(WorkflowSettings, {\n          ref: childRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 16\n          }\n        });\n\n      case 3:\n        return /*#__PURE__*/React.createElement(TuneWorkflow, {\n          ref: childRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 16\n          }\n        });\n\n      case 4:\n        return /*#__PURE__*/React.createElement(ReliablityScore, {\n          ref: childRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 16\n          }\n        });\n\n      case 5:\n        return /*#__PURE__*/React.createElement(ScheduleWorkflow, {\n          ref: childRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 16\n          }\n        });\n\n      case 6:\n        return /*#__PURE__*/React.createElement(VerifyCommit, {\n          isLoading: isButtonLoading,\n          handleGoToStep: goToStep,\n          ref: childRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(ChooseAWorkflowAgent, {\n          ref: childRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 16\n          }\n        });\n    }\n  }\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      proceed = _React$useState6[0],\n      shouldProceed = _React$useState6[1];\n\n  var isAlertOpen = useSelector(function (state) {\n    return state.alert.isAlertOpen;\n  });\n  var alert = useActions(AlertActions);\n  useEffect(function () {\n    localforage.getItem('selectedScheduleOption').then(function (value) {\n      return value ? shouldProceed(true) : shouldProceed(false);\n    });\n  }, [proceed]);\n\n  var _handleNext = function handleNext() {\n    if (childRef.current && childRef.current.onNext()) {\n      setActiveStep(function (prevActiveStep) {\n        return prevActiveStep + 1;\n      });\n    }\n  };\n\n  var handleBack = function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n  /** \n    Control Buttons\n    ------------------------------------------------------------------------------\n    When active step is zero (First Step) there won't be a Back button\n    When active step is the last step in the stepper the button will change to Finish\n    All steps in the middle will have next and back buttons\n  * */\n\n\n  var ControlButton = function ControlButton() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-cy\": \"ControlButtons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, activeStep === 0 ?\n    /*#__PURE__*/\n    // Only show Next button at Top for Step 0\n    React.createElement(ButtonFilled, {\n      className: classes.btn,\n      onClick: function onClick() {\n        return _handleNext();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, \"Next\") : activeStep === steps.length - 1 ? // Show Finish button at Bottom for Last Step\n    loading ? /*#__PURE__*/React.createElement(ButtonFilled, {\n      className: classes.btn,\n      disabled: true,\n      onClick: function onClick() {\n        return _handleNext();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, \"Finish \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: '0.5rem'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 22\n      }\n    }), ' ', /*#__PURE__*/React.createElement(Loader, {\n      size: 20,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(ButtonFilled, {\n      className: classes.btn,\n      onClick: function onClick() {\n        return _handleNext();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, \"Finish\") : activeStep === 2 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.headerButtonWrapper,\n      \"aria-label\": \"buttons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"All selected Workflow Data will be lost\",\n      placement: \"top\",\n      leaveDelay: 300,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n      className: classes.btn,\n      onClick: function onClick() {\n        return handleBack();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, \"Back\"))), /*#__PURE__*/React.createElement(ButtonFilled, {\n      className: classes.btn,\n      onClick: function onClick() {\n        return _handleNext();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, \"Next\")) :\n    /*#__PURE__*/\n    // Apply headerButtonWrapper style for top button's div\n    React.createElement(\"div\", {\n      className: classes.headerButtonWrapper,\n      \"aria-label\": \"buttons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n      className: classes.btn,\n      onClick: function onClick() {\n        return handleBack();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(ButtonFilled, {\n      className: classes.btn,\n      onClick: function onClick() {\n        return _handleNext();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, \"Next\")));\n  };\n  /** \n    Alert\n    ------------------------------------------------------------------------------\n    Displays a snackbar with the appropriate message whenever a condition is not satisfied\n  * */\n\n\n  var AlertBox = function AlertBox(_ref) {\n    var message = _ref.message;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, isAlertOpen ? /*#__PURE__*/React.createElement(Snackbar, {\n      open: isAlertOpen,\n      autoHideDuration: 6000,\n      onClose: function onClose() {\n        return alert.changeAlertState(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: function onClose() {\n        return alert.changeAlertState(false);\n      },\n      severity: \"error\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, message)) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  };\n\n  function getAlertMessage(stepNumber) {\n    switch (stepNumber) {\n      case 0:\n        if (getProjectRole() === 'Viewer') {\n          return t(\"workflowStepper.step1.errorSnackbarViewer\");\n        }\n\n        return t(\"workflowStepper.step1.errorSnackbar\");\n\n      case 1:\n        return t(\"workflowStepper.step2.errorSnackbar\");\n\n      case 2:\n        return t(\"workflowStepper.step3.errorSnackbar\");\n\n      case 3:\n        return t(\"workflowStepper.step4.errorSnackbar\");\n\n      case 6:\n        return t(\"workflowStepper.step6.errorSnackbar\");\n\n      default:\n        return '';\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AlertBox, {\n    message: getAlertMessage(activeStep),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justifyContent: \"space-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, t(\"workflowStepper.scheduleNewChaosWorkflow\")), /*#__PURE__*/React.createElement(ControlButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LitmusStepper, {\n    steps: steps,\n    activeStep: activeStep,\n    handleBack: handleBack,\n    loader: loading,\n    handleNext: function handleNext() {\n      return _handleNext();\n    },\n    finishAction: function finishAction() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, getStepContent(activeStep, childRef)));\n};\n\nexport default WorkflowStepper;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/WorkflowStepper/index.tsx"],"names":["Tooltip","Snackbar","Typography","MuiAlert","ButtonFilled","ButtonOutlined","localforage","React","useEffect","useRef","useTranslation","useSelector","Row","useActions","AlertActions","getProjectRole","ChooseAWorkflowAgent","ChooseWorkflow","ReliablityScore","ScheduleWorkflow","TuneWorkflow","VerifyCommit","WorkflowSettings","LitmusStepper","Loader","useStyles","steps","Alert","props","WorkflowStepper","classes","t","childRef","useState","loading","setLoading","activeStep","setActiveStep","isButtonLoading","status","goToStep","page","getStepContent","stepIndex","proceed","shouldProceed","isAlertOpen","state","alert","getItem","then","value","handleNext","current","onNext","prevActiveStep","handleBack","ControlButton","btn","length","marginLeft","headerButtonWrapper","AlertBox","message","changeAlertState","getAlertMessage","stepNumber","root","headWrapper","header"],"mappings":"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","sourcesContent":["import { Tooltip } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Typography from '@material-ui/core/Typography';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { ButtonFilled, ButtonOutlined } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport Row from '../../containers/layouts/Row';\nimport useActions from '../../redux/actions';\nimport * as AlertActions from '../../redux/actions/alert';\nimport { RootState } from '../../redux/reducers';\nimport { getProjectRole } from '../../utils/getSearchParams';\nimport ChooseAWorkflowAgent from '../../views/CreateWorkflow/ChooseAWorkflowAgent';\nimport ChooseWorkflow from '../../views/CreateWorkflow/ChooseWorkflow/index';\nimport ReliablityScore from '../../views/CreateWorkflow/ReliabilityScore';\nimport ScheduleWorkflow from '../../views/CreateWorkflow/ScheduleWorkflow';\nimport TuneWorkflow from '../../views/CreateWorkflow/TuneWorkflow/index';\nimport VerifyCommit from '../../views/CreateWorkflow/VerifyCommit';\nimport WorkflowSettings from '../../views/CreateWorkflow/WorkflowSettings';\nimport { LitmusStepper } from '../LitmusStepper';\nimport Loader from '../Loader';\nimport useStyles from './styles';\n\ninterface ControlButtonProps {\n  position: string;\n}\n\ninterface ChildRef {\n  onNext: () => void;\n}\n\ninterface AlertBoxProps {\n  message: string;\n}\n\nconst steps: string[] = [\n  'Choose Agent',\n  'Choose a workflow',\n  'Workflow Settings',\n  'Tune workflow',\n  'Reliability score',\n  'Schedule',\n  'Verify and Commit',\n];\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst WorkflowStepper = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const childRef = useRef<ChildRef>();\n\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  // Checks if the button is in loading state or not\n  const isButtonLoading = (status: boolean) => setLoading(status);\n\n  // Set the active step to the page props\n  const goToStep = (page: number) => setActiveStep(page);\n\n  function getStepContent(\n    stepIndex: number,\n    childRef: React.MutableRefObject<ChildRef | undefined>\n  ): React.ReactNode {\n    switch (stepIndex) {\n      case 0:\n        return <ChooseAWorkflowAgent ref={childRef} />;\n      case 1:\n        return <ChooseWorkflow ref={childRef} />;\n      case 2:\n        return <WorkflowSettings ref={childRef} />;\n      case 3:\n        return <TuneWorkflow ref={childRef} />;\n      case 4:\n        return <ReliablityScore ref={childRef} />;\n      case 5:\n        return <ScheduleWorkflow ref={childRef} />;\n      case 6:\n        return (\n          <VerifyCommit\n            isLoading={isButtonLoading}\n            handleGoToStep={goToStep}\n            ref={childRef}\n          />\n        );\n      default:\n        return <ChooseAWorkflowAgent ref={childRef} />;\n    }\n  }\n\n  const [proceed, shouldProceed] = React.useState<boolean>(false);\n\n  const isAlertOpen = useSelector(\n    (state: RootState) => state.alert.isAlertOpen\n  );\n  const alert = useActions(AlertActions);\n\n  useEffect(() => {\n    localforage\n      .getItem('selectedScheduleOption')\n      .then((value) => (value ? shouldProceed(true) : shouldProceed(false)));\n  }, [proceed]);\n\n  const handleNext = () => {\n    if (childRef.current && childRef.current.onNext()) {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  /** \n    Control Buttons\n    ------------------------------------------------------------------------------\n    When active step is zero (First Step) there won't be a Back button\n    When active step is the last step in the stepper the button will change to Finish\n    All steps in the middle will have next and back buttons\n  * */\n\n  const ControlButton: React.FC = () => {\n    return (\n      <div data-cy=\"ControlButtons\">\n        {activeStep === 0 ? ( // Only show Next button at Top for Step 0\n          <ButtonFilled className={classes.btn} onClick={() => handleNext()}>\n            Next\n          </ButtonFilled>\n        ) : activeStep === steps.length - 1 ? ( // Show Finish button at Bottom for Last Step\n          loading ? (\n            <ButtonFilled\n              className={classes.btn}\n              disabled\n              onClick={() => handleNext()}\n            >\n              Finish <span style={{ marginLeft: '0.5rem' }} />{' '}\n              <Loader size={20} />\n            </ButtonFilled>\n          ) : (\n            <ButtonFilled className={classes.btn} onClick={() => handleNext()}>\n              Finish\n            </ButtonFilled>\n          )\n        ) : activeStep === 2 ? (\n          <div className={classes.headerButtonWrapper} aria-label=\"buttons\">\n            <Tooltip\n              title=\"All selected Workflow Data will be lost\"\n              placement=\"top\"\n              leaveDelay={300}\n            >\n              <div>\n                <ButtonOutlined\n                  className={classes.btn}\n                  onClick={() => handleBack()}\n                >\n                  Back\n                </ButtonOutlined>\n              </div>\n            </Tooltip>\n            <ButtonFilled className={classes.btn} onClick={() => handleNext()}>\n              Next\n            </ButtonFilled>\n          </div>\n        ) : (\n          // Apply headerButtonWrapper style for top button's div\n          <div className={classes.headerButtonWrapper} aria-label=\"buttons\">\n            <ButtonOutlined\n              className={classes.btn}\n              onClick={() => handleBack()}\n            >\n              Back\n            </ButtonOutlined>\n            <ButtonFilled className={classes.btn} onClick={() => handleNext()}>\n              Next\n            </ButtonFilled>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  /** \n    Alert\n    ------------------------------------------------------------------------------\n    Displays a snackbar with the appropriate message whenever a condition is not satisfied\n  * */\n\n  const AlertBox: React.FC<AlertBoxProps> = ({ message }) => {\n    return (\n      <div>\n        {isAlertOpen ? (\n          <Snackbar\n            open={isAlertOpen}\n            autoHideDuration={6000}\n            onClose={() => alert.changeAlertState(false)}\n          >\n            <Alert\n              onClose={() => alert.changeAlertState(false)}\n              severity=\"error\"\n            >\n              {message}\n            </Alert>\n          </Snackbar>\n        ) : (\n          <></>\n        )}\n      </div>\n    );\n  };\n\n  function getAlertMessage(stepNumber: number) {\n    switch (stepNumber) {\n      case 0:\n        if (getProjectRole() === 'Viewer') {\n          return t(`workflowStepper.step1.errorSnackbarViewer`);\n        }\n        return t(`workflowStepper.step1.errorSnackbar`);\n\n      case 1:\n        return t(`workflowStepper.step2.errorSnackbar`);\n      case 2:\n        return t(`workflowStepper.step3.errorSnackbar`);\n      case 3:\n        return t(`workflowStepper.step4.errorSnackbar`);\n      case 6:\n        return t(`workflowStepper.step6.errorSnackbar`);\n      default:\n        return '';\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {/* Alert */}\n      <AlertBox message={getAlertMessage(activeStep)} />\n\n      {/* Header */}\n      <div className={classes.headWrapper}>\n        <Row justifyContent=\"space-between\">\n          <Typography className={classes.header}>\n            {t(`workflowStepper.scheduleNewChaosWorkflow`)}\n          </Typography>\n          <ControlButton />\n        </Row>\n      </div>\n      <br />\n      {/* Stepper */}\n      <LitmusStepper\n        steps={steps}\n        activeStep={activeStep}\n        handleBack={handleBack}\n        loader={loading}\n        handleNext={() => handleNext()}\n        finishAction={() => {}}\n      >\n        {getStepContent(activeStep, childRef)}\n      </LitmusStepper>\n    </div>\n  );\n};\n\nexport default WorkflowStepper;\n"]},"metadata":{},"sourceType":"module"}