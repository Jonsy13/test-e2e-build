{"ast":null,"code":"import{createBrowserHistory}from'history';// eslint-disable-line import/no-extraneous-dependencies\nimport*as localforage from'localforage';import{applyMiddleware,createStore}from'redux';import{composeWithDevTools}from'redux-devtools-extension';import{persistReducer,persistStore}from'redux-persist';import thunk from'redux-thunk';import rootReducer from'./reducers';var persistConfig={key:'root',version:1,storage:localforage,blacklist:[]};var history=createBrowserHistory();var dev=process.env.NODE_ENV==='development';var middleware=applyMiddleware(thunk);if(dev){middleware=composeWithDevTools(middleware);}var persistedReducer=persistReducer(persistConfig,rootReducer());export default(function(){var store=createStore(persistedReducer,{},middleware);var persistor=persistStore(store);return{store:store,persistor:persistor};});export{history};","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/redux/configureStore.tsx"],"names":["createBrowserHistory","localforage","applyMiddleware","createStore","composeWithDevTools","persistReducer","persistStore","thunk","rootReducer","persistConfig","key","version","storage","blacklist","history","dev","process","env","NODE_ENV","middleware","persistedReducer","store","persistor"],"mappings":"AAAA,OAASA,oBAAT,KAAqC,SAArC,CAAgD;AAChD,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,aAA7B,CACA,OAASC,eAAT,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAAwBC,cAAxB,CAAwCC,YAAxC,KAA4D,eAA5D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,YAAxB,CAEA,GAAMC,CAAAA,aAAiC,CAAG,CACxCC,GAAG,CAAE,MADmC,CAExCC,OAAO,CAAE,CAF+B,CAGxCC,OAAO,CAAEX,WAH+B,CAIxCY,SAAS,CAAE,EAJ6B,CAA1C,CAOA,GAAMC,CAAAA,OAAO,CAAGd,oBAAoB,EAApC,CAEA,GAAMe,CAAAA,GAAG,CAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAArC,CAEA,GAAIC,CAAAA,UAAU,CAAGjB,eAAe,CAACK,KAAD,CAAhC,CAEA,GAAIQ,GAAJ,CAAS,CACPI,UAAU,CAAGf,mBAAmB,CAACe,UAAD,CAAhC,CACD,CAED,GAAMC,CAAAA,gBAAgB,CAAGf,cAAc,CAACI,aAAD,CAAgBD,WAAW,EAA3B,CAAvC,CAEA,eAAe,UAAM,CACnB,GAAMa,CAAAA,KAAK,CAAGlB,WAAW,CAACiB,gBAAD,CAAmB,EAAnB,CAAuBD,UAAvB,CAAzB,CACA,GAAMG,CAAAA,SAAS,CAAGhB,YAAY,CAACe,KAAD,CAA9B,CACA,MAAO,CAAEA,KAAK,CAALA,KAAF,CAASC,SAAS,CAATA,SAAT,CAAP,CACD,CAJD,EAMA,OAASR,OAAT","sourcesContent":["import { createBrowserHistory } from 'history'; // eslint-disable-line import/no-extraneous-dependencies\nimport * as localforage from 'localforage';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { PersistConfig, persistReducer, persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst persistConfig: PersistConfig<any> = {\n  key: 'root',\n  version: 1,\n  storage: localforage,\n  blacklist: [],\n};\n\nconst history = createBrowserHistory();\n\nconst dev = process.env.NODE_ENV === 'development';\n\nlet middleware = applyMiddleware(thunk);\n\nif (dev) {\n  middleware = composeWithDevTools(middleware);\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer());\n\nexport default () => {\n  const store = createStore(persistedReducer, {}, middleware) as any;\n  const persistor = persistStore(store);\n  return { store, persistor };\n};\n\nexport { history };\n"]},"metadata":{},"sourceType":"module"}