{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Card,CardContent,Link,Typography}from'@material-ui/core';import React,{useState}from'react';import config from'../../../config';import{history}from'../../../redux/configureStore';import useStyles from'./styles';var ChartCard=function ChartCard(_ref){var expName=_ref.expName,UserHub=_ref.UserHub,setSearch=_ref.setSearch,projectID=_ref.projectID,userRole=_ref.userRole,isPredefined=_ref.isPredefined;var classes=useStyles();var experimentDefaultImagePath=\"\".concat(config.grahqlEndpoint,\"/icon\");var _useState=useState(\"\".concat(experimentDefaultImagePath,\"/\").concat(projectID,\"/\").concat(UserHub===null||UserHub===void 0?void 0:UserHub.HubName,\"/\").concat(expName.ChaosName,\"/\").concat(expName.ExperimentName,\".png\")),_useState2=_slicedToArray(_useState,2),imageURL=_useState2[0],setImageURL=_useState2[1];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Card,{key:expName.ExperimentName,elevation:3,className:classes.cardDiv,onClick:function onClick(){history.push({pathname:\"\".concat(UserHub===null||UserHub===void 0?void 0:UserHub.HubName,\"/\").concat(expName.ChaosName,\"/\").concat(expName.ExperimentName),search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(userRole)});}},/*#__PURE__*/React.createElement(CardContent,{className:classes.cardContent},/*#__PURE__*/React.createElement(\"img\",{src:imageURL,onError:function onError(){return setImageURL('/icons/default-experiment.svg');},alt:expName.ExperimentName,className:classes.cardImage}),/*#__PURE__*/React.createElement(Link,{href:\"#\",onClick:function onClick(e){e.preventDefault();e.stopPropagation();setSearch(expName.ChaosName);},className:classes.categoryName},!isPredefined&&\"\".concat(expName.ChaosName,\"/\")),/*#__PURE__*/React.createElement(Typography,{className:classes.expName,variant:\"h6\",align:\"center\"},expName.ExperimentName))));};export default ChartCard;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/MyHub/MyHubCharts/chartCard.tsx"],"names":["Card","CardContent","Link","Typography","React","useState","config","history","useStyles","ChartCard","expName","UserHub","setSearch","projectID","userRole","isPredefined","classes","experimentDefaultImagePath","grahqlEndpoint","HubName","ChaosName","ExperimentName","imageURL","setImageURL","cardDiv","push","pathname","search","cardContent","cardImage","e","preventDefault","stopPropagation","categoryName"],"mappings":"mLAAA,OAASA,IAAT,CAAeC,WAAf,CAA4BC,IAA5B,CAAkCC,UAAlC,KAAoD,mBAApD,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CAEA,OAASC,OAAT,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAgBA,GAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAOtC,IANJC,CAAAA,OAMI,MANJA,OAMI,CALJC,OAKI,MALJA,OAKI,CAJJC,SAII,MAJJA,SAII,CAHJC,SAGI,MAHJA,SAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,YACI,MADJA,YACI,CACJ,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CACA,GAAMS,CAAAA,0BAA0B,WAAMX,MAAM,CAACY,cAAb,SAAhC,CAEA,cAAgCb,QAAQ,WACnCY,0BADmC,aACLJ,SADK,aACQF,OADR,SACQA,OADR,iBACQA,OAAO,CAAEQ,OADjB,aAC4BT,OAAO,CAACU,SADpC,aACiDV,OAAO,CAACW,cADzD,SAAxC,wCAAOC,QAAP,eAAiBC,WAAjB,eAGA,mBACE,4CACE,oBAAC,IAAD,EACE,GAAG,CAAEb,OAAO,CAACW,cADf,CAEE,SAAS,CAAE,CAFb,CAGE,SAAS,CAAEL,OAAO,CAACQ,OAHrB,CAIE,OAAO,CAAE,kBAAM,CACbjB,OAAO,CAACkB,IAAR,CAAa,CACXC,QAAQ,WAAKf,OAAL,SAAKA,OAAL,iBAAKA,OAAO,CAAEQ,OAAd,aAAyBT,OAAO,CAACU,SAAjC,aAA8CV,OAAO,CAACW,cAAtD,CADG,CAEXM,MAAM,sBAAgBd,SAAhB,yBAAyCC,QAAzC,CAFK,CAAb,EAID,CATH,eAWE,oBAAC,WAAD,EAAa,SAAS,CAAEE,OAAO,CAACY,WAAhC,eACE,2BACE,GAAG,CAAEN,QADP,CAEE,OAAO,CAAE,yBAAMC,CAAAA,WAAW,CAAC,+BAAD,CAAjB,EAFX,CAGE,GAAG,CAAEb,OAAO,CAACW,cAHf,CAIE,SAAS,CAAEL,OAAO,CAACa,SAJrB,EADF,cAOE,oBAAC,IAAD,EACE,IAAI,CAAC,GADP,CAEE,OAAO,CAAE,iBAACC,CAAD,CAAY,CACnBA,CAAC,CAACC,cAAF,GACAD,CAAC,CAACE,eAAF,GACApB,SAAS,CAACF,OAAO,CAACU,SAAT,CAAT,CACD,CANH,CAOE,SAAS,CAAEJ,OAAO,CAACiB,YAPrB,EASG,CAAClB,YAAD,YAAoBL,OAAO,CAACU,SAA5B,KATH,CAPF,cAkBE,oBAAC,UAAD,EAAY,SAAS,CAAEJ,OAAO,CAACN,OAA/B,CAAwC,OAAO,CAAC,IAAhD,CAAqD,KAAK,CAAC,QAA3D,EACGA,OAAO,CAACW,cADX,CAlBF,CAXF,CADF,CADF,CAsCD,CApDD,CAqDA,cAAeZ,CAAAA,SAAf","sourcesContent":["import { Card, CardContent, Link, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport config from '../../../config';\nimport { HubDetails } from '../../../models/redux/myhub';\nimport { history } from '../../../redux/configureStore';\nimport useStyles from './styles';\n\ninterface ChartName {\n  ChaosName: string;\n  ExperimentName: string;\n}\n\ninterface ChartCardProps {\n  expName: ChartName;\n  UserHub: HubDetails | undefined;\n  setSearch: React.Dispatch<React.SetStateAction<string>>;\n  projectID: string;\n  userRole: string;\n  isPredefined?: boolean;\n}\n\nconst ChartCard: React.FC<ChartCardProps> = ({\n  expName,\n  UserHub,\n  setSearch,\n  projectID,\n  userRole,\n  isPredefined,\n}) => {\n  const classes = useStyles();\n  const experimentDefaultImagePath = `${config.grahqlEndpoint}/icon`;\n\n  const [imageURL, setImageURL] = useState(\n    `${experimentDefaultImagePath}/${projectID}/${UserHub?.HubName}/${expName.ChaosName}/${expName.ExperimentName}.png`\n  );\n  return (\n    <div>\n      <Card\n        key={expName.ExperimentName}\n        elevation={3}\n        className={classes.cardDiv}\n        onClick={() => {\n          history.push({\n            pathname: `${UserHub?.HubName}/${expName.ChaosName}/${expName.ExperimentName}`,\n            search: `?projectID=${projectID}&projectRole=${userRole}`,\n          });\n        }}\n      >\n        <CardContent className={classes.cardContent}>\n          <img\n            src={imageURL}\n            onError={() => setImageURL('/icons/default-experiment.svg')}\n            alt={expName.ExperimentName}\n            className={classes.cardImage}\n          />\n          <Link\n            href=\"#\"\n            onClick={(e: any) => {\n              e.preventDefault();\n              e.stopPropagation();\n              setSearch(expName.ChaosName);\n            }}\n            className={classes.categoryName}\n          >\n            {!isPredefined && `${expName.ChaosName}/`}\n          </Link>\n          <Typography className={classes.expName} variant=\"h6\" align=\"center\">\n            {expName.ExperimentName}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\nexport default ChartCard;\n"]},"metadata":{},"sourceType":"module"}