{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,Popover,Typography}from'@material-ui/core';import React from'react';import KeyboardArrowDownIcon from'@material-ui/icons/KeyboardArrowDown';import ChevronRightIcon from'@material-ui/icons/ChevronRight';import{useTranslation}from'react-i18next';import YAML from'yaml';import timeDifference from'../../../utils/datesModifier';import useStyles,{StyledTableCell}from'./styles';import WorkflowStatus from'../WorkflowStatus';var TableData=function TableData(_ref){var data=_ref.data,handleClose=_ref.handleClose,embeddedYAML=_ref.embeddedYAML,onViewLogsClick=_ref.onViewLogsClick;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),popAnchorEl=_React$useState2[0],setPopAnchorEl=_React$useState2[1];var isOpen=Boolean(popAnchorEl);var id=isOpen?'simple-popover':undefined;var handlePopOverClose=function handlePopOverClose(){setPopAnchorEl(null);};var handlePopOverClick=function handlePopOverClick(event){setPopAnchorEl(event.currentTarget);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableCellWidth},/*#__PURE__*/React.createElement(Typography,{className:classes.primaryText},data.name)),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableCellWidth},/*#__PURE__*/React.createElement(WorkflowStatus,{phase:data.phase})),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableCellWidth},/*#__PURE__*/React.createElement(Typography,{className:classes.primaryText},data.finishedAt!==''?((parseInt(data.finishedAt,10)-parseInt(data.startedAt,10))/60).toFixed(1):((new Date().getTime()/1000-parseInt(data.startedAt,10))/60).toFixed(1),\"\\xA0\",t('workflowDetailsView.tableView.minutes'))),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableCellWidth},/*#__PURE__*/React.createElement(Typography,{className:classes.primaryText},timeDifference(data.startedAt))),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableCellWidth},data.type==='ChaosEngine'&&embeddedYAML?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{disabled:!YAML.parse(embeddedYAML).spec.appinfo,onClick:function onClick(event){return handlePopOverClick(event);},style:{textTransform:'none'}},/*#__PURE__*/React.createElement(\"div\",{className:classes.applicationDetails},isOpen?/*#__PURE__*/React.createElement(KeyboardArrowDownIcon,{className:classes.arrowMargin}):/*#__PURE__*/React.createElement(ChevronRightIcon,{className:classes.arrowMargin}),/*#__PURE__*/React.createElement(Typography,null,t('workflowDetailsView.tableView.showProperties')))),/*#__PURE__*/React.createElement(Popover,{id:id,open:isOpen,anchorEl:popAnchorEl,onClose:handlePopOverClose,anchorOrigin:{vertical:'bottom',horizontal:'center'},transformOrigin:{vertical:'top',horizontal:'center'}},/*#__PURE__*/React.createElement(\"div\",{className:classes.popover},YAML.parse(embeddedYAML).spec.appinfo&&Object.keys(YAML.parse(embeddedYAML).spec.appinfo).map(function(key,index){return/*#__PURE__*/React.createElement(Typography,{key:index.toString(),className:classes.popoverItems},/*#__PURE__*/React.createElement(\"span\",{className:classes.boldText},key,\" :\"),\"\\xA0\",YAML.parse(embeddedYAML).spec.appinfo[key]);})))):null),/*#__PURE__*/React.createElement(StyledTableCell,{className:classes.tableCellWidth},data.type==='ChaosEngine'&&/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){handleClose();onViewLogsClick();},style:{textTransform:'none'}},/*#__PURE__*/React.createElement(\"div\",{className:classes.applicationDetails},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/eye.svg\",alt:\"eye\"}),/*#__PURE__*/React.createElement(Typography,null,/*#__PURE__*/React.createElement(\"span\",{className:classes.viewLogs},/*#__PURE__*/React.createElement(\"strong\",null,t('workflowDetailsView.tableView.viewLogs'))))))));};export default TableData;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/WorkflowDetails/WorkflowTable/TableData.tsx"],"names":["Button","Popover","Typography","React","KeyboardArrowDownIcon","ChevronRightIcon","useTranslation","YAML","timeDifference","useStyles","StyledTableCell","WorkflowStatus","TableData","data","handleClose","embeddedYAML","onViewLogsClick","classes","t","useState","popAnchorEl","setPopAnchorEl","isOpen","Boolean","id","undefined","handlePopOverClose","handlePopOverClick","event","currentTarget","tableCellWidth","primaryText","name","phase","finishedAt","parseInt","startedAt","toFixed","Date","getTime","type","parse","spec","appinfo","textTransform","applicationDetails","arrowMargin","vertical","horizontal","popover","Object","keys","map","key","index","toString","popoverItems","boldText","viewLogs"],"mappings":"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","sourcesContent":["import { Button, Popover, Typography } from '@material-ui/core';\nimport React from 'react';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { useTranslation } from 'react-i18next';\nimport YAML from 'yaml';\nimport timeDifference from '../../../utils/datesModifier';\nimport useStyles, { StyledTableCell } from './styles';\nimport { ExecutionData } from '../../../models/graphql/workflowData';\nimport WorkflowStatus from '../WorkflowStatus';\n\ninterface TableDataProps {\n  onViewLogsClick: () => void;\n  embeddedYAML: string;\n  data: ExecutionData['nodes'][0];\n  handleClose: () => void;\n}\n\nconst TableData: React.FC<TableDataProps> = ({\n  data,\n  handleClose,\n  embeddedYAML,\n  onViewLogsClick,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [popAnchorEl, setPopAnchorEl] = React.useState<null | HTMLElement>(\n    null\n  );\n  const isOpen = Boolean(popAnchorEl);\n  const id = isOpen ? 'simple-popover' : undefined;\n  const handlePopOverClose = () => {\n    setPopAnchorEl(null);\n  };\n  const handlePopOverClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPopAnchorEl(event.currentTarget);\n  };\n\n  return (\n    <>\n      <StyledTableCell className={classes.tableCellWidth}>\n        <Typography className={classes.primaryText}>{data.name}</Typography>\n      </StyledTableCell>\n      <StyledTableCell className={classes.tableCellWidth}>\n        <WorkflowStatus phase={data.phase} />\n      </StyledTableCell>\n      <StyledTableCell className={classes.tableCellWidth}>\n        <Typography className={classes.primaryText}>\n          {data.finishedAt !== ''\n            ? (\n                (parseInt(data.finishedAt, 10) - parseInt(data.startedAt, 10)) /\n                60\n              ).toFixed(1)\n            : (\n                (new Date().getTime() / 1000 - parseInt(data.startedAt, 10)) /\n                60\n              ).toFixed(1)}\n          &nbsp;\n          {t('workflowDetailsView.tableView.minutes')}\n        </Typography>\n      </StyledTableCell>\n      <StyledTableCell className={classes.tableCellWidth}>\n        <Typography className={classes.primaryText}>\n          {timeDifference(data.startedAt)}\n        </Typography>\n      </StyledTableCell>\n      <StyledTableCell className={classes.tableCellWidth}>\n        {data.type === 'ChaosEngine' && embeddedYAML ? (\n          <div>\n            <Button\n              disabled={!YAML.parse(embeddedYAML).spec.appinfo}\n              onClick={(event) => handlePopOverClick(event)}\n              style={{ textTransform: 'none' }}\n            >\n              <div className={classes.applicationDetails}>\n                {isOpen ? (\n                  <KeyboardArrowDownIcon className={classes.arrowMargin} />\n                ) : (\n                  <ChevronRightIcon className={classes.arrowMargin} />\n                )}\n                <Typography>\n                  {t('workflowDetailsView.tableView.showProperties')}\n                </Typography>\n              </div>\n            </Button>\n            <Popover\n              id={id}\n              open={isOpen}\n              anchorEl={popAnchorEl}\n              onClose={handlePopOverClose}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n              }}\n            >\n              <div className={classes.popover}>\n                {YAML.parse(embeddedYAML).spec.appinfo &&\n                  Object.keys(YAML.parse(embeddedYAML).spec.appinfo).map(\n                    (key, index) => {\n                      return (\n                        <Typography\n                          key={index.toString()}\n                          className={classes.popoverItems}\n                        >\n                          <span className={classes.boldText}>{key} :</span>\n                          &nbsp;\n                          {YAML.parse(embeddedYAML).spec.appinfo[key]}\n                        </Typography>\n                      );\n                    }\n                  )}\n              </div>\n            </Popover>\n          </div>\n        ) : null}\n      </StyledTableCell>\n      <StyledTableCell className={classes.tableCellWidth}>\n        {data.type === 'ChaosEngine' && (\n          <Button\n            onClick={() => {\n              handleClose();\n              onViewLogsClick();\n            }}\n            style={{ textTransform: 'none' }}\n          >\n            <div className={classes.applicationDetails}>\n              <img src=\"/icons/eye.svg\" alt=\"eye\" />\n              <Typography>\n                <span className={classes.viewLogs}>\n                  <strong>{t('workflowDetailsView.tableView.viewLogs')}</strong>\n                </span>\n              </Typography>\n            </div>\n          </Button>\n        )}\n      </StyledTableCell>\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}