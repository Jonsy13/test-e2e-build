{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/WorkflowDetails/WorkflowInfo/index.tsx\";\n\nimport { Typography } from '@material-ui/core';\nimport { ButtonOutlined } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport TimePopOver from '../../../components/TimePopOver';\nimport useStyles from './styles';\n\nvar WorkflowInfo = function WorkflowInfo(_ref) {\n  var setIsInfoToggled = _ref.setIsInfoToggled,\n      tab = _ref.tab,\n      data = _ref.data,\n      resiliency_score = _ref.resiliency_score,\n      cluster_name = _ref.cluster_name;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.root, \" \").concat(tab === 1 ? classes.rootBottom : classes.rootHeader),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, t('workflowDetailsView.workflowInfo.header'))), tab === 1 && setIsInfoToggled && /*#__PURE__*/React.createElement(ButtonOutlined, {\n    className: classes.closeButton,\n    onClick: function onClick() {\n      setIsInfoToggled(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"\\u2715\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.subSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subSectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, t('workflowDetailsView.workflowInfo.resilienceScore')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.resiliencyScore,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, resiliency_score === undefined || resiliency_score === null ? 'NA' : \"\".concat(resiliency_score, \"%\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.subSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subSectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, t('workflowDetailsView.workflowInfo.runTime.runTimeHeader')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.subCategorySection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subCategorySectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, t('workflowDetailsView.workflowInfo.runTime.startTime')), /*#__PURE__*/React.createElement(TimePopOver, {\n    unixTime: data.startedAt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.subCategorySection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subCategorySectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, t('workflowDetailsView.workflowInfo.runTime.endTime')), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, data.finishedAt !== '' ? /*#__PURE__*/React.createElement(TimePopOver, {\n    unixTime: data.finishedAt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }) : 'Not yet finished')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.subSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subSectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, t('workflowDetailsView.workflowInfo.targets.targetsHeader')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.subCategorySection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subCategorySectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, t('workflowDetailsView.workflowInfo.targets.cluster')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, cluster_name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.subCategorySection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subCategorySectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, t('workflowDetailsView.workflowInfo.targets.namespace')), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, data.namespace))))));\n};\n\nexport default WorkflowInfo;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/WorkflowDetails/WorkflowInfo/index.tsx"],"names":["Typography","ButtonOutlined","React","useTranslation","TimePopOver","useStyles","WorkflowInfo","setIsInfoToggled","tab","data","resiliency_score","cluster_name","classes","t","root","rootBottom","rootHeader","header","title","closeButton","section","subSection","subSectionTitle","resiliencyScore","undefined","subCategorySection","subCategorySectionTitle","startedAt","finishedAt","namespace"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport { ButtonOutlined } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport TimePopOver from '../../../components/TimePopOver';\nimport { ExecutionData } from '../../../models/graphql/workflowData';\nimport useStyles from './styles';\n\ninterface WorkflowInfoProps {\n  setIsInfoToggled?: React.Dispatch<React.SetStateAction<boolean>>;\n  tab: number;\n  data: ExecutionData;\n  resiliency_score?: number;\n  cluster_name: string;\n}\n\nconst WorkflowInfo: React.FC<WorkflowInfoProps> = ({\n  setIsInfoToggled,\n  tab,\n  data,\n  resiliency_score,\n  cluster_name,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <div\n      className={`${classes.root} ${\n        tab === 1 ? classes.rootBottom : classes.rootHeader\n      }`}\n    >\n      {/* Workflow Information */}\n\n      {/* Header Section */}\n      <div className={classes.header}>\n        <Typography className={classes.title}>\n          <strong>{t('workflowDetailsView.workflowInfo.header')}</strong>\n        </Typography>\n        {tab === 1 && setIsInfoToggled && (\n          <ButtonOutlined\n            className={classes.closeButton}\n            onClick={() => {\n              setIsInfoToggled(false);\n            }}\n          >\n            &#x2715;\n          </ButtonOutlined>\n        )}\n      </div>\n\n      {/* Body Section divided in 3 parts */}\n      <div className={classes.section}>\n        {/* 1. Resiliency Score Sub Section */}\n        <div className={classes.subSection}>\n          <Typography className={classes.subSectionTitle}>\n            {t('workflowDetailsView.workflowInfo.resilienceScore')}\n          </Typography>\n          {/* Static data, will be changed with API response */}\n          <Typography className={classes.resiliencyScore}>\n            {resiliency_score === undefined || resiliency_score === null\n              ? 'NA'\n              : `${resiliency_score}%`}\n          </Typography>\n        </div>\n\n        {/* 2. Run Time Sub Section */}\n        <div className={classes.subSection}>\n          <Typography className={classes.subSectionTitle}>\n            {t('workflowDetailsView.workflowInfo.runTime.runTimeHeader')}\n          </Typography>\n          <div className={classes.section}>\n            <div className={classes.subCategorySection}>\n              <Typography className={classes.subCategorySectionTitle}>\n                {t('workflowDetailsView.workflowInfo.runTime.startTime')}\n              </Typography>\n              <TimePopOver unixTime={data.startedAt} />\n            </div>\n            <div className={classes.subCategorySection}>\n              <Typography className={classes.subCategorySectionTitle}>\n                {t('workflowDetailsView.workflowInfo.runTime.endTime')}\n              </Typography>\n              <Typography>\n                {data.finishedAt !== '' ? (\n                  <TimePopOver unixTime={data.finishedAt} />\n                ) : (\n                  'Not yet finished'\n                )}\n              </Typography>\n            </div>\n          </div>\n        </div>\n\n        {/* 3. Target Sub Section */}\n        <div className={classes.subSection}>\n          <Typography className={classes.subSectionTitle}>\n            {t('workflowDetailsView.workflowInfo.targets.targetsHeader')}\n          </Typography>\n          <div className={classes.section}>\n            <div className={classes.subCategorySection}>\n              <Typography className={classes.subCategorySectionTitle}>\n                {t('workflowDetailsView.workflowInfo.targets.cluster')}\n              </Typography>\n              <div>{cluster_name}</div>\n            </div>\n            <div className={classes.subCategorySection}>\n              <Typography className={classes.subCategorySectionTitle}>\n                {t('workflowDetailsView.workflowInfo.targets.namespace')}\n              </Typography>\n              <Typography>{data.namespace}</Typography>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkflowInfo;\n"]},"metadata":{},"sourceType":"module"}