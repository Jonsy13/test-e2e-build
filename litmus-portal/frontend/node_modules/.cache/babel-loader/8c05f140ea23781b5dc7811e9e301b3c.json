{"ast":null,"code":"import _objectSpread from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/TuneTheQueries/EditPanelsWizard/QueryEditingWizard/index.tsx\";\n\nimport { AppBar, Avatar, FormControlLabel, Switch, Tabs, TextField, Typography, useTheme } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { ButtonFilled, ButtonOutlined, EditableText, Modal, TextButton } from 'litmus-ui';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { v4 as uuidv4 } from 'uuid';\nimport { StyledTab, TabPanel } from '../../../../../../../components/Tabs';\nimport { ReactComponent as AddQueryIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../../../svg/add-query.svg\";\nimport { ReactComponent as SwitchIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../../../svg/switch-checked.svg\";\nimport { getPromQueryInput } from '../../../../../../../utils/promUtils';\nimport Graph from './Graph';\nimport QueryEditor from './QueryEditor';\nimport useStyles from './styles';\n\nvar QueryEditingWizard = function QueryEditingWizard(_ref) {\n  var _panelInfo$ds_url, _panelInfo$panel_grou;\n\n  var panelVars = _ref.panelVars,\n      selectedApps = _ref.selectedApps,\n      seriesList = _ref.seriesList,\n      panelGroupsList = _ref.panelGroupsList,\n      index = _ref.index,\n      handleUpdatePanel = _ref.handleUpdatePanel,\n      handleDeletePanel = _ref.handleDeletePanel,\n      handleDiscardChanges = _ref.handleDiscardChanges;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tabValue = _React$useState2[0],\n      setTabValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      discardChangesModalOpen = _React$useState4[0],\n      setDiscardChangesModalOpen = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      deletePanelModalOpen = _React$useState6[0],\n      setDeletePanelModalOpen = _React$useState6[1];\n\n  var _useState = useState(_objectSpread({}, panelVars)),\n      _useState2 = _slicedToArray(_useState, 2),\n      panelInfo = _useState2[0],\n      setPanelInfo = _useState2[1];\n\n  var _useState3 = useState({\n    triggerUpdate: false,\n    graph: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      update = _useState4[0],\n      setUpdate = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      settings = _useState6[0],\n      setSettings = _useState6[1];\n\n  var _React$useState7 = React.useState({\n    ds_details: {\n      url: (_panelInfo$ds_url = panelInfo.ds_url) !== null && _panelInfo$ds_url !== void 0 ? _panelInfo$ds_url : '',\n      start: \"\".concat(new Date(moment.unix(Math.round(new Date().getTime() / 1000) - 900).format()).getTime() / 1000),\n      end: \"\".concat(new Date(moment.unix(Math.round(new Date().getTime() / 1000)).format()).getTime() / 1000)\n    },\n    queries: getPromQueryInput(panelInfo.prom_queries.filter(function (query) {\n      return !query.hidden;\n    }), 900, false)\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      prometheusQueryData = _React$useState8[0],\n      setPrometheusQueryData = _React$useState8[1];\n\n  useEffect(function () {\n    if (update.triggerUpdate) {\n      handleUpdatePanel(panelInfo, index);\n\n      if (update.graph) {\n        var _panelInfo$ds_url2;\n\n        setPrometheusQueryData({\n          ds_details: {\n            url: (_panelInfo$ds_url2 = panelInfo.ds_url) !== null && _panelInfo$ds_url2 !== void 0 ? _panelInfo$ds_url2 : '',\n            start: \"\".concat(new Date(moment.unix(Math.round(new Date().getTime() / 1000) - 900).format()).getTime() / 1000),\n            end: \"\".concat(new Date(moment.unix(Math.round(new Date().getTime() / 1000)).format()).getTime() / 1000)\n          },\n          queries: getPromQueryInput(panelInfo.prom_queries.filter(function (query) {\n            return !query.hidden;\n          }), 900, false)\n        });\n      }\n\n      setUpdate({\n        triggerUpdate: false,\n        graph: false\n      });\n    }\n  }, [update]);\n\n  var handleAddQuery = function handleAddQuery() {\n    var existingQueries = panelInfo.prom_queries;\n    existingQueries.push({\n      hidden: false,\n      queryid: uuidv4(),\n      prom_query_name: '',\n      legend: '',\n      resolution: '1/2',\n      minstep: '5',\n      line: true,\n      close_area: false\n    });\n    setPanelInfo(_objectSpread(_objectSpread({}, panelInfo), {}, {\n      prom_queries: existingQueries\n    }));\n    setUpdate({\n      triggerUpdate: true,\n      graph: true\n    });\n  };\n\n  var handleDeleteQuery = function handleDeleteQuery(index) {\n    var existingQueries = panelInfo.prom_queries;\n\n    if (index !== 0 || existingQueries.length > 1) {\n      existingQueries.splice(index, 1);\n      setPanelInfo(_objectSpread(_objectSpread({}, panelInfo), {}, {\n        prom_queries: existingQueries\n      }));\n      setUpdate({\n        triggerUpdate: true,\n        graph: true\n      });\n    }\n  };\n\n  var handleShowAndHideQuery = function handleShowAndHideQuery(index) {\n    var existingQueries = panelInfo.prom_queries;\n    existingQueries[index].hidden = !existingQueries[index].hidden;\n    setPanelInfo(_objectSpread(_objectSpread({}, panelInfo), {}, {\n      prom_queries: existingQueries\n    }));\n    setUpdate({\n      triggerUpdate: true,\n      graph: true\n    });\n  };\n\n  var handleUpdateQuery = function handleUpdateQuery(query, index) {\n    var existingQueries = panelInfo.prom_queries;\n    existingQueries[index] = query;\n    setPanelInfo(_objectSpread(_objectSpread({}, panelInfo), {}, {\n      prom_queries: existingQueries\n    }));\n    setUpdate({\n      triggerUpdate: true,\n      graph: true\n    });\n  };\n\n  var handleChange = function handleChange(event, newValue) {\n    setTabValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.flexBetween, \" \").concat(classes.header),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    defaultValue: {\n      name: (_panelInfo$panel_grou = panelInfo.panel_group_name) !== null && _panelInfo$panel_grou !== void 0 ? _panelInfo$panel_grou : ''\n    },\n    freeSolo: true,\n    id: \"pg-\".concat(panelInfo.panel_group_name),\n    options: panelGroupsList,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    style: {\n      width: '10.3rem'\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        variant: \"standard\",\n        size: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }\n      }));\n    },\n    onChange: function onChange(event, value, reason) {\n      var _panelInfo$panel_grou2;\n\n      setPanelInfo(_objectSpread(_objectSpread({}, panelInfo), {}, {\n        panel_group_name: value ? reason === 'create-option' ? value : value.name : '',\n        panel_group_id: reason === 'create-option' ? '' : (_panelInfo$panel_grou2 = panelInfo.panel_group_id) !== null && _panelInfo$panel_grou2 !== void 0 ? _panelInfo$panel_grou2 : ''\n      }));\n      setUpdate({\n        triggerUpdate: true,\n        graph: false\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, \" / \"), /*#__PURE__*/React.createElement(EditableText, {\n    defaultValue: panelInfo.panel_name,\n    id: \"name\",\n    onSave: function onSave(value) {\n      setPanelInfo(_objectSpread(_objectSpread({}, panelInfo), {}, {\n        panel_name: value\n      }));\n      setUpdate({\n        triggerUpdate: true,\n        graph: false\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.flex, \" \").concat(classes.controlButtons),\n    style: {\n      gap: '1rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n    onClick: function onClick() {\n      return setSettings(!settings);\n    },\n    className: classes.iconButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/query-settings.svg\",\n    alt: \"Settings icon\",\n    className: classes.icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ButtonOutlined, {\n    onClick: function onClick() {\n      return setDeletePanelModalOpen(true);\n    },\n    className: \"\".concat(classes.iconButton, \" \").concat(classes.deleteButton),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/delete.svg\",\n    alt: \"Delete icon\",\n    className: classes.icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Graph, {\n    panelVars: panelVars,\n    prometheusQueryData: prometheusQueryData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }), settings && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.editSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    className: classes.appBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: tabValue,\n    onChange: handleChange,\n    TabIndicatorProps: {\n      style: {\n        backgroundColor: theme.palette.primary.main\n      }\n    },\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledTab, {\n    label: panelInfo.prom_queries.length > 1 ? t('analyticsDashboard.applicationDashboards.tuneTheQueries.queries') : t('analyticsDashboard.applicationDashboards.tuneTheQueries.query'),\n    icon: /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.avatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.queryCount,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 23\n      }\n    }, panelInfo.prom_queries.length)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(StyledTab, {\n    label: t('analyticsDashboard.applicationDashboards.tuneTheQueries.visualization'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, panelInfo.prom_queries.map(function (prom_query, index) {\n    var _panelInfo$ds_url3;\n\n    return /*#__PURE__*/React.createElement(QueryEditor, {\n      index: index,\n      key: \"query-editor-\".concat(prom_query.queryid),\n      promQuery: prom_query,\n      selectedApps: selectedApps,\n      dsURL: (_panelInfo$ds_url3 = panelInfo.ds_url) !== null && _panelInfo$ds_url3 !== void 0 ? _panelInfo$ds_url3 : '',\n      seriesList: seriesList,\n      handleDeleteQuery: handleDeleteQuery,\n      handleShowAndHideQuery: handleShowAndHideQuery,\n      handleUpdateQuery: handleUpdateQuery,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    });\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.switches,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: panelInfo.panel_options.points,\n      onChange: function onChange(event) {\n        var updatedPanelOptions = _objectSpread(_objectSpread({}, panelInfo.panel_options), {}, {\n          points: event.target.checked\n        });\n\n        setPanelInfo(_objectSpread(_objectSpread({}, panelInfo), {}, {\n          panel_options: updatedPanelOptions\n        }));\n        setUpdate({\n          triggerUpdate: true,\n          graph: true\n        });\n      },\n      name: \"\".concat(t('analyticsDashboard.applicationDashboards.tuneTheQueries.points')),\n      icon: /*#__PURE__*/React.createElement(SwitchIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 29\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(SwitchIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 36\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }),\n    label: \"\".concat(t('analyticsDashboard.applicationDashboards.tuneTheQueries.points')),\n    labelPlacement: \"start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: panelInfo.panel_options.grids,\n      onChange: function onChange(event) {\n        var updatedPanelOptions = _objectSpread(_objectSpread({}, panelInfo.panel_options), {}, {\n          grids: event.target.checked\n        });\n\n        setPanelInfo(_objectSpread(_objectSpread({}, panelInfo), {}, {\n          panel_options: updatedPanelOptions\n        }));\n        setUpdate({\n          triggerUpdate: true,\n          graph: true\n        });\n      },\n      name: \"\".concat(t('analyticsDashboard.applicationDashboards.tuneTheQueries.grids')),\n      icon: /*#__PURE__*/React.createElement(SwitchIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 29\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(SwitchIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 36\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }\n    }),\n    label: \"\".concat(t('analyticsDashboard.applicationDashboards.tuneTheQueries.grids')),\n    labelPlacement: \"start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.flexBetween, \" \").concat(classes.topMargin, \" \").concat(tabValue === 0 ? '' : classes.flexEnd),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, tabValue === 0 && /*#__PURE__*/React.createElement(ButtonOutlined, {\n    onClick: handleAddQuery,\n    startIcon: /*#__PURE__*/React.createElement(AddQueryIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 28\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }\n  }, t('analyticsDashboard.applicationDashboards.tuneTheQueries.addQuery'))), /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: function onClick() {\n      return setDiscardChangesModalOpen(true);\n    },\n    variant: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.applicationDashboards.tuneTheQueries.discardChanges'))))), /*#__PURE__*/React.createElement(Modal, {\n    open: deletePanelModalOpen,\n    onClose: function onClose() {\n      return setDeletePanelModalOpen(false);\n    },\n    width: \"45%\",\n    height: \"fit-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalHeading,\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }, t('analyticsDashboard.applicationDashboards.tuneTheQueries.removeMetric'))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalBodyText,\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.applicationDashboards.tuneTheQueries.removeMetricConfirmation'), /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 15\n    }\n  }, \" \".concat(panelInfo.panel_name, \" \"))), t('analyticsDashboard.applicationDashboards.tuneTheQueries.under'), /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 15\n    }\n  }, \" \".concat(panelInfo.panel_group_name, \" \"))), \"?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexButtons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextButton, {\n    onClick: function onClick() {\n      return setDeletePanelModalOpen(false);\n    },\n    className: classes.cancelButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.applicationDashboards.tuneTheQueries.cancel'))), /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: function onClick() {\n      return handleDeletePanel(index);\n    },\n    variant: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.buttonText, \" \").concat(classes.confirmButtonText),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.applicationDashboards.tuneTheQueries.delete')))))), /*#__PURE__*/React.createElement(Modal, {\n    open: discardChangesModalOpen,\n    onClose: function onClose() {\n      return setDiscardChangesModalOpen(false);\n    },\n    width: \"45%\",\n    height: \"fit-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalHeading,\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.applicationDashboards.tuneTheQueries.discardChangesConfirmation'), /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 15\n    }\n  }, \" \".concat(panelInfo.panel_name, \" \"))), t('analyticsDashboard.applicationDashboards.tuneTheQueries.under'), /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  }, \" \".concat(panelInfo.panel_group_name, \" \"))), \"?\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalBodyText,\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 11\n    }\n  }, t('analyticsDashboard.applicationDashboards.tuneTheQueries.discardChangesInfo')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexButtons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextButton, {\n    onClick: function onClick() {\n      return setDiscardChangesModalOpen(false);\n    },\n    className: classes.cancelButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.applicationDashboards.tuneTheQueries.cancel'))), /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: function onClick() {\n      return handleDiscardChanges(index);\n    },\n    variant: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.buttonText, \" \").concat(classes.confirmButtonText),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 15\n    }\n  }, t('analyticsDashboard.applicationDashboards.tuneTheQueries.yesProceed')))))));\n};\n\nexport default QueryEditingWizard;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/TuneTheQueries/EditPanelsWizard/QueryEditingWizard/index.tsx"],"names":["AppBar","Avatar","FormControlLabel","Switch","Tabs","TextField","Typography","useTheme","Autocomplete","ButtonFilled","ButtonOutlined","EditableText","Modal","TextButton","moment","React","useEffect","useState","useTranslation","v4","uuidv4","StyledTab","TabPanel","getPromQueryInput","Graph","QueryEditor","useStyles","QueryEditingWizard","panelVars","selectedApps","seriesList","panelGroupsList","index","handleUpdatePanel","handleDeletePanel","handleDiscardChanges","classes","theme","t","tabValue","setTabValue","discardChangesModalOpen","setDiscardChangesModalOpen","deletePanelModalOpen","setDeletePanelModalOpen","panelInfo","setPanelInfo","triggerUpdate","graph","update","setUpdate","settings","setSettings","ds_details","url","ds_url","start","Date","unix","Math","round","getTime","format","end","queries","prom_queries","filter","query","hidden","prometheusQueryData","setPrometheusQueryData","handleAddQuery","existingQueries","push","queryid","prom_query_name","legend","resolution","minstep","line","close_area","handleDeleteQuery","length","splice","handleShowAndHideQuery","handleUpdateQuery","handleChange","event","newValue","root","flexBetween","header","flex","name","panel_group_name","option","width","params","value","reason","panel_group_id","divider","panel_name","controlButtons","gap","iconButton","icon","deleteButton","editSection","appBar","style","backgroundColor","palette","primary","main","avatar","queryCount","map","prom_query","switches","panel_options","points","updatedPanelOptions","target","checked","grids","topMargin","flexEnd","modal","modalHeading","modalBodyText","flexButtons","cancelButton","buttonText","confirmButtonText"],"mappings":"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","sourcesContent":["import {\n  AppBar,\n  Avatar,\n  FormControlLabel,\n  Switch,\n  Tabs,\n  TextField,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport {\n  ButtonFilled,\n  ButtonOutlined,\n  EditableText,\n  Modal,\n  TextButton,\n} from 'litmus-ui';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { v4 as uuidv4 } from 'uuid';\nimport { StyledTab, TabPanel } from '../../../../../../../components/Tabs';\nimport {\n  PanelDetails,\n  PromQueryDetails,\n} from '../../../../../../../models/dashboardsData';\nimport {\n  ApplicationMetadata,\n  PanelOption,\n} from '../../../../../../../models/graphql/dashboardsDetails';\nimport { promInput } from '../../../../../../../models/graphql/prometheus';\nimport { ReactComponent as AddQueryIcon } from '../../../../../../../svg/add-query.svg';\nimport { ReactComponent as SwitchIcon } from '../../../../../../../svg/switch-checked.svg';\nimport { getPromQueryInput } from '../../../../../../../utils/promUtils';\nimport Graph from './Graph';\nimport QueryEditor from './QueryEditor';\nimport useStyles from './styles';\n\ninterface Option {\n  name: string;\n  [index: string]: any;\n}\n\ninterface QueryEditingWizardProps {\n  panelVars: PanelDetails;\n  selectedApps: ApplicationMetadata[];\n  seriesList: Array<Option>;\n  panelGroupsList: Array<Option>;\n  index: number;\n  handleUpdatePanel: (panelVars: PanelDetails, index: number) => void;\n  handleDeletePanel: (index: number) => void;\n  handleDiscardChanges: (index: number) => void;\n}\n\ninterface Update {\n  triggerUpdate: boolean;\n  graph: boolean;\n}\n\nconst QueryEditingWizard: React.FC<QueryEditingWizardProps> = ({\n  panelVars,\n  selectedApps,\n  seriesList,\n  panelGroupsList,\n  index,\n  handleUpdatePanel,\n  handleDeletePanel,\n  handleDiscardChanges,\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const [tabValue, setTabValue] = React.useState<number>(0);\n  const [discardChangesModalOpen, setDiscardChangesModalOpen] =\n    React.useState<boolean>(false);\n  const [deletePanelModalOpen, setDeletePanelModalOpen] =\n    React.useState<boolean>(false);\n  const [panelInfo, setPanelInfo] = useState<PanelDetails>({ ...panelVars });\n  const [update, setUpdate] = useState<Update>({\n    triggerUpdate: false,\n    graph: false,\n  });\n  const [settings, setSettings] = useState<boolean>(true);\n  const [prometheusQueryData, setPrometheusQueryData] =\n    React.useState<promInput>({\n      ds_details: {\n        url: panelInfo.ds_url ?? '',\n        start: `${\n          new Date(\n            moment.unix(Math.round(new Date().getTime() / 1000) - 900).format()\n          ).getTime() / 1000\n        }`,\n        end: `${\n          new Date(\n            moment.unix(Math.round(new Date().getTime() / 1000)).format()\n          ).getTime() / 1000\n        }`,\n      },\n      queries: getPromQueryInput(\n        panelInfo.prom_queries.filter((query) => !query.hidden),\n        900,\n        false\n      ),\n    });\n\n  useEffect(() => {\n    if (update.triggerUpdate) {\n      handleUpdatePanel(panelInfo, index);\n      if (update.graph) {\n        setPrometheusQueryData({\n          ds_details: {\n            url: panelInfo.ds_url ?? '',\n            start: `${\n              new Date(\n                moment\n                  .unix(Math.round(new Date().getTime() / 1000) - 900)\n                  .format()\n              ).getTime() / 1000\n            }`,\n            end: `${\n              new Date(\n                moment.unix(Math.round(new Date().getTime() / 1000)).format()\n              ).getTime() / 1000\n            }`,\n          },\n          queries: getPromQueryInput(\n            panelInfo.prom_queries.filter((query) => !query.hidden),\n            900,\n            false\n          ),\n        });\n      }\n      setUpdate({ triggerUpdate: false, graph: false });\n    }\n  }, [update]);\n\n  const handleAddQuery = () => {\n    const existingQueries: PromQueryDetails[] = panelInfo.prom_queries;\n    existingQueries.push({\n      hidden: false,\n      queryid: uuidv4(),\n      prom_query_name: '',\n      legend: '',\n      resolution: '1/2',\n      minstep: '5',\n      line: true,\n      close_area: false,\n    });\n    setPanelInfo({ ...panelInfo, prom_queries: existingQueries });\n    setUpdate({ triggerUpdate: true, graph: true });\n  };\n\n  const handleDeleteQuery = (index: number) => {\n    const existingQueries: PromQueryDetails[] = panelInfo.prom_queries;\n    if (index !== 0 || existingQueries.length > 1) {\n      existingQueries.splice(index, 1);\n      setPanelInfo({ ...panelInfo, prom_queries: existingQueries });\n      setUpdate({ triggerUpdate: true, graph: true });\n    }\n  };\n\n  const handleShowAndHideQuery = (index: number) => {\n    const existingQueries: PromQueryDetails[] = panelInfo.prom_queries;\n    existingQueries[index].hidden = !existingQueries[index].hidden;\n    setPanelInfo({ ...panelInfo, prom_queries: existingQueries });\n    setUpdate({ triggerUpdate: true, graph: true });\n  };\n\n  const handleUpdateQuery = (query: PromQueryDetails, index: number) => {\n    const existingQueries: PromQueryDetails[] = panelInfo.prom_queries;\n    existingQueries[index] = query;\n    setPanelInfo({ ...panelInfo, prom_queries: existingQueries });\n    setUpdate({ triggerUpdate: true, graph: true });\n  };\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={`${classes.flexBetween} ${classes.header}`}>\n        <div className={classes.flex}>\n          <Autocomplete\n            defaultValue={{ name: panelInfo.panel_group_name ?? '' }}\n            freeSolo\n            id={`pg-${panelInfo.panel_group_name}`}\n            options={panelGroupsList}\n            getOptionLabel={(option: Option) => option.name}\n            style={{ width: '10.3rem' }}\n            renderInput={(params) => (\n              <TextField {...params} variant=\"standard\" size=\"small\" />\n            )}\n            onChange={(event, value, reason) => {\n              setPanelInfo({\n                ...panelInfo,\n                panel_group_name: value\n                  ? reason === 'create-option'\n                    ? (value as string)\n                    : (value as Option).name\n                  : '',\n                panel_group_id:\n                  reason === 'create-option'\n                    ? ''\n                    : panelInfo.panel_group_id ?? '',\n              });\n              setUpdate({ triggerUpdate: true, graph: false });\n            }}\n          />\n          <Typography className={classes.divider}> / </Typography>\n          <EditableText\n            defaultValue={panelInfo.panel_name}\n            id=\"name\"\n            onSave={(value) => {\n              setPanelInfo({ ...panelInfo, panel_name: value });\n              setUpdate({ triggerUpdate: true, graph: false });\n            }}\n          />\n        </div>\n        <div\n          className={`${classes.flex} ${classes.controlButtons}`}\n          style={{ gap: '1rem' }}\n        >\n          <ButtonOutlined\n            onClick={() => setSettings(!settings)}\n            className={classes.iconButton}\n          >\n            <img\n              src=\"/icons/query-settings.svg\"\n              alt=\"Settings icon\"\n              className={classes.icon}\n            />\n          </ButtonOutlined>\n          <ButtonOutlined\n            onClick={() => setDeletePanelModalOpen(true)}\n            className={`${classes.iconButton} ${classes.deleteButton}`}\n          >\n            <img\n              src=\"/icons/delete.svg\"\n              alt=\"Delete icon\"\n              className={classes.icon}\n            />\n          </ButtonOutlined>\n        </div>\n      </div>\n      <Graph panelVars={panelVars} prometheusQueryData={prometheusQueryData} />\n      {settings && (\n        <>\n          <div className={classes.editSection}>\n            <AppBar\n              position=\"static\"\n              color=\"default\"\n              className={classes.appBar}\n            >\n              <Tabs\n                value={tabValue}\n                onChange={handleChange}\n                TabIndicatorProps={{\n                  style: {\n                    backgroundColor: theme.palette.primary.main,\n                  },\n                }}\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <StyledTab\n                  label={\n                    panelInfo.prom_queries.length > 1\n                      ? t(\n                          'analyticsDashboard.applicationDashboards.tuneTheQueries.queries'\n                        )\n                      : t(\n                          'analyticsDashboard.applicationDashboards.tuneTheQueries.query'\n                        )\n                  }\n                  icon={\n                    <Avatar className={classes.avatar}>\n                      <Typography className={classes.queryCount}>\n                        {panelInfo.prom_queries.length}\n                      </Typography>\n                    </Avatar>\n                  }\n                />\n\n                <StyledTab\n                  label={t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.visualization'\n                  )}\n                />\n              </Tabs>\n            </AppBar>\n\n            <TabPanel value={tabValue} index={0}>\n              {panelInfo.prom_queries.map((prom_query, index) => (\n                <QueryEditor\n                  index={index}\n                  key={`query-editor-${prom_query.queryid}`}\n                  promQuery={prom_query}\n                  selectedApps={selectedApps}\n                  dsURL={panelInfo.ds_url ?? ''}\n                  seriesList={seriesList}\n                  handleDeleteQuery={handleDeleteQuery}\n                  handleShowAndHideQuery={handleShowAndHideQuery}\n                  handleUpdateQuery={handleUpdateQuery}\n                />\n              ))}\n            </TabPanel>\n\n            <TabPanel value={tabValue} index={1}>\n              <div className={classes.switches}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={panelInfo.panel_options.points}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>\n                      ) => {\n                        const updatedPanelOptions: PanelOption = {\n                          ...panelInfo.panel_options,\n                          points: event.target.checked,\n                        };\n                        setPanelInfo({\n                          ...panelInfo,\n                          panel_options: updatedPanelOptions,\n                        });\n                        setUpdate({ triggerUpdate: true, graph: true });\n                      }}\n                      name={`${t(\n                        'analyticsDashboard.applicationDashboards.tuneTheQueries.points'\n                      )}`}\n                      icon={<SwitchIcon />}\n                      checkedIcon={<SwitchIcon />}\n                    />\n                  }\n                  label={`${t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.points'\n                  )}`}\n                  labelPlacement=\"start\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={panelInfo.panel_options.grids}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>\n                      ) => {\n                        const updatedPanelOptions: PanelOption = {\n                          ...panelInfo.panel_options,\n                          grids: event.target.checked,\n                        };\n                        setPanelInfo({\n                          ...panelInfo,\n                          panel_options: updatedPanelOptions,\n                        });\n                        setUpdate({ triggerUpdate: true, graph: true });\n                      }}\n                      name={`${t(\n                        'analyticsDashboard.applicationDashboards.tuneTheQueries.grids'\n                      )}`}\n                      icon={<SwitchIcon />}\n                      checkedIcon={<SwitchIcon />}\n                    />\n                  }\n                  label={`${t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.grids'\n                  )}`}\n                  labelPlacement=\"start\"\n                />\n              </div>\n            </TabPanel>\n          </div>\n          <div\n            className={`${classes.flexBetween} ${classes.topMargin} ${\n              tabValue === 0 ? '' : classes.flexEnd\n            }`}\n          >\n            {tabValue === 0 && (\n              <ButtonOutlined\n                onClick={handleAddQuery}\n                startIcon={<AddQueryIcon />}\n              >\n                <Typography>\n                  {t(\n                    'analyticsDashboard.applicationDashboards.tuneTheQueries.addQuery'\n                  )}\n                </Typography>\n              </ButtonOutlined>\n            )}\n\n            <ButtonFilled\n              onClick={() => setDiscardChangesModalOpen(true)}\n              variant=\"error\"\n            >\n              <Typography>\n                {t(\n                  'analyticsDashboard.applicationDashboards.tuneTheQueries.discardChanges'\n                )}\n              </Typography>\n            </ButtonFilled>\n          </div>\n        </>\n      )}\n\n      <Modal\n        open={deletePanelModalOpen}\n        onClose={() => setDeletePanelModalOpen(false)}\n        width=\"45%\"\n        height=\"fit-content\"\n      >\n        <div className={classes.modal}>\n          <Typography className={classes.modalHeading} align=\"left\">\n            <b>\n              {t(\n                'analyticsDashboard.applicationDashboards.tuneTheQueries.removeMetric'\n              )}\n            </b>\n          </Typography>\n\n          <Typography className={classes.modalBodyText} align=\"left\">\n            {t(\n              'analyticsDashboard.applicationDashboards.tuneTheQueries.removeMetricConfirmation'\n            )}\n            <b>\n              <i>{` ${panelInfo.panel_name} `}</i>\n            </b>\n            {t('analyticsDashboard.applicationDashboards.tuneTheQueries.under')}\n            <b>\n              <i>{` ${panelInfo.panel_group_name} `}</i>\n            </b>\n            ?\n          </Typography>\n\n          <div className={classes.flexButtons}>\n            <TextButton\n              onClick={() => setDeletePanelModalOpen(false)}\n              className={classes.cancelButton}\n            >\n              <Typography className={classes.buttonText}>\n                {t(\n                  'analyticsDashboard.applicationDashboards.tuneTheQueries.cancel'\n                )}\n              </Typography>\n            </TextButton>\n            <ButtonFilled\n              onClick={() => handleDeletePanel(index)}\n              variant=\"error\"\n            >\n              <Typography\n                className={`${classes.buttonText} ${classes.confirmButtonText}`}\n              >\n                {t(\n                  'analyticsDashboard.applicationDashboards.tuneTheQueries.delete'\n                )}\n              </Typography>\n            </ButtonFilled>\n          </div>\n        </div>\n      </Modal>\n\n      <Modal\n        open={discardChangesModalOpen}\n        onClose={() => setDiscardChangesModalOpen(false)}\n        width=\"45%\"\n        height=\"fit-content\"\n      >\n        <div className={classes.modal}>\n          <Typography className={classes.modalHeading} align=\"left\">\n            {t(\n              'analyticsDashboard.applicationDashboards.tuneTheQueries.discardChangesConfirmation'\n            )}\n            <b>\n              <i>{` ${panelInfo.panel_name} `}</i>\n            </b>\n            {t('analyticsDashboard.applicationDashboards.tuneTheQueries.under')}\n            <b>\n              <i>{` ${panelInfo.panel_group_name} `}</i>\n            </b>\n            ?\n          </Typography>\n\n          <Typography className={classes.modalBodyText} align=\"left\">\n            {t(\n              'analyticsDashboard.applicationDashboards.tuneTheQueries.discardChangesInfo'\n            )}\n          </Typography>\n\n          <div className={classes.flexButtons}>\n            <TextButton\n              onClick={() => setDiscardChangesModalOpen(false)}\n              className={classes.cancelButton}\n            >\n              <Typography className={classes.buttonText}>\n                {t(\n                  'analyticsDashboard.applicationDashboards.tuneTheQueries.cancel'\n                )}\n              </Typography>\n            </TextButton>\n            <ButtonFilled\n              onClick={() => handleDiscardChanges(index)}\n              variant=\"error\"\n            >\n              <Typography\n                className={`${classes.buttonText} ${classes.confirmButtonText}`}\n              >\n                {t(\n                  'analyticsDashboard.applicationDashboards.tuneTheQueries.yesProceed'\n                )}\n              </Typography>\n            </ButtonFilled>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\nexport default QueryEditingWizard;\n"]},"metadata":{},"sourceType":"module"}