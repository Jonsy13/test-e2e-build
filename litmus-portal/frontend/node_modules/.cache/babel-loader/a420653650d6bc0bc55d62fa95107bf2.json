{"ast":null,"code":"import _objectSpread from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/Runs/index.tsx\";\n\nimport { useQuery } from '@apollo/client';\nimport { IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography } from '@material-ui/core';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { GET_CLUSTER_NAMES, WORKFLOW_DETAILS, WORKFLOW_EVENTS } from '../../../graphql';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport HeaderSection from './HeaderSection';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\nvar BrowseWorkflow = function BrowseWorkflow() {\n  var _data$getWorkflowRuns;\n\n  var classes = useStyles();\n  var projectID = getProjectID();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // State for pagination\n\n\n  var _useState = useState({\n    page: 0,\n    limit: 10\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      paginationData = _useState2[0],\n      setPaginationData = _useState2[1]; // States for filters\n\n\n  var _useState3 = useState({\n    workflow_name: '',\n    cluster_name: 'All',\n    workflow_status: 'All',\n    date_range: {\n      start_date: new Date(0).valueOf().toString()\n    }\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filters = _useState4[0],\n      setFilters = _useState4[1]; // State for date to be displayed\n\n\n  var _React$useState = React.useState(t('chaosWorkflows.browseWorkflows.dateFilterHelperText')),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      displayDate = _React$useState2[0],\n      setDisplayDate = _React$useState2[1]; // State for sorting\n\n\n  var _useState5 = useState({\n    field: 'Time',\n    descending: true\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sortData = _useState6[0],\n      setSortData = _useState6[1]; // Checks if the workflow event from subscription exists in the table\n\n\n  function isFiltered(newWorkflow) {\n    var nameExists = filters.workflow_name && newWorkflow.workflow_name.toLowerCase().includes(filters.workflow_name.toLowerCase());\n    var clusterExists = filters.cluster_name === 'All' || filters.cluster_name === newWorkflow.cluster_name;\n    var phaseExists = filters.workflow_status === 'All' || filters.workflow_status === newWorkflow.phase;\n    var dateExists = filters.date_range && newWorkflow.last_updated >= filters.date_range.start_date && (filters.date_range.end_date ? newWorkflow.last_updated < filters.date_range.end_date : true);\n    var shouldAddNewWorkflow = nameExists && clusterExists && phaseExists && dateExists;\n    return shouldAddNewWorkflow;\n  } // Query to get list of Clusters\n\n\n  var _useQuery = useQuery(GET_CLUSTER_NAMES, {\n    variables: {\n      project_id: projectID\n    }\n  }),\n      clusterList = _useQuery.data; // Query to get workflows\n\n\n  var _useQuery2 = useQuery(WORKFLOW_DETAILS, {\n    variables: {\n      workflowRunsInput: {\n        project_id: projectID,\n        pagination: {\n          page: paginationData.page,\n          limit: paginationData.limit\n        },\n        sort: sortData,\n        filter: filters\n      }\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      subscribeToMore = _useQuery2.subscribeToMore,\n      data = _useQuery2.data,\n      error = _useQuery2.error,\n      refetch = _useQuery2.refetch; // Using subscription to get realtime data\n\n\n  useEffect(function () {\n    subscribeToMore({\n      document: WORKFLOW_EVENTS,\n      variables: {\n        projectID: projectID\n      },\n      updateQuery: function updateQuery(prev, _ref) {\n        var subscriptionData = _ref.subscriptionData;\n        if (!subscriptionData.data || !prev || !prev.getWorkflowRuns) return prev;\n        var modifiedWorkflows = prev.getWorkflowRuns.workflow_runs.slice();\n        var newWorkflow = subscriptionData.data.workflowEventListener; // Updating the query data\n\n        var i = 0;\n        var totalNoOfWorkflows = prev.getWorkflowRuns.total_no_of_workflow_runs;\n\n        for (; i < modifiedWorkflows.length; i++) {\n          if (modifiedWorkflows[i].workflow_run_id === newWorkflow.workflow_run_id) {\n            modifiedWorkflows[i] = newWorkflow;\n            break;\n          }\n        }\n\n        if (i === modifiedWorkflows.length && isFiltered(newWorkflow)) {\n          totalNoOfWorkflows++;\n          modifiedWorkflows.unshift(newWorkflow);\n        }\n\n        return {\n          getWorkflowRuns: {\n            total_no_of_workflow_runs: totalNoOfWorkflows,\n            workflow_runs: modifiedWorkflows\n          }\n        };\n      }\n    });\n  }, [data]);\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      popAnchorEl = _React$useState4[0],\n      setPopAnchorEl = _React$useState4[1];\n\n  var isOpen = Boolean(popAnchorEl);\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      open = _React$useState6[0],\n      setOpen = _React$useState6[1];\n\n  var handlePopOverClose = function handlePopOverClose() {\n    setPopAnchorEl(null);\n    setOpen(false);\n  };\n\n  var handlePopOverClick = function handlePopOverClick(event) {\n    setPopAnchorEl(event.currentTarget);\n    setOpen(true);\n  };\n\n  var workflowRuns = data === null || data === void 0 ? void 0 : data.getWorkflowRuns.workflow_runs; // Functions passed as props in the headerSection\n\n  var changeSearch = function changeSearch(event) {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      workflow_name: event.target.value\n    }));\n    setPaginationData(_objectSpread(_objectSpread({}, paginationData), {}, {\n      page: 0\n    }));\n  };\n\n  var changeStatus = function changeStatus(event) {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      workflow_status: event.target.value\n    }));\n    setPaginationData(_objectSpread(_objectSpread({}, paginationData), {}, {\n      page: 0\n    }));\n  };\n\n  var changeCluster = function changeCluster(event) {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      cluster_name: event.target.value\n    }));\n    setPaginationData(_objectSpread(_objectSpread({}, paginationData), {}, {\n      page: 0\n    }));\n  }; // Function to set the date range for filtering\n\n\n  var dateChange = function dateChange(selectStartDate, selectEndDate) {\n    // Change filter value for date range\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      date_range: {\n        start_date: new Date(selectStartDate).setHours(0, 0, 0).valueOf().toString(),\n        end_date: new Date(selectEndDate).setHours(23, 59, 59).valueOf().toString()\n      }\n    })); // Change the display value of date range\n\n    setDisplayDate(\"\".concat(moment(selectStartDate).format('DD.MM.YYYY').toString(), \"-\").concat(moment(selectEndDate).format('DD.MM.YYYY').toString()));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"WorkflowRunsTable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"Heading section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderSection, {\n    searchValue: filters.workflow_name,\n    changeSearch: changeSearch,\n    statusValue: filters.workflow_status,\n    changeStatus: changeStatus,\n    clusterValue: filters.cluster_name,\n    changeCluster: changeCluster,\n    popOverClick: handlePopOverClick,\n    popOverClose: handlePopOverClose,\n    isOpen: isOpen,\n    clusterList: clusterList,\n    popAnchorEl: popAnchorEl,\n    isDateOpen: open,\n    displayDate: displayDate,\n    selectDate: dateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    \"data-cy\": \"browseWorkflowTable\",\n    className: classes.tableMain,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"simple table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    className: classes.tableHead,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.headerStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, t('chaosWorkflows.browseWorkflows.status')), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.workflowName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.paddedTypography,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  }, t('chaosWorkflows.browseWorkflows.name')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sortDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort name ascending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData({\n        field: 'Name'\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandLessIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort name descending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData({\n        field: 'Name',\n        descending: true\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.targetCluster,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }\n  }, t('chaosWorkflows.browseWorkflows.targetAgent'))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.paddedTypography,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }, t('chaosWorkflows.browseWorkflows.reliabilityDetails'))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.paddedTypography,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 19\n    }\n  }, t('chaosWorkflows.browseWorkflows.experiments'))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.paddedTypography,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 21\n    }\n  }, t('chaosWorkflows.browseWorkflows.lastRun')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sortDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort last run ascending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData({\n        field: 'Time',\n        descending: true\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandLessIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort last run descending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData({\n        field: 'Time'\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, error ? /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"browseWorkflowError\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 21\n    }\n  }, \"Unable to fetch data\"))) : workflowRuns && workflowRuns.length ? workflowRuns.map(function (dataRow) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      \"data-cy\": \"WorkflowRunsTableRow\",\n      key: dataRow.workflow_run_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableData, {\n      data: dataRow,\n      refetchQuery: refetch,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"browseWorkflowNoData\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 21\n    }\n  }, \"No records available\")))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 50],\n    component: \"div\",\n    count: (_data$getWorkflowRuns = data === null || data === void 0 ? void 0 : data.getWorkflowRuns.total_no_of_workflow_runs) !== null && _data$getWorkflowRuns !== void 0 ? _data$getWorkflowRuns : 0,\n    rowsPerPage: paginationData.limit,\n    page: paginationData.page,\n    onChangePage: function onChangePage(_, page) {\n      return setPaginationData(_objectSpread(_objectSpread({}, paginationData), {}, {\n        page: page\n      }));\n    },\n    onChangeRowsPerPage: function onChangeRowsPerPage(event) {\n      return setPaginationData(_objectSpread(_objectSpread({}, paginationData), {}, {\n        page: 0,\n        limit: parseInt(event.target.value, 10)\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default BrowseWorkflow;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/Runs/index.tsx"],"names":["useQuery","IconButton","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Typography","ExpandLessIcon","ExpandMoreIcon","moment","React","useEffect","useState","useTranslation","GET_CLUSTER_NAMES","WORKFLOW_DETAILS","WORKFLOW_EVENTS","getProjectID","HeaderSection","useStyles","TableData","BrowseWorkflow","classes","projectID","t","page","limit","paginationData","setPaginationData","workflow_name","cluster_name","workflow_status","date_range","start_date","Date","valueOf","toString","filters","setFilters","displayDate","setDisplayDate","field","descending","sortData","setSortData","isFiltered","newWorkflow","nameExists","toLowerCase","includes","clusterExists","phaseExists","phase","dateExists","last_updated","end_date","shouldAddNewWorkflow","variables","project_id","clusterList","data","workflowRunsInput","pagination","sort","filter","fetchPolicy","subscribeToMore","error","refetch","document","updateQuery","prev","subscriptionData","getWorkflowRuns","modifiedWorkflows","workflow_runs","slice","workflowEventListener","i","totalNoOfWorkflows","total_no_of_workflow_runs","length","workflow_run_id","unshift","popAnchorEl","setPopAnchorEl","isOpen","Boolean","open","setOpen","handlePopOverClose","handlePopOverClick","event","currentTarget","workflowRuns","changeSearch","target","value","changeStatus","changeCluster","dateChange","selectStartDate","selectEndDate","setHours","format","root","tableMain","tableHead","headerStatus","workflowName","display","flexDirection","paddedTypography","sortDiv","targetCluster","map","dataRow","_","parseInt"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  GET_CLUSTER_NAMES,\n  WORKFLOW_DETAILS,\n  WORKFLOW_EVENTS,\n} from '../../../graphql';\nimport { Clusters, ClusterVars } from '../../../models/graphql/clusterData';\nimport {\n  Pagination,\n  SortInput,\n  Workflow,\n  WorkflowDataVars,\n  WorkflowRun,\n  WorkflowRunFilterInput,\n  WorkflowStatus,\n  WorkflowSubscription,\n  WorkflowSubscriptionInput,\n} from '../../../models/graphql/workflowData';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport HeaderSection from './HeaderSection';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\nconst BrowseWorkflow: React.FC = () => {\n  const classes = useStyles();\n  const projectID = getProjectID();\n  const { t } = useTranslation();\n\n  // State for pagination\n  const [paginationData, setPaginationData] = useState<Pagination>({\n    page: 0,\n    limit: 10,\n  });\n\n  // States for filters\n  const [filters, setFilters] = useState<WorkflowRunFilterInput>({\n    workflow_name: '',\n    cluster_name: 'All',\n    workflow_status: 'All',\n    date_range: {\n      start_date: new Date(0).valueOf().toString(),\n    },\n  });\n\n  // State for date to be displayed\n  const [displayDate, setDisplayDate] = React.useState<string>(\n    t('chaosWorkflows.browseWorkflows.dateFilterHelperText')\n  );\n\n  // State for sorting\n  const [sortData, setSortData] = useState<SortInput>({\n    field: 'Time',\n    descending: true,\n  });\n\n  // Checks if the workflow event from subscription exists in the table\n  function isFiltered(newWorkflow: WorkflowRun) {\n    const nameExists =\n      filters.workflow_name &&\n      newWorkflow.workflow_name\n        .toLowerCase()\n        .includes(filters.workflow_name.toLowerCase());\n\n    const clusterExists =\n      filters.cluster_name === 'All' ||\n      filters.cluster_name === newWorkflow.cluster_name;\n\n    const phaseExists =\n      filters.workflow_status === 'All' ||\n      filters.workflow_status === newWorkflow.phase;\n\n    const dateExists =\n      filters.date_range &&\n      newWorkflow.last_updated >= filters.date_range.start_date &&\n      (filters.date_range.end_date\n        ? newWorkflow.last_updated < filters.date_range.end_date\n        : true);\n\n    const shouldAddNewWorkflow =\n      nameExists && clusterExists && phaseExists && dateExists;\n\n    return shouldAddNewWorkflow;\n  }\n\n  // Query to get list of Clusters\n  const { data: clusterList } = useQuery<Partial<Clusters>, ClusterVars>(\n    GET_CLUSTER_NAMES,\n    {\n      variables: {\n        project_id: projectID,\n      },\n    }\n  );\n\n  // Query to get workflows\n  const { subscribeToMore, data, error, refetch } = useQuery<\n    Workflow,\n    WorkflowDataVars\n  >(WORKFLOW_DETAILS, {\n    variables: {\n      workflowRunsInput: {\n        project_id: projectID,\n        pagination: {\n          page: paginationData.page,\n          limit: paginationData.limit,\n        },\n        sort: sortData,\n        filter: filters,\n      },\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Using subscription to get realtime data\n  useEffect(() => {\n    subscribeToMore<WorkflowSubscription, WorkflowSubscriptionInput>({\n      document: WORKFLOW_EVENTS,\n      variables: { projectID },\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data || !prev || !prev.getWorkflowRuns)\n          return prev;\n\n        const modifiedWorkflows = prev.getWorkflowRuns.workflow_runs.slice();\n        const newWorkflow = subscriptionData.data.workflowEventListener;\n\n        // Updating the query data\n        let i = 0;\n        let totalNoOfWorkflows = prev.getWorkflowRuns.total_no_of_workflow_runs;\n\n        for (; i < modifiedWorkflows.length; i++) {\n          if (\n            modifiedWorkflows[i].workflow_run_id === newWorkflow.workflow_run_id\n          ) {\n            modifiedWorkflows[i] = newWorkflow;\n            break;\n          }\n        }\n        if (i === modifiedWorkflows.length && isFiltered(newWorkflow)) {\n          totalNoOfWorkflows++;\n          modifiedWorkflows.unshift(newWorkflow);\n        }\n\n        return {\n          getWorkflowRuns: {\n            total_no_of_workflow_runs: totalNoOfWorkflows,\n            workflow_runs: modifiedWorkflows,\n          },\n        };\n      },\n    });\n  }, [data]);\n\n  const [popAnchorEl, setPopAnchorEl] = React.useState<null | HTMLElement>(\n    null\n  );\n  const isOpen = Boolean(popAnchorEl);\n\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const handlePopOverClose = () => {\n    setPopAnchorEl(null);\n    setOpen(false);\n  };\n  const handlePopOverClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPopAnchorEl(event.currentTarget);\n    setOpen(true);\n  };\n\n  const workflowRuns = data?.getWorkflowRuns.workflow_runs;\n\n  // Functions passed as props in the headerSection\n  const changeSearch = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setFilters({ ...filters, workflow_name: event.target.value as string });\n    setPaginationData({ ...paginationData, page: 0 });\n  };\n\n  const changeStatus = (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setFilters({\n      ...filters,\n      workflow_status: event.target.value as WorkflowStatus,\n    });\n    setPaginationData({ ...paginationData, page: 0 });\n  };\n\n  const changeCluster = (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setFilters({ ...filters, cluster_name: event.target.value as string });\n    setPaginationData({ ...paginationData, page: 0 });\n  };\n\n  // Function to set the date range for filtering\n  const dateChange = (selectStartDate: string, selectEndDate: string) => {\n    // Change filter value for date range\n    setFilters({\n      ...filters,\n      date_range: {\n        start_date: new Date(selectStartDate)\n          .setHours(0, 0, 0)\n          .valueOf()\n          .toString(),\n        end_date: new Date(selectEndDate)\n          .setHours(23, 59, 59)\n          .valueOf()\n          .toString(),\n      },\n    });\n\n    // Change the display value of date range\n    setDisplayDate(\n      `${moment(selectStartDate).format('DD.MM.YYYY').toString()}-${moment(\n        selectEndDate\n      )\n        .format('DD.MM.YYYY')\n        .toString()}`\n    );\n  };\n\n  return (\n    <div data-cy=\"WorkflowRunsTable\">\n      <section className=\"Heading section\">\n        {/* Header Section */}\n        <HeaderSection\n          searchValue={filters.workflow_name}\n          changeSearch={changeSearch}\n          statusValue={filters.workflow_status}\n          changeStatus={changeStatus}\n          clusterValue={filters.cluster_name}\n          changeCluster={changeCluster}\n          popOverClick={handlePopOverClick}\n          popOverClose={handlePopOverClose}\n          isOpen={isOpen}\n          clusterList={clusterList}\n          popAnchorEl={popAnchorEl}\n          isDateOpen={open}\n          displayDate={displayDate}\n          selectDate={dateChange}\n        />\n      </section>\n      <Paper className={classes.root}>\n        <TableContainer\n          data-cy=\"browseWorkflowTable\"\n          className={classes.tableMain}\n        >\n          <Table stickyHeader aria-label=\"simple table\">\n            <TableHead className={classes.tableHead}>\n              <TableRow>\n                <TableCell />\n                {/* Status */}\n                <TableCell className={classes.headerStatus}>\n                  {t('chaosWorkflows.browseWorkflows.status')}\n                </TableCell>\n\n                {/* Workflow Name */}\n                <TableCell className={classes.workflowName}>\n                  <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <Typography className={classes.paddedTypography}>\n                      {t('chaosWorkflows.browseWorkflows.name')}\n                    </Typography>\n                    <div className={classes.sortDiv}>\n                      <IconButton\n                        aria-label=\"sort name ascending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            field: 'Name',\n                          })\n                        }\n                      >\n                        <ExpandLessIcon fontSize=\"inherit\" />\n                      </IconButton>\n                      <IconButton\n                        aria-label=\"sort name descending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            field: 'Name',\n                            descending: true,\n                          })\n                        }\n                      >\n                        <ExpandMoreIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </div>\n                  </div>\n                </TableCell>\n\n                {/* Target Agent */}\n                <TableCell>\n                  <Typography className={classes.targetCluster}>\n                    {t('chaosWorkflows.browseWorkflows.targetAgent')}\n                  </Typography>\n                </TableCell>\n\n                {/* Reliability Details */}\n                <TableCell>\n                  <Typography className={classes.paddedTypography}>\n                    {t('chaosWorkflows.browseWorkflows.reliabilityDetails')}\n                  </Typography>\n                </TableCell>\n\n                {/* Experiments */}\n                <TableCell>\n                  <Typography className={classes.paddedTypography}>\n                    {t('chaosWorkflows.browseWorkflows.experiments')}\n                  </Typography>\n                </TableCell>\n\n                {/* Last Run */}\n                <TableCell>\n                  <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <Typography className={classes.paddedTypography}>\n                      {t('chaosWorkflows.browseWorkflows.lastRun')}\n                    </Typography>\n                    <div className={classes.sortDiv}>\n                      <IconButton\n                        aria-label=\"sort last run ascending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            field: 'Time',\n                            descending: true,\n                          })\n                        }\n                      >\n                        <ExpandLessIcon fontSize=\"inherit\" />\n                      </IconButton>\n                      <IconButton\n                        aria-label=\"sort last run descending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            field: 'Time',\n                          })\n                        }\n                      >\n                        <ExpandMoreIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </div>\n                  </div>\n                </TableCell>\n\n                {/* Menu Cell */}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n\n            {/* Body */}\n            <TableBody>\n              {error ? (\n                <TableRow>\n                  <TableCell colSpan={7}>\n                    <Typography data-cy=\"browseWorkflowError\" align=\"center\">\n                      Unable to fetch data\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ) : workflowRuns && workflowRuns.length ? (\n                workflowRuns.map((dataRow) => (\n                  <TableRow\n                    data-cy=\"WorkflowRunsTableRow\"\n                    key={dataRow.workflow_run_id}\n                  >\n                    <TableData data={dataRow} refetchQuery={refetch} />\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell colSpan={7}>\n                    <Typography data-cy=\"browseWorkflowNoData\" align=\"center\">\n                      No records available\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        {/* Pagination */}\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          component=\"div\"\n          count={data?.getWorkflowRuns.total_no_of_workflow_runs ?? 0}\n          rowsPerPage={paginationData.limit}\n          page={paginationData.page}\n          onChangePage={(_, page) =>\n            setPaginationData({ ...paginationData, page })\n          }\n          onChangeRowsPerPage={(event) =>\n            setPaginationData({\n              ...paginationData,\n              page: 0,\n              limit: parseInt(event.target.value, 10),\n            })\n          }\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default BrowseWorkflow;\n"]},"metadata":{},"sourceType":"module"}