{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useQuery}from'@apollo/client';import{Avatar,IconButton,TableCell}from'@material-ui/core';import moment from'moment';import React,{useState}from'react';import{GET_USER}from'../../../../graphql';import{Role}from'../../../../models/graphql/user';import{userInitials}from'../../../../utils/userInitials';import RemoveMemberModal from'./removeMemberModal';import useStyles from'./styles';var TableData=function TableData(_ref){var row=_ref.row,showModal=_ref.showModal;var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];// Function to display date in format Do MMM,YYYY Hr:MM AM/PM\nvar formatDate=function formatDate(date){var day=moment(date).format('Do MMM, YYYY LT');return day;};var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),memberDetails=_useState4[0],setMemberDetails=_useState4[1];useQuery(GET_USER,{variables:{username:row.user_name},onCompleted:function onCompleted(data){setMemberDetails({name:data.getUser.name,uid:data.getUser.id,username:data.getUser.username,role:data.getUser.role,email:data.getUser.email});}});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.firstTC,component:\"th\",scope:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.firstCol},/*#__PURE__*/React.createElement(Avatar,{\"data-cy\":\"avatar\",alt:\"User\",className:classes.avatarBackground},userInitials(memberDetails?memberDetails.username:'')),memberDetails?memberDetails.username:'')),/*#__PURE__*/React.createElement(TableCell,{className:classes.otherTC},row.role),/*#__PURE__*/React.createElement(TableCell,{className:classes.otherTC},memberDetails?memberDetails.email:''),/*#__PURE__*/React.createElement(TableCell,{className:classes.otherTC},/*#__PURE__*/React.createElement(\"div\",{className:classes.dateDiv},/*#__PURE__*/React.createElement(\"img\",{className:classes.calIcon,src:\"./icons/calendarIcon.svg\",alt:\"calendar\"}),formatDate(row.joined_at))),row.role!==Role.owner?/*#__PURE__*/React.createElement(TableCell,{className:classes.otherTC,key:row.user_id},/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){return setOpen(true);}},/*#__PURE__*/React.createElement(\"img\",{alt:\"delete\",src:\"./icons/deleteBin.svg\",height:\"50\"}))):/*#__PURE__*/React.createElement(TableCell,{className:classes.otherTC}),open&&/*#__PURE__*/React.createElement(RemoveMemberModal,{open:open,handleClose:function handleClose(){setOpen(false);},row:row,showModal:showModal,isRemove:true}));};export default TableData;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/TeamingTab/Team/tableData.tsx"],"names":["useQuery","Avatar","IconButton","TableCell","moment","React","useState","GET_USER","Role","userInitials","RemoveMemberModal","useStyles","TableData","row","showModal","classes","open","setOpen","formatDate","date","day","format","memberDetails","setMemberDetails","variables","username","user_name","onCompleted","data","name","getUser","uid","id","role","email","firstTC","firstCol","avatarBackground","otherTC","dateDiv","calIcon","joined_at","owner","user_id"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Avatar, IconButton, TableCell } from '@material-ui/core';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport { GET_USER } from '../../../../graphql';\nimport {\n  CurrentUserDedtailsVars,\n  CurrentUserDetails,\n  Member,\n  Role,\n} from '../../../../models/graphql/user';\nimport { CurrentUserData } from '../../../../models/userData';\nimport { userInitials } from '../../../../utils/userInitials';\nimport RemoveMemberModal from './removeMemberModal';\nimport useStyles from './styles';\n\ninterface TableDataProps {\n  row: Member;\n  index: number;\n  showModal: () => void;\n}\nconst TableData: React.FC<TableDataProps> = ({ row, showModal }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState<boolean>(false);\n\n  // Function to display date in format Do MMM,YYYY Hr:MM AM/PM\n  const formatDate = (date: string) => {\n    const day = moment(date).format('Do MMM, YYYY LT');\n    return day;\n  };\n\n  const [memberDetails, setMemberDetails] = useState<CurrentUserData>();\n\n  useQuery<CurrentUserDetails, CurrentUserDedtailsVars>(GET_USER, {\n    variables: { username: row.user_name },\n    onCompleted: (data) => {\n      setMemberDetails({\n        name: data.getUser.name,\n        uid: data.getUser.id,\n        username: data.getUser.username,\n        role: data.getUser.role,\n        email: data.getUser.email,\n      });\n    },\n  });\n  return (\n    <>\n      <TableCell className={classes.firstTC} component=\"th\" scope=\"row\">\n        <div className={classes.firstCol}>\n          <Avatar\n            data-cy=\"avatar\"\n            alt=\"User\"\n            className={classes.avatarBackground}\n          >\n            {userInitials(memberDetails ? memberDetails.username : '')}\n          </Avatar>\n          {memberDetails ? memberDetails.username : ''}\n        </div>\n      </TableCell>\n      <TableCell className={classes.otherTC}>{row.role}</TableCell>\n      <TableCell className={classes.otherTC}>\n        {memberDetails ? memberDetails.email : ''}\n      </TableCell>\n      <TableCell className={classes.otherTC}>\n        <div className={classes.dateDiv}>\n          <img\n            className={classes.calIcon}\n            src=\"./icons/calendarIcon.svg\"\n            alt=\"calendar\"\n          />\n          {formatDate(row.joined_at)}\n        </div>\n      </TableCell>\n\n      {row.role !== Role.owner ? (\n        <TableCell className={classes.otherTC} key={row.user_id}>\n          <IconButton onClick={() => setOpen(true)}>\n            <img alt=\"delete\" src=\"./icons/deleteBin.svg\" height=\"50\" />\n          </IconButton>\n        </TableCell>\n      ) : (\n        <TableCell className={classes.otherTC} />\n      )}\n      {open && (\n        <RemoveMemberModal\n          open={open}\n          handleClose={() => {\n            setOpen(false);\n          }}\n          row={row}\n          showModal={showModal}\n          isRemove\n        />\n      )}\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}