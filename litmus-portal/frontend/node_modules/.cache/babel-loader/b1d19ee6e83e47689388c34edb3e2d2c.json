{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useQuery}from'@apollo/client';import{AppBar,Typography,useTheme}from'@material-ui/core';import Tabs from'@material-ui/core/Tabs/Tabs';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import{useSelector}from'react-redux';import{useParams}from'react-router-dom';import BackButton from'../../components/Button/BackButton';import Loader from'../../components/Loader';import{StyledTab,TabPanel}from'../../components/Tabs';import Scaffold from'../../containers/layouts/Scaffold';import{WORKFLOW_DETAILS_WITH_EXEC_DATA,WORKFLOW_EVENTS_WITH_EXEC_DATA,WORKFLOW_LIST_DETAILS}from'../../graphql';import useActions from'../../redux/actions';import*as NodeSelectionActions from'../../redux/actions/nodeSelection';import*as TabActions from'../../redux/actions/tabs';import{getProjectID}from'../../utils/getSearchParams';import ArgoWorkflow from'../../views/WorkflowDetails/ArgoWorkflow';import NodeLogsModal from'../../views/WorkflowDetails/LogsModal';import WorkflowInfo from'../../views/WorkflowDetails/WorkflowInfo';import WorkflowNodeInfo from'../../views/WorkflowDetails/WorkflowNodeInfo';import NodeTable from'../../views/WorkflowDetails/WorkflowTable';import useStyles from'./styles';var WorkflowDetails=function WorkflowDetails(){var _workflowRun$workflow;var theme=useTheme();var _useTranslation=useTranslation(),t=_useTranslation.t;var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),logsModalOpen=_useState2[0],setLogsModalOpen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isInfoToggled=_useState4[0],setIsInfoToggled=_useState4[1];// State for Checking if workflow failed\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isWorkflowFailed=_useState6[0],setWorkflowFailed=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),workflowSchedulesDetails=_useState8[0],setworkflowSchedulesDetails=_useState8[1];var tabs=useActions(TabActions);var nodeSelection=useActions(NodeSelectionActions);// get ProjectID\nvar projectID=getProjectID();var workflowDetailsTabValue=useSelector(function(state){return state.tabNumber.node;});var _useSelector=useSelector(function(state){return state.selectedNode;}),pod_name=_useSelector.pod_name;var _useParams=useParams(),workflowRunId=_useParams.workflowRunId;// Query to get workflows\nvar _useQuery=useQuery(WORKFLOW_DETAILS_WITH_EXEC_DATA,{variables:{workflowRunsInput:{project_id:projectID,workflow_run_ids:[workflowRunId]}},fetchPolicy:'cache-and-network'}),subscribeToMore=_useQuery.subscribeToMore,data=_useQuery.data,error=_useQuery.error;var workflowRun=data===null||data===void 0?void 0:data.getWorkflowRuns.workflow_runs[0];var _useQuery2=useQuery(WORKFLOW_LIST_DETAILS,{variables:{workflowInput:{project_id:projectID,workflow_ids:[(_workflowRun$workflow=workflowRun===null||workflowRun===void 0?void 0:workflowRun.workflow_id)!==null&&_workflowRun$workflow!==void 0?_workflowRun$workflow:' ']}},fetchPolicy:'cache-and-network'}),workflowData=_useQuery2.data,loading=_useQuery2.loading;// Using subscription to get realtime data\nuseEffect(function(){if((workflowRun===null||workflowRun===void 0?void 0:workflowRun.phase)&&workflowRun.phase==='Running'){subscribeToMore({document:WORKFLOW_EVENTS_WITH_EXEC_DATA,variables:{projectID:projectID},updateQuery:function updateQuery(prev,_ref){var subscriptionData=_ref.subscriptionData;if(!subscriptionData.data||!prev||!prev.getWorkflowRuns)return prev;var modifiedWorkflows=prev.getWorkflowRuns.workflow_runs.slice();var newWorkflow=subscriptionData.data.workflowEventListener;// Update only the required workflowRun\nif(modifiedWorkflows[0].workflow_run_id===newWorkflow.workflow_run_id)modifiedWorkflows[0]=newWorkflow;var totalNoOfWorkflows=prev.getWorkflowRuns.total_no_of_workflow_runs;return{getWorkflowRuns:{total_no_of_workflow_runs:totalNoOfWorkflows,workflow_runs:modifiedWorkflows}};}});}},[data]);var handleChange=function handleChange(event,newValue){tabs.changeWorkflowDetailsTabs(newValue);};useEffect(function(){var scheduledWorkflow=workflowData===null||workflowData===void 0?void 0:workflowData.ListWorkflow.workflows;if(scheduledWorkflow){setworkflowSchedulesDetails(scheduledWorkflow[0]?scheduledWorkflow[0]:null);}},[workflowData]);// On fresh screen refresh 'Workflow' Tab would be selected\nuseEffect(function(){tabs.changeWorkflowDetailsTabs(0);},[]);// Setting NodeId of first Node in redux for selection of first node in Argo graph by default\nuseEffect(function(){if(workflowRun&&pod_name===''){if(Object.keys(JSON.parse(workflowRun.execution_data).nodes).length){var firstNodeId=JSON.parse(workflowRun.execution_data).nodes[Object.keys(JSON.parse(workflowRun.execution_data).nodes)[0]].name;nodeSelection.selectNode(_objectSpread(_objectSpread({},JSON.parse(workflowRun.execution_data).nodes[firstNodeId]),{},{pod_name:firstNodeId}));}else{setWorkflowFailed(true);}}},[data]);return/*#__PURE__*/React.createElement(Scaffold,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.button},/*#__PURE__*/React.createElement(BackButton,null)),workflowRun&&pod_name!==''&&!loading?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{\"data-cy\":\"wfName\",className:classes.title},t('workflowDetailsView.headerDesc'),\" \",workflowRun.workflow_name),/*#__PURE__*/React.createElement(AppBar,{position:\"static\",color:\"default\",className:classes.appBar},/*#__PURE__*/React.createElement(Tabs,{value:workflowDetailsTabValue||0,onChange:handleChange,TabIndicatorProps:{style:{backgroundColor:theme.palette.highlight}},variant:\"fullWidth\"},/*#__PURE__*/React.createElement(StyledTab,{label:\"Graph View\"}),/*#__PURE__*/React.createElement(StyledTab,{label:\"Table View\"}))),/*#__PURE__*/React.createElement(TabPanel,{value:workflowDetailsTabValue,index:0},/*#__PURE__*/React.createElement(\"div\",{className:classes.graphView},/*#__PURE__*/React.createElement(ArgoWorkflow,{nodes:JSON.parse(workflowRun.execution_data).nodes,setIsInfoToggled:setIsInfoToggled}),isInfoToggled?/*#__PURE__*/React.createElement(\"div\",null,pod_name!==JSON.parse(workflowRun.execution_data).nodes[Object.keys(JSON.parse(workflowRun.execution_data).nodes)[0]].name?/*#__PURE__*/ /* Node details and Logs */React.createElement(WorkflowNodeInfo,{manifest:workflowSchedulesDetails===null||workflowSchedulesDetails===void 0?void 0:workflowSchedulesDetails.workflow_manifest,setIsInfoToggled:setIsInfoToggled,cluster_id:workflowRun.cluster_id,workflow_run_id:workflowRun.workflow_run_id,data:JSON.parse(workflowRun.execution_data)}):/*#__PURE__*/ /* Workflow Details */React.createElement(WorkflowInfo,{tab:1,setIsInfoToggled:setIsInfoToggled,cluster_name:workflowRun.cluster_name,data:JSON.parse(workflowRun.execution_data),resiliency_score:workflowRun.resiliency_score})):null)),/*#__PURE__*/React.createElement(TabPanel,{value:workflowDetailsTabValue,index:1},/*#__PURE__*/React.createElement(WorkflowInfo,{tab:2,cluster_name:workflowRun.cluster_name,data:JSON.parse(workflowRun.execution_data),resiliency_score:workflowRun.resiliency_score}),/*#__PURE__*/React.createElement(NodeTable,{manifest:workflowSchedulesDetails===null||workflowSchedulesDetails===void 0?void 0:workflowSchedulesDetails.workflow_manifest,data:JSON.parse(workflowRun.execution_data),handleClose:function handleClose(){return setLogsModalOpen(true);}}),/*#__PURE__*/React.createElement(NodeLogsModal,{logsOpen:logsModalOpen,handleClose:function handleClose(){return setLogsModalOpen(false);},cluster_id:workflowRun.cluster_id,workflow_run_id:workflowRun.workflow_run_id,data:JSON.parse(workflowRun.execution_data),workflow_name:workflowRun.workflow_name}))):error?/*#__PURE__*/React.createElement(Typography,null,t('workflowDetails.fetchError')):isWorkflowFailed?/*#__PURE__*/React.createElement(Typography,null,t('workflowDetails.workflowNotStarted')):/*#__PURE__*/React.createElement(Loader,null)));};export default WorkflowDetails;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/pages/WorkflowDetails/index.tsx"],"names":["useQuery","AppBar","Typography","useTheme","Tabs","React","useEffect","useState","useTranslation","useSelector","useParams","BackButton","Loader","StyledTab","TabPanel","Scaffold","WORKFLOW_DETAILS_WITH_EXEC_DATA","WORKFLOW_EVENTS_WITH_EXEC_DATA","WORKFLOW_LIST_DETAILS","useActions","NodeSelectionActions","TabActions","getProjectID","ArgoWorkflow","NodeLogsModal","WorkflowInfo","WorkflowNodeInfo","NodeTable","useStyles","WorkflowDetails","theme","t","classes","logsModalOpen","setLogsModalOpen","isInfoToggled","setIsInfoToggled","isWorkflowFailed","setWorkflowFailed","workflowSchedulesDetails","setworkflowSchedulesDetails","tabs","nodeSelection","projectID","workflowDetailsTabValue","state","tabNumber","node","selectedNode","pod_name","workflowRunId","variables","workflowRunsInput","project_id","workflow_run_ids","fetchPolicy","subscribeToMore","data","error","workflowRun","getWorkflowRuns","workflow_runs","workflowInput","workflow_ids","workflow_id","workflowData","loading","phase","document","updateQuery","prev","subscriptionData","modifiedWorkflows","slice","newWorkflow","workflowEventListener","workflow_run_id","totalNoOfWorkflows","total_no_of_workflow_runs","handleChange","event","newValue","changeWorkflowDetailsTabs","scheduledWorkflow","ListWorkflow","workflows","Object","keys","JSON","parse","execution_data","nodes","length","firstNodeId","name","selectNode","root","button","title","workflow_name","appBar","style","backgroundColor","palette","highlight","graphView","workflow_manifest","cluster_id","cluster_name","resiliency_score"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { AppBar, Typography, useTheme } from '@material-ui/core';\nimport Tabs from '@material-ui/core/Tabs/Tabs';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport BackButton from '../../components/Button/BackButton';\nimport Loader from '../../components/Loader';\nimport { StyledTab, TabPanel } from '../../components/Tabs';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport {\n  WORKFLOW_DETAILS_WITH_EXEC_DATA,\n  WORKFLOW_EVENTS_WITH_EXEC_DATA,\n  WORKFLOW_LIST_DETAILS,\n} from '../../graphql';\nimport { ScheduleWorkflow } from '../../models/graphql/scheduleData';\nimport {\n  ExecutionData,\n  Workflow,\n  WorkflowDataVars,\n  WorkflowSubscription,\n  WorkflowSubscriptionInput,\n} from '../../models/graphql/workflowData';\nimport {\n  ListWorkflowsInput,\n  ScheduledWorkflows,\n} from '../../models/graphql/workflowListData';\nimport useActions from '../../redux/actions';\nimport * as NodeSelectionActions from '../../redux/actions/nodeSelection';\nimport * as TabActions from '../../redux/actions/tabs';\nimport { RootState } from '../../redux/reducers';\nimport { getProjectID } from '../../utils/getSearchParams';\nimport ArgoWorkflow from '../../views/WorkflowDetails/ArgoWorkflow';\nimport NodeLogsModal from '../../views/WorkflowDetails/LogsModal';\nimport WorkflowInfo from '../../views/WorkflowDetails/WorkflowInfo';\nimport WorkflowNodeInfo from '../../views/WorkflowDetails/WorkflowNodeInfo';\nimport NodeTable from '../../views/WorkflowDetails/WorkflowTable';\nimport useStyles from './styles';\n\ninterface URLParams {\n  workflowRunId: string;\n}\n\nconst WorkflowDetails: React.FC = () => {\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const [logsModalOpen, setLogsModalOpen] = useState<boolean>(false);\n  const [isInfoToggled, setIsInfoToggled] = useState<boolean>(false);\n  // State for Checking if workflow failed\n  const [isWorkflowFailed, setWorkflowFailed] = useState<boolean>(false);\n  const [workflowSchedulesDetails, setworkflowSchedulesDetails] =\n    useState<ScheduleWorkflow>();\n\n  const tabs = useActions(TabActions);\n  const nodeSelection = useActions(NodeSelectionActions);\n\n  // get ProjectID\n  const projectID = getProjectID();\n\n  const workflowDetailsTabValue = useSelector(\n    (state: RootState) => state.tabNumber.node\n  );\n\n  const { pod_name } = useSelector((state: RootState) => state.selectedNode);\n\n  const { workflowRunId }: URLParams = useParams();\n\n  // Query to get workflows\n  const { subscribeToMore, data, error } = useQuery<Workflow, WorkflowDataVars>(\n    WORKFLOW_DETAILS_WITH_EXEC_DATA,\n    {\n      variables: {\n        workflowRunsInput: {\n          project_id: projectID,\n          workflow_run_ids: [workflowRunId],\n        },\n      },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  const workflowRun = data?.getWorkflowRuns.workflow_runs[0];\n\n  const { data: workflowData, loading } = useQuery<\n    ScheduledWorkflows,\n    ListWorkflowsInput\n  >(WORKFLOW_LIST_DETAILS, {\n    variables: {\n      workflowInput: {\n        project_id: projectID,\n        workflow_ids: [workflowRun?.workflow_id ?? ' '],\n      },\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Using subscription to get realtime data\n  useEffect(() => {\n    if (workflowRun?.phase && workflowRun.phase === 'Running') {\n      subscribeToMore<WorkflowSubscription, WorkflowSubscriptionInput>({\n        document: WORKFLOW_EVENTS_WITH_EXEC_DATA,\n        variables: { projectID },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data || !prev || !prev.getWorkflowRuns)\n            return prev;\n\n          const modifiedWorkflows = prev.getWorkflowRuns.workflow_runs.slice();\n          const newWorkflow = subscriptionData.data.workflowEventListener;\n\n          // Update only the required workflowRun\n          if (\n            modifiedWorkflows[0].workflow_run_id === newWorkflow.workflow_run_id\n          )\n            modifiedWorkflows[0] = newWorkflow;\n\n          const totalNoOfWorkflows =\n            prev.getWorkflowRuns.total_no_of_workflow_runs;\n\n          return {\n            getWorkflowRuns: {\n              total_no_of_workflow_runs: totalNoOfWorkflows,\n              workflow_runs: modifiedWorkflows,\n            },\n          };\n        },\n      });\n    }\n  }, [data]);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    tabs.changeWorkflowDetailsTabs(newValue);\n  };\n\n  useEffect(() => {\n    const scheduledWorkflow = workflowData?.ListWorkflow.workflows;\n    if (scheduledWorkflow) {\n      setworkflowSchedulesDetails(\n        (scheduledWorkflow[0] ? scheduledWorkflow[0] : null) as ScheduleWorkflow\n      );\n    }\n  }, [workflowData]);\n\n  // On fresh screen refresh 'Workflow' Tab would be selected\n  useEffect(() => {\n    tabs.changeWorkflowDetailsTabs(0);\n  }, []);\n\n  // Setting NodeId of first Node in redux for selection of first node in Argo graph by default\n  useEffect(() => {\n    if (workflowRun && pod_name === '') {\n      if (\n        Object.keys(JSON.parse(workflowRun.execution_data as string).nodes)\n          .length\n      ) {\n        const firstNodeId = JSON.parse(workflowRun.execution_data as string)\n          .nodes[\n          Object.keys(JSON.parse(workflowRun.execution_data as string).nodes)[0]\n        ].name;\n        nodeSelection.selectNode({\n          ...JSON.parse(workflowRun.execution_data as string).nodes[\n            firstNodeId\n          ],\n          pod_name: firstNodeId,\n        });\n      } else {\n        setWorkflowFailed(true);\n      }\n    }\n  }, [data]);\n\n  return (\n    <Scaffold>\n      <div className={classes.root}>\n        <div className={classes.button}>\n          <BackButton />\n        </div>\n        {/* If workflowRun data is present then display the workflowRun details */}\n        {workflowRun && pod_name !== '' && !loading ? (\n          <div>\n            <Typography data-cy=\"wfName\" className={classes.title}>\n              {t('workflowDetailsView.headerDesc')} {workflowRun.workflow_name}\n            </Typography>\n\n            {/* AppBar */}\n            <AppBar\n              position=\"static\"\n              color=\"default\"\n              className={classes.appBar}\n            >\n              <Tabs\n                value={workflowDetailsTabValue || 0}\n                onChange={handleChange}\n                TabIndicatorProps={{\n                  style: {\n                    backgroundColor: theme.palette.highlight,\n                  },\n                }}\n                variant=\"fullWidth\"\n              >\n                <StyledTab label=\"Graph View\" />\n                <StyledTab label=\"Table View\" />\n              </Tabs>\n            </AppBar>\n            <TabPanel value={workflowDetailsTabValue} index={0}>\n              <div className={classes.graphView}>\n                {/* Argo Workflow DAG Graph */}\n                <ArgoWorkflow\n                  nodes={\n                    (JSON.parse(workflowRun.execution_data) as ExecutionData)\n                      .nodes\n                  }\n                  setIsInfoToggled={setIsInfoToggled}\n                />\n                {/* Workflow Details and Experiment Logs */}\n                {isInfoToggled ? (\n                  <div>\n                    {pod_name !==\n                    JSON.parse(workflowRun.execution_data).nodes[\n                      Object.keys(\n                        JSON.parse(workflowRun.execution_data as string).nodes\n                      )[0]\n                    ].name ? (\n                      /* Node details and Logs */\n                      <WorkflowNodeInfo\n                        manifest={\n                          workflowSchedulesDetails?.workflow_manifest as string\n                        }\n                        setIsInfoToggled={setIsInfoToggled}\n                        cluster_id={workflowRun.cluster_id}\n                        workflow_run_id={workflowRun.workflow_run_id}\n                        data={\n                          JSON.parse(\n                            workflowRun.execution_data\n                          ) as ExecutionData\n                        }\n                      />\n                    ) : (\n                      /* Workflow Details */\n                      <WorkflowInfo\n                        tab={1}\n                        setIsInfoToggled={setIsInfoToggled}\n                        cluster_name={workflowRun.cluster_name}\n                        data={\n                          JSON.parse(\n                            workflowRun.execution_data\n                          ) as ExecutionData\n                        }\n                        resiliency_score={workflowRun.resiliency_score}\n                      />\n                    )}\n                  </div>\n                ) : null}\n              </div>\n            </TabPanel>\n            <TabPanel value={workflowDetailsTabValue} index={1}>\n              {/* Workflow Info */}\n              <WorkflowInfo\n                tab={2}\n                cluster_name={workflowRun.cluster_name}\n                data={JSON.parse(workflowRun.execution_data) as ExecutionData}\n                resiliency_score={workflowRun.resiliency_score}\n              />\n              {/* Table for all Node details */}\n              <NodeTable\n                manifest={workflowSchedulesDetails?.workflow_manifest as string}\n                data={JSON.parse(workflowRun.execution_data) as ExecutionData}\n                handleClose={() => setLogsModalOpen(true)}\n              />\n              {/* Modal for viewing logs of a node */}\n              <NodeLogsModal\n                logsOpen={logsModalOpen}\n                handleClose={() => setLogsModalOpen(false)}\n                cluster_id={workflowRun.cluster_id}\n                workflow_run_id={workflowRun.workflow_run_id}\n                data={JSON.parse(workflowRun.execution_data) as ExecutionData}\n                workflow_name={workflowRun.workflow_name}\n              />\n            </TabPanel>\n          </div>\n        ) : error ? (\n          <Typography>{t('workflowDetails.fetchError')}</Typography>\n        ) : isWorkflowFailed ? (\n          <Typography>{t('workflowDetails.workflowNotStarted')}</Typography>\n        ) : (\n          <Loader />\n        )}\n      </div>\n    </Scaffold>\n  );\n};\n\nexport default WorkflowDetails;\n"]},"metadata":{},"sourceType":"module"}