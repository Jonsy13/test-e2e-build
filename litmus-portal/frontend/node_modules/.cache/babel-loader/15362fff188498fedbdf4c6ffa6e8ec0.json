{"ast":null,"code":"import{useQuery}from'@apollo/client';import React from'react';import{useTranslation}from'react-i18next';import{useParams}from'react-router-dom';import DeveloperGuide from'../../../components/DeveloperGuide';import ExperimentHeader from'../ExperimentHeader';import ExperimentInfo from'../../../components/ExperimentInfo';import InstallChaos from'../../../components/InstallChaos';import Loader from'../../../components/Loader';import UsefulLinks from'../../../components/UsefulLinks';import config from'../../../config';import Scaffold from'../../../containers/layouts/Scaffold';import{GET_EXPERIMENT_DATA,GET_HUB_STATUS}from'../../../graphql';import{getProjectID}from'../../../utils/getSearchParams';import useStyles from'./styles';var MyHub=function MyHub(){var classes=useStyles();// Get Parameters from URL\nvar paramData=useParams();var projectID=getProjectID();// Get all MyHubs with status\nvar _useQuery=useQuery(GET_HUB_STATUS,{variables:{data:projectID},fetchPolicy:'cache-and-network'}),hubDetails=_useQuery.data;// Filter the selected MyHub\nvar UserHub=hubDetails===null||hubDetails===void 0?void 0:hubDetails.getHubStatus.filter(function(myHub){return paramData.hubname===myHub.HubName;})[0];// Query to get charts of selected MyHub\nvar _useQuery2=useQuery(GET_EXPERIMENT_DATA,{variables:{data:{HubName:paramData.hubname,ProjectID:projectID,ChartName:paramData.chart,ExperimentName:paramData.experiment}},fetchPolicy:'cache-and-network'}),data=_useQuery2.data,loading=_useQuery2.loading;var experimentData=data===null||data===void 0?void 0:data.getHubExperiment;// State for default video URL\nvar videoURL='';var video=data===null||data===void 0?void 0:data.getHubExperiment.Spec.Links.filter(function(l){return l.Name==='Video';})[0];videoURL=video?video.Url:'';// State for default icon URL\nvar experimentDefaultImagePath=\"\".concat(config.grahqlEndpoint,\"/icon\");var imageURL=\"\".concat(experimentDefaultImagePath,\"/\").concat(projectID,\"/\").concat(paramData.hubname,\"/\").concat(paramData.chart,\"/\").concat(paramData.experiment,\".png\");var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/React.createElement(Scaffold,null,loading?/*#__PURE__*/React.createElement(Loader,null):/*#__PURE__*/React.createElement(\"div\",{className:classes.rootContainer},/*#__PURE__*/React.createElement(\"div\",{className:classes.mainDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.headerDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.expMain},/*#__PURE__*/React.createElement(ExperimentHeader,{title:experimentData===null||experimentData===void 0?void 0:experimentData.Metadata.Name,description:experimentData===null||experimentData===void 0?void 0:experimentData.Spec.CategoryDescription.split('.')[0],urlToIcon:imageURL})))),paramData.chart.toLowerCase()!=='predefined'&&/*#__PURE__*/React.createElement(\"div\",{className:classes.developerDiv},/*#__PURE__*/React.createElement(DeveloperGuide,{expAvailable:true,header:t('myhub.experimentPage.congrats'),description:\"\"})),/*#__PURE__*/React.createElement(\"div\",{className:classes.detailDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.expInfo},/*#__PURE__*/React.createElement(\"div\",{className:classes.expInfoDiv},/*#__PURE__*/React.createElement(ExperimentInfo,{description:experimentData===null||experimentData===void 0?void 0:experimentData.Spec.CategoryDescription,videoURL:videoURL}),/*#__PURE__*/React.createElement(\"div\",{className:classes.installExp},/*#__PURE__*/React.createElement(\"hr\",{className:classes.horizontalLine}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.note},\"PRE-REQUISITE:\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.linkText},/*#__PURE__*/React.createElement(\"a\",{href:\"https://docs.litmuschaos.io/docs/getstarted/\",target:\"_\"},\"Install Litmus Operator\"),\": a tool for injecting Chaos Experiments\")),/*#__PURE__*/React.createElement(\"hr\",{className:classes.horizontalLine}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.info},/*#__PURE__*/React.createElement(UsefulLinks,{links:experimentData===null||experimentData===void 0?void 0:experimentData.Spec.Links,maintainers:experimentData===null||experimentData===void 0?void 0:experimentData.Spec.Maintainers,platforms:experimentData===null||experimentData===void 0?void 0:experimentData.Spec.Platforms,maturity:experimentData===null||experimentData===void 0?void 0:experimentData.Spec.Maturity}))),paramData.chart.toLowerCase()!=='predefined'?/*#__PURE__*/React.createElement(\"div\",{className:classes.installLinks},/*#__PURE__*/React.createElement(InstallChaos,{title:t('myhub.experimentPage.installExp'),description:t('myhub.experimentPage.installExpDesc'),yamlLink:\"\".concat(UserHub===null||UserHub===void 0?void 0:UserHub.RepoURL,\"/raw/\").concat(UserHub===null||UserHub===void 0?void 0:UserHub.RepoBranch,\"/charts/\").concat(paramData.chart,\"/\").concat(paramData.experiment,\"/experiment.yaml\")}),/*#__PURE__*/React.createElement(InstallChaos,{title:t('myhub.experimentPage.installRBAC'),description:t('myhub.experimentPage.installRBACDesc'),yamlLink:\"\".concat(UserHub===null||UserHub===void 0?void 0:UserHub.RepoURL,\"/raw/\").concat(UserHub===null||UserHub===void 0?void 0:UserHub.RepoBranch,\"/charts/\").concat(paramData.chart,\"/\").concat(paramData.experiment,\"/rbac.yaml\")}),/*#__PURE__*/React.createElement(InstallChaos,{title:t('myhub.experimentPage.installEngine'),description:t('myhub.experimentPage.installEngineDesc'),yamlLink:\"\".concat(UserHub===null||UserHub===void 0?void 0:UserHub.RepoURL,\"/raw/\").concat(UserHub===null||UserHub===void 0?void 0:UserHub.RepoBranch,\"/charts/\").concat(paramData.chart,\"/\").concat(paramData.experiment,\"/engine.yaml\")})):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(InstallChaos,{title:t('myhub.experimentPage.checkPreDefined'),description:t('myhub.experimentPage.checkPreDefinedDesc'),yamlLink:\"\".concat(UserHub===null||UserHub===void 0?void 0:UserHub.RepoURL,\"/raw/\").concat(UserHub===null||UserHub===void 0?void 0:UserHub.RepoBranch,\"/workflows/\").concat(paramData.experiment),isPredefined:true})))));};export default MyHub;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/MyHub/MyHubExperiment/index.tsx"],"names":["useQuery","React","useTranslation","useParams","DeveloperGuide","ExperimentHeader","ExperimentInfo","InstallChaos","Loader","UsefulLinks","config","Scaffold","GET_EXPERIMENT_DATA","GET_HUB_STATUS","getProjectID","useStyles","MyHub","classes","paramData","projectID","variables","data","fetchPolicy","hubDetails","UserHub","getHubStatus","filter","myHub","hubname","HubName","ProjectID","ChartName","chart","ExperimentName","experiment","loading","experimentData","getHubExperiment","videoURL","video","Spec","Links","l","Name","Url","experimentDefaultImagePath","grahqlEndpoint","imageURL","t","rootContainer","mainDiv","headerDiv","expMain","Metadata","CategoryDescription","split","toLowerCase","developerDiv","detailDiv","expInfo","expInfoDiv","installExp","horizontalLine","note","linkText","info","Maintainers","Platforms","Maturity","installLinks","RepoURL","RepoBranch"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport DeveloperGuide from '../../../components/DeveloperGuide';\nimport ExperimentHeader from '../ExperimentHeader';\nimport ExperimentInfo from '../../../components/ExperimentInfo';\nimport InstallChaos from '../../../components/InstallChaos';\nimport Loader from '../../../components/Loader';\nimport UsefulLinks from '../../../components/UsefulLinks';\nimport config from '../../../config';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport { GET_EXPERIMENT_DATA, GET_HUB_STATUS } from '../../../graphql';\nimport { ExperimentDetail, HubStatus, Link } from '../../../models/redux/myhub';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface URLParams {\n  chart: string;\n  experiment: string;\n  hubname: string;\n}\n\nconst MyHub = () => {\n  const classes = useStyles();\n  // Get Parameters from URL\n  const paramData: URLParams = useParams();\n  const projectID = getProjectID();\n  // Get all MyHubs with status\n  const { data: hubDetails } = useQuery<HubStatus>(GET_HUB_STATUS, {\n    variables: { data: projectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Filter the selected MyHub\n  const UserHub = hubDetails?.getHubStatus.filter((myHub) => {\n    return paramData.hubname === myHub.HubName;\n  })[0];\n\n  // Query to get charts of selected MyHub\n  const { data, loading } = useQuery<ExperimentDetail>(GET_EXPERIMENT_DATA, {\n    variables: {\n      data: {\n        HubName: paramData.hubname,\n        ProjectID: projectID,\n        ChartName: paramData.chart,\n        ExperimentName: paramData.experiment,\n      },\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n  const experimentData = data?.getHubExperiment;\n\n  // State for default video URL\n  let videoURL: string = '';\n  const video = data?.getHubExperiment.Spec.Links.filter(\n    (l: Link) => l.Name === 'Video'\n  )[0];\n  videoURL = video ? video.Url : '';\n\n  // State for default icon URL\n  const experimentDefaultImagePath = `${config.grahqlEndpoint}/icon`;\n  const imageURL = `${experimentDefaultImagePath}/${projectID}/${paramData.hubname}/${paramData.chart}/${paramData.experiment}.png`;\n\n  const { t } = useTranslation();\n\n  return (\n    <Scaffold>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className={classes.rootContainer}>\n          <div className={classes.mainDiv}>\n            <div className={classes.headerDiv}>\n              {/* Exp title + Description */}\n              <div className={classes.expMain}>\n                <ExperimentHeader\n                  title={experimentData?.Metadata.Name}\n                  description={\n                    experimentData?.Spec.CategoryDescription.split('.')[0]\n                  }\n                  urlToIcon={imageURL}\n                />\n              </div>\n            </div>\n          </div>\n          {/* Developer Guide Component */}\n          {paramData.chart.toLowerCase() !== 'predefined' && (\n            <div className={classes.developerDiv}>\n              <DeveloperGuide\n                expAvailable\n                header={t('myhub.experimentPage.congrats')}\n                description=\"\"\n              />\n            </div>\n          )}\n          {/* Experiment Info */}\n          <div className={classes.detailDiv}>\n            <div className={classes.expInfo}>\n              <div className={classes.expInfoDiv}>\n                <ExperimentInfo\n                  description={experimentData?.Spec.CategoryDescription}\n                  videoURL={videoURL}\n                />\n                <div className={classes.installExp}>\n                  <hr className={classes.horizontalLine} />\n                  <div>\n                    <div className={classes.note}>PRE-REQUISITE:</div>\n                    <div className={classes.linkText}>\n                      <a\n                        href=\"https://docs.litmuschaos.io/docs/getstarted/\"\n                        target=\"_\"\n                      >\n                        Install Litmus Operator\n                      </a>\n                      : a tool for injecting Chaos Experiments\n                    </div>\n                  </div>\n                  <hr className={classes.horizontalLine} />\n                </div>\n              </div>\n              {/* Useful Links Section */}\n              <div className={classes.info}>\n                <UsefulLinks\n                  links={experimentData?.Spec.Links}\n                  maintainers={experimentData?.Spec.Maintainers}\n                  platforms={experimentData?.Spec.Platforms}\n                  maturity={experimentData?.Spec.Maturity}\n                />\n              </div>\n            </div>\n            {/* Install Chaos Section */}\n            {paramData.chart.toLowerCase() !== 'predefined' ? (\n              <div className={classes.installLinks}>\n                <InstallChaos\n                  title={t('myhub.experimentPage.installExp')}\n                  description={t('myhub.experimentPage.installExpDesc')}\n                  yamlLink={`${UserHub?.RepoURL}/raw/${UserHub?.RepoBranch}/charts/${paramData.chart}/${paramData.experiment}/experiment.yaml`}\n                />\n                <InstallChaos\n                  title={t('myhub.experimentPage.installRBAC')}\n                  description={t('myhub.experimentPage.installRBACDesc')}\n                  yamlLink={`${UserHub?.RepoURL}/raw/${UserHub?.RepoBranch}/charts/${paramData.chart}/${paramData.experiment}/rbac.yaml`}\n                />\n                <InstallChaos\n                  title={t('myhub.experimentPage.installEngine')}\n                  description={t('myhub.experimentPage.installEngineDesc')}\n                  yamlLink={`${UserHub?.RepoURL}/raw/${UserHub?.RepoBranch}/charts/${paramData.chart}/${paramData.experiment}/engine.yaml`}\n                />\n              </div>\n            ) : (\n              <>\n                <InstallChaos\n                  title={t('myhub.experimentPage.checkPreDefined')}\n                  description={t('myhub.experimentPage.checkPreDefinedDesc')}\n                  yamlLink={`${UserHub?.RepoURL}/raw/${UserHub?.RepoBranch}/workflows/${paramData.experiment}`}\n                  isPredefined\n                />\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </Scaffold>\n  );\n};\n\nexport default MyHub;\n"]},"metadata":{},"sourceType":"module"}