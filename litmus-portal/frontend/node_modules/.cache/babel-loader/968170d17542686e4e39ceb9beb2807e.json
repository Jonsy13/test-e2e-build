{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/UserManagementTab/EditUser/ResetModal/index.tsx\";\n\nimport { Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, Modal } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../../../components/Loader';\nimport config from '../../../../../config';\nimport { getToken } from '../../../../../utils/auth';\nimport useStyles from './styles'; // props for ResetModal component\n\n// ResetModal displays modal for resetting the password\nvar ResetModal = function ResetModal(_ref) {\n  var resetPossible = _ref.resetPossible,\n      username = _ref.username,\n      new_password = _ref.new_password,\n      handleModal = _ref.handleModal;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      error = _React$useState6[0],\n      setError = _React$useState6[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleClick = function handleClick() {\n    setLoading(true);\n    fetch(\"\".concat(config.auth.url, \"/reset/password\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \".concat(getToken())\n      },\n      body: JSON.stringify({\n        username: username,\n        new_password: new_password\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if ('error' in data) {\n        setError(data.error_description);\n      } else {\n        setError('');\n      }\n\n      setLoading(false);\n      setOpen(true);\n    }).catch(function (err) {\n      console.error(err);\n      setError(err.message);\n\n      if (resetPossible) {\n        setLoading(false);\n        setOpen(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    variant: \"success\",\n    disabled: !(new_password.length && !loading),\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, t('settings.userManagementTab.editUser.resetModal.button.save')))), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    modalActions: /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"\\u2715\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, error.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.errDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, t('settings.userManagementTab.editUser.resetModal.error')), ' ', t('settings.userManagementTab.editUser.resetModal.headerErr'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textSecondError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typoSub,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, t('settings.userManagementTab.editUser.resetModal.error'), \":\", ' ', error)), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"done\",\n    className: classes.buttonModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    disabled: false,\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, t('settings.userManagementTab.editUser.resetModal.button.done'))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/checkmark.svg\",\n    alt: \"checkmark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textSucess,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, t('settings.userManagementTab.editUser.resetModal.header'), ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, t('settings.userManagementTab.editUser.resetModal.headerStrong')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.text1Sucess,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typoSub,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, t('settings.userManagementTab.editUser.resetModal.info'))), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"done\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    disabled: false,\n    onClick: handleModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, t('settings.userManagementTab.editUser.resetModal.button.done'))))));\n};\n\nexport default ResetModal;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/UserManagementTab/EditUser/ResetModal/index.tsx"],"names":["Typography","ButtonFilled","ButtonOutlined","Modal","React","useTranslation","Loader","config","getToken","useStyles","ResetModal","resetPossible","username","new_password","handleModal","classes","t","useState","open","setOpen","loading","setLoading","error","setError","handleClose","handleClick","fetch","auth","url","method","headers","Authorization","body","JSON","stringify","then","response","json","data","error_description","catch","err","console","message","length","errDiv","textError","typo","textSecondError","typoSub","buttonModal","textSucess","text1Sucess"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, Modal } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../../../components/Loader';\nimport config from '../../../../../config';\nimport { getToken } from '../../../../../utils/auth';\nimport useStyles from './styles';\n\n// props for ResetModal component\ninterface ResetModalProps {\n  resetPossible: boolean;\n  new_password: string;\n  username: string;\n  handleModal: () => void;\n}\n\n// ResetModal displays modal for resetting the password\nconst ResetModal: React.FC<ResetModalProps> = ({\n  resetPossible,\n  username,\n  new_password,\n  handleModal,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState<string>('');\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClick = () => {\n    setLoading(true);\n    fetch(`${config.auth.url}/reset/password`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${getToken()}`,\n      },\n      body: JSON.stringify({ username, new_password }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if ('error' in data) {\n          setError(data.error_description as string);\n        } else {\n          setError('');\n        }\n        setLoading(false);\n        setOpen(true);\n      })\n      .catch((err) => {\n        console.error(err);\n        setError(err.message as string);\n        if (resetPossible) {\n          setLoading(false);\n          setOpen(true);\n        }\n      });\n  };\n\n  return (\n    <div>\n      <div data-cy=\"edit\">\n        <ButtonFilled\n          variant=\"success\"\n          disabled={!(new_password.length && !loading)}\n          onClick={handleClick}\n        >\n          {loading ? (\n            <div>\n              <Loader size={20} />\n            </div>\n          ) : (\n            <>\n              {t('settings.userManagementTab.editUser.resetModal.button.save')}\n            </>\n          )}\n        </ButtonFilled>\n      </div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        modalActions={\n          <ButtonOutlined onClick={handleClose}>&#x2715;</ButtonOutlined>\n        }\n      >\n        {error.length ? (\n          <div className={classes.errDiv}>\n            <div className={classes.textError}>\n              <Typography className={classes.typo} align=\"center\">\n                <strong>\n                  {t('settings.userManagementTab.editUser.resetModal.error')}\n                </strong>{' '}\n                {t('settings.userManagementTab.editUser.resetModal.headerErr')}\n              </Typography>\n            </div>\n            <div className={classes.textSecondError}>\n              <Typography className={classes.typoSub}>\n                {t('settings.userManagementTab.editUser.resetModal.error')}:{' '}\n                {error}\n              </Typography>\n            </div>\n            <div data-cy=\"done\" className={classes.buttonModal}>\n              <ButtonFilled disabled={false} onClick={handleClose}>\n                <>\n                  {t(\n                    'settings.userManagementTab.editUser.resetModal.button.done'\n                  )}\n                </>\n              </ButtonFilled>\n            </div>\n          </div>\n        ) : (\n          <div className={classes.body}>\n            <img src=\"./icons/checkmark.svg\" alt=\"checkmark\" />\n            <div className={classes.textSucess}>\n              <Typography className={classes.typo} align=\"center\">\n                {t('settings.userManagementTab.editUser.resetModal.header')}{' '}\n                <strong>\n                  {t(\n                    'settings.userManagementTab.editUser.resetModal.headerStrong'\n                  )}\n                </strong>\n              </Typography>\n            </div>\n            <div className={classes.text1Sucess}>\n              <Typography className={classes.typoSub} align=\"center\">\n                {t('settings.userManagementTab.editUser.resetModal.info')}\n              </Typography>\n            </div>\n            <div data-cy=\"done\">\n              <ButtonFilled disabled={false} onClick={handleModal}>\n                {t(\n                  'settings.userManagementTab.editUser.resetModal.button.done'\n                )}\n              </ButtonFilled>\n            </div>\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n};\nexport default ResetModal;\n"]},"metadata":{},"sourceType":"module"}