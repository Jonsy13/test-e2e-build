{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useQuery}from'@apollo/client';import{IconButton,List,ListItem,ListItemIcon,ListItemSecondaryAction,ListItemText}from'@material-ui/core';import DoneIcon from'@material-ui/icons/Done';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import{LIST_PROJECTS}from'../../graphql';import{history}from'../../redux/configureStore';import{getUserId}from'../../utils/auth';import{getProjectID}from'../../utils/getSearchParams';import Loader from'../Loader';import useStyles from'./styles';var CustomisedListItem=function CustomisedListItem(_ref){var handleClick=_ref.handleClick,label=_ref.label,secondaryLabel=_ref.secondaryLabel,selected=_ref.selected;var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),copying=_useState2[0],setCopying=_useState2[1];function fallbackCopyTextToClipboard(text){// eslint-disable-next-line no-alert\nwindow.prompt('Copy to clipboard: Ctrl+C, Enter',text);}function copyTextToClipboard(text){if(!navigator.clipboard){fallbackCopyTextToClipboard(text);return;}setCopying(true);navigator.clipboard.writeText(text).catch(function(err){return console.error('Async: Could not copy text: ',err);});setTimeout(function(){return setCopying(false);},3000);}return/*#__PURE__*/React.createElement(ListItem,{button:true,selected:selected,onClick:handleClick,className:\"\".concat(classes.projectListItem,\" \").concat(selected?classes.active:'')},/*#__PURE__*/React.createElement(ListItemIcon,null,selected?/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/selectedProject.svg\",alt:\"Selected Project\"}):/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/nonSelectedproject.svg\",alt:\"Un-selected Project\"})),/*#__PURE__*/React.createElement(ListItemText,{primary:label,secondary:\"Project ID: \".concat(secondaryLabel)}),/*#__PURE__*/React.createElement(ListItemSecondaryAction,null,/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){return copyTextToClipboard(\"\".concat(secondaryLabel));},edge:\"end\",\"aria-label\":\"copyProject\"},!copying?/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/copyProjectID.svg\",alt:\"Copy project ID\"}):/*#__PURE__*/React.createElement(DoneIcon,null))));};var ProjectDropdownItems=function ProjectDropdownItems(){var _data$listProjects;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useQuery=useQuery(LIST_PROJECTS),data=_useQuery.data,loading=_useQuery.loading;var projects=(_data$listProjects=data===null||data===void 0?void 0:data.listProjects)!==null&&_data$listProjects!==void 0?_data$listProjects:[];var baseRoute=window.location.pathname.split('/')[1];var userID=getUserId();var projectID=getProjectID();var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),myProjects=_useState4[0],setMyProjects=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),otherProjects=_useState6[0],setOtherProjects=_useState6[1];useEffect(function(){var projectOwner=[];var projectOther=[];projects.map(function(project){return project.members.forEach(function(member){if(member.user_id===userID&&member.role==='Owner'){projectOwner.push(project);}else if(member.user_id===userID&&member.role!=='Owner'&&member.invitation==='Accepted'){projectOther.push({projectDetails:project,currentUserProjectRole:member.role});}});});setMyProjects(projectOwner);setOtherProjects(projectOther);},[data]);return/*#__PURE__*/React.createElement(\"div\",{className:classes.projectPopover,\"data-cy\":\"headerProjectDropdownItems\"},loading?/*#__PURE__*/React.createElement(Loader,null):/*#__PURE__*/React.createElement(List,null,/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(ListItemText,{id:\"hint\",primary:t('header.projectDropdown.myProjects')})),myProjects.length===0?/*#__PURE__*/React.createElement(ListItem,{\"data-cy\":\"project\"},/*#__PURE__*/React.createElement(ListItemText,{primary:t('header.projectDropdown.noMyProjects')})):myProjects.map(function(project){return/*#__PURE__*/React.createElement(CustomisedListItem,{key:\"home\",handleClick:function handleClick(){history.push({pathname:\"/\".concat(baseRoute),search:\"?projectID=\".concat(project.id,\"&projectRole=Owner\")});},label:project.name,secondaryLabel:project.id,selected:projectID===project.id});}),/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(ListItemText,{id:\"hint\",primary:t('header.projectDropdown.otherProjects')})),otherProjects.length===0?/*#__PURE__*/React.createElement(ListItem,{\"data-cy\":\"project\"},/*#__PURE__*/React.createElement(ListItemText,{primary:t('header.projectDropdown.noProjectsOther')})):otherProjects.map(function(project){return/*#__PURE__*/React.createElement(CustomisedListItem,{key:\"home\",handleClick:function handleClick(){history.push({pathname:\"/home\",search:\"?projectID=\".concat(project.projectDetails.id,\"&projectRole=\").concat(project.currentUserProjectRole)});},label:project.projectDetails.name,secondaryLabel:project.projectDetails.id,selected:projectID===project.projectDetails.id});})));};export default ProjectDropdownItems;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/Header/ProjectDropDownItems.tsx"],"names":["useQuery","IconButton","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","DoneIcon","React","useEffect","useState","useTranslation","LIST_PROJECTS","history","getUserId","getProjectID","Loader","useStyles","CustomisedListItem","handleClick","label","secondaryLabel","selected","classes","copying","setCopying","fallbackCopyTextToClipboard","text","window","prompt","copyTextToClipboard","navigator","clipboard","writeText","catch","err","console","error","setTimeout","projectListItem","active","ProjectDropdownItems","t","data","loading","projects","listProjects","baseRoute","location","pathname","split","userID","projectID","myProjects","setMyProjects","otherProjects","setOtherProjects","projectOwner","projectOther","map","project","members","forEach","member","user_id","role","push","invitation","projectDetails","currentUserProjectRole","projectPopover","length","search","id","name"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport {\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n} from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LIST_PROJECTS } from '../../graphql';\nimport { Member, Project, Projects } from '../../models/graphql/user';\nimport { history } from '../../redux/configureStore';\nimport { getUserId } from '../../utils/auth';\nimport { getProjectID } from '../../utils/getSearchParams';\nimport Loader from '../Loader';\nimport useStyles from './styles';\n\ninterface otherProjectsType {\n  projectDetails: Project;\n  currentUserProjectRole: string;\n}\n\ninterface CustomisedListItemProps {\n  handleClick: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  label: string;\n  secondaryLabel: string;\n  selected: boolean;\n}\n\nconst CustomisedListItem: React.FC<CustomisedListItemProps> = ({\n  handleClick,\n  label,\n  secondaryLabel,\n  selected,\n}) => {\n  const classes = useStyles();\n  const [copying, setCopying] = useState<boolean>(false);\n\n  function fallbackCopyTextToClipboard(text: string) {\n    // eslint-disable-next-line no-alert\n    window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n  }\n\n  function copyTextToClipboard(text: string) {\n    if (!navigator.clipboard) {\n      fallbackCopyTextToClipboard(text);\n      return;\n    }\n    setCopying(true);\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n\n    setTimeout(() => setCopying(false), 3000);\n  }\n\n  return (\n    <ListItem\n      button\n      selected={selected}\n      onClick={handleClick}\n      className={`${classes.projectListItem} ${selected ? classes.active : ''}`}\n    >\n      <ListItemIcon>\n        {selected ? (\n          <img src=\"/icons/selectedProject.svg\" alt=\"Selected Project\" />\n        ) : (\n          <img src=\"/icons/nonSelectedproject.svg\" alt=\"Un-selected Project\" />\n        )}\n      </ListItemIcon>\n      <ListItemText\n        primary={label}\n        secondary={`Project ID: ${secondaryLabel}`}\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          onClick={() => copyTextToClipboard(`${secondaryLabel}`)}\n          edge=\"end\"\n          aria-label=\"copyProject\"\n        >\n          {!copying ? (\n            <img src=\"/icons/copyProjectID.svg\" alt=\"Copy project ID\" />\n          ) : (\n            <DoneIcon />\n          )}\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nconst ProjectDropdownItems: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { data, loading } = useQuery<Projects>(LIST_PROJECTS);\n  const projects = data?.listProjects ?? [];\n\n  const baseRoute = window.location.pathname.split('/')[1];\n\n  const userID = getUserId();\n  const projectID = getProjectID();\n\n  const [myProjects, setMyProjects] = useState<Project[]>([]);\n  const [otherProjects, setOtherProjects] = useState<otherProjectsType[]>([]);\n\n  useEffect(() => {\n    const projectOwner: Project[] = [];\n    const projectOther: otherProjectsType[] = [];\n\n    projects.map((project) => {\n      return project.members.forEach((member: Member) => {\n        if (member.user_id === userID && member.role === 'Owner') {\n          projectOwner.push(project);\n        } else if (\n          member.user_id === userID &&\n          member.role !== 'Owner' &&\n          member.invitation === 'Accepted'\n        ) {\n          projectOther.push({\n            projectDetails: project,\n            currentUserProjectRole: member.role,\n          });\n        }\n      });\n    });\n    setMyProjects(projectOwner);\n    setOtherProjects(projectOther);\n  }, [data]);\n\n  return (\n    <div\n      className={classes.projectPopover}\n      data-cy=\"headerProjectDropdownItems\"\n    >\n      {loading ? (\n        <Loader />\n      ) : (\n        <List>\n          <ListItem>\n            <ListItemText\n              id=\"hint\"\n              primary={t('header.projectDropdown.myProjects')}\n            />\n          </ListItem>\n          {myProjects.length === 0 ? (\n            <ListItem data-cy=\"project\">\n              <ListItemText\n                primary={t('header.projectDropdown.noMyProjects')}\n              />\n            </ListItem>\n          ) : (\n            myProjects.map((project) => {\n              return (\n                <CustomisedListItem\n                  key=\"home\"\n                  handleClick={() => {\n                    history.push({\n                      pathname: `/${baseRoute}`,\n                      search: `?projectID=${project.id}&projectRole=Owner`,\n                    });\n                  }}\n                  label={project.name}\n                  secondaryLabel={project.id}\n                  selected={projectID === project.id}\n                />\n              );\n            })\n          )}\n          <ListItem>\n            <ListItemText\n              id=\"hint\"\n              primary={t('header.projectDropdown.otherProjects')}\n            />\n          </ListItem>\n          {otherProjects.length === 0 ? (\n            <ListItem data-cy=\"project\">\n              <ListItemText\n                primary={t('header.projectDropdown.noProjectsOther')}\n              />\n            </ListItem>\n          ) : (\n            otherProjects.map((project) => {\n              return (\n                <CustomisedListItem\n                  key=\"home\"\n                  handleClick={() => {\n                    history.push({\n                      pathname: `/home`,\n                      search: `?projectID=${project.projectDetails.id}&projectRole=${project.currentUserProjectRole}`,\n                    });\n                  }}\n                  label={project.projectDetails.name}\n                  secondaryLabel={project.projectDetails.id}\n                  selected={projectID === project.projectDetails.id}\n                />\n              );\n            })\n          )}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectDropdownItems;\n"]},"metadata":{},"sourceType":"module"}