{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Typography}from'@material-ui/core';import Done from'@material-ui/icons/DoneAllTwoTone';import React,{useState}from'react';import{useTranslation}from'react-i18next';import{ButtonOutlined}from'litmus-ui';import useStyles from'./styles';var InstallChaos=function InstallChaos(_ref){var title=_ref.title,description=_ref.description,yamlLink=_ref.yamlLink,isPredefined=_ref.isPredefined;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),copying=_useState2[0],setCopying=_useState2[1];var yaml=isPredefined?yamlLink:\"kubectl apply -f \".concat(yamlLink);function copyTextToClipboard(text){if(!navigator.clipboard){console.error('Oops Could not copy text: ');return;}setCopying(true);navigator.clipboard.writeText(text).catch(function(err){return console.error('Async: Could not copy text: ',err);});setTimeout(function(){return setCopying(false);},3000);}return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.title},title),/*#__PURE__*/React.createElement(\"div\",{className:classes.description},description),/*#__PURE__*/React.createElement(\"div\",{className:classes.linkBox},/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",className:classes.yamlLink},isPredefined?yamlLink:\"kubectl apply -f \".concat(yamlLink)),/*#__PURE__*/React.createElement(\"div\",{className:classes.buttonBox},/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){return copyTextToClipboard(yaml);}},!copying?/*#__PURE__*/React.createElement(\"div\",{className:classes.rowDiv},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/copy.svg\",className:classes.copyBtnImg,alt:\"copy\"}),/*#__PURE__*/React.createElement(Typography,null,t('myhub.installChaos.copy'))):/*#__PURE__*/React.createElement(\"div\",{className:classes.rowDiv},/*#__PURE__*/React.createElement(Done,{className:classes.done}),/*#__PURE__*/React.createElement(Typography,null,t('myhub.installChaos.copied')))))));};export default InstallChaos;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/InstallChaos/index.tsx"],"names":["Typography","Done","React","useState","useTranslation","ButtonOutlined","useStyles","InstallChaos","title","description","yamlLink","isPredefined","classes","t","copying","setCopying","yaml","copyTextToClipboard","text","navigator","clipboard","console","error","writeText","catch","err","setTimeout","root","linkBox","buttonBox","rowDiv","copyBtnImg","done"],"mappings":"mLAAA,OAASA,UAAT,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,mCAAjB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CASA,GAAMC,CAAAA,YAAoC,CAAG,QAAvCA,CAAAA,YAAuC,MAKvC,IAJJC,CAAAA,KAII,MAJJA,KAII,CAHJC,WAGI,MAHJA,WAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,YACI,MADJA,YACI,CACJ,GAAMC,CAAAA,OAAO,CAAGN,SAAS,EAAzB,CACA,oBAAcF,cAAc,EAA5B,CAAQS,CAAR,iBAAQA,CAAR,CACA,cAA8BV,QAAQ,CAAC,KAAD,CAAtC,wCAAOW,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,IAAI,CAAGL,YAAY,CAAGD,QAAH,4BAAkCA,QAAlC,CAAzB,CAEA,QAASO,CAAAA,mBAAT,CAA6BC,IAA7B,CAA2C,CACzC,GAAI,CAACC,SAAS,CAACC,SAAf,CAA0B,CACxBC,OAAO,CAACC,KAAR,CAAc,4BAAd,EACA,OACD,CACDP,UAAU,CAAC,IAAD,CAAV,CACAI,SAAS,CAACC,SAAV,CACGG,SADH,CACaL,IADb,EAEGM,KAFH,CAES,SAACC,GAAD,QAASJ,CAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,CAA8CG,GAA9C,CAAT,EAFT,EAIAC,UAAU,CAAC,iBAAMX,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAAD,CAA0B,IAA1B,CAAV,CACD,CAED,mBACE,2BAAK,SAAS,CAAEH,OAAO,CAACe,IAAxB,eACE,2BAAK,SAAS,CAAEf,OAAO,CAACJ,KAAxB,EAAgCA,KAAhC,CADF,cAEE,2BAAK,SAAS,CAAEI,OAAO,CAACH,WAAxB,EAAsCA,WAAtC,CAFF,cAGE,2BAAK,SAAS,CAAEG,OAAO,CAACgB,OAAxB,eACE,oBAAC,UAAD,EAAY,OAAO,CAAC,WAApB,CAAgC,SAAS,CAAEhB,OAAO,CAACF,QAAnD,EACGC,YAAY,CAAGD,QAAH,4BAAkCA,QAAlC,CADf,CADF,cAKE,2BAAK,SAAS,CAAEE,OAAO,CAACiB,SAAxB,eACE,oBAAC,cAAD,EAAgB,OAAO,CAAE,yBAAMZ,CAAAA,mBAAmB,CAACD,IAAD,CAAzB,EAAzB,EACG,CAACF,OAAD,cACC,2BAAK,SAAS,CAAEF,OAAO,CAACkB,MAAxB,eACE,2BACE,GAAG,CAAC,iBADN,CAEE,SAAS,CAAElB,OAAO,CAACmB,UAFrB,CAGE,GAAG,CAAC,MAHN,EADF,cAME,oBAAC,UAAD,MAAalB,CAAC,CAAC,yBAAD,CAAd,CANF,CADD,cAUC,2BAAK,SAAS,CAAED,OAAO,CAACkB,MAAxB,eACE,oBAAC,IAAD,EAAM,SAAS,CAAElB,OAAO,CAACoB,IAAzB,EADF,cAEE,oBAAC,UAAD,MAAanB,CAAC,CAAC,2BAAD,CAAd,CAFF,CAXJ,CADF,CALF,CAHF,CADF,CA+BD,CAvDD,CAwDA,cAAeN,CAAAA,YAAf","sourcesContent":["import { Typography } from '@material-ui/core';\nimport Done from '@material-ui/icons/DoneAllTwoTone';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ButtonOutlined } from 'litmus-ui';\nimport useStyles from './styles';\n\ninterface InstallProps {\n  title: string;\n  description: string;\n  yamlLink: string;\n  isPredefined?: boolean;\n}\n\nconst InstallChaos: React.FC<InstallProps> = ({\n  title,\n  description,\n  yamlLink,\n  isPredefined,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [copying, setCopying] = useState(false);\n  const yaml = isPredefined ? yamlLink : `kubectl apply -f ${yamlLink}`;\n\n  function copyTextToClipboard(text: string) {\n    if (!navigator.clipboard) {\n      console.error('Oops Could not copy text: ');\n      return;\n    }\n    setCopying(true);\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n\n    setTimeout(() => setCopying(false), 3000);\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>{title}</div>\n      <div className={classes.description}>{description}</div>\n      <div className={classes.linkBox}>\n        <Typography variant=\"subtitle1\" className={classes.yamlLink}>\n          {isPredefined ? yamlLink : `kubectl apply -f ${yamlLink}`}\n        </Typography>\n\n        <div className={classes.buttonBox}>\n          <ButtonOutlined onClick={() => copyTextToClipboard(yaml)}>\n            {!copying ? (\n              <div className={classes.rowDiv}>\n                <img\n                  src=\"/icons/copy.svg\"\n                  className={classes.copyBtnImg}\n                  alt=\"copy\"\n                />\n                <Typography>{t('myhub.installChaos.copy')}</Typography>\n              </div>\n            ) : (\n              <div className={classes.rowDiv}>\n                <Done className={classes.done} />\n                <Typography>{t('myhub.installChaos.copied')}</Typography>\n              </div>\n            )}\n          </ButtonOutlined>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InstallChaos;\n"]},"metadata":{},"sourceType":"module"}