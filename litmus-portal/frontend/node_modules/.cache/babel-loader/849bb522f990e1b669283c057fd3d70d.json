{"ast":null,"code":"import{useQuery}from'@apollo/client';import React from'react';import{useTranslation}from'react-i18next';import Loader from'../../../components/Loader';import{GET_GLOBAL_STATS}from'../../../graphql';import Card from'./Cards';import useStyles from'./styles';var UsageStats=function UsageStats(){var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useQuery=useQuery(GET_GLOBAL_STATS,{variables:{query:{DateRange:{start_date:Math.trunc(new Date(new Date().getFullYear(),new Date().getMonth(),1).getTime()/1000).toString(),end_date:Math.trunc(new Date().getTime()/1000).toString()}}}}),data=_useQuery.data,loading=_useQuery.loading;return/*#__PURE__*/React.createElement(\"div\",{className:classes.cardDiv},loading?/*#__PURE__*/React.createElement(Loader,null):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,{image:\"./icons/users.svg\",header:t('usage.card.userHeader'),subtitle:t('usage.card.userSubtitle'),color:classes.usersData,data:data===null||data===void 0?void 0:data.UsageQuery.TotalCount.Users}),/*#__PURE__*/React.createElement(Card,{image:\"./icons/viewProjects.svg\",header:t('usage.card.projectHeader'),subtitle:t('usage.card.projectSubtitle'),color:classes.projectData,data:data===null||data===void 0?void 0:data.UsageQuery.TotalCount.Projects}),/*#__PURE__*/React.createElement(Card,{image:\"./icons/targets.svg\",header:t('usage.card.agentHeader'),subtitle:t('usage.card.agentSubtitle'),color:classes.agentsData,data:data===null||data===void 0?void 0:data.UsageQuery.TotalCount.Agents.Total,split:true,subData:[{option1:data===null||data===void 0?void 0:data.UsageQuery.TotalCount.Agents.Cluster,option2:\"\".concat(t('usage.card.agentClusterScope'))},{option1:data===null||data===void 0?void 0:data.UsageQuery.TotalCount.Agents.Ns,option2:\"\".concat(t('usage.card.agentNamespaceScope'))}]}),/*#__PURE__*/React.createElement(Card,{image:\"./icons/workflow-calender.svg\",header:t('usage.card.workflowScheduleHeader'),subtitle:t('usage.card.workflowScheduleSubtitle'),color:classes.schedules,data:data===null||data===void 0?void 0:data.UsageQuery.TotalCount.Workflows.Schedules}),/*#__PURE__*/React.createElement(Card,{image:\"./icons/workflows-outline.svg\",header:t('usage.card.workflowRunHeader'),subtitle:t('usage.card.workflowRunSubtitle'),color:classes.wfRuns,data:data===null||data===void 0?void 0:data.UsageQuery.TotalCount.Workflows.Runs}),/*#__PURE__*/React.createElement(Card,{image:\"./icons/myhub.svg\",header:t('usage.card.experimentRunHeader'),subtitle:t('usage.card.experimentRunSubtitle'),color:classes.expRuns,data:data===null||data===void 0?void 0:data.UsageQuery.TotalCount.Workflows.ExpRuns})));};export default UsageStats;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Usage/UsageStats/index.tsx"],"names":["useQuery","React","useTranslation","Loader","GET_GLOBAL_STATS","Card","useStyles","UsageStats","classes","t","variables","query","DateRange","start_date","Math","trunc","Date","getFullYear","getMonth","getTime","toString","end_date","data","loading","cardDiv","usersData","UsageQuery","TotalCount","Users","projectData","Projects","agentsData","Agents","Total","option1","Cluster","option2","Ns","schedules","Workflows","Schedules","wfRuns","Runs","expRuns","ExpRuns"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../components/Loader';\nimport { GET_GLOBAL_STATS } from '../../../graphql';\nimport Card from './Cards';\nimport useStyles from './styles';\n\nconst UsageStats = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { data, loading } = useQuery(GET_GLOBAL_STATS, {\n    variables: {\n      query: {\n        DateRange: {\n          start_date: Math.trunc(\n            new Date(\n              new Date().getFullYear(),\n              new Date().getMonth(),\n              1\n            ).getTime() / 1000\n          ).toString(),\n          end_date: Math.trunc(new Date().getTime() / 1000).toString(),\n        },\n      },\n    },\n  });\n\n  return (\n    <div className={classes.cardDiv}>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Card\n            image=\"./icons/users.svg\"\n            header={t('usage.card.userHeader')}\n            subtitle={t('usage.card.userSubtitle')}\n            color={classes.usersData}\n            data={data?.UsageQuery.TotalCount.Users}\n          />\n          <Card\n            image=\"./icons/viewProjects.svg\"\n            header={t('usage.card.projectHeader')}\n            subtitle={t('usage.card.projectSubtitle')}\n            color={classes.projectData}\n            data={data?.UsageQuery.TotalCount.Projects}\n          />\n          <Card\n            image=\"./icons/targets.svg\"\n            header={t('usage.card.agentHeader')}\n            subtitle={t('usage.card.agentSubtitle')}\n            color={classes.agentsData}\n            data={data?.UsageQuery.TotalCount.Agents.Total}\n            split\n            subData={[\n              {\n                option1: data?.UsageQuery.TotalCount.Agents.Cluster,\n                option2: `${t('usage.card.agentClusterScope')}`,\n              },\n              {\n                option1: data?.UsageQuery.TotalCount.Agents.Ns,\n                option2: `${t('usage.card.agentNamespaceScope')}`,\n              },\n            ]}\n          />\n\n          <Card\n            image=\"./icons/workflow-calender.svg\"\n            header={t('usage.card.workflowScheduleHeader')}\n            subtitle={t('usage.card.workflowScheduleSubtitle')}\n            color={classes.schedules}\n            data={data?.UsageQuery.TotalCount.Workflows.Schedules}\n          />\n          <Card\n            image=\"./icons/workflows-outline.svg\"\n            header={t('usage.card.workflowRunHeader')}\n            subtitle={t('usage.card.workflowRunSubtitle')}\n            color={classes.wfRuns}\n            data={data?.UsageQuery.TotalCount.Workflows.Runs}\n          />\n          <Card\n            image=\"./icons/myhub.svg\"\n            header={t('usage.card.experimentRunHeader')}\n            subtitle={t('usage.card.experimentRunSubtitle')}\n            color={classes.expRuns}\n            data={data?.UsageQuery.TotalCount.Workflows.ExpRuns}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UsageStats;\n"]},"metadata":{},"sourceType":"module"}