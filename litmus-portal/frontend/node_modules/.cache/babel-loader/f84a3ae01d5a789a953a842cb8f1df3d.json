{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ChooseWorkflow/ChooseWorkflowFromExisting.tsx\";\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport { AccordionDetails, IconButton, RadioGroup, Typography, useTheme } from '@material-ui/core';\nimport { LitmusCard, RadioButton, Search } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DELETE_WORKFLOW_TEMPLATE, LIST_MANIFEST_TEMPLATE } from '../../../graphql';\nimport useActions from '../../../redux/actions';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport useStyles from './styles';\n\nvar ChooseWorkflowFromExisting = function ChooseWorkflowFromExisting(_ref) {\n  var selectedExp = _ref.selectedExp;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette; // Local States\n\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var workflowAction = useActions(WorkflowActions);\n\n  var _useQuery = useQuery(LIST_MANIFEST_TEMPLATE, {\n    variables: {\n      data: getProjectID()\n    },\n    fetchPolicy: 'network-only'\n  }),\n      templateData = _useQuery.data;\n\n  var _useMutation = useMutation(DELETE_WORKFLOW_TEMPLATE, {\n    refetchQueries: [{\n      query: LIST_MANIFEST_TEMPLATE,\n      variables: {\n        data: getProjectID()\n      }\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      deleteTemplate = _useMutation2[0];\n\n  var filteredExistingWorkflows = templateData ? templateData.ListManifestTemplate.filter(function (w) {\n    if (search === null) return w;\n    if (w.template_name.toLowerCase().includes(search.toLowerCase())) return w;\n    return null;\n  }) : []; // Methods\n\n  var handleChange = function handleChange(event) {\n    setSelected(event.target.value);\n    var selection = {\n      selected: 'B',\n      id: event.target.value\n    };\n    selectedExp(selection.id);\n    var templateData = filteredExistingWorkflows.filter(function (workflow) {\n      return workflow.template_id === event.target.value;\n    })[0];\n    workflowAction.setWorkflowManifest({\n      isCustomWorkflow: templateData.isCustomWorkflow\n    });\n    localforage.setItem('selectedScheduleOption', selection);\n    localforage.setItem('hasSetWorkflowData', false);\n  };\n\n  return /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    \"data-cy\": \"agentSearch\",\n    id: \"input-with-icon-textfield\",\n    placeholder: \"Search\",\n    value: search,\n    onChange: function onChange(event) {\n      return setSearch(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.predefinedWorkflowDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"data-cy\": \"templateWorkflowsRadioGroup\",\n    value: selected,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, filteredExistingWorkflows && filteredExistingWorkflows.length ? filteredExistingWorkflows.map(function (templateData) {\n    return /*#__PURE__*/React.createElement(LitmusCard, {\n      width: \"100%\",\n      height: \"5rem\",\n      key: templateData.template_id,\n      borderColor: palette.border.main,\n      className: classes.existingWorkflowCard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      value: templateData.template_id.toString(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"left-div\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 27\n      }\n    }, templateData.template_name)), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"right-div\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 27\n      }\n    }, templateData.template_description)), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"last-div\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.lastDivChildren,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./icons/litmus-icon.svg\",\n      alt: \"Experiment Icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, templateData.project_name)), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./icons/templateIcon.svg\",\n      alt: \"template\",\n      className: classes.templateIconBg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        deleteTemplate({\n          variables: {\n            data: templateData.template_id\n          }\n        });\n      },\n      className: classes.deleteButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"delete\",\n      src: \"./icons/deleteBox.svg\",\n      height: \"30\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 27\n      }\n    })))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noTemplatesDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.noTemplatesText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.chooseWorkflow.noTemplates'))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.noTemplatesDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.chooseWorkflow.addTemplate'))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.blur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ChooseWorkflowFromExisting;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ChooseWorkflow/ChooseWorkflowFromExisting.tsx"],"names":["useMutation","useQuery","AccordionDetails","IconButton","RadioGroup","Typography","useTheme","LitmusCard","RadioButton","Search","localforage","React","useState","useTranslation","DELETE_WORKFLOW_TEMPLATE","LIST_MANIFEST_TEMPLATE","useActions","WorkflowActions","getProjectID","useStyles","ChooseWorkflowFromExisting","selectedExp","t","classes","palette","search","setSearch","selected","setSelected","workflowAction","variables","data","fetchPolicy","templateData","refetchQueries","query","deleteTemplate","filteredExistingWorkflows","ListManifestTemplate","filter","w","template_name","toLowerCase","includes","handleChange","event","target","value","selection","id","workflow","template_id","setWorkflowManifest","isCustomWorkflow","setItem","width","predefinedWorkflowDiv","length","map","border","main","existingWorkflowCard","toString","template_description","lastDivChildren","project_name","templateIconBg","deleteButton","noTemplatesDiv","noTemplatesText","noTemplatesDesc","blur"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport {\n  AccordionDetails,\n  IconButton,\n  RadioGroup,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport { LitmusCard, RadioButton, Search } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  DELETE_WORKFLOW_TEMPLATE,\n  LIST_MANIFEST_TEMPLATE,\n} from '../../../graphql';\nimport {\n  ListManifestTemplate,\n  ListManifestTemplateArray,\n} from '../../../models/graphql/workflowListData';\nimport useActions from '../../../redux/actions';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface ChooseWorkflowRadio {\n  selected: string;\n  id: string;\n}\n\ninterface ChooseWorkflowFromExistingProps {\n  selectedExp: (expID: string) => void;\n}\n\nconst ChooseWorkflowFromExisting: React.FC<ChooseWorkflowFromExistingProps> = ({\n  selectedExp,\n}) => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const { palette } = useTheme();\n  // Local States\n  const [search, setSearch] = useState<string | null>(null);\n  const [selected, setSelected] = useState<string>('');\n  const workflowAction = useActions(WorkflowActions);\n  const { data: templateData } = useQuery<ListManifestTemplate>(\n    LIST_MANIFEST_TEMPLATE,\n    {\n      variables: {\n        data: getProjectID(),\n      },\n      fetchPolicy: 'network-only',\n    }\n  );\n\n  const [deleteTemplate] = useMutation(DELETE_WORKFLOW_TEMPLATE, {\n    refetchQueries: [\n      {\n        query: LIST_MANIFEST_TEMPLATE,\n        variables: { data: getProjectID() },\n      },\n    ],\n  });\n\n  const filteredExistingWorkflows: ListManifestTemplateArray[] = templateData\n    ? templateData.ListManifestTemplate.filter(\n        (w: ListManifestTemplateArray) => {\n          if (search === null) return w;\n          if (w.template_name.toLowerCase().includes(search.toLowerCase()))\n            return w;\n          return null;\n        }\n      )\n    : [];\n\n  // Methods\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelected(event.target.value);\n    const selection: ChooseWorkflowRadio = {\n      selected: 'B',\n      id: event.target.value,\n    };\n    selectedExp(selection.id);\n    const templateData = filteredExistingWorkflows.filter((workflow) => {\n      return workflow.template_id === event.target.value;\n    })[0];\n    workflowAction.setWorkflowManifest({\n      isCustomWorkflow: templateData.isCustomWorkflow,\n    });\n    localforage.setItem('selectedScheduleOption', selection);\n    localforage.setItem('hasSetWorkflowData', false);\n  };\n\n  return (\n    <AccordionDetails>\n      {/* Wrapping content inside the Accordion to take full width */}\n      <div style={{ width: '100%' }}>\n        <Search\n          data-cy=\"agentSearch\"\n          id=\"input-with-icon-textfield\"\n          placeholder=\"Search\"\n          value={search}\n          onChange={(event) => setSearch(event.target.value)}\n        />\n\n        {/* Leaving some space between the search and workflow cards */}\n        <br />\n        <br />\n\n        <div className={classes.predefinedWorkflowDiv}>\n          <RadioGroup\n            data-cy=\"templateWorkflowsRadioGroup\"\n            value={selected}\n            onChange={handleChange}\n          >\n            {filteredExistingWorkflows && filteredExistingWorkflows.length ? (\n              filteredExistingWorkflows.map(\n                (templateData: ListManifestTemplateArray) => (\n                  <LitmusCard\n                    width=\"100%\"\n                    height=\"5rem\"\n                    key={templateData.template_id}\n                    borderColor={palette.border.main}\n                    className={classes.existingWorkflowCard}\n                  >\n                    <RadioButton value={templateData.template_id.toString()}>\n                      <div id=\"body\">\n                        <div id=\"left-div\">\n                          <Typography>{templateData.template_name}</Typography>\n                        </div>\n                        <div id=\"right-div\">\n                          <Typography>\n                            {templateData.template_description}\n                          </Typography>\n                        </div>\n                        <div id=\"last-div\">\n                          <div className={classes.lastDivChildren}>\n                            <img\n                              src=\"./icons/litmus-icon.svg\"\n                              alt=\"Experiment Icon\"\n                            />\n                            <Typography>{templateData.project_name}</Typography>\n                          </div>\n\n                          <img\n                            src=\"./icons/templateIcon.svg\"\n                            alt=\"template\"\n                            className={classes.templateIconBg}\n                          />\n                        </div>\n                        <IconButton\n                          onClick={() => {\n                            deleteTemplate({\n                              variables: { data: templateData.template_id },\n                            });\n                          }}\n                          className={classes.deleteButton}\n                        >\n                          <img\n                            alt=\"delete\"\n                            src=\"./icons/deleteBox.svg\"\n                            height=\"30\"\n                          />\n                        </IconButton>\n                      </div>\n                    </RadioButton>\n                  </LitmusCard>\n                )\n              )\n            ) : (\n              <div className={classes.noTemplatesDiv}>\n                <Typography className={classes.noTemplatesText}>\n                  <strong>\n                    {t('createWorkflow.chooseWorkflow.noTemplates')}\n                  </strong>\n                </Typography>\n                <Typography className={classes.noTemplatesDesc}>\n                  {t('createWorkflow.chooseWorkflow.addTemplate')}\n                </Typography>\n              </div>\n            )}\n          </RadioGroup>\n        </div>\n        {/* Bottom Blur */}\n        <div className={classes.blur} />\n      </div>\n    </AccordionDetails>\n  );\n};\nexport default ChooseWorkflowFromExisting;\n"]},"metadata":{},"sourceType":"module"}