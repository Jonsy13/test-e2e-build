{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/TuneWorkflowSteps/General.tsx\";\n\nimport { Button, Typography } from '@material-ui/core';\nimport { InputField } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport useActions from '../../../../redux/actions';\nimport * as WorkflowActions from '../../../../redux/actions/workflow';\nimport useStyles from './styles';\n\nvar General = function General(_ref) {\n  var gotoStep = _ref.gotoStep,\n      isCustom = _ref.isCustom;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hubName = _React$useState2[0],\n      setHubName = _React$useState2[1];\n\n  var workflow = useActions(WorkflowActions);\n  var engine = useSelector(function (state) {\n    return state.workflowManifest.engineYAML;\n  });\n  var namespace = useSelector(function (state) {\n    return state.workflowData.namespace;\n  });\n  var engineYAML = YAML.parse(engine);\n\n  var _React$useState3 = React.useState(engineYAML.metadata.generateName),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      experimentName = _React$useState4[0],\n      setExperimentName = _React$useState4[1];\n\n  var getContext = function getContext() {\n    var context = '';\n\n    if (engineYAML.metadata.labels !== undefined && engineYAML.metadata.labels.context !== undefined) {\n      return engineYAML.metadata.labels.context;\n    }\n\n    context = \"\".concat(experimentName, \"_\").concat(namespace);\n    return context;\n  };\n\n  useEffect(function () {\n    getContext();\n  });\n\n  var _React$useState5 = React.useState(getContext()),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      context = _React$useState6[0],\n      setContext = _React$useState6[1];\n\n  useEffect(function () {\n    localforage.getItem('selectedScheduleOption').then(function (value) {\n      if (value !== null && value.selected === 'C') {\n        localforage.getItem('selectedHub').then(function (hub) {\n          setHubName(hub);\n        });\n      }\n    });\n  }, []);\n\n  var handleNext = function handleNext() {\n    var parsedYAML = YAML.parse(engine);\n    parsedYAML.metadata.generateName = experimentName;\n\n    if (parsedYAML.metadata.labels) {\n      parsedYAML.metadata.labels['context'] = context;\n    } else {\n      parsedYAML.metadata['labels'] = {\n        context: context\n      };\n    }\n\n    workflow.setWorkflowManifest({\n      engineYAML: YAML.stringify(parsedYAML)\n    });\n    gotoStep(1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, t('createWorkflow.tuneWorkflow.verticalStepper.myHubInfo')), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.generalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, isCustom && /*#__PURE__*/React.createElement(React.Fragment, null, hubName.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputField, {\n    label: \"Hub\",\n    value: hubName,\n    InputProps: {\n      readOnly: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(InputField, {\n    label: \"Experiment Name\",\n    value: experimentName,\n    onChange: function onChange(e) {\n      setExperimentName(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(InputField, {\n    label: \"Context\",\n    value: context,\n    onChange: function onChange(e) {\n      setContext(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, t('workflowStepper.next')));\n};\n\nexport default General;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/TuneWorkflowSteps/General.tsx"],"names":["Button","Typography","InputField","localforage","React","useEffect","useTranslation","useSelector","YAML","useActions","WorkflowActions","useStyles","General","gotoStep","isCustom","t","classes","useState","hubName","setHubName","workflow","engine","state","workflowManifest","engineYAML","namespace","workflowData","parse","metadata","generateName","experimentName","setExperimentName","getContext","context","labels","undefined","setContext","getItem","then","value","selected","hub","handleNext","parsedYAML","setWorkflowManifest","stringify","generalContainer","length","readOnly","e","target","button"],"mappings":"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","sourcesContent":["import { Button, Typography } from '@material-ui/core';\nimport { InputField } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport { ChooseWorkflowRadio } from '../../../../models/localforage/radioButton';\nimport useActions from '../../../../redux/actions';\nimport * as WorkflowActions from '../../../../redux/actions/workflow';\nimport { RootState } from '../../../../redux/reducers';\nimport useStyles from './styles';\n\ninterface GeneralProps {\n  gotoStep: (page: number) => void;\n  isCustom: boolean | undefined;\n}\n\nconst General: React.FC<GeneralProps> = ({ gotoStep, isCustom }) => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const [hubName, setHubName] = React.useState<string>('');\n  const workflow = useActions(WorkflowActions);\n  const engine = useSelector(\n    (state: RootState) => state.workflowManifest.engineYAML\n  );\n  const namespace = useSelector(\n    (state: RootState) => state.workflowData.namespace\n  );\n  const engineYAML = YAML.parse(engine);\n  const [experimentName, setExperimentName] = React.useState<string>(\n    engineYAML.metadata.generateName\n  );\n  const getContext = () => {\n    let context = '';\n    if (\n      engineYAML.metadata.labels !== undefined &&\n      engineYAML.metadata.labels.context !== undefined\n    ) {\n      return engineYAML.metadata.labels.context;\n    }\n\n    context = `${experimentName}_${namespace}`;\n    return context;\n  };\n\n  useEffect(() => {\n    getContext();\n  });\n  const [context, setContext] = React.useState<string>(getContext());\n  useEffect(() => {\n    localforage.getItem('selectedScheduleOption').then((value) => {\n      if (value !== null && (value as ChooseWorkflowRadio).selected === 'C') {\n        localforage.getItem('selectedHub').then((hub) => {\n          setHubName(hub as string);\n        });\n      }\n    });\n  }, []);\n\n  const handleNext = () => {\n    const parsedYAML = YAML.parse(engine);\n    parsedYAML.metadata.generateName = experimentName;\n    if (parsedYAML.metadata.labels) {\n      parsedYAML.metadata.labels['context'] = context;\n    } else {\n      parsedYAML.metadata['labels'] = {\n        context,\n      };\n    }\n    workflow.setWorkflowManifest({\n      engineYAML: YAML.stringify(parsedYAML),\n    });\n    gotoStep(1);\n  };\n\n  return (\n    <div>\n      <Typography>\n        {t('createWorkflow.tuneWorkflow.verticalStepper.myHubInfo')}\n      </Typography>\n      <br />\n      <div className={classes.generalContainer}>\n        {isCustom && (\n          <>\n            {hubName.length > 0 && (\n              <>\n                <InputField\n                  label=\"Hub\"\n                  value={hubName}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                />\n                <br />\n              </>\n            )}\n            <InputField\n              label=\"Experiment Name\"\n              value={experimentName}\n              onChange={(e) => {\n                setExperimentName(e.target.value);\n              }}\n            />\n            <br />\n          </>\n        )}\n        <InputField\n          label=\"Context\"\n          value={context}\n          onChange={(e) => {\n            setContext(e.target.value);\n          }}\n        />\n      </div>\n      <br />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleNext}\n        className={classes.button}\n      >\n        {t('workflowStepper.next')}\n      </Button>\n    </div>\n  );\n};\n\nexport default General;\n"]},"metadata":{},"sourceType":"module"}