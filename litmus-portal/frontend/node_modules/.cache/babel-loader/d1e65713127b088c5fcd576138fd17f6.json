{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/Header/ProjectDropDownItems.tsx\";\n\nimport { useQuery } from '@apollo/client';\nimport { IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LIST_PROJECTS } from '../../graphql';\nimport { history } from '../../redux/configureStore';\nimport { getUserId } from '../../utils/auth';\nimport { getProjectID } from '../../utils/getSearchParams';\nimport Loader from '../Loader';\nimport useStyles from './styles';\n\nvar CustomisedListItem = function CustomisedListItem(_ref) {\n  var handleClick = _ref.handleClick,\n      label = _ref.label,\n      secondaryLabel = _ref.secondaryLabel,\n      selected = _ref.selected;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      copying = _useState2[0],\n      setCopying = _useState2[1];\n\n  function fallbackCopyTextToClipboard(text) {\n    // eslint-disable-next-line no-alert\n    window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n  }\n\n  function copyTextToClipboard(text) {\n    if (!navigator.clipboard) {\n      fallbackCopyTextToClipboard(text);\n      return;\n    }\n\n    setCopying(true);\n    navigator.clipboard.writeText(text).catch(function (err) {\n      return console.error('Async: Could not copy text: ', err);\n    });\n    setTimeout(function () {\n      return setCopying(false);\n    }, 3000);\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    selected: selected,\n    onClick: handleClick,\n    className: \"\".concat(classes.projectListItem, \" \").concat(selected ? classes.active : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, selected ? /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/selectedProject.svg\",\n    alt: \"Selected Project\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/nonSelectedproject.svg\",\n    alt: \"Un-selected Project\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: label,\n    secondary: \"Project ID: \".concat(secondaryLabel),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return copyTextToClipboard(\"\".concat(secondaryLabel));\n    },\n    edge: \"end\",\n    \"aria-label\": \"copyProject\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, !copying ? /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/copyProjectID.svg\",\n    alt: \"Copy project ID\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(DoneIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))));\n};\n\nvar ProjectDropdownItems = function ProjectDropdownItems() {\n  var _data$listProjects;\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useQuery = useQuery(LIST_PROJECTS),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  var projects = (_data$listProjects = data === null || data === void 0 ? void 0 : data.listProjects) !== null && _data$listProjects !== void 0 ? _data$listProjects : [];\n  var baseRoute = window.location.pathname.split('/')[1];\n  var userID = getUserId();\n  var projectID = getProjectID();\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      myProjects = _useState4[0],\n      setMyProjects = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      otherProjects = _useState6[0],\n      setOtherProjects = _useState6[1];\n\n  useEffect(function () {\n    var projectOwner = [];\n    var projectOther = [];\n    projects.map(function (project) {\n      return project.members.forEach(function (member) {\n        if (member.user_id === userID && member.role === 'Owner') {\n          projectOwner.push(project);\n        } else if (member.user_id === userID && member.role !== 'Owner' && member.invitation === 'Accepted') {\n          projectOther.push({\n            projectDetails: project,\n            currentUserProjectRole: member.role\n          });\n        }\n      });\n    });\n    setMyProjects(projectOwner);\n    setOtherProjects(projectOther);\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.projectPopover,\n    \"data-cy\": \"headerProjectDropdownItems\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    id: \"hint\",\n    primary: t('header.projectDropdown.myProjects'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })), myProjects.length === 0 ? /*#__PURE__*/React.createElement(ListItem, {\n    \"data-cy\": \"project\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: t('header.projectDropdown.noMyProjects'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  })) : myProjects.map(function (project) {\n    return /*#__PURE__*/React.createElement(CustomisedListItem, {\n      key: \"home\",\n      handleClick: function handleClick() {\n        history.push({\n          pathname: \"/\".concat(baseRoute),\n          search: \"?projectID=\".concat(project.id, \"&projectRole=Owner\")\n        });\n      },\n      label: project.name,\n      secondaryLabel: project.id,\n      selected: projectID === project.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    });\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    id: \"hint\",\n    primary: t('header.projectDropdown.otherProjects'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  })), otherProjects.length === 0 ? /*#__PURE__*/React.createElement(ListItem, {\n    \"data-cy\": \"project\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: t('header.projectDropdown.noProjectsOther'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  })) : otherProjects.map(function (project) {\n    return /*#__PURE__*/React.createElement(CustomisedListItem, {\n      key: \"home\",\n      handleClick: function handleClick() {\n        history.push({\n          pathname: \"/home\",\n          search: \"?projectID=\".concat(project.projectDetails.id, \"&projectRole=\").concat(project.currentUserProjectRole)\n        });\n      },\n      label: project.projectDetails.name,\n      secondaryLabel: project.projectDetails.id,\n      selected: projectID === project.projectDetails.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    });\n  })));\n};\n\nexport default ProjectDropdownItems;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/Header/ProjectDropDownItems.tsx"],"names":["useQuery","IconButton","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","DoneIcon","React","useEffect","useState","useTranslation","LIST_PROJECTS","history","getUserId","getProjectID","Loader","useStyles","CustomisedListItem","handleClick","label","secondaryLabel","selected","classes","copying","setCopying","fallbackCopyTextToClipboard","text","window","prompt","copyTextToClipboard","navigator","clipboard","writeText","catch","err","console","error","setTimeout","projectListItem","active","ProjectDropdownItems","t","data","loading","projects","listProjects","baseRoute","location","pathname","split","userID","projectID","myProjects","setMyProjects","otherProjects","setOtherProjects","projectOwner","projectOther","map","project","members","forEach","member","user_id","role","push","invitation","projectDetails","currentUserProjectRole","projectPopover","length","search","id","name"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport {\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n} from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LIST_PROJECTS } from '../../graphql';\nimport { Member, Project, Projects } from '../../models/graphql/user';\nimport { history } from '../../redux/configureStore';\nimport { getUserId } from '../../utils/auth';\nimport { getProjectID } from '../../utils/getSearchParams';\nimport Loader from '../Loader';\nimport useStyles from './styles';\n\ninterface otherProjectsType {\n  projectDetails: Project;\n  currentUserProjectRole: string;\n}\n\ninterface CustomisedListItemProps {\n  handleClick: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  label: string;\n  secondaryLabel: string;\n  selected: boolean;\n}\n\nconst CustomisedListItem: React.FC<CustomisedListItemProps> = ({\n  handleClick,\n  label,\n  secondaryLabel,\n  selected,\n}) => {\n  const classes = useStyles();\n  const [copying, setCopying] = useState<boolean>(false);\n\n  function fallbackCopyTextToClipboard(text: string) {\n    // eslint-disable-next-line no-alert\n    window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n  }\n\n  function copyTextToClipboard(text: string) {\n    if (!navigator.clipboard) {\n      fallbackCopyTextToClipboard(text);\n      return;\n    }\n    setCopying(true);\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n\n    setTimeout(() => setCopying(false), 3000);\n  }\n\n  return (\n    <ListItem\n      button\n      selected={selected}\n      onClick={handleClick}\n      className={`${classes.projectListItem} ${selected ? classes.active : ''}`}\n    >\n      <ListItemIcon>\n        {selected ? (\n          <img src=\"/icons/selectedProject.svg\" alt=\"Selected Project\" />\n        ) : (\n          <img src=\"/icons/nonSelectedproject.svg\" alt=\"Un-selected Project\" />\n        )}\n      </ListItemIcon>\n      <ListItemText\n        primary={label}\n        secondary={`Project ID: ${secondaryLabel}`}\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          onClick={() => copyTextToClipboard(`${secondaryLabel}`)}\n          edge=\"end\"\n          aria-label=\"copyProject\"\n        >\n          {!copying ? (\n            <img src=\"/icons/copyProjectID.svg\" alt=\"Copy project ID\" />\n          ) : (\n            <DoneIcon />\n          )}\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nconst ProjectDropdownItems: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { data, loading } = useQuery<Projects>(LIST_PROJECTS);\n  const projects = data?.listProjects ?? [];\n\n  const baseRoute = window.location.pathname.split('/')[1];\n\n  const userID = getUserId();\n  const projectID = getProjectID();\n\n  const [myProjects, setMyProjects] = useState<Project[]>([]);\n  const [otherProjects, setOtherProjects] = useState<otherProjectsType[]>([]);\n\n  useEffect(() => {\n    const projectOwner: Project[] = [];\n    const projectOther: otherProjectsType[] = [];\n\n    projects.map((project) => {\n      return project.members.forEach((member: Member) => {\n        if (member.user_id === userID && member.role === 'Owner') {\n          projectOwner.push(project);\n        } else if (\n          member.user_id === userID &&\n          member.role !== 'Owner' &&\n          member.invitation === 'Accepted'\n        ) {\n          projectOther.push({\n            projectDetails: project,\n            currentUserProjectRole: member.role,\n          });\n        }\n      });\n    });\n    setMyProjects(projectOwner);\n    setOtherProjects(projectOther);\n  }, [data]);\n\n  return (\n    <div\n      className={classes.projectPopover}\n      data-cy=\"headerProjectDropdownItems\"\n    >\n      {loading ? (\n        <Loader />\n      ) : (\n        <List>\n          <ListItem>\n            <ListItemText\n              id=\"hint\"\n              primary={t('header.projectDropdown.myProjects')}\n            />\n          </ListItem>\n          {myProjects.length === 0 ? (\n            <ListItem data-cy=\"project\">\n              <ListItemText\n                primary={t('header.projectDropdown.noMyProjects')}\n              />\n            </ListItem>\n          ) : (\n            myProjects.map((project) => {\n              return (\n                <CustomisedListItem\n                  key=\"home\"\n                  handleClick={() => {\n                    history.push({\n                      pathname: `/${baseRoute}`,\n                      search: `?projectID=${project.id}&projectRole=Owner`,\n                    });\n                  }}\n                  label={project.name}\n                  secondaryLabel={project.id}\n                  selected={projectID === project.id}\n                />\n              );\n            })\n          )}\n          <ListItem>\n            <ListItemText\n              id=\"hint\"\n              primary={t('header.projectDropdown.otherProjects')}\n            />\n          </ListItem>\n          {otherProjects.length === 0 ? (\n            <ListItem data-cy=\"project\">\n              <ListItemText\n                primary={t('header.projectDropdown.noProjectsOther')}\n              />\n            </ListItem>\n          ) : (\n            otherProjects.map((project) => {\n              return (\n                <CustomisedListItem\n                  key=\"home\"\n                  handleClick={() => {\n                    history.push({\n                      pathname: `/home`,\n                      search: `?projectID=${project.projectDetails.id}&projectRole=${project.currentUserProjectRole}`,\n                    });\n                  }}\n                  label={project.projectDetails.name}\n                  secondaryLabel={project.projectDetails.id}\n                  selected={projectID === project.projectDetails.id}\n                />\n              );\n            })\n          )}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectDropdownItems;\n"]},"metadata":{},"sourceType":"module"}