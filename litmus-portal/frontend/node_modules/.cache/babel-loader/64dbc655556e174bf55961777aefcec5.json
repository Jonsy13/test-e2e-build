{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboard/Panel/PanelGroupContent.tsx\";\n\nimport { Typography } from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport React from 'react';\nimport { Accordion } from '../../../../components/Accordion';\nimport { ReactComponent as ExpandAccordion } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/expandAccordion.svg\";\nimport { ReactComponent as ShrinkAccordion } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/shrinkAccordion.svg\";\nimport GraphPanel from './GraphPanel';\nimport useStyles from './styles';\n\nvar DashboardPanelGroupContent = function DashboardPanelGroupContent(_ref) {\n  var panels = _ref.panels,\n      panel_group_id = _ref.panel_group_id,\n      panel_group_name = _ref.panel_group_name,\n      selectedPanels = _ref.selectedPanels,\n      selectedApplications = _ref.selectedApplications;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rootPanelGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    expanded: open,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: open ? /*#__PURE__*/React.createElement(ShrinkAccordion, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 30\n      }\n    }) : /*#__PURE__*/React.createElement(ExpandAccordion, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 52\n      }\n    }),\n    \"aria-controls\": \"panel-group-\".concat(panel_group_id, \"-content\"),\n    id: \"panel-group-\".concat(panel_group_id, \"-header\"),\n    className: classes.panelGroup,\n    key: \"\".concat(panel_group_id),\n    onClick: function onClick() {\n      setOpen(!open);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.panelGroupTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, panel_group_name)), /*#__PURE__*/React.createElement(AccordionDetails, {\n    className: classes.panelGroupContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, panels && panels.filter(function (panel) {\n    return selectedPanels && selectedPanels.includes(panel.panel_id);\n  }).map(function (panel) {\n    return /*#__PURE__*/React.createElement(GraphPanel, {\n      key: panel.panel_id,\n      \"data-cy\": \"dashboardPanel\",\n      panel_id: panel.panel_id,\n      created_at: panel.created_at,\n      panel_name: panel.panel_name,\n      panel_options: panel.panel_options,\n      prom_queries: panel.prom_queries,\n      y_axis_left: panel.y_axis_left,\n      y_axis_right: panel.y_axis_right,\n      x_axis_down: panel.x_axis_down,\n      unit: panel.unit,\n      controllerPanelID: selectedPanels ? selectedPanels[0] : '',\n      selectedApplications: selectedApplications !== null && selectedApplications !== void 0 ? selectedApplications : [],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    });\n  }))));\n};\n\nexport default DashboardPanelGroupContent;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboard/Panel/PanelGroupContent.tsx"],"names":["Typography","AccordionDetails","AccordionSummary","React","Accordion","GraphPanel","useStyles","DashboardPanelGroupContent","panels","panel_group_id","panel_group_name","selectedPanels","selectedApplications","classes","useState","open","setOpen","rootPanelGroup","panelGroup","panelGroupTitle","panelGroupContainer","filter","panel","includes","panel_id","map","created_at","panel_name","panel_options","prom_queries","y_axis_left","y_axis_right","x_axis_down","unit"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport React from 'react';\nimport { Accordion } from '../../../../components/Accordion';\nimport { PanelResponse } from '../../../../models/graphql/dashboardsDetails';\nimport { ReactComponent as ExpandAccordion } from '../../../../svg/expandAccordion.svg';\nimport { ReactComponent as ShrinkAccordion } from '../../../../svg/shrinkAccordion.svg';\nimport GraphPanel from './GraphPanel';\nimport useStyles from './styles';\n\ninterface DashboardPanelGroupContentProps {\n  panels: PanelResponse[];\n  panel_group_name: string;\n  panel_group_id: string;\n  selectedPanels?: string[];\n  selectedApplications?: string[];\n}\n\nconst DashboardPanelGroupContent: React.FC<DashboardPanelGroupContentProps> = ({\n  panels,\n  panel_group_id,\n  panel_group_name,\n  selectedPanels,\n  selectedApplications,\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState<boolean>(true);\n\n  return (\n    <div className={classes.rootPanelGroup}>\n      <Accordion expanded={open}>\n        <AccordionSummary\n          expandIcon={open ? <ShrinkAccordion /> : <ExpandAccordion />}\n          aria-controls={`panel-group-${panel_group_id}-content`}\n          id={`panel-group-${panel_group_id}-header`}\n          className={classes.panelGroup}\n          key={`${panel_group_id}`}\n          onClick={() => {\n            setOpen(!open);\n          }}\n        >\n          <Typography className={classes.panelGroupTitle}>\n            {panel_group_name}\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.panelGroupContainer}>\n          {panels &&\n            panels\n              .filter(\n                (panel) =>\n                  selectedPanels && selectedPanels.includes(panel.panel_id)\n              )\n              .map((panel: PanelResponse) => (\n                <GraphPanel\n                  key={panel.panel_id}\n                  data-cy=\"dashboardPanel\"\n                  panel_id={panel.panel_id}\n                  created_at={panel.created_at}\n                  panel_name={panel.panel_name}\n                  panel_options={panel.panel_options}\n                  prom_queries={panel.prom_queries}\n                  y_axis_left={panel.y_axis_left}\n                  y_axis_right={panel.y_axis_right}\n                  x_axis_down={panel.x_axis_down}\n                  unit={panel.unit}\n                  controllerPanelID={selectedPanels ? selectedPanels[0] : ''}\n                  selectedApplications={selectedApplications ?? []}\n                />\n              ))}\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default DashboardPanelGroupContent;\n"]},"metadata":{},"sourceType":"module"}