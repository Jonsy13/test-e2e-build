{"ast":null,"code":"import _objectSpread from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/VerifyCommit/index.tsx\";\n\nimport { useMutation } from '@apollo/client';\nimport { Divider, Tooltip, Typography } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InfoIcon from '@material-ui/icons/Info';\nimport cronstrue from 'cronstrue';\nimport { ButtonFilled, ButtonOutlined, EditableText, Modal } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport AdjustedWeights from '../../../components/AdjustedWeights';\nimport YamlEditor from '../../../components/YamlEditor/Editor';\nimport { parseYamlValidations } from '../../../components/YamlEditor/Validations';\nimport { CREATE_WORKFLOW } from '../../../graphql';\nimport useActions from '../../../redux/actions';\nimport * as AlertActions from '../../../redux/actions/alert';\nimport * as TabActions from '../../../redux/actions/tabs';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { history } from '../../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport { validateStartEmptySpacing, validateSubject, validateTextEmpty, validateWorkflowName } from '../../../utils/validate';\nimport { fetchWorkflowNameFromManifest, updateWorkflowNameLabel } from '../../../utils/yamlUtils';\nimport useStyles from './styles';\nvar VerifyCommit = forwardRef(function (_ref, ref) {\n  var handleGoToStep = _ref.handleGoToStep,\n      isLoading = _ref.isLoading;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var isNameError = useRef(false);\n  var isSubjectError = useRef(false);\n\n  var _useState = useState({\n    name: '',\n    description: '',\n    crd: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      workflow = _useState2[0],\n      setWorkflow = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subject = _useState4[0],\n      setSubject = _useState4[1];\n\n  var _useState5 = useState([{\n    experimentName: '',\n    weight: 0\n  }]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      weights = _useState6[0],\n      setWeights = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      open = _useState8[0],\n      setOpen = _useState8[1]; // Modal States\n\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      finishModalOpen = _useState10[0],\n      setFinishModalOpen = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errorModal = _useState12[0],\n      setErrorModal = _useState12[1];\n\n  var tabs = useActions(TabActions);\n  var workflowAction = useActions(WorkflowActions);\n  var alert = useActions(AlertActions);\n  var workflowData = useSelector(function (state) {\n    return state.workflowData;\n  });\n  var clusterid = workflowData.clusterid,\n      cronSyntax = workflowData.cronSyntax,\n      clustername = workflowData.clustername;\n\n  var _useSelector = useSelector(function (state) {\n    return state.workflowManifest;\n  }),\n      manifest = _useSelector.manifest,\n      isCustomWorkflow = _useSelector.isCustomWorkflow;\n\n  useEffect(function () {\n    localforage.getItem('workflow').then(function (workflow) {\n      if (workflow !== null) {\n        setWorkflow({\n          name: workflow.name,\n          description: workflow.description,\n          crd: workflow.CRDLink\n        });\n        setSubject(\"\".concat(workflow.name, \"_\").concat(workflowData.namespace));\n        var parsedManifest = YAML.parse(manifest);\n        delete parsedManifest.metadata.generateName;\n        parsedManifest.metadata['labels'] = {\n          subject: \"\".concat(workflow.name, \"_\").concat(workflowData.namespace)\n        };\n        workflowAction.setWorkflowManifest({\n          manifest: YAML.stringify(parsedManifest)\n        });\n      }\n    });\n    localforage.getItem('weights').then(function (weight) {\n      return weight !== null && setWeights(weight);\n    });\n  }, []);\n\n  var _React$useState = React.useState(\"\".concat(t('createWorkflow.verifyCommit.codeIsFine'))),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      yamlStatus = _React$useState2[0],\n      setYamlStatus = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      modified = _React$useState4[0],\n      setModified = _React$useState4[1];\n\n  var handleOpen = function handleOpen() {\n    setModified(false);\n    setOpen(true);\n  };\n\n  var handleNameChange = function handleNameChange(_ref2) {\n    var changedName = _ref2.changedName;\n    setWorkflow(_objectSpread(_objectSpread({}, workflow), {}, {\n      name: changedName\n    }));\n    var parsedManifest = YAML.parse(manifest);\n    delete parsedManifest.metadata.generateName;\n    parsedManifest.metadata.name = changedName;\n    workflowAction.setWorkflowManifest({\n      manifest: YAML.stringify(parsedManifest)\n    });\n    localforage.getItem('selectedScheduleOption').then(function (option) {\n      if (option !== null && option.selected === 'A') {\n        localforage.getItem('workflow').then(function (w) {\n          var data = {\n            name: changedName,\n            description: w.description,\n            icon: w.icon,\n            CRDLink: w.CRDLink\n          };\n          localforage.setItem('workflow', data);\n        });\n      } else {\n        localforage.getItem('workflow').then(function (w) {\n          var data = {\n            name: changedName,\n            description: w.description,\n            icon: w.icon,\n            CRDLink: ''\n          };\n          localforage.setItem('workflow', data);\n        });\n      }\n    });\n  };\n\n  var handleDescChange = function handleDescChange(_ref3) {\n    var changedDesc = _ref3.changedDesc;\n    localforage.getItem('workflow').then(function (w) {\n      var data = {\n        name: w.name,\n        description: changedDesc,\n        icon: w.icon,\n        CRDLink: w.CRDLink\n      };\n      localforage.setItem('workflow', data);\n    });\n    setWorkflow(_objectSpread(_objectSpread({}, workflow), {}, {\n      description: changedDesc\n    }));\n  };\n\n  var handleSubjectChange = function handleSubjectChange(_ref4) {\n    var changedSubject = _ref4.changedSubject;\n    setSubject(changedSubject);\n    var parsedManifest = YAML.parse(manifest);\n    parsedManifest.metadata['labels'] = {\n      subject: changedSubject\n    };\n    workflowAction.setWorkflowManifest({\n      manifest: YAML.stringify(parsedManifest)\n    });\n  };\n\n  var WorkflowTestData = weights;\n  useEffect(function () {\n    var editorValidations = parseYamlValidations(manifest, classes);\n    var stateObject = {\n      markers: editorValidations.markers,\n      annotations: editorValidations.annotations\n    };\n\n    if (stateObject.annotations.length > 0) {\n      setYamlStatus(\"\".concat(t('createWorkflow.verifyCommit.errYaml')));\n    } else {\n      setYamlStatus(\"\".concat(t('createWorkflow.verifyCommit.codeIsFine')));\n    }\n  }, [modified]); // Create Workflow Mutation\n\n  var _useMutation = useMutation(CREATE_WORKFLOW, {\n    onError: function onError() {\n      setErrorModal(true);\n    },\n    onCompleted: function onCompleted() {\n      setFinishModalOpen(true);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createChaosWorkFlow = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      workflowError = _useMutation2$.error;\n\n  isLoading(loading);\n\n  var handleMutation = function handleMutation() {\n    if (workflow.name.length !== 0 && weights.length !== 0) {\n      var weightData = [];\n      weights.forEach(function (data) {\n        weightData.push({\n          experiment_name: data.experimentName,\n          weightage: data.weight\n        });\n      });\n      /* JSON.stringify takes 3 parameters [object to be converted,\n      a function to alter the conversion, spaces to be shown in final result for indentation ] */\n\n      var yml = YAML.parse(manifest);\n      var updatedYaml = updateWorkflowNameLabel(yml, fetchWorkflowNameFromManifest(manifest));\n      var yamlJson = JSON.stringify(updatedYaml, null, 2); // Converted to Stringified JSON\n\n      var chaosWorkFlowInputs = {\n        workflow_manifest: yamlJson,\n        cronSyntax: cronSyntax,\n        workflow_name: fetchWorkflowNameFromManifest(manifest),\n        workflow_description: workflow.description,\n        isCustomWorkflow: isCustomWorkflow,\n        weightages: weightData,\n        project_id: getProjectID(),\n        cluster_id: clusterid\n      };\n      createChaosWorkFlow({\n        variables: {\n          ChaosWorkFlowInput: chaosWorkFlowInputs\n        }\n      });\n    }\n  };\n\n  var handleErrorModalClose = function handleErrorModalClose() {\n    setErrorModal(false);\n  };\n\n  var handleFinishModal = function handleFinishModal() {\n    workflowAction.setWorkflowManifest({\n      manifest: '',\n      engineYAML: ''\n    });\n    localforage.removeItem('workflow');\n    localforage.removeItem('selectedScheduleOption');\n    localforage.removeItem('hasSetWorkflowData');\n    localforage.removeItem('weights');\n    localforage.removeItem('selectedHub');\n    localforage.removeItem('editSchedule');\n    setFinishModalOpen(false);\n    tabs.changeWorkflowsTabs(0);\n    history.push({\n      pathname: '/workflows',\n      search: \"?projectID=\".concat(getProjectID(), \"&projectRole=\").concat(getProjectRole())\n    });\n  };\n\n  function onNext() {\n    if (!isNameError.current && !isSubjectError.current) {\n      handleMutation();\n    } else {\n      alert.changeAlertState(true);\n    }\n  }\n\n  useImperativeHandle(ref, function () {\n    return {\n      onNext: onNext\n    };\n  });\n\n  var checkNameValidation = function checkNameValidation() {\n    return validateTextEmpty(fetchWorkflowNameFromManifest(manifest)) || validateStartEmptySpacing(fetchWorkflowNameFromManifest(manifest)) || validateWorkflowName(fetchWorkflowNameFromManifest(manifest));\n  };\n\n  var checkSubjectValidation = function checkSubjectValidation() {\n    return validateStartEmptySpacing(subject) || validateSubject(subject);\n  };\n\n  useEffect(function () {\n    if (checkNameValidation()) {\n      isNameError.current = true;\n    } else {\n      isNameError.current = false;\n    }\n\n    if (checkSubjectValidation()) {\n      isSubjectError.current = true;\n    } else {\n      isSubjectError.current = false;\n    }\n  }, [manifest, subject]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, open ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.editorWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.flex, \" \").concat(classes.additional),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '2rem'\n    },\n    src: \"./icons/terminal.svg\",\n    alt: \"Terminal Icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }, fetchWorkflowNameFromManifest(manifest), \".yaml\")), /*#__PURE__*/React.createElement(ButtonOutlined, {\n    onClick: function onClick() {\n      return setOpen(false);\n    },\n    className: classes.editorCloseBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, \"x\")), /*#__PURE__*/React.createElement(YamlEditor, {\n    content: manifest,\n    filename: workflow.name,\n    readOnly: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.suHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.verifyCommit.header')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.verifyCommit.info'))), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/b-finance.svg\",\n    alt: \"bfinance\",\n    className: classes.bfinIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.sumText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.verifyCommit.summary.header')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.left,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.verifyCommit.summary.workflowName'), \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.right,\n    \"data-cy\": \"WorkflowName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(EditableText, {\n    defaultValue: fetchWorkflowNameFromManifest(manifest),\n    id: \"name\",\n    fullWidth: true,\n    multiline: true,\n    error: checkNameValidation(),\n    onSave: function onSave(value) {\n      return handleNameChange({\n        changedName: value\n      });\n    },\n    helperText: checkNameValidation() ? \"\".concat(t(\"createWorkflow.verifyCommit.workflowNameValidationMessage\")) : undefined,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.left,\n    \"data-cy\": \"AgentName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.verifyCommit.summary.clustername'), \":\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.right,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 19\n    }\n  }, clustername)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.left,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.verifyCommit.summary.desc'), \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.right,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 19\n    }\n  }, workflow.description !== '' ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    \"data-cy\": \"WorkflowDescription\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(EditableText, {\n    defaultValue: workflow.description,\n    id: \"desc\",\n    fullWidth: true,\n    multiline: true,\n    onSave: function onSave(value) {\n      return handleDescChange({\n        changedDesc: value\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 25\n    }\n  })) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.leftFlex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.verticalAlign,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.verifyCommit.summary.subject'), \":\"), /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      className: classes.subjectDesc,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 25\n      }\n    }, t('createWorkflow.verifyCommit.summary.subjectDesc')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    className: classes.info,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.right,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 19\n    }\n  }, subject !== '' ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(EditableText, {\n    defaultValue: subject,\n    id: \"subject\",\n    fullWidth: true,\n    multiline: true,\n    error: checkSubjectValidation(),\n    onSave: function onSave(value) {\n      return handleSubjectChange({\n        changedSubject: value\n      });\n    },\n    helperText: checkSubjectValidation() ? \"\".concat(t('createWorkflow.verifyCommit.subjectValidationMessage')) : undefined,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 25\n    }\n  })) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.left,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.verifyCommit.summary.schedule'), \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.right,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spaceBetween,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"schedule\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 23\n    }\n  }, cronSyntax === '' ? t('createWorkflow.verifyCommit.summary.schedulingNow') : cronstrue.toString(cronSyntax)), /*#__PURE__*/React.createElement(EditIcon, {\n    onClick: function onClick() {\n      return handleGoToStep(5);\n    },\n    className: classes.editIcon,\n    \"data-cy\": \"edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.left,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.verifyCommit.summary.adjustedWeights'), \":\"), weights.length === 0 ? /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.errorText, \" \").concat(classes.right),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.verifyCommit.error')) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.right,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 23\n    }\n  }, WorkflowTestData.map(function (Test) {\n    return /*#__PURE__*/React.createElement(AdjustedWeights, {\n      key: Test.weight,\n      testName: \"\".concat(Test.experimentName, \" \").concat(t('createWorkflow.verifyCommit.test')),\n      testValue: Test.weight,\n      spacing: false,\n      icon: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 27\n      }\n    });\n  })), /*#__PURE__*/React.createElement(ButtonOutlined, {\n    onClick: function onClick() {\n      return handleGoToStep(4);\n    },\n    \"data-cy\": \"testRunButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 23\n    }\n  }, t('createWorkflow.verifyCommit.button.edit')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.left,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.verifyCommit.YAML')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rightColumn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 19\n    }\n  }, weights.length === 0 ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 23\n    }\n  }, t('createWorkflow.verifyCommit.errYaml')) : /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 25\n    }\n  }, yamlStatus), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.spacingHorizontal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 25\n    }\n  }, t('createWorkflow.verifyCommit.youCanMoveOn'))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ButtonFilled, {\n    className: classes.verifyYAMLButton,\n    onClick: handleOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 21\n    }\n  }, t('createWorkflow.verifyCommit.button.viewYaml'))))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    \"data-cy\": \"FinishModal\",\n    open: finishModalOpen,\n    onClose: handleFinishModal,\n    width: \"60%\",\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    modalActions: /*#__PURE__*/React.createElement(\"div\", {\n      \"data-cy\": \"GoToWorkflowButton\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: handleFinishModal,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 17\n      }\n    }, \"\\u2715\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/finish.svg\",\n    alt: \"mark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 15\n    }\n  }, t('workflowStepper.aNewChaosWorkflow'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.successful,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 17\n    }\n  }, workflow.name), \",\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 17\n    }\n  }, t('workflowStepper.successful'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headWorkflow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 15\n    }\n  }, t('workflowStepper.congratulationsSub1'), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 60\n    }\n  }), ' ', t('workflowStepper.congratulationsSub2')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    \"data-cy\": \"selectFinish\",\n    onClick: function onClick() {\n      handleFinishModal();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 19\n    }\n  }, t('workflowStepper.workflowBtn')))))), /*#__PURE__*/React.createElement(Modal, {\n    open: errorModal,\n    onClose: handleErrorModalClose,\n    width: \"60%\",\n    modalActions: /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: handleErrorModalClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 15\n      }\n    }, \"\\u2715\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/red-cross.svg\",\n    alt: \"mark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 17\n    }\n  }, t('workflowStepper.workflowFailed'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headWorkflow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 17\n    }\n  }, t('workflowStepper.error'), \" : \", workflowError === null || workflowError === void 0 ? void 0 : workflowError.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    \"data-cy\": \"selectFinish\",\n    onClick: function onClick() {\n      setErrorModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 19\n    }\n  }, t('workflowStepper.back'))))))));\n});\nexport default VerifyCommit;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/VerifyCommit/index.tsx"],"names":["useMutation","Divider","Tooltip","Typography","EditIcon","InfoIcon","cronstrue","ButtonFilled","ButtonOutlined","EditableText","Modal","localforage","React","forwardRef","useEffect","useImperativeHandle","useRef","useState","useTranslation","useSelector","YAML","AdjustedWeights","YamlEditor","parseYamlValidations","CREATE_WORKFLOW","useActions","AlertActions","TabActions","WorkflowActions","history","getProjectID","getProjectRole","validateStartEmptySpacing","validateSubject","validateTextEmpty","validateWorkflowName","fetchWorkflowNameFromManifest","updateWorkflowNameLabel","useStyles","VerifyCommit","ref","handleGoToStep","isLoading","classes","t","isNameError","isSubjectError","name","description","crd","workflow","setWorkflow","subject","setSubject","experimentName","weight","weights","setWeights","open","setOpen","finishModalOpen","setFinishModalOpen","errorModal","setErrorModal","tabs","workflowAction","alert","workflowData","state","clusterid","cronSyntax","clustername","workflowManifest","manifest","isCustomWorkflow","getItem","then","CRDLink","namespace","parsedManifest","parse","metadata","generateName","setWorkflowManifest","stringify","yamlStatus","setYamlStatus","modified","setModified","handleOpen","handleNameChange","changedName","option","selected","w","data","icon","setItem","handleDescChange","changedDesc","handleSubjectChange","changedSubject","WorkflowTestData","editorValidations","stateObject","markers","annotations","length","onError","onCompleted","createChaosWorkFlow","loading","workflowError","error","handleMutation","weightData","forEach","push","experiment_name","weightage","yml","updatedYaml","yamlJson","JSON","chaosWorkFlowInputs","workflow_manifest","workflow_name","workflow_description","weightages","project_id","cluster_id","variables","ChaosWorkFlowInput","handleErrorModalClose","handleFinishModal","engineYAML","removeItem","changeWorkflowsTabs","pathname","search","onNext","current","changeAlertState","checkNameValidation","checkSubjectValidation","editorWrapper","flex","additional","width","editorCloseBtn","root","innerContainer","suHeader","headerText","bfinIcon","sumText","summaryWrapper","itemWrapper","left","right","value","undefined","leftFlex","verticalAlign","subjectDesc","info","spaceBetween","toString","editIcon","errorText","progress","map","Test","rightColumn","spacingHorizontal","verifyYAMLButton","modal","heading","successful","bold","headWorkflow","button","message"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,UAA3B,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,YAAvC,EAAqDC,KAArD,QAAkE,WAAlE;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,KAAP,IACEC,UADF,EAEEC,SAFF,EAGEC,mBAHF,EAIEC,MAJF,EAKEC,QALF,QAMO,OANP;AAOA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAASC,oBAAT,QAAqC,4CAArC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AASA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAO,KAAKC,YAAZ,MAA8B,8BAA9B;AACA,OAAO,KAAKC,UAAZ,MAA4B,6BAA5B;AACA,OAAO,KAAKC,eAAZ,MAAiC,iCAAjC;AACA,SAASC,OAAT,QAAwB,+BAAxB;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,gCAA7C;AACA,SACEC,yBADF,EAEEC,eAFF,EAGEC,iBAHF,EAIEC,oBAJF,QAKO,yBALP;AAMA,SACEC,6BADF,EAEEC,uBAFF,QAGO,0BAHP;AAIA,OAAOC,SAAP,MAAsB,UAAtB;AAaA,IAAMC,YAAY,GAAG1B,UAAU,CAC7B,gBAAmD2B,GAAnD,EAA2D;AAAA,MAAxDC,cAAwD,QAAxDA,cAAwD;AAAA,MAAxCC,SAAwC,QAAxCA,SAAwC;AACzD,MAAMC,OAAO,GAAGL,SAAS,EAAzB;;AACA,wBAAcpB,cAAc,EAA5B;AAAA,MAAQ0B,CAAR,mBAAQA,CAAR;;AACA,MAAMC,WAAW,GAAG7B,MAAM,CAAU,KAAV,CAA1B;AACA,MAAM8B,cAAc,GAAG9B,MAAM,CAAU,KAAV,CAA7B;;AACA,kBAAgCC,QAAQ,CAAgB;AACtD8B,IAAAA,IAAI,EAAE,EADgD;AAEtDC,IAAAA,WAAW,EAAE,EAFyC;AAGtDC,IAAAA,GAAG,EAAE;AAHiD,GAAhB,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAKA,mBAA8BlC,QAAQ,CAAS,EAAT,CAAtC;AAAA;AAAA,MAAOmC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8BpC,QAAQ,CAAkB,CACtD;AACEqC,IAAAA,cAAc,EAAE,EADlB;AAEEC,IAAAA,MAAM,EAAE;AAFV,GADsD,CAAlB,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAOA,mBAAwBxC,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOyC,IAAP;AAAA,MAAaC,OAAb,iBAlByD,CAoBzD;;;AACA,mBAA8C1C,QAAQ,CAAC,KAAD,CAAtD;AAAA;AAAA,MAAO2C,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,oBAAoC5C,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAO6C,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,IAAI,GAAGvC,UAAU,CAACE,UAAD,CAAvB;AACA,MAAMsC,cAAc,GAAGxC,UAAU,CAACG,eAAD,CAAjC;AACA,MAAMsC,KAAK,GAAGzC,UAAU,CAACC,YAAD,CAAxB;AAEA,MAAMyC,YAA0B,GAAGhD,WAAW,CAC5C,UAACiD,KAAD;AAAA,WAAsBA,KAAK,CAACD,YAA5B;AAAA,GAD4C,CAA9C;AAIA,MAAQE,SAAR,GAA+CF,YAA/C,CAAQE,SAAR;AAAA,MAAmBC,UAAnB,GAA+CH,YAA/C,CAAmBG,UAAnB;AAAA,MAA+BC,WAA/B,GAA+CJ,YAA/C,CAA+BI,WAA/B;;AAEA,qBAAuCpD,WAAW,CAChD,UAACiD,KAAD;AAAA,WAAsBA,KAAK,CAACI,gBAA5B;AAAA,GADgD,CAAlD;AAAA,MAAQC,QAAR,gBAAQA,QAAR;AAAA,MAAkBC,gBAAlB,gBAAkBA,gBAAlB;;AAIA5D,EAAAA,SAAS,CAAC,YAAM;AACdH,IAAAA,WAAW,CAACgE,OAAZ,CAAoB,UAApB,EAAgCC,IAAhC,CAAqC,UAAC1B,QAAD,EAAc;AACjD,UAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrBC,QAAAA,WAAW,CAAC;AACVJ,UAAAA,IAAI,EAAGG,QAAD,CAAmCH,IAD/B;AAEVC,UAAAA,WAAW,EAAGE,QAAD,CAAmCF,WAFtC;AAGVC,UAAAA,GAAG,EAAGC,QAAD,CAAmC2B;AAH9B,SAAD,CAAX;AAKAxB,QAAAA,UAAU,WACJH,QAAD,CAAmCH,IAD9B,cAENoB,YAAY,CAACW,SAFP,EAAV;AAKA,YAAMC,cAAc,GAAG3D,IAAI,CAAC4D,KAAL,CAAWP,QAAX,CAAvB;AACA,eAAOM,cAAc,CAACE,QAAf,CAAwBC,YAA/B;AACAH,QAAAA,cAAc,CAACE,QAAf,CAAwB,QAAxB,IAAoC;AAClC7B,UAAAA,OAAO,YAAMF,QAAD,CAAmCH,IAAxC,cACLoB,YAAY,CAACW,SADR;AAD2B,SAApC;AAKAb,QAAAA,cAAc,CAACkB,mBAAf,CAAmC;AACjCV,UAAAA,QAAQ,EAAErD,IAAI,CAACgE,SAAL,CAAeL,cAAf;AADuB,SAAnC;AAGD;AACF,KAvBD;AAwBApE,IAAAA,WAAW,CACRgE,OADH,CACW,SADX,EAEGC,IAFH,CAGI,UAACrB,MAAD;AAAA,aAAYA,MAAM,KAAK,IAAX,IAAmBE,UAAU,CAACF,MAAD,CAAzC;AAAA,KAHJ;AAKD,GA9BQ,EA8BN,EA9BM,CAAT;;AAgCA,wBAAoC3C,KAAK,CAACK,QAAN,WAC/B2B,CAAC,CAAC,wCAAD,CAD8B,EAApC;AAAA;AAAA,MAAOyC,UAAP;AAAA,MAAmBC,aAAnB;;AAIA,yBAAgC1E,KAAK,CAACK,QAAN,CAAe,KAAf,CAAhC;AAAA;AAAA,MAAOsE,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBD,IAAAA,WAAW,CAAC,KAAD,CAAX;AACA7B,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAKA,MAAM+B,gBAAgB,GAAG,SAAnBA,gBAAmB,QAA8C;AAAA,QAA3CC,WAA2C,SAA3CA,WAA2C;AACrExC,IAAAA,WAAW,iCACND,QADM;AAETH,MAAAA,IAAI,EAAE4C;AAFG,OAAX;AAIA,QAAMZ,cAAc,GAAG3D,IAAI,CAAC4D,KAAL,CAAWP,QAAX,CAAvB;AACA,WAAOM,cAAc,CAACE,QAAf,CAAwBC,YAA/B;AACAH,IAAAA,cAAc,CAACE,QAAf,CAAwBlC,IAAxB,GAA+B4C,WAA/B;AACA1B,IAAAA,cAAc,CAACkB,mBAAf,CAAmC;AACjCV,MAAAA,QAAQ,EAAErD,IAAI,CAACgE,SAAL,CAAeL,cAAf;AADuB,KAAnC;AAGApE,IAAAA,WAAW,CAACgE,OAAZ,CAAoB,wBAApB,EAA8CC,IAA9C,CAAmD,UAACgB,MAAD,EAAY;AAC7D,UACEA,MAAM,KAAK,IAAX,IACCA,MAAD,CAAgCC,QAAhC,KAA6C,GAF/C,EAGE;AACAlF,QAAAA,WAAW,CAACgE,OAAZ,CAAoB,UAApB,EAAgCC,IAAhC,CAAqC,UAACkB,CAAD,EAAO;AAC1C,cAAMC,IAA0B,GAAG;AACjChD,YAAAA,IAAI,EAAE4C,WAD2B;AAEjC3C,YAAAA,WAAW,EAAG8C,CAAD,CAA4B9C,WAFR;AAGjCgD,YAAAA,IAAI,EAAGF,CAAD,CAA4BE,IAHD;AAIjCnB,YAAAA,OAAO,EAAGiB,CAAD,CAA4BjB;AAJJ,WAAnC;AAMAlE,UAAAA,WAAW,CAACsF,OAAZ,CAAoB,UAApB,EAAgCF,IAAhC;AACD,SARD;AASD,OAbD,MAaO;AACLpF,QAAAA,WAAW,CAACgE,OAAZ,CAAoB,UAApB,EAAgCC,IAAhC,CAAqC,UAACkB,CAAD,EAAO;AAC1C,cAAMC,IAA0B,GAAG;AACjChD,YAAAA,IAAI,EAAE4C,WAD2B;AAEjC3C,YAAAA,WAAW,EAAG8C,CAAD,CAA4B9C,WAFR;AAGjCgD,YAAAA,IAAI,EAAGF,CAAD,CAA4BE,IAHD;AAIjCnB,YAAAA,OAAO,EAAE;AAJwB,WAAnC;AAMAlE,UAAAA,WAAW,CAACsF,OAAZ,CAAoB,UAApB,EAAgCF,IAAhC;AACD,SARD;AASD;AACF,KAzBD;AA0BD,GArCD;;AAuCA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,QAA8C;AAAA,QAA3CC,WAA2C,SAA3CA,WAA2C;AACrExF,IAAAA,WAAW,CAACgE,OAAZ,CAAoB,UAApB,EAAgCC,IAAhC,CAAqC,UAACkB,CAAD,EAAO;AAC1C,UAAMC,IAA0B,GAAG;AACjChD,QAAAA,IAAI,EAAG+C,CAAD,CAA4B/C,IADD;AAEjCC,QAAAA,WAAW,EAAEmD,WAFoB;AAGjCH,QAAAA,IAAI,EAAGF,CAAD,CAA4BE,IAHD;AAIjCnB,QAAAA,OAAO,EAAGiB,CAAD,CAA4BjB;AAJJ,OAAnC;AAMAlE,MAAAA,WAAW,CAACsF,OAAZ,CAAoB,UAApB,EAAgCF,IAAhC;AACD,KARD;AASA5C,IAAAA,WAAW,iCACND,QADM;AAETF,MAAAA,WAAW,EAAEmD;AAFJ,OAAX;AAID,GAdD;;AAgBA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,QAItB;AAAA,QAHJC,cAGI,SAHJA,cAGI;AACJhD,IAAAA,UAAU,CAACgD,cAAD,CAAV;AACA,QAAMtB,cAAc,GAAG3D,IAAI,CAAC4D,KAAL,CAAWP,QAAX,CAAvB;AACAM,IAAAA,cAAc,CAACE,QAAf,CAAwB,QAAxB,IAAoC;AAClC7B,MAAAA,OAAO,EAAEiD;AADyB,KAApC;AAGApC,IAAAA,cAAc,CAACkB,mBAAf,CAAmC;AACjCV,MAAAA,QAAQ,EAAErD,IAAI,CAACgE,SAAL,CAAeL,cAAf;AADuB,KAAnC;AAGD,GAbD;;AAeA,MAAMuB,gBAAiC,GAAG9C,OAA1C;AAEA1C,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMyF,iBAAiB,GAAGhF,oBAAoB,CAACkD,QAAD,EAAW9B,OAAX,CAA9C;AACA,QAAM6D,WAAW,GAAG;AAClBC,MAAAA,OAAO,EAAEF,iBAAiB,CAACE,OADT;AAElBC,MAAAA,WAAW,EAAEH,iBAAiB,CAACG;AAFb,KAApB;;AAIA,QAAIF,WAAW,CAACE,WAAZ,CAAwBC,MAAxB,GAAiC,CAArC,EAAwC;AACtCrB,MAAAA,aAAa,WAAI1C,CAAC,CAAC,qCAAD,CAAL,EAAb;AACD,KAFD,MAEO;AACL0C,MAAAA,aAAa,WAAI1C,CAAC,CAAC,wCAAD,CAAL,EAAb;AACD;AACF,GAXQ,EAWN,CAAC2C,QAAD,CAXM,CAAT,CAzJyD,CAsKzD;;AACA,qBACEvF,WAAW,CACTwB,eADS,EAET;AACEoF,IAAAA,OAAO,EAAE,mBAAM;AACb7C,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAHH;AAIE8C,IAAAA,WAAW,EAAE,uBAAM;AACjBhD,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AANH,GAFS,CADb;AAAA;AAAA,MAAOiD,mBAAP;AAAA;AAAA,MAA8BC,OAA9B,kBAA8BA,OAA9B;AAAA,MAA8CC,aAA9C,kBAAuCC,KAAvC;;AAaAvE,EAAAA,SAAS,CAACqE,OAAD,CAAT;;AAEA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIhE,QAAQ,CAACH,IAAT,CAAc4D,MAAd,KAAyB,CAAzB,IAA8BnD,OAAO,CAACmD,MAAR,KAAmB,CAArD,EAAwD;AACtD,UAAMQ,UAAuB,GAAG,EAAhC;AAEA3D,MAAAA,OAAO,CAAC4D,OAAR,CAAgB,UAACrB,IAAD,EAAU;AACxBoB,QAAAA,UAAU,CAACE,IAAX,CAAgB;AACdC,UAAAA,eAAe,EAAEvB,IAAI,CAACzC,cADR;AAEdiE,UAAAA,SAAS,EAAExB,IAAI,CAACxC;AAFF,SAAhB;AAID,OALD;AAOA;AACR;;AACQ,UAAMiE,GAAG,GAAGpG,IAAI,CAAC4D,KAAL,CAAWP,QAAX,CAAZ;AACA,UAAMgD,WAAW,GAAGpF,uBAAuB,CACzCmF,GADyC,EAEzCpF,6BAA6B,CAACqC,QAAD,CAFY,CAA3C;AAIA,UAAMiD,QAAQ,GAAGC,IAAI,CAACvC,SAAL,CAAeqC,WAAf,EAA4B,IAA5B,EAAkC,CAAlC,CAAjB,CAjBsD,CAiBC;;AAEvD,UAAMG,mBAAmB,GAAG;AAC1BC,QAAAA,iBAAiB,EAAEH,QADO;AAE1BpD,QAAAA,UAAU,EAAVA,UAF0B;AAG1BwD,QAAAA,aAAa,EAAE1F,6BAA6B,CAACqC,QAAD,CAHlB;AAI1BsD,QAAAA,oBAAoB,EAAE7E,QAAQ,CAACF,WAJL;AAK1B0B,QAAAA,gBAAgB,EAAhBA,gBAL0B;AAM1BsD,QAAAA,UAAU,EAAEb,UANc;AAO1Bc,QAAAA,UAAU,EAAEnG,YAAY,EAPE;AAQ1BoG,QAAAA,UAAU,EAAE7D;AARc,OAA5B;AAUAyC,MAAAA,mBAAmB,CAAC;AAClBqB,QAAAA,SAAS,EAAE;AAAEC,UAAAA,kBAAkB,EAAER;AAAtB;AADO,OAAD,CAAnB;AAGD;AACF,GAlCD;;AAoCA,MAAMS,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClCtE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,MAAMuE,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BrE,IAAAA,cAAc,CAACkB,mBAAf,CAAmC;AAAEV,MAAAA,QAAQ,EAAE,EAAZ;AAAgB8D,MAAAA,UAAU,EAAE;AAA5B,KAAnC;AACA5H,IAAAA,WAAW,CAAC6H,UAAZ,CAAuB,UAAvB;AACA7H,IAAAA,WAAW,CAAC6H,UAAZ,CAAuB,wBAAvB;AACA7H,IAAAA,WAAW,CAAC6H,UAAZ,CAAuB,oBAAvB;AACA7H,IAAAA,WAAW,CAAC6H,UAAZ,CAAuB,SAAvB;AACA7H,IAAAA,WAAW,CAAC6H,UAAZ,CAAuB,aAAvB;AACA7H,IAAAA,WAAW,CAAC6H,UAAZ,CAAuB,cAAvB;AACA3E,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AAEAG,IAAAA,IAAI,CAACyE,mBAAL,CAAyB,CAAzB;AACA5G,IAAAA,OAAO,CAACwF,IAAR,CAAa;AACXqB,MAAAA,QAAQ,EAAE,YADC;AAEXC,MAAAA,MAAM,uBAAgB7G,YAAY,EAA5B,0BAA8CC,cAAc,EAA5D;AAFK,KAAb;AAID,GAfD;;AAiBA,WAAS6G,MAAT,GAAkB;AAChB,QAAI,CAAC/F,WAAW,CAACgG,OAAb,IAAwB,CAAC/F,cAAc,CAAC+F,OAA5C,EAAqD;AACnD3B,MAAAA,cAAc;AACf,KAFD,MAEO;AACLhD,MAAAA,KAAK,CAAC4E,gBAAN,CAAuB,IAAvB;AACD;AACF;;AAED/H,EAAAA,mBAAmB,CAACyB,GAAD,EAAM;AAAA,WAAO;AAC9BoG,MAAAA,MAAM,EAANA;AAD8B,KAAP;AAAA,GAAN,CAAnB;;AAIA,MAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,WAC1B7G,iBAAiB,CAACE,6BAA6B,CAACqC,QAAD,CAA9B,CAAjB,IACAzC,yBAAyB,CAACI,6BAA6B,CAACqC,QAAD,CAA9B,CADzB,IAEAtC,oBAAoB,CAACC,6BAA6B,CAACqC,QAAD,CAA9B,CAHM;AAAA,GAA5B;;AAKA,MAAMuE,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,WAC7BhH,yBAAyB,CAACoB,OAAD,CAAzB,IAAsCnB,eAAe,CAACmB,OAAD,CADxB;AAAA,GAA/B;;AAGAtC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIiI,mBAAmB,EAAvB,EAA2B;AACzBlG,MAAAA,WAAW,CAACgG,OAAZ,GAAsB,IAAtB;AACD,KAFD,MAEO;AACLhG,MAAAA,WAAW,CAACgG,OAAZ,GAAsB,KAAtB;AACD;;AACD,QAAIG,sBAAsB,EAA1B,EAA8B;AAC5BlG,MAAAA,cAAc,CAAC+F,OAAf,GAAyB,IAAzB;AACD,KAFD,MAEO;AACL/F,MAAAA,cAAc,CAAC+F,OAAf,GAAyB,KAAzB;AACD;AACF,GAXQ,EAWN,CAACpE,QAAD,EAAWrB,OAAX,CAXM,CAAT;AAaA,sBACE,0CACGM,IAAI,gBACH;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACsG,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,YAAKtG,OAAO,CAACuG,IAAb,cAAqBvG,OAAO,CAACwG,UAA7B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAExG,OAAO,CAACuG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KADT;AAEE,IAAA,GAAG,EAAC,sBAFN;AAGE,IAAA,GAAG,EAAC,eAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEzG,OAAO,CAACI,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,6BAA6B,CAACqC,QAAD,CADhC,UANF,CADF,eAYE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMd,OAAO,CAAC,KAAD,CAAb;AAAA,KADX;AAEE,IAAA,SAAS,EAAEhB,OAAO,CAAC0G,cAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAZF,CADF,eAoBE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE5E,QAArB;AAA+B,IAAA,QAAQ,EAAEvB,QAAQ,CAACH,IAAlD;AAAwD,IAAA,QAAQ,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADG,gBAwBH;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAAC2G,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE3G,OAAO,CAAC4G,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE5G,OAAO,CAAC6G,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE7G,OAAO,CAAC8G,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG7G,CAAC,CAAC,oCAAD,CADJ,CADF,eAIE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAED,OAAO,CAACK,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,CAAC,CAAC,kCAAD,CADJ,CAJF,CADF,eASE;AACE,IAAA,GAAG,EAAC,sBADN;AAEE,IAAA,GAAG,EAAC,UAFN;AAGE,IAAA,SAAS,EAAED,OAAO,CAAC+G,QAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,eAgBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAkBE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE/G,OAAO,CAACgH,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/G,CAAC,CAAC,4CAAD,CADJ,CAlBF,eAsBE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACiH,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEjH,OAAO,CAACkH,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAElH,OAAO,CAACmH,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlH,CAAC,CAAC,kDAAD,CADJ,MADF,eAKE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACoH,KAAxB;AAA+B,eAAQ,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEX,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,YAAY,EAAEhH,6BAA6B,CAACqC,QAAD,CAD7C;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,KAAK,EAAEsE,mBAAmB,EAL5B;AAME,IAAA,MAAM,EAAE,gBAACiB,KAAD;AAAA,aACNtE,gBAAgB,CAAC;AAAEC,QAAAA,WAAW,EAAEqE;AAAf,OAAD,CADV;AAAA,KANV;AASE,IAAA,UAAU,EACRjB,mBAAmB,eACZnG,CAAC,6DADW,IAIfqH,SAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CALF,CADF,eA4BE;AAAK,IAAA,SAAS,EAAEtH,OAAO,CAACkH,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAElH,OAAO,CAACmH,IAA/B;AAAqC,eAAQ,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlH,CAAC,CAAC,iDAAD,CADJ,MADF,eAKE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAED,OAAO,CAACoH,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxF,WADH,CALF,CA5BF,eAqCE;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAACkH,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAElH,OAAO,CAACmH,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlH,CAAC,CAAC,0CAAD,CADJ,MADF,eAKE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACoH,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG7G,QAAQ,CAACF,WAAT,KAAyB,EAAzB,gBACC;AACE,IAAA,KAAK,EAAE;AAAEoG,MAAAA,KAAK,EAAE;AAAT,KADT;AAEE,eAAQ,qBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,YAAD;AACE,IAAA,YAAY,EAAElG,QAAQ,CAACF,WADzB;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,MAAM,EAAE,gBAACgH,KAAD;AAAA,aACN9D,gBAAgB,CAAC;AAAEC,QAAAA,WAAW,EAAE6D;AAAf,OAAD,CADV;AAAA,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADD,GAeG,IAhBN,CALF,CArCF,eA6DE;AAAK,IAAA,SAAS,EAAErH,OAAO,CAACkH,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAElH,OAAO,CAACuH,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEvH,OAAO,CAACwH,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvH,CAAC,CAAC,6CAAD,CADJ,MADF,eAIE,oBAAC,OAAD;AACE,IAAA,KAAK,eACH,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAED,OAAO,CAACyH,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGxH,CAAC,CAAC,iDAAD,CADJ,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAED,OAAO,CAAC0H,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAJF,CADF,eAgBE;AAAK,IAAA,SAAS,EAAE1H,OAAO,CAACoH,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG3G,OAAO,KAAK,EAAZ,gBACC;AAAK,IAAA,KAAK,EAAE;AAAEgG,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,YAAY,EAAEhG,OADhB;AAEE,IAAA,EAAE,EAAC,SAFL;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,KAAK,EAAE4F,sBAAsB,EAL/B;AAME,IAAA,MAAM,EAAE,gBAACgB,KAAD;AAAA,aACN5D,mBAAmB,CAAC;AAAEC,QAAAA,cAAc,EAAE2D;AAAlB,OAAD,CADb;AAAA,KANV;AASE,IAAA,UAAU,EACRhB,sBAAsB,eACfpG,CAAC,CACF,sDADE,CADc,IAIlBqH,SAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAoBG,IArBN,CAhBF,CA7DF,eAqGE;AAAK,IAAA,SAAS,EAAEtH,OAAO,CAACkH,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAElH,OAAO,CAACmH,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlH,CAAC,CAAC,8CAAD,CADJ,MADF,eAKE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACoH,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEpH,OAAO,CAAC2H,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,eAAQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhG,UAAU,KAAK,EAAf,GACG1B,CAAC,CACC,mDADD,CADJ,GAIGtC,SAAS,CAACiK,QAAV,CAAmBjG,UAAnB,CALN,CADF,eAQE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAM7B,cAAc,CAAC,CAAD,CAApB;AAAA,KADX;AAEE,IAAA,SAAS,EAAEE,OAAO,CAAC6H,QAFrB;AAGE,eAAQ,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CALF,CArGF,eA2HE;AAAK,IAAA,SAAS,EAAE7H,OAAO,CAACkH,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAElH,OAAO,CAACmH,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlH,CAAC,CAAC,qDAAD,CADJ,MADF,EAIGY,OAAO,CAACmD,MAAR,KAAmB,CAAnB,gBACC,oBAAC,UAAD;AACE,IAAA,SAAS,YAAKhE,OAAO,CAAC8H,SAAb,cAA0B9H,OAAO,CAACoH,KAAlC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGnH,CAAC,CAAC,mCAAD,CAHJ,CADD,gBAOC;AAAK,IAAA,SAAS,EAAED,OAAO,CAACoH,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEpH,OAAO,CAAC+H,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpE,gBAAgB,CAACqE,GAAjB,CAAqB,UAACC,IAAD;AAAA,wBACpB,oBAAC,eAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACrH,MADZ;AAEE,MAAA,QAAQ,YAAKqH,IAAI,CAACtH,cAAV,cAA4BV,CAAC,CACnC,kCADmC,CAA7B,CAFV;AAKE,MAAA,SAAS,EAAEgI,IAAI,CAACrH,MALlB;AAME,MAAA,OAAO,EAAE,KANX;AAOE,MAAA,IAAI,EAAE,KAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB;AAAA,GAArB,CADH,CADF,eAcE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMd,cAAc,CAAC,CAAD,CAApB;AAAA,KADX;AAEE,eAAQ,eAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGG,CAAC,CAAC,yCAAD,CAJJ,CAdF,CAXJ,CA3HF,eA6JE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACkH,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAElH,OAAO,CAACmH,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlH,CAAC,CAAC,kCAAD,CADJ,CADF,eAIE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACkI,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrH,OAAO,CAACmD,MAAR,KAAmB,CAAnB,gBACC,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEhE,OAAO,CAAC8H,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG7H,CAAC,CAAC,qCAAD,CADJ,CADD,gBAKC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIyC,UAAJ,CADF,eAEE;AAAM,IAAA,SAAS,EAAE1C,OAAO,CAACmI,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlI,CAAC,CAAC,0CAAD,CADJ,CAFF,CANJ,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAcE,oBAAC,YAAD;AACE,IAAA,SAAS,EAAED,OAAO,CAACoI,gBADrB;AAEE,IAAA,OAAO,EAAEtF,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG7C,CAAC,CAAC,6CAAD,CAJJ,CAdF,CAJF,CA7JF,CAtBF,CADF,CAzBJ,eA6OE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,eAAQ,aADV;AAEE,IAAA,IAAI,EAAEgB,eAFR;AAGE,IAAA,OAAO,EAAE0E,iBAHX;AAIE,IAAA,KAAK,EAAC,KAJR;AAKE,uBAAgB,oBALlB;AAME,wBAAiB,0BANnB;AAOE,IAAA,YAAY,eACV;AAAK,iBAAQ,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAEA,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAeE;AAAK,IAAA,SAAS,EAAE3F,OAAO,CAACqI,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAC,mBAAT;AAA6B,IAAA,GAAG,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAErI,OAAO,CAACsI,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrI,CAAC,CAAC,mCAAD,CADJ,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAM,IAAA,SAAS,EAAED,OAAO,CAACuI,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsChI,QAAQ,CAACH,IAA/C,CAHF,oBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACwI,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvI,CAAC,CAAC,4BAAD,CADJ,CALF,CAFF,eAWE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACyI,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxI,CAAC,CAAC,qCAAD,CADJ,oBAC6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7C,EACoD,GADpD,EAEGA,CAAC,CAAC,qCAAD,CAFJ,CAXF,eAeE;AAAK,IAAA,SAAS,EAAED,OAAO,CAAC0I,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,eAAQ,cADV;AAEE,IAAA,OAAO,EAAE,mBAAM;AACb/C,MAAAA,iBAAiB;AAClB,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM1F,CAAC,CAAC,6BAAD,CAAP,CANF,CADF,CAfF,CAfF,CADF,eA2CE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEkB,UADR;AAEE,IAAA,OAAO,EAAEuE,qBAFX;AAGE,IAAA,KAAK,EAAC,KAHR;AAIE,IAAA,YAAY,eACV,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAEA,qBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAK,IAAA,SAAS,EAAE1F,OAAO,CAACqI,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAC,sBAAT;AAAgC,IAAA,GAAG,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAErI,OAAO,CAACsI,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASrI,CAAC,CAAC,gCAAD,CAAV,CADF,CAFF,eAKE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACyI,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxI,CAAC,CAAC,uBAAD,CADJ,SACkCoE,aADlC,aACkCA,aADlC,uBACkCA,aAAa,CAAEsE,OADjD,CADF,CALF,eAUE;AAAK,IAAA,SAAS,EAAE3I,OAAO,CAAC0I,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,eAAQ,cADV;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbtH,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMnB,CAAC,CAAC,sBAAD,CAAP,CANF,CADF,CAVF,CAVF,CA3CF,CA7OF,CADF;AA4TD,CA7kB4B,CAA/B;AAglBA,eAAeL,YAAf","sourcesContent":["import { useMutation } from '@apollo/client';\nimport { Divider, Tooltip, Typography } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InfoIcon from '@material-ui/icons/Info';\nimport cronstrue from 'cronstrue';\nimport { ButtonFilled, ButtonOutlined, EditableText, Modal } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport AdjustedWeights from '../../../components/AdjustedWeights';\nimport YamlEditor from '../../../components/YamlEditor/Editor';\nimport { parseYamlValidations } from '../../../components/YamlEditor/Validations';\nimport { CREATE_WORKFLOW } from '../../../graphql';\nimport {\n  CreateWorkFlowInput,\n  CreateWorkflowResponse,\n  WeightMap,\n} from '../../../models/graphql/createWorkflowData';\nimport { ChooseWorkflowRadio } from '../../../models/localforage/radioButton';\nimport { WorkflowDetailsProps } from '../../../models/localforage/workflow';\nimport { experimentMap, WorkflowData } from '../../../models/redux/workflow';\nimport useActions from '../../../redux/actions';\nimport * as AlertActions from '../../../redux/actions/alert';\nimport * as TabActions from '../../../redux/actions/tabs';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { history } from '../../../redux/configureStore';\nimport { RootState } from '../../../redux/reducers';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport {\n  validateStartEmptySpacing,\n  validateSubject,\n  validateTextEmpty,\n  validateWorkflowName,\n} from '../../../utils/validate';\nimport {\n  fetchWorkflowNameFromManifest,\n  updateWorkflowNameLabel,\n} from '../../../utils/yamlUtils';\nimport useStyles from './styles';\n\ninterface WorkflowProps {\n  name: string;\n  description: string;\n  crd: string;\n}\n\ninterface VerifyCommitProps {\n  handleGoToStep: (page: number) => void;\n  isLoading: (loading: boolean) => void;\n}\n\nconst VerifyCommit = forwardRef(\n  ({ handleGoToStep, isLoading }: VerifyCommitProps, ref) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const isNameError = useRef<boolean>(false);\n    const isSubjectError = useRef<boolean>(false);\n    const [workflow, setWorkflow] = useState<WorkflowProps>({\n      name: '',\n      description: '',\n      crd: '',\n    });\n    const [subject, setSubject] = useState<string>('');\n    const [weights, setWeights] = useState<experimentMap[]>([\n      {\n        experimentName: '',\n        weight: 0,\n      },\n    ]);\n\n    const [open, setOpen] = useState(false);\n\n    // Modal States\n    const [finishModalOpen, setFinishModalOpen] = useState(false);\n    const [errorModal, setErrorModal] = useState(false);\n\n    const tabs = useActions(TabActions);\n    const workflowAction = useActions(WorkflowActions);\n    const alert = useActions(AlertActions);\n\n    const workflowData: WorkflowData = useSelector(\n      (state: RootState) => state.workflowData\n    );\n\n    const { clusterid, cronSyntax, clustername } = workflowData;\n\n    const { manifest, isCustomWorkflow } = useSelector(\n      (state: RootState) => state.workflowManifest\n    );\n\n    useEffect(() => {\n      localforage.getItem('workflow').then((workflow) => {\n        if (workflow !== null) {\n          setWorkflow({\n            name: (workflow as WorkflowDetailsProps).name,\n            description: (workflow as WorkflowDetailsProps).description,\n            crd: (workflow as WorkflowDetailsProps).CRDLink,\n          });\n          setSubject(\n            `${(workflow as WorkflowDetailsProps).name}_${\n              workflowData.namespace\n            }`\n          );\n          const parsedManifest = YAML.parse(manifest);\n          delete parsedManifest.metadata.generateName;\n          parsedManifest.metadata['labels'] = {\n            subject: `${(workflow as WorkflowDetailsProps).name}_${\n              workflowData.namespace\n            }`,\n          };\n          workflowAction.setWorkflowManifest({\n            manifest: YAML.stringify(parsedManifest),\n          });\n        }\n      });\n      localforage\n        .getItem('weights')\n        .then(\n          (weight) => weight !== null && setWeights(weight as experimentMap[])\n        );\n    }, []);\n\n    const [yamlStatus, setYamlStatus] = React.useState(\n      `${t('createWorkflow.verifyCommit.codeIsFine')}`\n    );\n\n    const [modified, setModified] = React.useState(false);\n\n    const handleOpen = () => {\n      setModified(false);\n      setOpen(true);\n    };\n\n    const handleNameChange = ({ changedName }: { changedName: string }) => {\n      setWorkflow({\n        ...workflow,\n        name: changedName,\n      });\n      const parsedManifest = YAML.parse(manifest);\n      delete parsedManifest.metadata.generateName;\n      parsedManifest.metadata.name = changedName;\n      workflowAction.setWorkflowManifest({\n        manifest: YAML.stringify(parsedManifest),\n      });\n      localforage.getItem('selectedScheduleOption').then((option) => {\n        if (\n          option !== null &&\n          (option as ChooseWorkflowRadio).selected === 'A'\n        ) {\n          localforage.getItem('workflow').then((w) => {\n            const data: WorkflowDetailsProps = {\n              name: changedName,\n              description: (w as WorkflowDetailsProps).description,\n              icon: (w as WorkflowDetailsProps).icon,\n              CRDLink: (w as WorkflowDetailsProps).CRDLink,\n            };\n            localforage.setItem('workflow', data);\n          });\n        } else {\n          localforage.getItem('workflow').then((w) => {\n            const data: WorkflowDetailsProps = {\n              name: changedName,\n              description: (w as WorkflowDetailsProps).description,\n              icon: (w as WorkflowDetailsProps).icon,\n              CRDLink: '',\n            };\n            localforage.setItem('workflow', data);\n          });\n        }\n      });\n    };\n\n    const handleDescChange = ({ changedDesc }: { changedDesc: string }) => {\n      localforage.getItem('workflow').then((w) => {\n        const data: WorkflowDetailsProps = {\n          name: (w as WorkflowDetailsProps).name,\n          description: changedDesc,\n          icon: (w as WorkflowDetailsProps).icon,\n          CRDLink: (w as WorkflowDetailsProps).CRDLink,\n        };\n        localforage.setItem('workflow', data);\n      });\n      setWorkflow({\n        ...workflow,\n        description: changedDesc,\n      });\n    };\n\n    const handleSubjectChange = ({\n      changedSubject,\n    }: {\n      changedSubject: string;\n    }) => {\n      setSubject(changedSubject);\n      const parsedManifest = YAML.parse(manifest);\n      parsedManifest.metadata['labels'] = {\n        subject: changedSubject,\n      };\n      workflowAction.setWorkflowManifest({\n        manifest: YAML.stringify(parsedManifest),\n      });\n    };\n\n    const WorkflowTestData: experimentMap[] = weights as any;\n\n    useEffect(() => {\n      const editorValidations = parseYamlValidations(manifest, classes);\n      const stateObject = {\n        markers: editorValidations.markers,\n        annotations: editorValidations.annotations,\n      };\n      if (stateObject.annotations.length > 0) {\n        setYamlStatus(`${t('createWorkflow.verifyCommit.errYaml')}`);\n      } else {\n        setYamlStatus(`${t('createWorkflow.verifyCommit.codeIsFine')}`);\n      }\n    }, [modified]);\n\n    // Create Workflow Mutation\n    const [createChaosWorkFlow, { loading, error: workflowError }] =\n      useMutation<CreateWorkflowResponse, CreateWorkFlowInput>(\n        CREATE_WORKFLOW,\n        {\n          onError: () => {\n            setErrorModal(true);\n          },\n          onCompleted: () => {\n            setFinishModalOpen(true);\n          },\n        }\n      );\n\n    isLoading(loading);\n\n    const handleMutation = () => {\n      if (workflow.name.length !== 0 && weights.length !== 0) {\n        const weightData: WeightMap[] = [];\n\n        weights.forEach((data) => {\n          weightData.push({\n            experiment_name: data.experimentName,\n            weightage: data.weight,\n          });\n        });\n\n        /* JSON.stringify takes 3 parameters [object to be converted,\n        a function to alter the conversion, spaces to be shown in final result for indentation ] */\n        const yml = YAML.parse(manifest);\n        const updatedYaml = updateWorkflowNameLabel(\n          yml,\n          fetchWorkflowNameFromManifest(manifest)\n        );\n        const yamlJson = JSON.stringify(updatedYaml, null, 2); // Converted to Stringified JSON\n\n        const chaosWorkFlowInputs = {\n          workflow_manifest: yamlJson,\n          cronSyntax,\n          workflow_name: fetchWorkflowNameFromManifest(manifest),\n          workflow_description: workflow.description,\n          isCustomWorkflow,\n          weightages: weightData,\n          project_id: getProjectID(),\n          cluster_id: clusterid,\n        };\n        createChaosWorkFlow({\n          variables: { ChaosWorkFlowInput: chaosWorkFlowInputs },\n        });\n      }\n    };\n\n    const handleErrorModalClose = () => {\n      setErrorModal(false);\n    };\n\n    const handleFinishModal = () => {\n      workflowAction.setWorkflowManifest({ manifest: '', engineYAML: '' });\n      localforage.removeItem('workflow');\n      localforage.removeItem('selectedScheduleOption');\n      localforage.removeItem('hasSetWorkflowData');\n      localforage.removeItem('weights');\n      localforage.removeItem('selectedHub');\n      localforage.removeItem('editSchedule');\n      setFinishModalOpen(false);\n\n      tabs.changeWorkflowsTabs(0);\n      history.push({\n        pathname: '/workflows',\n        search: `?projectID=${getProjectID()}&projectRole=${getProjectRole()}`,\n      });\n    };\n\n    function onNext() {\n      if (!isNameError.current && !isSubjectError.current) {\n        handleMutation();\n      } else {\n        alert.changeAlertState(true);\n      }\n    }\n\n    useImperativeHandle(ref, () => ({\n      onNext,\n    }));\n\n    const checkNameValidation = (): boolean =>\n      validateTextEmpty(fetchWorkflowNameFromManifest(manifest)) ||\n      validateStartEmptySpacing(fetchWorkflowNameFromManifest(manifest)) ||\n      validateWorkflowName(fetchWorkflowNameFromManifest(manifest));\n\n    const checkSubjectValidation = (): boolean =>\n      validateStartEmptySpacing(subject) || validateSubject(subject);\n\n    useEffect(() => {\n      if (checkNameValidation()) {\n        isNameError.current = true;\n      } else {\n        isNameError.current = false;\n      }\n      if (checkSubjectValidation()) {\n        isSubjectError.current = true;\n      } else {\n        isSubjectError.current = false;\n      }\n    }, [manifest, subject]);\n\n    return (\n      <>\n        {open ? (\n          <div className={classes.editorWrapper}>\n            <div className={`${classes.flex} ${classes.additional}`}>\n              <div className={classes.flex}>\n                <img\n                  style={{ width: '2rem' }}\n                  src=\"./icons/terminal.svg\"\n                  alt=\"Terminal Icon\"\n                />\n                <Typography className={classes.name}>\n                  {fetchWorkflowNameFromManifest(manifest)}.yaml\n                </Typography>\n              </div>\n\n              <ButtonOutlined\n                onClick={() => setOpen(false)}\n                className={classes.editorCloseBtn}\n              >\n                x\n              </ButtonOutlined>\n            </div>\n            <YamlEditor content={manifest} filename={workflow.name} readOnly />\n          </div>\n        ) : (\n          <div className={classes.root}>\n            <div className={classes.innerContainer}>\n              <div className={classes.suHeader}>\n                <div>\n                  <Typography className={classes.headerText}>\n                    {t('createWorkflow.verifyCommit.header')}\n                  </Typography>\n                  <Typography className={classes.description}>\n                    {t('createWorkflow.verifyCommit.info')}\n                  </Typography>\n                </div>\n                <img\n                  src=\"/icons/b-finance.svg\"\n                  alt=\"bfinance\"\n                  className={classes.bfinIcon}\n                />\n              </div>\n              <Divider />\n\n              <Typography className={classes.sumText}>\n                {t('createWorkflow.verifyCommit.summary.header')}\n              </Typography>\n\n              <div className={classes.summaryWrapper}>\n                <div className={classes.itemWrapper}>\n                  <Typography className={classes.left}>\n                    {t('createWorkflow.verifyCommit.summary.workflowName')}:\n                  </Typography>\n\n                  <div className={classes.right} data-cy=\"WorkflowName\">\n                    <div style={{ width: '100%' }}>\n                      <EditableText\n                        defaultValue={fetchWorkflowNameFromManifest(manifest)}\n                        id=\"name\"\n                        fullWidth\n                        multiline\n                        error={checkNameValidation()}\n                        onSave={(value: any) =>\n                          handleNameChange({ changedName: value })\n                        }\n                        helperText={\n                          checkNameValidation()\n                            ? `${t(\n                                `createWorkflow.verifyCommit.workflowNameValidationMessage`\n                              )}`\n                            : undefined\n                        }\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className={classes.itemWrapper}>\n                  <Typography className={classes.left} data-cy=\"AgentName\">\n                    {t('createWorkflow.verifyCommit.summary.clustername')}:\n                  </Typography>\n\n                  <Typography className={classes.right}>\n                    {clustername}\n                  </Typography>\n                </div>\n                <div className={classes.itemWrapper}>\n                  <Typography className={classes.left}>\n                    {t('createWorkflow.verifyCommit.summary.desc')}:\n                  </Typography>\n\n                  <div className={classes.right}>\n                    {workflow.description !== '' ? (\n                      <div\n                        style={{ width: '100%' }}\n                        data-cy=\"WorkflowDescription\"\n                      >\n                        <EditableText\n                          defaultValue={workflow.description}\n                          id=\"desc\"\n                          fullWidth\n                          multiline\n                          onSave={(value: any) =>\n                            handleDescChange({ changedDesc: value })\n                          }\n                        />\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n                <div className={classes.itemWrapper}>\n                  <div className={classes.leftFlex}>\n                    <Typography className={classes.verticalAlign}>\n                      {t('createWorkflow.verifyCommit.summary.subject')}:\n                    </Typography>\n                    <Tooltip\n                      title={\n                        <Typography className={classes.subjectDesc}>\n                          {t('createWorkflow.verifyCommit.summary.subjectDesc')}\n                        </Typography>\n                      }\n                    >\n                      <InfoIcon className={classes.info} />\n                    </Tooltip>\n                  </div>\n\n                  <div className={classes.right}>\n                    {subject !== '' ? (\n                      <div style={{ width: '100%' }}>\n                        <EditableText\n                          defaultValue={subject}\n                          id=\"subject\"\n                          fullWidth\n                          multiline\n                          error={checkSubjectValidation()}\n                          onSave={(value: any) =>\n                            handleSubjectChange({ changedSubject: value })\n                          }\n                          helperText={\n                            checkSubjectValidation()\n                              ? `${t(\n                                  'createWorkflow.verifyCommit.subjectValidationMessage'\n                                )}`\n                              : undefined\n                          }\n                        />\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n                <div className={classes.itemWrapper}>\n                  <Typography className={classes.left}>\n                    {t('createWorkflow.verifyCommit.summary.schedule')}:\n                  </Typography>\n\n                  <div className={classes.right}>\n                    <div className={classes.spaceBetween}>\n                      <Typography data-cy=\"schedule\">\n                        {cronSyntax === ''\n                          ? t(\n                              'createWorkflow.verifyCommit.summary.schedulingNow'\n                            )\n                          : cronstrue.toString(cronSyntax)}\n                      </Typography>\n                      <EditIcon\n                        onClick={() => handleGoToStep(5)}\n                        className={classes.editIcon}\n                        data-cy=\"edit\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className={classes.itemWrapper}>\n                  <Typography className={classes.left}>\n                    {t('createWorkflow.verifyCommit.summary.adjustedWeights')}:\n                  </Typography>\n                  {weights.length === 0 ? (\n                    <Typography\n                      className={`${classes.errorText} ${classes.right}`}\n                    >\n                      {t('createWorkflow.verifyCommit.error')}\n                    </Typography>\n                  ) : (\n                    <div className={classes.right}>\n                      <div className={classes.progress}>\n                        {WorkflowTestData.map((Test) => (\n                          <AdjustedWeights\n                            key={Test.weight}\n                            testName={`${Test.experimentName} ${t(\n                              'createWorkflow.verifyCommit.test'\n                            )}`}\n                            testValue={Test.weight}\n                            spacing={false}\n                            icon={false}\n                          />\n                        ))}\n                      </div>\n                      <ButtonOutlined\n                        onClick={() => handleGoToStep(4)}\n                        data-cy=\"testRunButton\"\n                      >\n                        {t('createWorkflow.verifyCommit.button.edit')}\n                      </ButtonOutlined>\n                    </div>\n                  )}\n                </div>\n                <div className={classes.itemWrapper}>\n                  <Typography className={classes.left}>\n                    {t('createWorkflow.verifyCommit.YAML')}\n                  </Typography>\n                  <div className={classes.rightColumn}>\n                    {weights.length === 0 ? (\n                      <Typography className={classes.errorText}>\n                        {t('createWorkflow.verifyCommit.errYaml')}\n                      </Typography>\n                    ) : (\n                      <Typography>\n                        <b>{yamlStatus}</b>\n                        <span className={classes.spacingHorizontal}>\n                          {t('createWorkflow.verifyCommit.youCanMoveOn')}\n                        </span>\n                      </Typography>\n                    )}\n                    <br />\n                    <ButtonFilled\n                      className={classes.verifyYAMLButton}\n                      onClick={handleOpen}\n                    >\n                      {t('createWorkflow.verifyCommit.button.viewYaml')}\n                    </ButtonFilled>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Finish Modal */}\n        <div>\n          <Modal\n            data-cy=\"FinishModal\"\n            open={finishModalOpen}\n            onClose={handleFinishModal}\n            width=\"60%\"\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            modalActions={\n              <div data-cy=\"GoToWorkflowButton\">\n                <ButtonOutlined onClick={handleFinishModal}>\n                  &#x2715;\n                </ButtonOutlined>\n              </div>\n            }\n          >\n            <div className={classes.modal}>\n              <img src=\"/icons/finish.svg\" alt=\"mark\" />\n              <div className={classes.heading}>\n                {t('workflowStepper.aNewChaosWorkflow')}\n                <br />\n                <span className={classes.successful}>{workflow.name}</span>,\n                <br />\n                <span className={classes.bold}>\n                  {t('workflowStepper.successful')}\n                </span>\n              </div>\n              <div className={classes.headWorkflow}>\n                {t('workflowStepper.congratulationsSub1')} <br />{' '}\n                {t('workflowStepper.congratulationsSub2')}\n              </div>\n              <div className={classes.button}>\n                <ButtonFilled\n                  data-cy=\"selectFinish\"\n                  onClick={() => {\n                    handleFinishModal();\n                  }}\n                >\n                  <div>{t('workflowStepper.workflowBtn')}</div>\n                </ButtonFilled>\n              </div>\n            </div>\n          </Modal>\n          <Modal\n            open={errorModal}\n            onClose={handleErrorModalClose}\n            width=\"60%\"\n            modalActions={\n              <ButtonOutlined onClick={handleErrorModalClose}>\n                &#x2715;\n              </ButtonOutlined>\n            }\n          >\n            <div className={classes.modal}>\n              <img src=\"/icons/red-cross.svg\" alt=\"mark\" />\n              <div className={classes.heading}>\n                <strong>{t('workflowStepper.workflowFailed')}</strong>\n              </div>\n              <div className={classes.headWorkflow}>\n                <Typography>\n                  {t('workflowStepper.error')} : {workflowError?.message}\n                </Typography>\n              </div>\n              <div className={classes.button}>\n                <ButtonFilled\n                  data-cy=\"selectFinish\"\n                  onClick={() => {\n                    setErrorModal(false);\n                  }}\n                >\n                  <div>{t('workflowStepper.back')}</div>\n                </ButtonFilled>\n              </div>\n            </div>\n          </Modal>\n        </div>\n      </>\n    );\n  }\n);\n\nexport default VerifyCommit;\n"]},"metadata":{},"sourceType":"module"}