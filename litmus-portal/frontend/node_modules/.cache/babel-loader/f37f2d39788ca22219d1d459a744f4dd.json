{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/MyHub/MyHubCharts/index.tsx\";\n\nimport { useQuery } from '@apollo/client';\nimport { AppBar, Backdrop, Typography } from '@material-ui/core';\nimport Tabs from '@material-ui/core/Tabs';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport { StyledTab, TabPanel } from '../../../components/Tabs';\nimport Loader from '../../../components/Loader';\nimport Center from '../../../containers/layouts/Center';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport { GET_CHARTS_DATA, GET_HUB_STATUS, GET_PREDEFINED_WORKFLOW_LIST } from '../../../graphql';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport ChartCard from './chartCard';\nimport HeaderSection from './headerSection';\nimport useStyles from './styles';\nimport BackButton from '../../../components/Button/BackButton';\n\nvar MyHub = function MyHub() {\n  // Get Parameters from URL\n  var paramData = useParams();\n  var projectID = getProjectID(); // Get all MyHubs with status\n\n  var _useQuery = useQuery(GET_HUB_STATUS, {\n    variables: {\n      data: projectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      hubDetails = _useQuery.data;\n\n  var theme = useTheme();\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      tabValue = _useState2[0],\n      setTabValue = _useState2[1]; // Filter the selected MyHub\n\n\n  var UserHub = hubDetails === null || hubDetails === void 0 ? void 0 : hubDetails.getHubStatus.filter(function (myHub) {\n    return paramData.hubname === myHub.HubName;\n  })[0];\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // Query to get charts of selected MyHub\n\n\n  var _useQuery2 = useQuery(GET_CHARTS_DATA, {\n    variables: {\n      HubName: paramData.hubname,\n      projectID: projectID\n    },\n    fetchPolicy: 'network-only'\n  }),\n      data = _useQuery2.data,\n      loading = _useQuery2.loading;\n\n  var _useQuery3 = useQuery(GET_PREDEFINED_WORKFLOW_LIST, {\n    variables: {\n      hubname: paramData.hubname,\n      projectid: projectID\n    },\n    fetchPolicy: 'network-only'\n  }),\n      predefinedData = _useQuery3.data,\n      predefinedLoading = _useQuery3.loading; // State for searching charts\n\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchPredefined = _useState6[0],\n      setSearchPredefined = _useState6[1];\n\n  var changeSearch = function changeSearch(event) {\n    setSearch(event.target.value);\n  };\n\n  var handlePreDefinedSearch = function handlePreDefinedSearch(event) {\n    setSearchPredefined(event.target.value);\n  };\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      totalExp = _useState8[0],\n      setTotalExperiment = _useState8[1];\n\n  var exp = []; // Function to convert UNIX time in format of DD MMM YYY\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var resDate = moment(updated).format('DD MMM YYYY hh:mm:ss A');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  var handleTabChange = function handleTabChange(event, newValue) {\n    setTabValue(newValue);\n  };\n\n  useEffect(function () {\n    if (data !== undefined) {\n      var chartList = data.getCharts;\n      chartList.forEach(function (expData) {\n        expData.Spec.Experiments.forEach(function (expName) {\n          exp.push({\n            ChaosName: expData.Metadata.Name,\n            ExperimentName: expName\n          });\n        });\n      });\n      setTotalExperiment(exp);\n    }\n  }, [data]);\n  var filteredWorkflow = (predefinedData === null || predefinedData === void 0 ? void 0 : predefinedData.GetPredefinedWorkflowList) && (predefinedData === null || predefinedData === void 0 ? void 0 : predefinedData.GetPredefinedWorkflowList.filter(function (data) {\n    return data.toLowerCase().includes(searchPredefined.trim());\n  }));\n  var filteredExperiment = totalExp && totalExp.filter(function (data) {\n    return data.ChaosName.toLowerCase().includes(search.trim()) || data.ExperimentName.toLowerCase().includes(search.trim());\n  });\n  return loading || predefinedLoading ? /*#__PURE__*/React.createElement(Backdrop, {\n    open: true,\n    className: classes.backdrop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Center, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, t('myhub.myhubChart.syncingRepo')))) : /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    gutterBottom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, UserHub === null || UserHub === void 0 ? void 0 : UserHub.HubName), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, t('myhub.myhubChart.repoLink'), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoURL)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, t('myhub.myhubChart.repoBranch'), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoBranch)), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.lastSyncText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, t('myhub.myhubChart.lastSynced'), ' ', formatDate(UserHub ? UserHub.LastSyncedAt : ''))), /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    className: classes.appBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: tabValue,\n    onChange: handleTabChange,\n    TabIndicatorProps: {\n      style: {\n        backgroundColor: theme.palette.highlight\n      }\n    },\n    variant: \"fullWidth\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"\".concat(t('myhub.myhubChart.preDefined')),\n    \"data-cy\": \"browseWorkflow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledTab, {\n    label: \"\".concat(t('myhub.myhubChart.chaosCharts')),\n    \"data-cy\": \"browseSchedule\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderSection, {\n    searchValue: searchPredefined,\n    changeSearch: handlePreDefinedSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chartsGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, (filteredWorkflow === null || filteredWorkflow === void 0 ? void 0 : filteredWorkflow.length) > 0 ? filteredWorkflow.map(function (expName) {\n    return /*#__PURE__*/React.createElement(ChartCard, {\n      key: expName,\n      expName: {\n        ChaosName: 'predefined',\n        ExperimentName: expName\n      },\n      UserHub: UserHub,\n      setSearch: setSearchPredefined,\n      projectID: projectID,\n      userRole: getProjectRole(),\n      isPredefined: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/no-experiment-found.svg\",\n    alt: \"no experiment\",\n    className: classes.noExpImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.noExp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, t('myhub.myhubChart.noPredefinedExp')))))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderSection, {\n    searchValue: search,\n    changeSearch: changeSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chartsGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, (filteredExperiment === null || filteredExperiment === void 0 ? void 0 : filteredExperiment.length) > 0 ? filteredExperiment.map(function (expName) {\n    return /*#__PURE__*/React.createElement(ChartCard, {\n      key: \"\".concat(expName.ChaosName, \"-\").concat(expName.ExperimentName),\n      expName: expName,\n      UserHub: UserHub,\n      setSearch: setSearch,\n      projectID: projectID,\n      userRole: getProjectRole(),\n      isPredefined: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/no-experiment-found.svg\",\n    alt: \"no experiment\",\n    className: classes.noExpImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.noExp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, t('myhub.myhubChart.noExp')))))));\n};\n\nexport default MyHub;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/MyHub/MyHubCharts/index.tsx"],"names":["useQuery","AppBar","Backdrop","Typography","Tabs","moment","React","useEffect","useState","useTranslation","useParams","useTheme","StyledTab","TabPanel","Loader","Center","Scaffold","GET_CHARTS_DATA","GET_HUB_STATUS","GET_PREDEFINED_WORKFLOW_LIST","getProjectID","getProjectRole","ChartCard","HeaderSection","useStyles","BackButton","MyHub","paramData","projectID","variables","data","fetchPolicy","hubDetails","theme","tabValue","setTabValue","UserHub","getHubStatus","filter","myHub","hubname","HubName","classes","t","loading","projectid","predefinedData","predefinedLoading","search","setSearch","searchPredefined","setSearchPredefined","changeSearch","event","target","value","handlePreDefinedSearch","totalExp","setTotalExperiment","exp","formatDate","date","updated","Date","parseInt","toString","resDate","format","handleTabChange","newValue","undefined","chartList","getCharts","forEach","expData","Spec","Experiments","expName","push","ChaosName","Metadata","Name","ExperimentName","filteredWorkflow","GetPredefinedWorkflowList","toLowerCase","includes","trim","filteredExperiment","backdrop","header","RepoURL","RepoBranch","lastSyncText","LastSyncedAt","appBar","style","backgroundColor","palette","highlight","mainDiv","chartsGroup","length","map","noExpImage","noExp"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { AppBar, Backdrop, Typography } from '@material-ui/core';\nimport Tabs from '@material-ui/core/Tabs';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\n\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport { StyledTab, TabPanel } from '../../../components/Tabs';\nimport Loader from '../../../components/Loader';\nimport Center from '../../../containers/layouts/Center';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport {\n  GET_CHARTS_DATA,\n  GET_HUB_STATUS,\n  GET_PREDEFINED_WORKFLOW_LIST,\n} from '../../../graphql';\nimport { Chart, Charts, HubStatus } from '../../../models/redux/myhub';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport ChartCard from './chartCard';\nimport HeaderSection from './headerSection';\nimport useStyles from './styles';\nimport BackButton from '../../../components/Button/BackButton';\n\ninterface ChartName {\n  ChaosName: string;\n  ExperimentName: string;\n}\n\ninterface URLParams {\n  hubname: string;\n}\n\nconst MyHub: React.FC = () => {\n  // Get Parameters from URL\n  const paramData: URLParams = useParams();\n  const projectID = getProjectID();\n  // Get all MyHubs with status\n  const { data: hubDetails } = useQuery<HubStatus>(GET_HUB_STATUS, {\n    variables: { data: projectID },\n    fetchPolicy: 'cache-and-network',\n  });\n  const theme = useTheme();\n  const [tabValue, setTabValue] = useState(1);\n\n  // Filter the selected MyHub\n  const UserHub = hubDetails?.getHubStatus.filter((myHub) => {\n    return paramData.hubname === myHub.HubName;\n  })[0];\n\n  const classes = useStyles();\n\n  const { t } = useTranslation();\n\n  // Query to get charts of selected MyHub\n  const { data, loading } = useQuery<Charts>(GET_CHARTS_DATA, {\n    variables: {\n      HubName: paramData.hubname,\n      projectID,\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  const { data: predefinedData, loading: predefinedLoading } = useQuery(\n    GET_PREDEFINED_WORKFLOW_LIST,\n    {\n      variables: {\n        hubname: paramData.hubname,\n        projectid: projectID,\n      },\n      fetchPolicy: 'network-only',\n    }\n  );\n\n  // State for searching charts\n  const [search, setSearch] = useState('');\n  const [searchPredefined, setSearchPredefined] = useState('');\n\n  const changeSearch = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setSearch(event.target.value as string);\n  };\n  const handlePreDefinedSearch = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setSearchPredefined(event.target.value as string);\n  };\n  const [totalExp, setTotalExperiment] = useState<ChartName[]>([]);\n  const exp: ChartName[] = [];\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM YYYY hh:mm:ss A');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      const chartList = data.getCharts;\n      chartList.forEach((expData: Chart) => {\n        expData.Spec.Experiments.forEach((expName) => {\n          exp.push({\n            ChaosName: expData.Metadata.Name,\n            ExperimentName: expName,\n          });\n        });\n      });\n      setTotalExperiment(exp);\n    }\n  }, [data]);\n\n  const filteredWorkflow =\n    predefinedData?.GetPredefinedWorkflowList &&\n    predefinedData?.GetPredefinedWorkflowList.filter((data: string) =>\n      data.toLowerCase().includes(searchPredefined.trim())\n    );\n\n  const filteredExperiment =\n    totalExp &&\n    totalExp.filter(\n      (data) =>\n        data.ChaosName.toLowerCase().includes(search.trim()) ||\n        data.ExperimentName.toLowerCase().includes(search.trim())\n    );\n\n  return loading || predefinedLoading ? (\n    <Backdrop open className={classes.backdrop}>\n      <Loader />\n      <Center>\n        <Typography variant=\"h4\" align=\"center\">\n          {t('myhub.myhubChart.syncingRepo')}\n        </Typography>\n      </Center>\n    </Backdrop>\n  ) : (\n    <Scaffold>\n      <BackButton />\n      <div className={classes.header}>\n        <Typography variant=\"h3\" gutterBottom>\n          {UserHub?.HubName}\n        </Typography>\n        <Typography variant=\"h5\" gutterBottom>\n          {t('myhub.myhubChart.repoLink')}\n          <strong>{UserHub?.RepoURL}</strong>\n        </Typography>\n        <Typography variant=\"h5\">\n          {t('myhub.myhubChart.repoBranch')}\n          <strong>{UserHub?.RepoBranch}</strong>\n        </Typography>\n        <Typography className={classes.lastSyncText}>\n          {t('myhub.myhubChart.lastSynced')}{' '}\n          {formatDate(UserHub ? UserHub.LastSyncedAt : '')}\n        </Typography>\n        {/* </div> */}\n      </div>\n      <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\n        <Tabs\n          value={tabValue}\n          onChange={handleTabChange}\n          TabIndicatorProps={{\n            style: {\n              backgroundColor: theme.palette.highlight,\n            },\n          }}\n          variant=\"fullWidth\"\n        >\n          <StyledTab\n            label={`${t('myhub.myhubChart.preDefined')}`}\n            data-cy=\"browseWorkflow\"\n          />\n          <StyledTab\n            label={`${t('myhub.myhubChart.chaosCharts')}`}\n            data-cy=\"browseSchedule\"\n          />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={tabValue} index={0}>\n        <div className={classes.mainDiv}>\n          <HeaderSection\n            searchValue={searchPredefined}\n            changeSearch={handlePreDefinedSearch}\n          />\n          <div className={classes.chartsGroup}>\n            {filteredWorkflow?.length > 0 ? (\n              filteredWorkflow.map((expName: string) => {\n                return (\n                  <ChartCard\n                    key={expName}\n                    expName={{\n                      ChaosName: 'predefined',\n                      ExperimentName: expName,\n                    }}\n                    UserHub={UserHub}\n                    setSearch={setSearchPredefined}\n                    projectID={projectID}\n                    userRole={getProjectRole()}\n                    isPredefined\n                  />\n                );\n              })\n            ) : (\n              <>\n                <img\n                  src=\"/icons/no-experiment-found.svg\"\n                  alt=\"no experiment\"\n                  className={classes.noExpImage}\n                />\n                <Typography variant=\"h5\" className={classes.noExp}>\n                  {t('myhub.myhubChart.noPredefinedExp')}\n                </Typography>\n              </>\n            )}\n          </div>\n        </div>\n      </TabPanel>\n      <TabPanel value={tabValue} index={1}>\n        <div className={classes.mainDiv}>\n          <HeaderSection searchValue={search} changeSearch={changeSearch} />\n          <div className={classes.chartsGroup}>\n            {filteredExperiment?.length > 0 ? (\n              filteredExperiment.map((expName: ChartName) => {\n                return (\n                  <ChartCard\n                    key={`${expName.ChaosName}-${expName.ExperimentName}`}\n                    expName={expName}\n                    UserHub={UserHub}\n                    setSearch={setSearch}\n                    projectID={projectID}\n                    userRole={getProjectRole()}\n                    isPredefined={false}\n                  />\n                );\n              })\n            ) : (\n              <>\n                <img\n                  src=\"/icons/no-experiment-found.svg\"\n                  alt=\"no experiment\"\n                  className={classes.noExpImage}\n                />\n                <Typography variant=\"h5\" className={classes.noExp}>\n                  {t('myhub.myhubChart.noExp')}\n                </Typography>\n              </>\n            )}\n          </div>\n        </div>\n      </TabPanel>\n    </Scaffold>\n  );\n};\n\nexport default MyHub;\n"]},"metadata":{},"sourceType":"module"}