{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Targets/BrowseCluster/TableData.tsx\";\n\nimport { IconButton, TableCell, Tooltip, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, LightPills, Modal } from 'litmus-ui';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport timeDifferenceForDate from '../../../utils/datesModifier';\nimport { getProjectRole } from '../../../utils/getSearchParams';\nimport useStyles from './styles';\n\nvar TableData = function TableData(_ref) {\n  var data = _ref.data,\n      deleteRow = _ref.deleteRow;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // Function to convert UNIX time in format of DD MMM YYY\n\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var resDate = moment(updated).format('DD MMM YYYY');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  var userRole = getProjectRole();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleClick = function handleClick() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    deleteRow(data.cluster_id);\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.tableDataStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, data.is_cluster_confirmed === false ? /*#__PURE__*/React.createElement(LightPills, {\n    variant: \"warning\",\n    label: t('workflowCluster.header.formControl.menu6'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }) : data.is_cluster_confirmed === true && data.is_active ? /*#__PURE__*/React.createElement(LightPills, {\n    variant: \"success\",\n    label: t('workflowCluster.header.formControl.menu1'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(LightPills, {\n    variant: \"danger\",\n    label: t('workflowCluster.header.formControl.menu2'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.workflowNameData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, data.cluster_name)), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stepsDataTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, formatDate(data.updated_at)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.stepsData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, data.no_of_workflows)), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stepsDataschedule,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, data.no_of_schedules)), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stepsData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, data.last_workflow_timestamp === '0' ? /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Not Yet\") : timeDifferenceForDate(data.last_workflow_timestamp)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    classes: {\n      tooltip: classes.customTooltip\n    },\n    disableFocusListener: true,\n    disableHoverListener: userRole !== 'Viewer',\n    placement: \"bottom\",\n    title: \"Insufficient Permissions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.deleteCluster,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.targetsIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    disabled: userRole === 'Viewer',\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"delete\",\n    src: \"./icons/ClusterDisconnect.svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, t('targets.modalDelete.disconnect'))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, open && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: function onClose() {\n      setOpen(false);\n    },\n    width: \"60%\",\n    modalActions: /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: function onClick() {\n        setOpen(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, \"\\u2715\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/DisconnectIcon.svg\",\n    alt: \"disconnect\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, t('targets.modalDelete.head1'), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 56\n    }\n  }), t('targets.modalDelete.head2'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }\n  }, data.cluster_name, \" \", t('targets.modalDelete.head4')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textSecond,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.disconnectForever,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, t('targets.modalDelete.head3'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n    onClick: function onClick() {\n      setOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, \" \", t('targets.modalDelete.no'))), /*#__PURE__*/React.createElement(ButtonFilled, {\n    disabled: userRole === 'Viewer',\n    variant: \"error\",\n    onClick: handleClose,\n    className: classes.w7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, t('targets.modalDelete.yes'))))))))));\n};\n\nexport default TableData;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Targets/BrowseCluster/TableData.tsx"],"names":["IconButton","TableCell","Tooltip","Typography","ButtonFilled","ButtonOutlined","LightPills","Modal","moment","React","useTranslation","timeDifferenceForDate","getProjectRole","useStyles","TableData","data","deleteRow","classes","t","formatDate","date","updated","Date","parseInt","toString","resDate","format","userRole","useState","open","setOpen","handleClick","handleClose","cluster_id","tableDataStatus","is_cluster_confirmed","is_active","workflowNameData","cluster_name","stepsDataTime","updated_at","stepsData","no_of_workflows","stepsDataschedule","no_of_schedules","last_workflow_timestamp","tooltip","customTooltip","deleteCluster","targetsIcon","body","text","typo","textSecond","disconnectForever","buttonGroup","w7"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,OAAhC,EAAyCC,UAAzC,QAA2D,mBAA3D;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,UAAvC,EAAmDC,KAAnD,QAAgE,WAAhE;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAOA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAAyB;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACnE,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;;AACA,wBAAcH,cAAc,EAA5B;AAAA,MAAQQ,CAAR,mBAAQA,CAAR,CAFmE,CAInE;;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAkB;AACnC,QAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASC,QAAQ,CAACH,IAAD,EAAO,EAAP,CAAR,GAAqB,IAA9B,EAAoCI,QAApC,EAAhB;AACA,QAAMC,OAAO,GAAGjB,MAAM,CAACa,OAAD,CAAN,CAAgBK,MAAhB,CAAuB,aAAvB,CAAhB;AACA,QAAIN,IAAJ,EAAU,OAAOK,OAAP;AACV,WAAO,oBAAP;AACD,GALD;;AAOA,MAAME,QAAQ,GAAGf,cAAc,EAA/B;;AAEA,wBAAwBH,KAAK,CAACmB,QAAN,CAAe,KAAf,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,MAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBhB,IAAAA,SAAS,CAACD,IAAI,CAACkB,UAAN,CAAT;AACAH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHD;;AAKA,sBACE,uDACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEb,OAAO,CAACiB,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,IAAI,CAACoB,oBAAL,KAA8B,KAA9B,gBACC,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,KAAK,EAAEjB,CAAC,CAAC,0CAAD,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAKGH,IAAI,CAACoB,oBAAL,KAA8B,IAA9B,IAAsCpB,IAAI,CAACqB,SAA3C,gBACF,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,KAAK,EAAElB,CAAC,CAAC,0CAAD,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,gBAMF,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,QADV;AAEE,IAAA,KAAK,EAAEA,CAAC,CAAC,0CAAD,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADF,eAmBE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAED,OAAO,CAACoB,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAatB,IAAI,CAACuB,YAAlB,CADF,CAnBF,eAsBE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAErB,OAAO,CAACsB,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,UAAU,CAACJ,IAAI,CAACyB,UAAN,CADb,CAtBF,eAyBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEvB,OAAO,CAACwB,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,IAAI,CAAC2B,eADR,CADF,CAzBF,eA8BE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEzB,OAAO,CAAC0B,iBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAa5B,IAAI,CAAC6B,eAAlB,CADF,CA9BF,eAiCE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAE3B,OAAO,CAACwB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,IAAI,CAAC8B,uBAAL,KAAiC,GAAjC,gBACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,GAGClC,qBAAqB,CAACI,IAAI,CAAC8B,uBAAN,CAJzB,CAjCF,eAwCE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE7B,OAAO,CAAC8B;AADV,KADX;AAIE,IAAA,oBAAoB,MAJtB;AAKE,IAAA,oBAAoB,EAAEpB,QAAQ,KAAK,QALrC;AAME,IAAA,SAAS,EAAC,QANZ;AAOE,IAAA,KAAK,EAAC,0BAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC+B,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE/B,OAAO,CAACgC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEtB,QAAQ,KAAK,QADzB;AAEE,IAAA,OAAO,EAAEI,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,GAAG,EAAC,QAAT;AAAkB,IAAA,GAAG,EAAC,+BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAab,CAAC,CAAC,gCAAD,CAAd,CADF,CATF,CATF,CADF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,IAAI,iBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbC,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAJH;AAKE,IAAA,KAAK,EAAC,KALR;AAME,IAAA,YAAY,eACV,oBAAC,cAAD;AACE,MAAA,OAAO,EAAE,mBAAM;AACbA,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAgBE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACiC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAC,2BAAT;AAAqC,IAAA,GAAG,EAAC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAEjC,OAAO,CAACkC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAElC,OAAO,CAACmC,IAA/B;AAAqC,IAAA,KAAK,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlC,CAAC,CAAC,2BAAD,CADJ,oBACmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnC,EAEGA,CAAC,CAAC,2BAAD,CAFJ,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACuB,YADR,OACuBpB,CAAC,CAAC,2BAAD,CADxB,CAJF,CADF,CAFF,eAYE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACoC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEpC,OAAO,CAACqC,iBADrB;AAEE,IAAA,KAAK,EAAC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGpC,CAAC,CAAC,2BAAD,CAJJ,CADF,CAZF,eAoBE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACsC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbzB,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,+CAAIZ,CAAC,CAAC,wBAAD,CAAL,CALF,CADF,eASE,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAES,QAAQ,KAAK,QADzB;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,OAAO,EAAEK,WAHX;AAIE,IAAA,SAAS,EAAEf,OAAO,CAACuC,EAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,0CAAGtC,CAAC,CAAC,yBAAD,CAAJ,CANF,CATF,CApBF,CAhBF,CADF,CAFJ,CAxBF,CAxCF,CADF;AAkID,CA3JD;;AA4JA,eAAeJ,SAAf","sourcesContent":["import { IconButton, TableCell, Tooltip, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, LightPills, Modal } from 'litmus-ui';\nimport moment from 'moment';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Cluster } from '../../../models/graphql/clusterData';\nimport timeDifferenceForDate from '../../../utils/datesModifier';\nimport { getProjectRole } from '../../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface TableDataProps {\n  data: Cluster;\n  deleteRow: (clid: string) => void;\n}\n\nconst TableData: React.FC<TableDataProps> = ({ data, deleteRow }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM YYYY');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  const userRole = getProjectRole();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    deleteRow(data.cluster_id);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <TableCell className={classes.tableDataStatus}>\n        {data.is_cluster_confirmed === false ? (\n          <LightPills\n            variant=\"warning\"\n            label={t('workflowCluster.header.formControl.menu6')}\n          />\n        ) : data.is_cluster_confirmed === true && data.is_active ? (\n          <LightPills\n            variant=\"success\"\n            label={t('workflowCluster.header.formControl.menu1')}\n          />\n        ) : (\n          <LightPills\n            variant=\"danger\"\n            label={t('workflowCluster.header.formControl.menu2')}\n          />\n        )}\n      </TableCell>\n      <TableCell className={classes.workflowNameData}>\n        <Typography>{data.cluster_name}</Typography>\n      </TableCell>\n      <TableCell className={classes.stepsDataTime}>\n        {formatDate(data.updated_at)}\n      </TableCell>\n      <TableCell>\n        <Typography className={classes.stepsData}>\n          {data.no_of_workflows}\n        </Typography>\n      </TableCell>\n      <TableCell className={classes.stepsDataschedule}>\n        <Typography>{data.no_of_schedules}</Typography>\n      </TableCell>\n      <TableCell className={classes.stepsData}>\n        {data.last_workflow_timestamp === '0' ? (\n          <Typography>Not Yet</Typography>\n        ) : (\n          timeDifferenceForDate(data.last_workflow_timestamp)\n        )}\n      </TableCell>\n      <TableCell>\n        <Tooltip\n          classes={{\n            tooltip: classes.customTooltip,\n          }}\n          disableFocusListener\n          disableHoverListener={userRole !== 'Viewer'}\n          placement=\"bottom\"\n          title=\"Insufficient Permissions\"\n        >\n          <div className={classes.deleteCluster}>\n            <div className={classes.targetsIcon}>\n              <IconButton\n                disabled={userRole === 'Viewer'}\n                onClick={handleClick}\n              >\n                <img alt=\"delete\" src=\"./icons/ClusterDisconnect.svg\" />\n              </IconButton>\n            </div>\n            <div>\n              <Typography>{t('targets.modalDelete.disconnect')}</Typography>\n            </div>\n          </div>\n        </Tooltip>\n        <div>\n          {open && (\n            <div>\n              <Modal\n                open={open}\n                onClose={() => {\n                  setOpen(false);\n                }}\n                width=\"60%\"\n                modalActions={\n                  <ButtonOutlined\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    &#x2715;\n                  </ButtonOutlined>\n                }\n              >\n                <div className={classes.body}>\n                  <img src=\"/icons/DisconnectIcon.svg\" alt=\"disconnect\" />\n                  <div className={classes.text}>\n                    <Typography className={classes.typo} align=\"center\">\n                      {t('targets.modalDelete.head1')} <br />\n                      {t('targets.modalDelete.head2')}\n                      <br />\n                      <strong>\n                        {data.cluster_name} {t('targets.modalDelete.head4')}\n                      </strong>\n                    </Typography>\n                  </div>\n                  <div className={classes.textSecond}>\n                    <Typography\n                      className={classes.disconnectForever}\n                      align=\"center\"\n                    >\n                      {t('targets.modalDelete.head3')}\n                    </Typography>\n                  </div>\n                  <div className={classes.buttonGroup}>\n                    <ButtonOutlined\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <> {t('targets.modalDelete.no')}</>\n                    </ButtonOutlined>\n\n                    <ButtonFilled\n                      disabled={userRole === 'Viewer'}\n                      variant=\"error\"\n                      onClick={handleClose}\n                      className={classes.w7}\n                    >\n                      <>{t('targets.modalDelete.yes')}</>\n                    </ButtonFilled>\n                  </div>\n                </div>\n              </Modal>\n            </div>\n          )}\n        </div>\n      </TableCell>\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}