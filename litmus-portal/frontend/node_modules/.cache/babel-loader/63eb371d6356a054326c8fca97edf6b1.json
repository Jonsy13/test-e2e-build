{"ast":null,"code":"import React from'react';import{useTranslation}from'react-i18next';import{InputField}from'litmus-ui';import useStyles from'./styles';import{isValidWebUrl,validateStartEmptySpacing}from'../../../utils/validate';var GithubInputFields=function GithubInputFields(_ref){var gitURL=_ref.gitURL,gitBranch=_ref.gitBranch,setGitBranch=_ref.setGitBranch,setGitURL=_ref.setGitURL;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"githubURLInput\"},/*#__PURE__*/React.createElement(InputField,{label:\"Git URL\",value:gitURL,helperText:!isValidWebUrl(gitURL)?t('myhub.validURL'):'',variant:!isValidWebUrl(gitURL)?'error':'primary',required:true,onChange:setGitURL,className:classes.inputField})),/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"githubBranchInput\"},/*#__PURE__*/React.createElement(InputField,{label:\"Branch\",value:gitBranch,helperText:validateStartEmptySpacing(gitBranch)?t('myhub.validationEmptySpace'):'',variant:validateStartEmptySpacing(gitBranch)?'error':'primary',required:true,onChange:setGitBranch,className:classes.inputFieldBranch})));};export default GithubInputFields;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/GitHubComponents/GithubInputFields/GithubInputFields.tsx"],"names":["React","useTranslation","InputField","useStyles","isValidWebUrl","validateStartEmptySpacing","GithubInputFields","gitURL","gitBranch","setGitBranch","setGitURL","classes","t","inputField","inputFieldBranch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,UAAT,KAA2B,WAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,OACEC,aADF,CAEEC,yBAFF,KAGO,yBAHP,CAgBA,GAAMC,CAAAA,iBAA4C,CAAG,QAA/CA,CAAAA,iBAA+C,MAK/C,IAJJC,CAAAA,MAII,MAJJA,MAII,CAHJC,SAGI,MAHJA,SAGI,CAFJC,YAEI,MAFJA,YAEI,CADJC,SACI,MADJA,SACI,CACJ,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CACA,oBAAcF,cAAc,EAA5B,CAAQW,CAAR,iBAAQA,CAAR,CACA,mBACE,qDACE,2BAAK,UAAQ,gBAAb,eACE,oBAAC,UAAD,EACE,KAAK,CAAC,SADR,CAEE,KAAK,CAAEL,MAFT,CAGE,UAAU,CAAE,CAACH,aAAa,CAACG,MAAD,CAAd,CAAyBK,CAAC,CAAC,gBAAD,CAA1B,CAA+C,EAH7D,CAIE,OAAO,CAAE,CAACR,aAAa,CAACG,MAAD,CAAd,CAAyB,OAAzB,CAAmC,SAJ9C,CAKE,QAAQ,KALV,CAME,QAAQ,CAAEG,SANZ,CAOE,SAAS,CAAEC,OAAO,CAACE,UAPrB,EADF,CADF,cAYE,2BAAK,UAAQ,mBAAb,eACE,oBAAC,UAAD,EACE,KAAK,CAAC,QADR,CAEE,KAAK,CAAEL,SAFT,CAGE,UAAU,CACRH,yBAAyB,CAACG,SAAD,CAAzB,CACII,CAAC,CAAC,4BAAD,CADL,CAEI,EANR,CAQE,OAAO,CAAEP,yBAAyB,CAACG,SAAD,CAAzB,CAAuC,OAAvC,CAAiD,SAR5D,CASE,QAAQ,KATV,CAUE,QAAQ,CAAEC,YAVZ,CAWE,SAAS,CAAEE,OAAO,CAACG,gBAXrB,EADF,CAZF,CADF,CA8BD,CAtCD,CAwCA,cAAeR,CAAAA,iBAAf","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from 'litmus-ui';\nimport useStyles from './styles';\nimport {\n  isValidWebUrl,\n  validateStartEmptySpacing,\n} from '../../../utils/validate';\n\ninterface MyHubInputProps {\n  gitURL: string;\n  setGitURL: (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n  gitBranch: string;\n  setGitBranch: (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n}\n\nconst GithubInputFields: React.FC<MyHubInputProps> = ({\n  gitURL,\n  gitBranch,\n  setGitBranch,\n  setGitURL,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  return (\n    <>\n      <div data-cy=\"githubURLInput\">\n        <InputField\n          label=\"Git URL\"\n          value={gitURL}\n          helperText={!isValidWebUrl(gitURL) ? t('myhub.validURL') : ''}\n          variant={!isValidWebUrl(gitURL) ? 'error' : 'primary'}\n          required\n          onChange={setGitURL}\n          className={classes.inputField}\n        />\n      </div>\n      <div data-cy=\"githubBranchInput\">\n        <InputField\n          label=\"Branch\"\n          value={gitBranch}\n          helperText={\n            validateStartEmptySpacing(gitBranch)\n              ? t('myhub.validationEmptySpace')\n              : ''\n          }\n          variant={validateStartEmptySpacing(gitBranch) ? 'error' : 'primary'}\n          required\n          onChange={setGitBranch}\n          className={classes.inputFieldBranch}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default GithubInputFields;\n"]},"metadata":{},"sourceType":"module"}