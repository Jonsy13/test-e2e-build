{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/AgentDeployModal/index.tsx\";\n\nimport { Typography } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { ButtonFilled, ButtonOutlined } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\nvar AgentDeployModal = function AgentDeployModal(_ref) {\n  var handleClose = _ref.handleClose;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      copying = _useState2[0],\n      setCopying = _useState2[1];\n\n  function fallbackCopyTextToClipboard(text) {\n    // eslint-disable-next-line no-alert\n    window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n  }\n\n  function copyTextToClipboard(text) {\n    if (!navigator.clipboard) {\n      fallbackCopyTextToClipboard(text);\n      return;\n    }\n\n    setCopying(true);\n    navigator.clipboard.writeText(text).catch(function (err) {\n      return console.error('Async: Could not copy text: ', err);\n    });\n    setTimeout(function () {\n      return setCopying(false);\n    }, 3000);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/agentDeployModal.svg\",\n    alt: \"Target Connect\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, t('homeViews.landingHome.agentDeployModal.heading'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.instructionSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, t('homeViews.landingHome.agentDeployModal.firstStep')), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, t('homeViews.landingHome.agentDeployModal.secondStep'), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/litmuschaos/litmusctl\",\n    target: \"_blank\",\n    rel: \"noreferrer noopener\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, t('homeViews.landingHome.agentDeployModal.litmusctl'))), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, t('homeViews.landingHome.agentDeployModal.thirdStep'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.copyCommandSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commandRect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, t('homeViews.landingHome.agentDeployModal.agentRegister'))), /*#__PURE__*/React.createElement(ButtonOutlined, {\n    className: classes.copyButton,\n    onClick: function onClick() {\n      return copyTextToClipboard(\"litmusctl agent connect\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, copying ? /*#__PURE__*/React.createElement(DoneIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/copy.svg\",\n    alt: \"copy\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, t('homeViews.landingHome.agentDeployModal.copy'))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.doneButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, t('homeViews.landingHome.agentDeployModal.done')))));\n};\n\nexport { AgentDeployModal };","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/components/AgentDeployModal/index.tsx"],"names":["Typography","DoneIcon","ButtonFilled","ButtonOutlined","React","useState","useTranslation","useStyles","AgentDeployModal","handleClose","classes","t","copying","setCopying","fallbackCopyTextToClipboard","text","window","prompt","copyTextToClipboard","navigator","clipboard","writeText","catch","err","console","error","setTimeout","modalContainer","heading","instructionSection","copyCommandSection","commandRect","copyButton","doneButton"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { ButtonFilled, ButtonOutlined } from 'litmus-ui';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\ninterface AgentDeployModalProps {\n  handleClose: () => void;\n}\n\nconst AgentDeployModal: React.FC<AgentDeployModalProps> = ({ handleClose }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [copying, setCopying] = useState<boolean>(false);\n\n  function fallbackCopyTextToClipboard(text: string) {\n    // eslint-disable-next-line no-alert\n    window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n  }\n\n  function copyTextToClipboard(text: string) {\n    if (!navigator.clipboard) {\n      fallbackCopyTextToClipboard(text);\n      return;\n    }\n    setCopying(true);\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n\n    setTimeout(() => setCopying(false), 3000);\n  }\n\n  return (\n    <div className={classes.modalContainer}>\n      <div className={classes.heading}>\n        <img src=\"./icons/agentDeployModal.svg\" alt=\"Target Connect\" />\n        <Typography>\n          {t('homeViews.landingHome.agentDeployModal.heading')}\n        </Typography>\n      </div>\n      <div className={classes.instructionSection}>\n        <Typography>\n          {t('homeViews.landingHome.agentDeployModal.firstStep')}\n        </Typography>\n        <Typography>\n          {t('homeViews.landingHome.agentDeployModal.secondStep')}\n          <a\n            href=\"https://github.com/litmuschaos/litmusctl\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            {t('homeViews.landingHome.agentDeployModal.litmusctl')}\n          </a>\n        </Typography>\n        <Typography>\n          {t('homeViews.landingHome.agentDeployModal.thirdStep')}\n        </Typography>\n      </div>\n      <div className={classes.copyCommandSection}>\n        <div className={classes.commandRect}>\n          <Typography>\n            {t('homeViews.landingHome.agentDeployModal.agentRegister')}\n          </Typography>\n        </div>\n        <ButtonOutlined\n          className={classes.copyButton}\n          onClick={() => copyTextToClipboard(`litmusctl agent connect`)}\n        >\n          {copying ? (\n            <DoneIcon />\n          ) : (\n            <>\n              <img src=\"./icons/copy.svg\" alt=\"copy\" />\n              <Typography>\n                {t('homeViews.landingHome.agentDeployModal.copy')}\n              </Typography>\n            </>\n          )}\n        </ButtonOutlined>\n      </div>\n      <div className={classes.doneButton}>\n        <ButtonFilled onClick={handleClose}>\n          <Typography>\n            {t('homeViews.landingHome.agentDeployModal.done')}\n          </Typography>\n        </ButtonFilled>\n      </div>\n    </div>\n  );\n};\n\nexport { AgentDeployModal };\n"]},"metadata":{},"sourceType":"module"}