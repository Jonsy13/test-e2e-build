{"ast":null,"code":"import{Link,Typography}from'@material-ui/core';import React from'react';import{useTranslation}from'react-i18next';import useActions from'../../../../redux/actions';import*as NodeSelectionActions from'../../../../redux/actions/nodeSelection';import{history}from'../../../../redux/configureStore';import timeDifferenceForDate from'../../../../utils/datesModifier';import{getProjectID,getProjectRole}from'../../../../utils/getSearchParams';import{FAILED,PENDING,RUNNING,SUCCEEDED}from'../../../WorkflowDetails/workflowConstants';import useStyles from'./styles';var WorkflowRunCard=function WorkflowRunCard(_ref){var _data$resiliency_scor;var data=_ref.data;var _useTranslation=useTranslation(),t=_useTranslation.t;var classes=useStyles();var projectID=getProjectID();var projectRole=getProjectRole();var nodeSelection=useActions(NodeSelectionActions);function getPhaseVariant(variant){switch(variant){case SUCCEEDED:return classes.succeeded;case RUNNING:return classes.running;case FAILED:return classes.failed;case PENDING:return classes.pending;default:return classes.pending;}}function getResiliencyScoreVariant(score){if(score<=40){return classes.lowScore;}if(score>40&&score<79){return classes.mediumScore;}return classes.highScore;}return/*#__PURE__*/React.createElement(Link,{underline:\"none\",color:\"initial\",onClick:function onClick(){nodeSelection.selectNode({pod_name:''});history.push({pathname:\"/workflows/\".concat(data.workflow_run_id),search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});},title:t('homeViews.agentConfiguredHome.recentWorkflowRuns.workflowRunCard.cardTitle')},/*#__PURE__*/React.createElement(\"div\",{className:classes.animatedContainer},/*#__PURE__*/React.createElement(\"div\",{className:classes.workflowDataContainer},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.statusDiv},/*#__PURE__*/React.createElement(\"svg\",{viewBox:\"0 0 10 10\"},/*#__PURE__*/React.createElement(\"circle\",{className:getPhaseVariant(data.phase)})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:\"\".concat(classes.testName,\" \").concat(classes.noWrapProvider)},data.workflow_name),/*#__PURE__*/React.createElement(Typography,{className:classes.hint},data.cluster_name)))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:classes.hint},t('homeViews.agentConfiguredHome.recentWorkflowRuns.workflowRunCard.resilienceRate')),/*#__PURE__*/React.createElement(Typography,{className:getResiliencyScoreVariant((_data$resiliency_scor=data.resiliency_score)!==null&&_data$resiliency_scor!==void 0?_data$resiliency_scor:0)},data.resiliency_score===undefined||data.resiliency_score===null?'NA':\"\".concat(data.resiliency_score,\"%\"))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:classes.hint},t('homeViews.agentConfiguredHome.recentWorkflowRuns.workflowRunCard.lastRun')),/*#__PURE__*/React.createElement(Typography,{className:\"\".concat(classes.noWrapProvider,\" \").concat(classes.lastRunTime)},timeDifferenceForDate(data.last_updated))))));};export{WorkflowRunCard};","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Home/AgentConfiguredHome/WorkflowRunCard/index.tsx"],"names":["Link","Typography","React","useTranslation","useActions","NodeSelectionActions","history","timeDifferenceForDate","getProjectID","getProjectRole","FAILED","PENDING","RUNNING","SUCCEEDED","useStyles","WorkflowRunCard","data","t","classes","projectID","projectRole","nodeSelection","getPhaseVariant","variant","succeeded","running","failed","pending","getResiliencyScoreVariant","score","lowScore","mediumScore","highScore","selectNode","pod_name","push","pathname","workflow_run_id","search","animatedContainer","workflowDataContainer","statusDiv","phase","testName","noWrapProvider","workflow_name","hint","cluster_name","resiliency_score","undefined","lastRunTime","last_updated"],"mappings":"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","sourcesContent":["import { Link, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { WorkflowRun } from '../../../../models/graphql/workflowData';\nimport useActions from '../../../../redux/actions';\nimport * as NodeSelectionActions from '../../../../redux/actions/nodeSelection';\nimport { history } from '../../../../redux/configureStore';\nimport timeDifferenceForDate from '../../../../utils/datesModifier';\nimport {\n  getProjectID,\n  getProjectRole,\n} from '../../../../utils/getSearchParams';\nimport {\n  FAILED,\n  PENDING,\n  RUNNING,\n  SUCCEEDED,\n} from '../../../WorkflowDetails/workflowConstants';\nimport useStyles from './styles';\n\ninterface WorkflowRunCardProps {\n  data: Partial<WorkflowRun>;\n}\n\nconst WorkflowRunCard: React.FC<WorkflowRunCardProps> = ({ data }) => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n\n  const nodeSelection = useActions(NodeSelectionActions);\n\n  function getPhaseVariant(variant: string | undefined): string {\n    switch (variant) {\n      case SUCCEEDED:\n        return classes.succeeded;\n      case RUNNING:\n        return classes.running;\n      case FAILED:\n        return classes.failed;\n      case PENDING:\n        return classes.pending;\n      default:\n        return classes.pending;\n    }\n  }\n\n  function getResiliencyScoreVariant(score: number) {\n    if (score <= 40) {\n      return classes.lowScore;\n    }\n    if (score > 40 && score < 79) {\n      return classes.mediumScore;\n    }\n    return classes.highScore;\n  }\n\n  return (\n    <Link\n      underline=\"none\"\n      color=\"initial\"\n      onClick={() => {\n        nodeSelection.selectNode({\n          pod_name: '',\n        });\n        history.push({\n          pathname: `/workflows/${data.workflow_run_id}`,\n          search: `?projectID=${projectID}&projectRole=${projectRole}`,\n        });\n      }}\n      title={t(\n        'homeViews.agentConfiguredHome.recentWorkflowRuns.workflowRunCard.cardTitle'\n      )}\n    >\n      <div className={classes.animatedContainer}>\n        <div className={classes.workflowDataContainer}>\n          <div>\n            <div className={classes.statusDiv}>\n              <svg viewBox=\"0 0 10 10\">\n                <circle className={getPhaseVariant(data.phase)} />\n              </svg>\n              <div>\n                <Typography\n                  className={`${classes.testName} ${classes.noWrapProvider}`}\n                >\n                  {data.workflow_name}\n                </Typography>\n                <Typography className={classes.hint}>\n                  {data.cluster_name}\n                </Typography>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <Typography className={classes.hint}>\n              {t(\n                'homeViews.agentConfiguredHome.recentWorkflowRuns.workflowRunCard.resilienceRate'\n              )}\n            </Typography>\n            <Typography\n              className={getResiliencyScoreVariant(data.resiliency_score ?? 0)}\n            >\n              {data.resiliency_score === undefined ||\n              data.resiliency_score === null\n                ? 'NA'\n                : `${data.resiliency_score}%`}\n            </Typography>\n          </div>\n\n          <div>\n            <Typography className={classes.hint}>\n              {t(\n                'homeViews.agentConfiguredHome.recentWorkflowRuns.workflowRunCard.lastRun'\n              )}\n            </Typography>\n            <Typography\n              className={`${classes.noWrapProvider} ${classes.lastRunTime}`}\n            >\n              {timeDifferenceForDate(data.last_updated)}\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport { WorkflowRunCard };\n"]},"metadata":{},"sourceType":"module"}