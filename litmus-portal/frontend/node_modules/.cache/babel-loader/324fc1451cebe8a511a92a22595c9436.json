{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/Overview/index.tsx\";\n\nimport { useQuery } from '@apollo/client';\nimport { Link, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, TextButton } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../components/Loader';\nimport { MainInfoContainer } from '../../../components/MainInfoContainer';\nimport { OverviewContainer } from '../../../components/OverviewContainer';\nimport { RecentOverviewContainer } from '../../../components/RecentOverviewContainer';\nimport { UnconfiguredAgent } from '../../../components/UnconfiguredAgent';\nimport Center from '../../../containers/layouts/Center';\nimport { GET_CLUSTER_LENGTH, LIST_DASHBOARD_OVERVIEW, LIST_DATASOURCE_OVERVIEW, WORKFLOW_DETAILS } from '../../../graphql';\nimport { history } from '../../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport { ApplicationDashboardCard } from './ApplicationDashboardCard';\nimport useStyles from './styles';\nimport { WorkflowDashboardCard } from './WorkflowDashboardCard';\n\nvar Overview = function Overview() {\n  var _filteredDashboardLis;\n\n  var classes = useStyles();\n  var projectID = getProjectID();\n  var projectRole = getProjectRole();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var dataSource = false;\n  var workflowDashboardCount = 0;\n  var applicationDashboardCount = 0;\n  var isAgentPresent = false; // Query to check if agent is present or not\n\n  var _useQuery = useQuery(GET_CLUSTER_LENGTH, {\n    variables: {\n      project_id: getProjectID()\n    },\n    fetchPolicy: 'network-only'\n  }),\n      agentList = _useQuery.data,\n      agentListLoading = _useQuery.loading; // Set boolean to conditionally render agent setup banner\n\n\n  if (agentList) {\n    isAgentPresent = agentList.getCluster.length > 0;\n  } // Check for data source being present or not\n\n\n  var _useQuery2 = useQuery(LIST_DATASOURCE_OVERVIEW, {\n    variables: {\n      projectID: projectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      dataSourceListData = _useQuery2.data,\n      dataSourceListLoading = _useQuery2.loading,\n      dataSourceListError = _useQuery2.error; // Set boolean to conditionally render the banner\n\n\n  if (dataSourceListData) {\n    dataSource = dataSourceListData.ListDataSource.length > 0;\n  } // Fetch data to display for the workflow dashboard cards\n\n\n  var _useQuery3 = useQuery(WORKFLOW_DETAILS, {\n    variables: {\n      workflowRunsInput: {\n        project_id: projectID,\n        pagination: {\n          page: 0,\n          limit: 3\n        }\n      }\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      workflowData = _useQuery3.data,\n      workflowLoading = _useQuery3.loading,\n      workflowError = _useQuery3.error; // Get count for workflowData length to render conditionally\n\n\n  if (workflowData) {\n    workflowDashboardCount = workflowData.getWorkflowRuns.workflow_runs.length;\n  } // Fetch data to display for the application dashboard cards\n\n\n  var _useQuery4 = useQuery(LIST_DASHBOARD_OVERVIEW, {\n    variables: {\n      projectID: projectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      dashboardListData = _useQuery4.data,\n      dashboardListLoading = _useQuery4.loading,\n      dashboardListError = _useQuery4.error; // Get count for dashboardListData length to render conditionally\n\n\n  if (dashboardListData) {\n    var _dashboardListData$Li;\n\n    applicationDashboardCount = (_dashboardListData$Li = dashboardListData.ListDashboard) === null || _dashboardListData$Li === void 0 ? void 0 : _dashboardListData$Li.length;\n  } // Loader for confirmation of agent presence\n\n\n  if (agentListLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '50vh'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Center, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      message: \"Looking for an agent..\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    })));\n  } // Prompt user to setup an agent before continuing\n\n\n  if (!isAgentPresent) {\n    return /*#__PURE__*/React.createElement(UnconfiguredAgent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 12\n      }\n    });\n  } // Prompt user to create a workflow to view analytics on\n\n\n  if (!workflowDashboardCount) {\n    return /*#__PURE__*/React.createElement(MainInfoContainer, {\n      src: \"./icons/workflowScheduleHome.svg\",\n      alt: \"Schedule a workflow\",\n      heading: t('homeViews.agentConfiguredHome.noWorkflow.heading'),\n      description: t('homeViews.agentConfiguredHome.noWorkflow.description'),\n      button: /*#__PURE__*/React.createElement(ButtonFilled, {\n        onClick: function onClick() {\n          history.push({\n            pathname: '/create-workflow',\n            search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, t('homeViews.agentConfiguredHome.noWorkflow.schedule'))),\n      link: /*#__PURE__*/React.createElement(TextButton, {\n        variant: \"highlight\",\n        onClick: function onClick() {\n          history.push({\n            pathname: '/myhub/Chaos%20Hub',\n            search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, t('homeViews.agentConfiguredHome.noWorkflow.explore'))),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    });\n  } // Loader for Data source fetching duration\n\n\n  if (dataSourceListLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '50vh'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Center, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      message: \"Loading available data sources\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  var filteredDashboardListData; // Select the latest 3 dashboards\n\n  if (applicationDashboardCount > 0) {\n    filteredDashboardListData = dashboardListData === null || dashboardListData === void 0 ? void 0 : dashboardListData.ListDashboard.slice(-3);\n  } // Generic Apollo error:\n\n\n  if (dataSourceListError || workflowError || dashboardListError) {\n    console.error('Error fetching the data!');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '50vh'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Center, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, \"Error fetching the data!\")));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, !dataSource && /*#__PURE__*/React.createElement(MainInfoContainer, {\n    src: \"./icons/cloud.svg\",\n    alt: \"Schedule a workflow\",\n    heading: \"Connect data source\",\n    description: \"To configure your first Kubernetes dashboard you need to connect a data source. Select \\u201CAdd data source\\u201D to connect.\",\n    button: /*#__PURE__*/React.createElement(ButtonFilled, {\n      onClick: function onClick() {\n        history.push({\n          pathname: '/analytics/datasource/create',\n          search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, \"Add data source\")),\n    link: /*#__PURE__*/React.createElement(Link, {\n      underline: \"none\",\n      href: \"https://github.com/litmuschaos/litmus/tree/master/monitoring#model-1-optional-prometheus-scrape-config-model\",\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextButton, {\n      variant: \"highlight\",\n      className: classes.docsButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, \"Sample Prometheus configuration\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./icons/externalLink.svg\",\n      alt: \"external link\",\n      title: \"Read documentation\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }), dataSource && !applicationDashboardCount && /*#__PURE__*/React.createElement(MainInfoContainer, {\n    src: \"./icons/dashboardCloud.svg\",\n    alt: \"Schedule a workflow\",\n    heading: \"Configure a chaos interleaved dashboard\",\n    description: \"Data source(s) have been found to be connected in this project. Select \\u201CCreate dashboard\\u201D to configure a chaos interleaved dashboard\",\n    button: /*#__PURE__*/React.createElement(ButtonFilled, {\n      onClick: function onClick() {\n        history.push({\n          pathname: '/analytics/dashboard/create',\n          search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, \"Create dashboard\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }), ' ', workflowDashboardCount > 0 ? /*#__PURE__*/React.createElement(RecentOverviewContainer, {\n    heading: \"Recently updated workflow dashboards\",\n    buttonLink: \"/create-workflow\",\n    buttonImgSrc: \"./icons/calendarBlank.svg\",\n    buttonImgAlt: \"Schedule workflow\",\n    buttonText: \"Schedule workflow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, workflowLoading ? /*#__PURE__*/React.createElement(Center, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  })) : workflowData === null || workflowData === void 0 ? void 0 : workflowData.getWorkflowRuns.workflow_runs.map(function (workflow) {\n    return /*#__PURE__*/React.createElement(WorkflowDashboardCard, {\n      key: workflow.workflow_id,\n      data: workflow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    });\n  })) : /*#__PURE__*/React.createElement(OverviewContainer, {\n    count: 0,\n    countUnit: \"workflows\",\n    description: \"Create complex chaos workflows, automate them and monitor the variations in resilience levels. You can use this Kubernetes cluster to create new reliability work flows and compliance reports\",\n    maxWidth: \"38.5625rem\",\n    button: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: function onClick() {\n        history.push({\n          pathname: '/create-workflow',\n          search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n        });\n      },\n      className: classes.infoContainerButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./icons/calendarBlankDark.svg\",\n      alt: \"calendar\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 19\n      }\n    }), t('homeViews.agentConfiguredHome.agentInfoContainer.deploy')))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }), applicationDashboardCount > 0 && /*#__PURE__*/React.createElement(RecentOverviewContainer, {\n    heading: \"Recently viewed application dashboards\",\n    buttonLink: \"/analytics/dashboard/create\",\n    buttonImgSrc: \"./icons/cloudWhite.svg\",\n    buttonImgAlt: \"Create dashboard\",\n    buttonText: \"Create dashbaord\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, dashboardListLoading ? /*#__PURE__*/React.createElement(Center, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  })) : (_filteredDashboardLis = filteredDashboardListData) === null || _filteredDashboardLis === void 0 ? void 0 : _filteredDashboardLis.map(function (dashboard) {\n    return /*#__PURE__*/React.createElement(ApplicationDashboardCard, {\n      key: dashboard.db_id,\n      data: dashboard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    });\n  })), dataSource && /*#__PURE__*/React.createElement(OverviewContainer, {\n    count: 1,\n    countUnit: \"Data source\",\n    description: \"Data sources are needed to configure interleaving dashboards\",\n    maxWidth: \"38.5625rem\",\n    button: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonOutlined, {\n      className: classes.infoContainerButton,\n      onClick: function onClick() {\n        history.push({\n          pathname: '/analytics/datasource/create',\n          search: \"?projectID=\".concat(projectID, \"&projectRole=\").concat(projectRole)\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./icons/dataSource.svg\",\n      alt: \"DataSource\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }, \"Add data source\"))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Overview;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/Overview/index.tsx"],"names":["useQuery","Link","Typography","ButtonFilled","ButtonOutlined","TextButton","React","useTranslation","Loader","MainInfoContainer","OverviewContainer","RecentOverviewContainer","UnconfiguredAgent","Center","GET_CLUSTER_LENGTH","LIST_DASHBOARD_OVERVIEW","LIST_DATASOURCE_OVERVIEW","WORKFLOW_DETAILS","history","getProjectID","getProjectRole","ApplicationDashboardCard","useStyles","WorkflowDashboardCard","Overview","classes","projectID","projectRole","t","dataSource","workflowDashboardCount","applicationDashboardCount","isAgentPresent","variables","project_id","fetchPolicy","agentList","data","agentListLoading","loading","getCluster","length","dataSourceListData","dataSourceListLoading","dataSourceListError","error","ListDataSource","workflowRunsInput","pagination","page","limit","workflowData","workflowLoading","workflowError","getWorkflowRuns","workflow_runs","dashboardListData","dashboardListLoading","dashboardListError","ListDashboard","height","push","pathname","search","filteredDashboardListData","slice","console","docsButton","map","workflow","workflow_id","infoContainerButton","dashboard","db_id"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Link, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, TextButton } from 'litmus-ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../../../components/Loader';\nimport { MainInfoContainer } from '../../../components/MainInfoContainer';\nimport { OverviewContainer } from '../../../components/OverviewContainer';\nimport { RecentOverviewContainer } from '../../../components/RecentOverviewContainer';\nimport { UnconfiguredAgent } from '../../../components/UnconfiguredAgent';\nimport Center from '../../../containers/layouts/Center';\nimport {\n  GET_CLUSTER_LENGTH,\n  LIST_DASHBOARD_OVERVIEW,\n  LIST_DATASOURCE_OVERVIEW,\n  WORKFLOW_DETAILS,\n} from '../../../graphql';\nimport { Clusters, ClusterVars } from '../../../models/graphql/clusterData';\nimport {\n  DashboardList,\n  ListDashboardVars,\n} from '../../../models/graphql/dashboardsDetails';\nimport {\n  DataSourceList,\n  ListDataSourceVars,\n} from '../../../models/graphql/dataSourceDetails';\nimport {\n  Workflow,\n  WorkflowDataVars,\n} from '../../../models/graphql/workflowData';\nimport { history } from '../../../redux/configureStore';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport { ApplicationDashboardCard } from './ApplicationDashboardCard';\nimport useStyles from './styles';\nimport { WorkflowDashboardCard } from './WorkflowDashboardCard';\n\nconst Overview: React.FC = () => {\n  const classes = useStyles();\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n  const { t } = useTranslation();\n\n  let dataSource = false;\n  let workflowDashboardCount = 0;\n  let applicationDashboardCount = 0;\n  let isAgentPresent = false;\n\n  // Query to check if agent is present or not\n  const { data: agentList, loading: agentListLoading } = useQuery<\n    Clusters,\n    ClusterVars\n  >(GET_CLUSTER_LENGTH, {\n    variables: { project_id: getProjectID() },\n    fetchPolicy: 'network-only',\n  });\n\n  // Set boolean to conditionally render agent setup banner\n  if (agentList) {\n    isAgentPresent = agentList.getCluster.length > 0;\n  }\n\n  // Check for data source being present or not\n  const {\n    data: dataSourceListData,\n    loading: dataSourceListLoading,\n    error: dataSourceListError,\n  } = useQuery<DataSourceList, ListDataSourceVars>(LIST_DATASOURCE_OVERVIEW, {\n    variables: { projectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Set boolean to conditionally render the banner\n  if (dataSourceListData) {\n    dataSource = dataSourceListData.ListDataSource.length > 0;\n  }\n\n  // Fetch data to display for the workflow dashboard cards\n  const {\n    data: workflowData,\n    loading: workflowLoading,\n    error: workflowError,\n  } = useQuery<Workflow, WorkflowDataVars>(WORKFLOW_DETAILS, {\n    variables: {\n      workflowRunsInput: {\n        project_id: projectID,\n        pagination: {\n          page: 0,\n          limit: 3,\n        },\n      },\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Get count for workflowData length to render conditionally\n  if (workflowData) {\n    workflowDashboardCount = workflowData.getWorkflowRuns.workflow_runs.length;\n  }\n\n  // Fetch data to display for the application dashboard cards\n  const {\n    data: dashboardListData,\n    loading: dashboardListLoading,\n    error: dashboardListError,\n  } = useQuery<DashboardList, ListDashboardVars>(LIST_DASHBOARD_OVERVIEW, {\n    variables: { projectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Get count for dashboardListData length to render conditionally\n  if (dashboardListData) {\n    applicationDashboardCount = dashboardListData.ListDashboard?.length;\n  }\n\n  // Loader for confirmation of agent presence\n  if (agentListLoading) {\n    return (\n      <div style={{ height: '50vh' }}>\n        <Center>\n          <Loader message=\"Looking for an agent..\" />\n        </Center>\n      </div>\n    );\n  }\n\n  // Prompt user to setup an agent before continuing\n  if (!isAgentPresent) {\n    return <UnconfiguredAgent />;\n  }\n\n  // Prompt user to create a workflow to view analytics on\n  if (!workflowDashboardCount) {\n    return (\n      <MainInfoContainer\n        src=\"./icons/workflowScheduleHome.svg\"\n        alt=\"Schedule a workflow\"\n        heading={t('homeViews.agentConfiguredHome.noWorkflow.heading')}\n        description={t('homeViews.agentConfiguredHome.noWorkflow.description')}\n        button={\n          <ButtonFilled\n            onClick={() => {\n              history.push({\n                pathname: '/create-workflow',\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              });\n            }}\n          >\n            <Typography>\n              {t('homeViews.agentConfiguredHome.noWorkflow.schedule')}\n            </Typography>\n          </ButtonFilled>\n        }\n        link={\n          <TextButton\n            variant=\"highlight\"\n            onClick={() => {\n              history.push({\n                pathname: '/myhub/Chaos%20Hub',\n                search: `?projectID=${projectID}&projectRole=${projectRole}`,\n              });\n            }}\n          >\n            <Typography>\n              {t('homeViews.agentConfiguredHome.noWorkflow.explore')}\n            </Typography>\n          </TextButton>\n        }\n      />\n    );\n  }\n\n  // Loader for Data source fetching duration\n  if (dataSourceListLoading) {\n    return (\n      <div style={{ height: '50vh' }}>\n        <Center>\n          <Loader message=\"Loading available data sources\" />\n        </Center>\n      </div>\n    );\n  }\n\n  let filteredDashboardListData;\n  // Select the latest 3 dashboards\n  if (applicationDashboardCount > 0) {\n    filteredDashboardListData = dashboardListData?.ListDashboard.slice(-3);\n  }\n\n  // Generic Apollo error:\n  if (dataSourceListError || workflowError || dashboardListError) {\n    console.error('Error fetching the data!');\n    return (\n      <div style={{ height: '50vh' }}>\n        <Center>\n          <Typography>Error fetching the data!</Typography>\n        </Center>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {!dataSource && (\n        <MainInfoContainer\n          src=\"./icons/cloud.svg\"\n          alt=\"Schedule a workflow\"\n          heading=\"Connect data source\"\n          description=\"To configure your first Kubernetes dashboard you need to connect a data source. Select “Add data source” to connect.\"\n          button={\n            <ButtonFilled\n              onClick={() => {\n                history.push({\n                  pathname: '/analytics/datasource/create',\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n              }}\n            >\n              <Typography>Add data source</Typography>\n            </ButtonFilled>\n          }\n          link={\n            <Link\n              underline=\"none\"\n              href=\"https://github.com/litmuschaos/litmus/tree/master/monitoring#model-1-optional-prometheus-scrape-config-model\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <TextButton variant=\"highlight\" className={classes.docsButton}>\n                <Typography>Sample Prometheus configuration</Typography>\n                <img\n                  src=\"./icons/externalLink.svg\"\n                  alt=\"external link\"\n                  title=\"Read documentation\"\n                />\n              </TextButton>\n            </Link>\n          }\n        />\n      )}\n      {dataSource && !applicationDashboardCount && (\n        <MainInfoContainer\n          src=\"./icons/dashboardCloud.svg\"\n          alt=\"Schedule a workflow\"\n          heading=\"Configure a chaos interleaved dashboard\"\n          description=\"Data source(s) have been found to be connected in this project. Select “Create dashboard” to configure a chaos interleaved dashboard\"\n          button={\n            <ButtonFilled\n              onClick={() => {\n                history.push({\n                  pathname: '/analytics/dashboard/create',\n                  search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                });\n              }}\n            >\n              <Typography>Create dashboard</Typography>\n            </ButtonFilled>\n          }\n        />\n      )}{' '}\n      {workflowDashboardCount > 0 ? (\n        <RecentOverviewContainer\n          heading=\"Recently updated workflow dashboards\"\n          buttonLink=\"/create-workflow\"\n          buttonImgSrc=\"./icons/calendarBlank.svg\"\n          buttonImgAlt=\"Schedule workflow\"\n          buttonText=\"Schedule workflow\"\n        >\n          {workflowLoading ? (\n            <Center>\n              <Loader />\n            </Center>\n          ) : (\n            workflowData?.getWorkflowRuns.workflow_runs.map((workflow) => {\n              return (\n                <WorkflowDashboardCard\n                  key={workflow.workflow_id}\n                  data={workflow}\n                />\n              );\n            })\n          )}\n        </RecentOverviewContainer>\n      ) : (\n        <OverviewContainer\n          count={0}\n          countUnit=\"workflows\"\n          description=\"Create complex chaos workflows, automate them and monitor the variations in resilience levels. You can use this Kubernetes cluster to create new reliability work flows and compliance reports\"\n          maxWidth=\"38.5625rem\"\n          button={\n            <>\n              <ButtonOutlined\n                onClick={() => {\n                  history.push({\n                    pathname: '/create-workflow',\n                    search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                  });\n                }}\n                className={classes.infoContainerButton}\n              >\n                <Typography>\n                  <img src=\"./icons/calendarBlankDark.svg\" alt=\"calendar\" />\n                  {t('homeViews.agentConfiguredHome.agentInfoContainer.deploy')}\n                </Typography>\n              </ButtonOutlined>\n            </>\n          }\n        />\n      )}\n      {applicationDashboardCount > 0 && (\n        <RecentOverviewContainer\n          heading=\"Recently viewed application dashboards\"\n          buttonLink=\"/analytics/dashboard/create\"\n          buttonImgSrc=\"./icons/cloudWhite.svg\"\n          buttonImgAlt=\"Create dashboard\"\n          buttonText=\"Create dashbaord\"\n        >\n          {dashboardListLoading ? (\n            <Center>\n              <Loader />\n            </Center>\n          ) : (\n            filteredDashboardListData?.map((dashboard) => {\n              return (\n                <ApplicationDashboardCard\n                  key={dashboard.db_id}\n                  data={dashboard}\n                />\n              );\n            })\n          )}\n        </RecentOverviewContainer>\n      )}\n      {dataSource && (\n        <OverviewContainer\n          count={1}\n          countUnit=\"Data source\"\n          description=\"Data sources are needed to configure interleaving dashboards\"\n          maxWidth=\"38.5625rem\"\n          button={\n            <>\n              <ButtonOutlined\n                className={classes.infoContainerButton}\n                onClick={() => {\n                  history.push({\n                    pathname: '/analytics/datasource/create',\n                    search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                  });\n                }}\n              >\n                <img src=\"./icons/dataSource.svg\" alt=\"DataSource\" />\n                <Typography>Add data source</Typography>\n              </ButtonOutlined>\n            </>\n          }\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Overview;\n"]},"metadata":{},"sourceType":"module"}