{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/GitOpsTab/index.tsx\";\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport { FormControl, FormControlLabel, Radio, RadioGroup, Typography } from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, InputField, Modal } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport GithubInputFields from '../../../components/GitHubComponents/GithubInputFields/GithubInputFields';\nimport Loader from '../../../components/Loader';\nimport { DISABLE_GITOPS, ENABLE_GITOPS, GENERATE_SSH, UPDATE_GITOPS } from '../../../graphql/mutations';\nimport { GET_GITOPS_DATA } from '../../../graphql/queries';\nimport { MyHubType } from '../../../models/graphql/user';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport { validateStartEmptySpacing } from '../../../utils/validate';\nimport GitOpsInfo from './gitOpsInfo';\nimport SSHField from './sshField';\nimport useStyles from './styles';\n\nvar GitOpsTab = function GitOpsTab() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState('disabled'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var projectID = getProjectID();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // Local State Variables for Github Data and GitOps result data\n\n\n  var _useState = useState({\n    GitURL: '',\n    GitBranch: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      gitHub = _useState2[0],\n      setGitHub = _useState2[1];\n\n  var _useState3 = useState({\n    type: '',\n    message: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gitopsResult = _useState4[0],\n      setGitOpsResult = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isOpen = _useState6[0],\n      setIsOpen = _useState6[1];\n\n  var _useState7 = useState({\n    privateKey: '',\n    publicKey: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sshKey = _useState8[0],\n      setSshKey = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      accessToken = _useState10[0],\n      setAccessToken = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      confirmModal = _useState12[0],\n      setConfirmModal = _useState12[1]; // State Variable for AuthType Radio Buttons\n\n\n  var _useState13 = useState('token'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      privateHub = _useState14[0],\n      setPrivateHub = _useState14[1];\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n  }; // Functions to handle the events\n\n\n  var handleGitURL = function handleGitURL(event) {\n    setGitHub({\n      GitURL: event.target.value,\n      GitBranch: gitHub.GitBranch\n    });\n  };\n\n  var handleGitBranch = function handleGitBranch(event) {\n    setGitHub({\n      GitURL: gitHub.GitURL,\n      GitBranch: event.target.value\n    });\n  }; // Query to fetch GitOps Data\n\n\n  var _useQuery = useQuery(GET_GITOPS_DATA, {\n    variables: {\n      data: projectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery.data,\n      refetch = _useQuery.refetch,\n      loading = _useQuery.loading; // Mutation to generate SSH key\n\n\n  var _useMutation = useMutation(GENERATE_SSH, {\n    onCompleted: function onCompleted(data) {\n      setSshKey({\n        privateKey: data.generaterSSHKey.privateKey,\n        publicKey: data.generaterSSHKey.publicKey\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      generateSSHKey = _useMutation2[0],\n      sshLoading = _useMutation2[1].loading;\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      copying = _useState16[0],\n      setCopying = _useState16[1]; // State variable to check if gitops is enable or not (required for edit gitops)\n\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isGitOpsEnabled = _useState18[0],\n      setIsGitOpsEnabled = _useState18[1]; // Function to copy the SSH key\n\n\n  var copyTextToClipboard = function copyTextToClipboard(text) {\n    if (!navigator.clipboard) {\n      console.error('Oops Could not copy text: ');\n      return;\n    }\n\n    setCopying(true);\n    navigator.clipboard.writeText(text).catch(function (err) {\n      return console.error('Async: Could not copy text: ', err);\n    });\n    setTimeout(function () {\n      return setCopying(false);\n    }, 3000);\n  }; // Mutation to enable GitOps\n\n\n  var _useMutation3 = useMutation(ENABLE_GITOPS, {\n    onError: function onError(data) {\n      setIsOpen(true);\n      setGitOpsResult({\n        type: 'fail',\n        message: data.message\n      });\n    },\n    onCompleted: function onCompleted() {\n      setIsOpen(true);\n      setGitOpsResult({\n        type: 'success',\n        message: 'Successfully enabled GitOps!'\n      });\n      setIsGitOpsEnabled(true);\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      enableGitOps = _useMutation4[0],\n      gitOpsLoader = _useMutation4[1].loading; // Mutation to enable GitOps\n\n\n  var _useMutation5 = useMutation(UPDATE_GITOPS, {\n    onError: function onError(data) {\n      setIsOpen(true);\n      setGitOpsResult({\n        type: 'fail',\n        message: data.message\n      });\n    },\n    onCompleted: function onCompleted() {\n      setIsOpen(true);\n      setGitOpsResult({\n        type: 'success',\n        message: 'Successfully updated GitOps!'\n      });\n      setIsGitOpsEnabled(true);\n    }\n  }),\n      _useMutation6 = _slicedToArray(_useMutation5, 2),\n      updateGitOps = _useMutation6[0],\n      updateGitOpsLoader = _useMutation6[1].loading; // Mutation to disable GitOps\n\n\n  var _useMutation7 = useMutation(DISABLE_GITOPS, {\n    onError: function onError(data) {\n      setIsOpen(true);\n      setGitOpsResult({\n        type: 'fail',\n        message: data.message\n      });\n    },\n    onCompleted: function onCompleted() {\n      setIsOpen(true);\n      setGitHub({\n        GitBranch: '',\n        GitURL: ''\n      });\n      setSshKey({\n        publicKey: '',\n        privateKey: ''\n      });\n      setGitOpsResult({\n        type: 'success',\n        message: 'Successfully disabled GitOps!'\n      });\n    }\n  }),\n      _useMutation8 = _slicedToArray(_useMutation7, 2),\n      disableGitOps = _useMutation8[0],\n      disableGitOpsLoader = _useMutation8[1].loading;\n\n  var handleClose = function handleClose() {\n    setIsOpen(false);\n    refetch();\n  };\n\n  var onEditClicked = function onEditClicked() {\n    setConfirmModal(true);\n  };\n\n  var onConfirmEdit = function onConfirmEdit() {\n    setIsGitOpsEnabled(false);\n    setGitHub({\n      GitURL: (data === null || data === void 0 ? void 0 : data.getGitOpsDetails.RepoURL) || '',\n      GitBranch: (data === null || data === void 0 ? void 0 : data.getGitOpsDetails.Branch) || ''\n    });\n    setPrivateHub('');\n    setAccessToken('');\n    setSshKey({\n      publicKey: '',\n      privateKey: ''\n    });\n    setConfirmModal(false);\n  };\n\n  var onCancelEdit = function onCancelEdit() {\n    setConfirmModal(false);\n  }; // UseEffect to set the initial state of radio-buttons\n\n\n  useEffect(function () {\n    if (data !== undefined) {\n      if (data.getGitOpsDetails.Enabled) {\n        setValue('enabled');\n        setIsGitOpsEnabled(true);\n      } else {\n        setValue('disabled');\n        setIsGitOpsEnabled(false);\n      }\n    }\n  }, [data]); // Handle submit button to call the enableGitOps mutation\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n\n    if (value === 'enabled') {\n      if ((data === null || data === void 0 ? void 0 : data.getGitOpsDetails.Enabled) === false) {\n        enableGitOps({\n          variables: {\n            gitConfig: {\n              ProjectID: projectID,\n              RepoURL: gitHub.GitURL,\n              Branch: gitHub.GitBranch,\n              AuthType: privateHub === 'token' ? MyHubType.token : privateHub === 'ssh' ? MyHubType.ssh : MyHubType.none,\n              Token: accessToken,\n              UserName: 'user',\n              Password: 'user',\n              SSHPrivateKey: sshKey.privateKey\n            }\n          }\n        });\n      }\n\n      if ((data === null || data === void 0 ? void 0 : data.getGitOpsDetails.Enabled) === true) {\n        updateGitOps({\n          variables: {\n            gitConfig: {\n              ProjectID: projectID,\n              RepoURL: gitHub.GitURL,\n              Branch: gitHub.GitBranch,\n              AuthType: privateHub === '' ? data === null || data === void 0 ? void 0 : data.getGitOpsDetails.AuthType : privateHub === 'token' ? MyHubType.token : privateHub === 'ssh' ? MyHubType.ssh : MyHubType.none,\n              Token: privateHub === '' ? data === null || data === void 0 ? void 0 : data.getGitOpsDetails.Token : accessToken,\n              UserName: 'user',\n              Password: 'user',\n              SSHPrivateKey: privateHub === '' ? data === null || data === void 0 ? void 0 : data.getGitOpsDetails.SSHPrivateKey : sshKey.privateKey\n            }\n          }\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, t('settings.gitopsTab.choose'), \" \")), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"login-form\",\n    autoComplete: \"on\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    style: {\n      width: '70%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    name: \"gitops\",\n    value: value,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainRadioDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"disabled\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      classes: {\n        root: classes.radio,\n        checked: classes.checked\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 23\n      }\n    }),\n    \"data-cy\": \"localRadioButton\",\n    label: /*#__PURE__*/React.createElement(Typography, {\n      className: classes.locallyText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 23\n      }\n    }, t('settings.gitopsTab.locally')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }), value === 'disabled' && (data === null || data === void 0 ? void 0 : data.getGitOpsDetails.Enabled) === true ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.disconnectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 23\n    }\n  }, t('settings.gitopsTab.disconnect')), /*#__PURE__*/React.createElement(ButtonFilled, {\n    \"data-cy\": \"disableGitopsButton\",\n    disabled: disableGitOpsLoader,\n    onClick: function onClick() {\n      return disableGitOps({\n        variables: {\n          data: projectID\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 23\n    }\n  }, t('settings.gitopsTab.save'))) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.enabledText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"enabled\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      classes: {\n        root: classes.radio,\n        checked: classes.checked\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 25\n      }\n    }),\n    \"data-cy\": \"gitopsRadioButton\",\n    label: /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        fontSize: '20px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 25\n      }\n    }, t('settings.gitopsTab.repo')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }\n  }), isGitOpsEnabled === false ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.infoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 25\n    }\n  }, t('settings.gitopsTab.desc')), value === 'enabled' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainPrivateRepo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.privateToggleDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.privateRepoDetails,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(GithubInputFields, {\n    gitURL: gitHub.GitURL,\n    gitBranch: gitHub.GitBranch,\n    setGitURL: handleGitURL,\n    setGitBranch: handleGitBranch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"privateHub\",\n    name: \"privateHub\",\n    value: privateHub,\n    onChange: function onChange(e) {\n      if (e.target.value === 'ssh') {\n        generateSSHKey();\n      }\n\n      if (e.target.value === 'token') {\n        setSshKey({\n          privateKey: '',\n          publicKey: ''\n        });\n      }\n\n      setPrivateHub(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"token\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      classes: {\n        root: classes.radio,\n        checked: classes.checked\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 39\n      }\n    }),\n    \"data-cy\": \"accessTokenRadioButton\",\n    label: /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 39\n      }\n    }, t('myhub.connectHubPage.accessToken')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 35\n    }\n  }), privateHub === 'token' ? /*#__PURE__*/React.createElement(InputField, {\n    \"data-cy\": \"accessTokenInput\",\n    label: \"Access Token\",\n    value: accessToken,\n    helperText: validateStartEmptySpacing(accessToken) ? t('myhub.validationEmptySpace') : '',\n    variant: validateStartEmptySpacing(accessToken) ? 'error' : 'primary',\n    onChange: function onChange(e) {\n      return setAccessToken(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 37\n    }\n  }) : null, /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.sshRadioBtn,\n    \"data-cy\": \"sshKeyRadioButton\",\n    value: \"ssh\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      classes: {\n        root: classes.radio,\n        checked: classes.checked\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 39\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 39\n      }\n    }, t('myhub.connectHubPage.ssh')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 35\n    }\n  }), privateHub === 'ssh' ? /*#__PURE__*/React.createElement(SSHField, {\n    sshLoading: sshLoading,\n    copying: copying,\n    publicKey: sshKey.publicKey,\n    copyPublicKey: copyTextToClipboard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 37\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.submitBtnDiv,\n    \"data-cy\": \"connectButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    type: \"submit\",\n    disabled: gitOpsLoader || updateGitOpsLoader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 37\n    }\n  }, updateGitOpsLoader || gitOpsLoader ? /*#__PURE__*/React.createElement(Loader, {\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 41\n    }\n  }) : /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 41\n    }\n  }, (data === null || data === void 0 ? void 0 : data.getGitOpsDetails.Enabled) ? 'Update' : t('settings.gitopsTab.connect')))))))) : null) : isGitOpsEnabled === true ? /*#__PURE__*/React.createElement(GitOpsInfo, {\n    data: data,\n    onEditClicked: onEditClicked,\n    modalState: confirmModal,\n    onModalClick: onConfirmEdit,\n    onModalCancel: onCancelEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 23\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/gitops-image.svg\",\n    alt: \"Gitops\",\n    style: {\n      marginLeft: 'auto',\n      paddingLeft: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Modal, {\n    \"data-cy\": \"gitopsModal\",\n    open: isOpen,\n    onClose: handleClose,\n    modalActions: /*#__PURE__*/React.createElement(ButtonOutlined, {\n      onClick: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 15\n      }\n    }, \"\\u2715\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modalDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 15\n    }\n  }, gitopsResult.type === 'fail' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/red-cross.svg\",\n    alt: \"checkmark\",\n    className: classes.checkImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    className: classes.modalHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 23\n    }\n  }, \"Error: \", gitopsResult.message)), /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: handleClose,\n    \"data-cy\": \"closeButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 21\n    }\n  }, t('settings.gitopsTab.setting'))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 17\n    }\n  }, gitopsResult.type === 'success' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/checkmark.svg\",\n    alt: \"checkmark\",\n    className: classes.checkImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    className: classes.modalHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 23\n    }\n  }, gitopsResult.message), /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: handleClose,\n    \"data-cy\": \"closeButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 23\n    }\n  }, t('settings.gitopsTab.setting'))) : null))))));\n};\n\nexport default GitOpsTab;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/GitOpsTab/index.tsx"],"names":["useMutation","useQuery","FormControl","FormControlLabel","Radio","RadioGroup","Typography","ButtonFilled","ButtonOutlined","InputField","Modal","React","useEffect","useState","useTranslation","GithubInputFields","Loader","DISABLE_GITOPS","ENABLE_GITOPS","GENERATE_SSH","UPDATE_GITOPS","GET_GITOPS_DATA","MyHubType","getProjectID","validateStartEmptySpacing","GitOpsInfo","SSHField","useStyles","GitOpsTab","classes","value","setValue","projectID","t","GitURL","GitBranch","gitHub","setGitHub","type","message","gitopsResult","setGitOpsResult","isOpen","setIsOpen","privateKey","publicKey","sshKey","setSshKey","accessToken","setAccessToken","confirmModal","setConfirmModal","privateHub","setPrivateHub","handleChange","event","target","handleGitURL","handleGitBranch","variables","data","fetchPolicy","refetch","loading","onCompleted","generaterSSHKey","generateSSHKey","sshLoading","copying","setCopying","isGitOpsEnabled","setIsGitOpsEnabled","copyTextToClipboard","text","navigator","clipboard","console","error","writeText","catch","err","setTimeout","onError","enableGitOps","gitOpsLoader","updateGitOps","updateGitOpsLoader","disableGitOps","disableGitOpsLoader","handleClose","onEditClicked","onConfirmEdit","getGitOpsDetails","RepoURL","Branch","onCancelEdit","undefined","Enabled","handleSubmit","preventDefault","gitConfig","ProjectID","AuthType","token","ssh","none","Token","UserName","Password","SSHPrivateKey","container","headerText","width","mainRadioDiv","root","radio","checked","locallyText","disconnectText","enabledText","fontSize","infoText","mainPrivateRepo","privateToggleDiv","privateRepoDetails","formControl","e","sshRadioBtn","submitBtnDiv","marginLeft","paddingLeft","modalDiv","checkImg","modalHeading"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport {\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, InputField, Modal } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport GithubInputFields from '../../../components/GitHubComponents/GithubInputFields/GithubInputFields';\nimport Loader from '../../../components/Loader';\nimport {\n  DISABLE_GITOPS,\n  ENABLE_GITOPS,\n  GENERATE_SSH,\n  UPDATE_GITOPS,\n} from '../../../graphql/mutations';\nimport { GET_GITOPS_DATA } from '../../../graphql/queries';\nimport { GitOpsDetail } from '../../../models/graphql/gitOps';\nimport { MyHubType, SSHKey, SSHKeys } from '../../../models/graphql/user';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport { validateStartEmptySpacing } from '../../../utils/validate';\nimport GitOpsInfo from './gitOpsInfo';\nimport SSHField from './sshField';\nimport useStyles from './styles';\n\ninterface GitHub {\n  GitURL: string;\n  GitBranch: string;\n}\n\ninterface GitOpsResult {\n  type: string;\n  message: string;\n}\n\nconst GitOpsTab = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('disabled');\n  const projectID = getProjectID();\n  const { t } = useTranslation();\n  // Local State Variables for Github Data and GitOps result data\n  const [gitHub, setGitHub] = useState<GitHub>({\n    GitURL: '',\n    GitBranch: '',\n  });\n  const [gitopsResult, setGitOpsResult] = useState<GitOpsResult>({\n    type: '',\n    message: '',\n  });\n  const [isOpen, setIsOpen] = useState(false);\n  const [sshKey, setSshKey] = useState<SSHKey>({\n    privateKey: '',\n    publicKey: '',\n  });\n  const [accessToken, setAccessToken] = useState('');\n  const [confirmModal, setConfirmModal] = useState(false);\n\n  // State Variable for AuthType Radio Buttons\n  const [privateHub, setPrivateHub] = useState('token');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue((event.target as HTMLInputElement).value);\n  };\n\n  // Functions to handle the events\n  const handleGitURL = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setGitHub({\n      GitURL: event.target.value,\n      GitBranch: gitHub.GitBranch,\n    });\n  };\n\n  const handleGitBranch = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setGitHub({\n      GitURL: gitHub.GitURL,\n      GitBranch: event.target.value,\n    });\n  };\n\n  // Query to fetch GitOps Data\n  const { data, refetch, loading } = useQuery<GitOpsDetail>(GET_GITOPS_DATA, {\n    variables: { data: projectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Mutation to generate SSH key\n  const [generateSSHKey, { loading: sshLoading }] = useMutation<SSHKeys>(\n    GENERATE_SSH,\n    {\n      onCompleted: (data) => {\n        setSshKey({\n          privateKey: data.generaterSSHKey.privateKey,\n          publicKey: data.generaterSSHKey.publicKey,\n        });\n      },\n    }\n  );\n\n  const [copying, setCopying] = useState(false);\n\n  // State variable to check if gitops is enable or not (required for edit gitops)\n  const [isGitOpsEnabled, setIsGitOpsEnabled] = useState(false);\n\n  // Function to copy the SSH key\n  const copyTextToClipboard = (text: string) => {\n    if (!navigator.clipboard) {\n      console.error('Oops Could not copy text: ');\n      return;\n    }\n    setCopying(true);\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n    setTimeout(() => setCopying(false), 3000);\n  };\n\n  // Mutation to enable GitOps\n  const [enableGitOps, { loading: gitOpsLoader }] = useMutation(ENABLE_GITOPS, {\n    onError: (data) => {\n      setIsOpen(true);\n      setGitOpsResult({\n        type: 'fail',\n        message: data.message,\n      });\n    },\n    onCompleted: () => {\n      setIsOpen(true);\n      setGitOpsResult({\n        type: 'success',\n        message: 'Successfully enabled GitOps!',\n      });\n      setIsGitOpsEnabled(true);\n    },\n  });\n\n  // Mutation to enable GitOps\n  const [updateGitOps, { loading: updateGitOpsLoader }] = useMutation(\n    UPDATE_GITOPS,\n    {\n      onError: (data) => {\n        setIsOpen(true);\n        setGitOpsResult({\n          type: 'fail',\n          message: data.message,\n        });\n      },\n      onCompleted: () => {\n        setIsOpen(true);\n        setGitOpsResult({\n          type: 'success',\n          message: 'Successfully updated GitOps!',\n        });\n        setIsGitOpsEnabled(true);\n      },\n    }\n  );\n\n  // Mutation to disable GitOps\n  const [disableGitOps, { loading: disableGitOpsLoader }] = useMutation(\n    DISABLE_GITOPS,\n    {\n      onError: (data) => {\n        setIsOpen(true);\n        setGitOpsResult({\n          type: 'fail',\n          message: data.message,\n        });\n      },\n      onCompleted: () => {\n        setIsOpen(true);\n        setGitHub({\n          GitBranch: '',\n          GitURL: '',\n        });\n        setSshKey({\n          publicKey: '',\n          privateKey: '',\n        });\n        setGitOpsResult({\n          type: 'success',\n          message: 'Successfully disabled GitOps!',\n        });\n      },\n    }\n  );\n\n  const handleClose = () => {\n    setIsOpen(false);\n    refetch();\n  };\n  const onEditClicked = () => {\n    setConfirmModal(true);\n  };\n\n  const onConfirmEdit = () => {\n    setIsGitOpsEnabled(false);\n    setGitHub({\n      GitURL: data?.getGitOpsDetails.RepoURL || '',\n      GitBranch: data?.getGitOpsDetails.Branch || '',\n    });\n    setPrivateHub('');\n    setAccessToken('');\n    setSshKey({\n      publicKey: '',\n      privateKey: '',\n    });\n    setConfirmModal(false);\n  };\n\n  const onCancelEdit = () => {\n    setConfirmModal(false);\n  };\n\n  // UseEffect to set the initial state of radio-buttons\n  useEffect(() => {\n    if (data !== undefined) {\n      if (data.getGitOpsDetails.Enabled) {\n        setValue('enabled');\n        setIsGitOpsEnabled(true);\n      } else {\n        setValue('disabled');\n        setIsGitOpsEnabled(false);\n      }\n    }\n  }, [data]);\n\n  // Handle submit button to call the enableGitOps mutation\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (value === 'enabled') {\n      if (data?.getGitOpsDetails.Enabled === false) {\n        enableGitOps({\n          variables: {\n            gitConfig: {\n              ProjectID: projectID,\n              RepoURL: gitHub.GitURL,\n              Branch: gitHub.GitBranch,\n              AuthType:\n                privateHub === 'token'\n                  ? MyHubType.token\n                  : privateHub === 'ssh'\n                  ? MyHubType.ssh\n                  : MyHubType.none,\n              Token: accessToken,\n              UserName: 'user',\n              Password: 'user',\n              SSHPrivateKey: sshKey.privateKey,\n            },\n          },\n        });\n      }\n      if (data?.getGitOpsDetails.Enabled === true) {\n        updateGitOps({\n          variables: {\n            gitConfig: {\n              ProjectID: projectID,\n              RepoURL: gitHub.GitURL,\n              Branch: gitHub.GitBranch,\n              AuthType:\n                privateHub === ''\n                  ? data?.getGitOpsDetails.AuthType\n                  : privateHub === 'token'\n                  ? MyHubType.token\n                  : privateHub === 'ssh'\n                  ? MyHubType.ssh\n                  : MyHubType.none,\n              Token:\n                privateHub === '' ? data?.getGitOpsDetails.Token : accessToken,\n              UserName: 'user',\n              Password: 'user',\n              SSHPrivateKey:\n                privateHub === ''\n                  ? data?.getGitOpsDetails.SSHPrivateKey\n                  : sshKey.privateKey,\n            },\n          },\n        });\n      }\n    }\n  };\n\n  return (\n    <div className={classes.container}>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Typography className={classes.headerText}>\n            <strong>{t('settings.gitopsTab.choose')} </strong>\n          </Typography>\n          <form id=\"login-form\" autoComplete=\"on\" onSubmit={handleSubmit}>\n            <FormControl component=\"fieldset\" style={{ width: '70%' }}>\n              <RadioGroup name=\"gitops\" value={value} onChange={handleChange}>\n                <div className={classes.mainRadioDiv}>\n                  <FormControlLabel\n                    value=\"disabled\"\n                    control={\n                      <Radio\n                        classes={{\n                          root: classes.radio,\n                          checked: classes.checked,\n                        }}\n                      />\n                    }\n                    data-cy=\"localRadioButton\"\n                    label={\n                      <Typography className={classes.locallyText}>\n                        {t('settings.gitopsTab.locally')}\n                      </Typography>\n                    }\n                  />\n                  {value === 'disabled' &&\n                  data?.getGitOpsDetails.Enabled === true ? (\n                    <div>\n                      <Typography className={classes.disconnectText}>\n                        {t('settings.gitopsTab.disconnect')}\n                      </Typography>\n                      <ButtonFilled\n                        data-cy=\"disableGitopsButton\"\n                        disabled={disableGitOpsLoader}\n                        onClick={() =>\n                          disableGitOps({\n                            variables: {\n                              data: projectID,\n                            },\n                          })\n                        }\n                      >\n                        {t('settings.gitopsTab.save')}\n                      </ButtonFilled>\n                    </div>\n                  ) : null}\n                </div>\n                <div className={classes.enabledText}>\n                  <div>\n                    <FormControlLabel\n                      value=\"enabled\"\n                      control={\n                        <Radio\n                          classes={{\n                            root: classes.radio,\n                            checked: classes.checked,\n                          }}\n                        />\n                      }\n                      data-cy=\"gitopsRadioButton\"\n                      label={\n                        <Typography style={{ fontSize: '20px' }}>\n                          {t('settings.gitopsTab.repo')}\n                        </Typography>\n                      }\n                    />\n\n                    {isGitOpsEnabled === false ? (\n                      <div>\n                        <Typography className={classes.infoText}>\n                          {t('settings.gitopsTab.desc')}\n                        </Typography>\n                        {value === 'enabled' ? (\n                          <div className={classes.mainPrivateRepo}>\n                            <div className={classes.privateToggleDiv}>\n                              <div className={classes.privateRepoDetails}>\n                                <GithubInputFields\n                                  gitURL={gitHub.GitURL}\n                                  gitBranch={gitHub.GitBranch}\n                                  setGitURL={handleGitURL}\n                                  setGitBranch={handleGitBranch}\n                                />\n                              </div>\n                              <FormControl\n                                component=\"fieldset\"\n                                className={classes.formControl}\n                              >\n                                <RadioGroup\n                                  aria-label=\"privateHub\"\n                                  name=\"privateHub\"\n                                  value={privateHub}\n                                  onChange={(e) => {\n                                    if (e.target.value === 'ssh') {\n                                      generateSSHKey();\n                                    }\n                                    if (e.target.value === 'token') {\n                                      setSshKey({\n                                        privateKey: '',\n                                        publicKey: '',\n                                      });\n                                    }\n                                    setPrivateHub(e.target.value);\n                                  }}\n                                >\n                                  <FormControlLabel\n                                    value=\"token\"\n                                    control={\n                                      <Radio\n                                        classes={{\n                                          root: classes.radio,\n                                          checked: classes.checked,\n                                        }}\n                                      />\n                                    }\n                                    data-cy=\"accessTokenRadioButton\"\n                                    label={\n                                      <Typography>\n                                        {t('myhub.connectHubPage.accessToken')}\n                                      </Typography>\n                                    }\n                                  />\n                                  {privateHub === 'token' ? (\n                                    <InputField\n                                      data-cy=\"accessTokenInput\"\n                                      label=\"Access Token\"\n                                      value={accessToken}\n                                      helperText={\n                                        validateStartEmptySpacing(accessToken)\n                                          ? t('myhub.validationEmptySpace')\n                                          : ''\n                                      }\n                                      variant={\n                                        validateStartEmptySpacing(accessToken)\n                                          ? 'error'\n                                          : 'primary'\n                                      }\n                                      onChange={(e) =>\n                                        setAccessToken(e.target.value)\n                                      }\n                                    />\n                                  ) : null}\n                                  <FormControlLabel\n                                    className={classes.sshRadioBtn}\n                                    data-cy=\"sshKeyRadioButton\"\n                                    value=\"ssh\"\n                                    control={\n                                      <Radio\n                                        classes={{\n                                          root: classes.radio,\n                                          checked: classes.checked,\n                                        }}\n                                      />\n                                    }\n                                    label={\n                                      <Typography>\n                                        {t('myhub.connectHubPage.ssh')}\n                                      </Typography>\n                                    }\n                                  />\n                                  {privateHub === 'ssh' ? (\n                                    <SSHField\n                                      sshLoading={sshLoading}\n                                      copying={copying}\n                                      publicKey={sshKey.publicKey}\n                                      copyPublicKey={copyTextToClipboard}\n                                    />\n                                  ) : null}\n                                  <div\n                                    className={classes.submitBtnDiv}\n                                    data-cy=\"connectButton\"\n                                  >\n                                    <ButtonFilled\n                                      type=\"submit\"\n                                      disabled={\n                                        gitOpsLoader || updateGitOpsLoader\n                                      }\n                                    >\n                                      {updateGitOpsLoader || gitOpsLoader ? (\n                                        <Loader size={20} />\n                                      ) : (\n                                        <Typography>\n                                          {data?.getGitOpsDetails.Enabled\n                                            ? 'Update'\n                                            : t('settings.gitopsTab.connect')}\n                                        </Typography>\n                                      )}\n                                    </ButtonFilled>\n                                  </div>\n                                </RadioGroup>\n                              </FormControl>\n                            </div>\n                          </div>\n                        ) : null}\n                      </div>\n                    ) : isGitOpsEnabled === true ? (\n                      <GitOpsInfo\n                        data={data}\n                        onEditClicked={onEditClicked}\n                        modalState={confirmModal}\n                        onModalClick={onConfirmEdit}\n                        onModalCancel={onCancelEdit}\n                      />\n                    ) : null}\n                  </div>\n                  <img\n                    src=\"/icons/gitops-image.svg\"\n                    alt=\"Gitops\"\n                    style={{ marginLeft: 'auto', paddingLeft: 20 }}\n                  />\n                </div>\n              </RadioGroup>\n            </FormControl>\n          </form>\n          <Modal\n            data-cy=\"gitopsModal\"\n            open={isOpen}\n            onClose={handleClose}\n            modalActions={\n              <ButtonOutlined onClick={handleClose}>&#x2715;</ButtonOutlined>\n            }\n          >\n            <div className={classes.modalDiv}>\n              <div>\n                {gitopsResult.type === 'fail' ? (\n                  <div>\n                    <img\n                      src=\"/icons/red-cross.svg\"\n                      alt=\"checkmark\"\n                      className={classes.checkImg}\n                    />\n                    <Typography gutterBottom className={classes.modalHeading}>\n                      <strong>Error: {gitopsResult.message}</strong>\n                    </Typography>\n                    <ButtonFilled onClick={handleClose} data-cy=\"closeButton\">\n                      {t('settings.gitopsTab.setting')}\n                    </ButtonFilled>\n                  </div>\n                ) : null}\n                <div>\n                  {gitopsResult.type === 'success' ? (\n                    <>\n                      <img\n                        src=\"/icons/checkmark.svg\"\n                        alt=\"checkmark\"\n                        className={classes.checkImg}\n                      />\n                      <Typography gutterBottom className={classes.modalHeading}>\n                        {gitopsResult.message}\n                      </Typography>\n\n                      <ButtonFilled onClick={handleClose} data-cy=\"closeButton\">\n                        {t('settings.gitopsTab.setting')}\n                      </ButtonFilled>\n                    </>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </Modal>\n        </>\n      )}\n    </div>\n  );\n};\nexport default GitOpsTab;\n"]},"metadata":{},"sourceType":"module"}