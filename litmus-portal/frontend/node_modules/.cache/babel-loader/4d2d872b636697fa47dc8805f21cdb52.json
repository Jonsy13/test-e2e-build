{"ast":null,"code":"import i18n from'i18next';import Backend from'i18next-http-backend';import LanguageDetector from'i18next-browser-languagedetector';import{initReactI18next}from'react-i18next';import yaml from'js-yaml';i18n// load translation using http -> see /public/locales\n// learn more: https://github.com/i18next/i18next-http-backend\n.use(Backend)// detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector)// pass the i18n instance to react-i18next.\n.use(initReactI18next)// init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({fallbackLng:'en',debug:true,backend:{loadPath:'/locales/{{lng}}/{{ns}}.yaml',parse:function parse(data){return yaml.load(data);}},interpolation:{escapeValue:false}});export default i18n;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/i18n.js"],"names":["i18n","Backend","LanguageDetector","initReactI18next","yaml","use","init","fallbackLng","debug","backend","loadPath","parse","data","load","interpolation","escapeValue"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kCAA7B,CACA,OAASC,gBAAT,KAAiC,eAAjC,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CAEAJ,IACE;AACA;AAFE,CAGDK,GAHH,CAGOJ,OAHP,CAIE;AACA;AALF,CAMGI,GANH,CAMOH,gBANP,CAOE;AAPF,CAQGG,GARH,CAQOF,gBARP,CASE;AACA;AAVF,CAWGG,IAXH,CAWQ,CACJC,WAAW,CAAE,IADT,CAEJC,KAAK,CAAE,IAFH,CAGJC,OAAO,CAAE,CACPC,QAAQ,CAAE,8BADH,CAEPC,KAFO,gBAEDC,IAFC,CAEK,CACV,MAAOR,CAAAA,IAAI,CAACS,IAAL,CAAUD,IAAV,CAAP,CACD,CAJM,CAHL,CASJE,aAAa,CAAE,CACbC,WAAW,CAAE,KADA,CATX,CAXR,EAyBA,cAAef,CAAAA,IAAf","sourcesContent":["import i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nimport yaml from 'js-yaml';\n\ni18n\n  // load translation using http -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    backend: {\n      loadPath: '/locales/{{lng}}/{{ns}}.yaml',\n      parse(data) {\n        return yaml.load(data);\n      },\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}