{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboard/ChaosTable/index.tsx\";\n\nimport { Paper, Table, TableBody, TableCell, TableContainer, TablePagination, TableRow, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\nimport TableData from './TableData';\nimport TableHeader from './TableHeader';\n\nvar ChaosTable = function ChaosTable(_ref) {\n  var chaosList = _ref.chaosList,\n      selectEvents = _ref.selectEvents;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(5),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      selected = _React$useState6[0],\n      setSelected = _React$useState6[1];\n\n  var isSelected = function isSelected(name) {\n    return selected.indexOf(name) !== -1;\n  };\n\n  var emptyRows = rowsPerPage - Math.min(rowsPerPage, chaosList.length - page * rowsPerPage);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  var handleSelectAllClick = function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      var newSelecteds = chaosList.map(function (n) {\n        return n.id;\n      });\n      setSelected(newSelecteds);\n      selectEvents(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n    selectEvents([]);\n  };\n\n  var handleClick = function handleClick(name) {\n    var selectedIndex = selected.indexOf(name);\n    var newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n    selectEvents(newSelected);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    id: \"chaos\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"table section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.tableBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"\".concat(classes.tableMain, \" \").concat(!chaosList.length ? classes.empty : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    onSelectAllClick: handleSelectAllClick,\n    numSelected: selected.length,\n    rowCount: chaosList.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, chaosList.length ? chaosList.slice(0).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (data, index) {\n    var isItemSelected = isSelected(data.id);\n    var labelId = \"enhanced-table-checkbox-\".concat(index);\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      onClick: function onClick() {\n        handleClick(data.id);\n      },\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: data.id,\n      selected: isItemSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(TableData, {\n      data: data,\n      itemSelectionStatus: isItemSelected,\n      labelIdentifier: labelId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noRecords,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/dashboardUnavailable.svg\",\n    className: classes.cloudIcon,\n    alt: \"Chaos event unavailable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    className: classes.noRecordsText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 27\n    }\n  }, t('analyticsDashboard.monitoringDashboardPage.chaosTable.noRecords'))))), chaosList.length > 0 && emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 75 * emptyRows\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }\n  }))))), chaosList.length > 0 && /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 50],\n    component: \"div\",\n    count: chaosList.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    SelectProps: {\n      MenuProps: {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        getContentAnchorEl: null,\n        classes: {\n          paper: classes.menuList\n        }\n      }\n    },\n    classes: {\n      menuItem: classes.menuListItem\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default ChaosTable;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboard/ChaosTable/index.tsx"],"names":["Paper","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Typography","React","useTranslation","useStyles","TableData","TableHeader","ChaosTable","chaosList","selectEvents","classes","t","useState","page","setPage","rowsPerPage","setRowsPerPage","selected","setSelected","isSelected","name","indexOf","emptyRows","Math","min","length","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleSelectAllClick","checked","newSelecteds","map","n","id","handleClick","selectedIndex","newSelected","concat","slice","root","tableBody","tableMain","empty","data","index","isItemSelected","labelId","noRecords","cloudIcon","noRecordsText","height","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","paper","menuList","menuItem","menuListItem"],"mappings":"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","sourcesContent":["import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ChaosEventDetails } from '../../../../models/dashboardsData';\nimport useStyles from './styles';\nimport TableData from './TableData';\nimport TableHeader from './TableHeader';\n\ninterface ChaosTableProps {\n  chaosList: ChaosEventDetails[];\n  selectEvents: (selectedEvents: string[]) => void;\n}\n\nconst ChaosTable: React.FC<ChaosTableProps> = ({ chaosList, selectEvents }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, chaosList.length - page * rowsPerPage);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = chaosList.map((n: ChaosEventDetails) => n.id);\n      setSelected(newSelecteds);\n      selectEvents(newSelecteds);\n      return;\n    }\n    setSelected([]);\n    selectEvents([]);\n  };\n\n  const handleClick = (name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n    selectEvents(newSelected);\n  };\n\n  return (\n    <div className={classes.root} id=\"chaos\">\n      <div>\n        <section className=\"table section\">\n          <Paper className={classes.tableBody}>\n            <TableContainer\n              className={`${classes.tableMain} ${\n                !chaosList.length ? classes.empty : ''\n              }`}\n            >\n              <Table aria-label=\"simple table\">\n                <TableHeader\n                  onSelectAllClick={handleSelectAllClick}\n                  numSelected={selected.length}\n                  rowCount={chaosList.length}\n                />\n                <TableBody>\n                  {chaosList.length ? (\n                    chaosList\n                      .slice(0)\n                      .slice(\n                        page * rowsPerPage,\n                        page * rowsPerPage + rowsPerPage\n                      )\n                      .map((data: ChaosEventDetails, index: number) => {\n                        const isItemSelected = isSelected(data.id);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n                        return (\n                          <TableRow\n                            hover\n                            onClick={() => {\n                              handleClick(data.id);\n                            }}\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            key={data.id}\n                            selected={isItemSelected}\n                          >\n                            <TableData\n                              data={data}\n                              itemSelectionStatus={isItemSelected}\n                              labelIdentifier={labelId}\n                            />\n                          </TableRow>\n                        );\n                      })\n                  ) : (\n                    <TableRow>\n                      <TableCell colSpan={6}>\n                        <div className={classes.noRecords}>\n                          <img\n                            src=\"/icons/dashboardUnavailable.svg\"\n                            className={classes.cloudIcon}\n                            alt=\"Chaos event unavailable\"\n                          />\n                          <Typography\n                            align=\"center\"\n                            className={classes.noRecordsText}\n                          >\n                            {t(\n                              'analyticsDashboard.monitoringDashboardPage.chaosTable.noRecords'\n                            )}\n                          </Typography>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                  {chaosList.length > 0 && emptyRows > 0 && (\n                    <TableRow style={{ height: 75 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            {chaosList.length > 0 && (\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, 50]}\n                component=\"div\"\n                count={chaosList.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  MenuProps: {\n                    anchorOrigin: {\n                      vertical: 'bottom',\n                      horizontal: 'right',\n                    },\n                    transformOrigin: {\n                      vertical: 'top',\n                      horizontal: 'right',\n                    },\n                    getContentAnchorEl: null,\n                    classes: { paper: classes.menuList },\n                  },\n                }}\n                classes={{ menuItem: classes.menuListItem }}\n              />\n            )}\n          </Paper>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default ChaosTable;\n"]},"metadata":{},"sourceType":"module"}