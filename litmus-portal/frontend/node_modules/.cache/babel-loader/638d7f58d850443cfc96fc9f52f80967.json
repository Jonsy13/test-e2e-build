{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useLazyQuery}from'@apollo/client';import{Avatar,Typography}from'@material-ui/core';import{ButtonOutlined,InputField,Modal}from'litmus-ui';import localforage from'localforage';import React,{forwardRef,useEffect,useImperativeHandle,useState}from'react';import{useTranslation}from'react-i18next';import{useSelector}from'react-redux';import config from'../../../config';import{GET_EXPERIMENT_DATA}from'../../../graphql';import useActions from'../../../redux/actions';import*as AlertActions from'../../../redux/actions/alert';import*as WorkflowActions from'../../../redux/actions/workflow';import capitalize from'../../../utils/capitalize';import{getProjectID}from'../../../utils/getSearchParams';import{validateWorkflowName}from'../../../utils/validate';import useStyles from'./styles';var WorkflowSettings=forwardRef(function(_,ref){var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),avatarModal=_useState2[0],setAvatarModal=_useState2[1];var projectID=getProjectID();// Workflow States\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState(/*#__PURE__*/React.createElement(React.Fragment,null)),_useState6=_slicedToArray(_useState5,2),descriptionHeader=_useState6[0],setDescriptionHeader=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),description=_useState8[0],setDescription=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),icon=_useState10[0],setIcon=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),CRDLink=_useState12[0],setCRDLink=_useState12[1];// Actions\nvar workflowAction=useActions(WorkflowActions);var workflowData=useSelector(function(state){return state.workflowData;});var _useSelector=useSelector(function(state){return state.workflowManifest;}),manifest=_useSelector.manifest;var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),hubName=_useState14[0],setHubName=_useState14[1];// Query to get charts of selected MyHub\nvar _useLazyQuery=useLazyQuery(GET_EXPERIMENT_DATA,{fetchPolicy:'cache-and-network',onCompleted:function onCompleted(data){if(data.getHubExperiment!==undefined){setName(data.getHubExperiment.Metadata.Name.toLowerCase());setDescription(data.getHubExperiment.Spec.CategoryDescription);setIcon(\"\".concat(config.grahqlEndpoint,\"/icon/\").concat(projectID,\"/\").concat(hubName,\"/predefined/\").concat(data.getHubExperiment.Metadata.Name,\".png\"));setCRDLink(data.getHubExperiment.Metadata.Name);}}}),_useLazyQuery2=_slicedToArray(_useLazyQuery,1),getWorkflowDetails=_useLazyQuery2[0];var _useTranslation=useTranslation(),t=_useTranslation.t;var alert=useActions(AlertActions);var checkForStoredData=function checkForStoredData(){localforage.getItem('workflow').then(function(workflow){// If data is present set all the data to local state for the UI to display\nif(workflow&&workflow.name!==''){setName(workflow.name);}if(workflow&&workflow.description!==''){setDescription(workflow.description);}if(workflow&&workflow.icon!==''){setIcon(workflow.icon);}});};var detectHeader=function detectHeader(){return localforage.getItem('selectedScheduleOption').then(function(value){return value&&value.selected==='A'?setDescriptionHeader(/*#__PURE__*/React.createElement(React.Fragment,null,t('createWorkflow.chooseWorkflow.descriptionA'),\" \")):value&&value.selected==='B'?setDescriptionHeader(/*#__PURE__*/React.createElement(React.Fragment,null,t('createWorkflow.chooseWorkflow.descriptionB'),\" \")):value&&value.selected==='C'?setDescriptionHeader(/*#__PURE__*/React.createElement(React.Fragment,null,t('createWorkflow.chooseWorkflow.descriptionC'),\" \")):setDescriptionHeader(/*#__PURE__*/React.createElement(React.Fragment,null,t('createWorkflow.chooseWorkflow.descriptionD'),\" \"));});};var initializeWithDefault=function initializeWithDefault(){localforage.getItem('selectedScheduleOption').then(function(value){// Map over the list of predefined workflows and extract the name and detail\nif(value.selected==='A'){localforage.getItem('selectedHub').then(function(hub){setHubName(hub);getWorkflowDetails({variables:{data:{HubName:hub,ProjectID:projectID,ChartName:'predefined',ExperimentName:value.id}}});});}if(value.selected==='B'){workflowAction.setWorkflowManifest({manifest:''});}if(value.selected==='C'){setName('custom-chaos-workflow');workflowAction.setWorkflowManifest({manifest:manifest!==null&&manifest!==void 0?manifest:''});setDescription('Custom Chaos Workflow');setIcon('./avatars/litmus.svg');}if(value.selected==='D'){setName('chaos-workflow');setDescription('Chaos Workflow');setIcon('./avatars/litmus.svg');}/** Store a boolean value in local storage to serve as an indication\n       *  whether user already has edited data or not\n       */localforage.setItem('hasSetWorkflowData',false);});};// Loading Workflow Related Data for Workflow Settings\nuseEffect(function(){/** Retrieving saved data from index DB,\n     *  if user has already edited the details then it will fetch the stored data\n     *  and call checkForStoredData()\n     *  else it will initializeWithDefault()\n     */localforage.getItem('hasSetWorkflowData').then(function(isDataPresent){return isDataPresent?checkForStoredData():initializeWithDefault();});alert.changeAlertState(false);detectHeader();},[]);// Workflow Name Change Handler\nvar nameChangeHandle=function nameChangeHandle(event){setName(event.target.value);localforage.setItem('hasSetWorkflowData',true);};// Workflow Description Change Handler\nvar descriptionChangeHandle=function descriptionChangeHandle(event){setDescription(event.target.value);localforage.setItem('hasSetWorkflowData',true);};var handleClose=function handleClose(){setAvatarModal(false);};function onNext(){/** Creating an object to be stored in local forage for iterative fetching\n     *  Used in cases where users need to return back to previous page\n     *  and wants the edited data stored/saved\n     */var workflowDetails={name:name,description:description,icon:icon,CRDLink:CRDLink};localforage.setItem('workflow',workflowDetails);if(!name.length){alert.changeAlertState(true);// Workflow Name is empty and user clicked on Next\nreturn false;}if(name.length>0&&validateWorkflowName(name)){alert.changeAlertState(true);// Workflow Name is not valid and user clicked on Next\nreturn false;}return true;}useImperativeHandle(ref,function(){return{onNext:onNext};});return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.innerContainer},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:classes.header},t('createWorkflow.chooseWorkflow.settings')),/*#__PURE__*/React.createElement(Typography,{className:classes.description},descriptionHeader,/*#__PURE__*/React.createElement(\"i\",null,/*#__PURE__*/React.createElement(\"strong\",null,name.split('-').map(function(text){return\"\".concat(capitalize(text),\" \");}))),/*#__PURE__*/React.createElement(\"br\",null),t('createWorkflow.chooseWorkflow.description2'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.avatarDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.avatarImgDiv},/*#__PURE__*/React.createElement(Avatar,{variant:\"square\",className:classes.avatar,alt:\"User\",src:icon})),/*#__PURE__*/React.createElement(\"div\",{className:classes.inputDiv},/*#__PURE__*/React.createElement(\"div\",{\"aria-details\":\"spacer\",className:classes.mainDiv},/*#__PURE__*/React.createElement(InputField,{\"data-cy\":\"WorkflowName\",title:\"workflowName\",label:t('createWorkflow.chooseWorkflow.label.workflowName'),fullWidth:true,helperText:validateWorkflowName(name)?t('createWorkflow.chooseWorkflow.validate'):'',variant:validateWorkflowName(name)?'error':'primary',onChange:nameChangeHandle,value:name}),/*#__PURE__*/React.createElement(InputField,{\"data-cy\":\"WorkflowNamespace\",InputProps:{readOnly:true},disabled:true,className:classes.nsInput,label:t('createWorkflow.chooseWorkflow.label.namespace'),value:workflowData.namespace})),/*#__PURE__*/React.createElement(\"div\",{\"aria-details\":\"spacer\",className:classes.descDiv}),/*#__PURE__*/React.createElement(InputField,{\"data-cy\":\"WorkflowDescription\",id:\"filled-workflowdescription-input\",label:t('createWorkflow.chooseWorkflow.label.desc'),fullWidth:true,InputProps:{disableUnderline:true},value:description,onChange:descriptionChangeHandle,multiline:true,rows:8}),/*#__PURE__*/React.createElement(\"br\",null)))),avatarModal?/*#__PURE__*/React.createElement(Modal,{open:avatarModal,width:\"60%\",onClose:function onClose(){return setAvatarModal(false);},modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:handleClose},\"\\u2715\")},/*#__PURE__*/React.createElement(\"div\",{style:{padding:'2.5rem',fontSize:'2rem',marginBottom:'15rem'}},\"Modal\")):null);});// Modal Content\n/* <WorkflowAvatarModal\n    setAvatar={setWorkflowDetails}\n    setAvatarModal={setAvatarModal}\n    avatar={workflowDetails.icon}\n  /> */export default WorkflowSettings;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/WorkflowSettings/index.tsx"],"names":["useLazyQuery","Avatar","Typography","ButtonOutlined","InputField","Modal","localforage","React","forwardRef","useEffect","useImperativeHandle","useState","useTranslation","useSelector","config","GET_EXPERIMENT_DATA","useActions","AlertActions","WorkflowActions","capitalize","getProjectID","validateWorkflowName","useStyles","WorkflowSettings","_","ref","classes","avatarModal","setAvatarModal","projectID","name","setName","descriptionHeader","setDescriptionHeader","description","setDescription","icon","setIcon","CRDLink","setCRDLink","workflowAction","workflowData","state","workflowManifest","manifest","hubName","setHubName","fetchPolicy","onCompleted","data","getHubExperiment","undefined","Metadata","Name","toLowerCase","Spec","CategoryDescription","grahqlEndpoint","getWorkflowDetails","t","alert","checkForStoredData","getItem","then","workflow","detectHeader","value","selected","initializeWithDefault","hub","variables","HubName","ProjectID","ChartName","ExperimentName","id","setWorkflowManifest","setItem","isDataPresent","changeAlertState","nameChangeHandle","event","target","descriptionChangeHandle","handleClose","onNext","workflowDetails","length","root","innerContainer","header","split","map","text","avatarDiv","avatarImgDiv","avatar","inputDiv","mainDiv","readOnly","nsInput","namespace","descDiv","disableUnderline","padding","fontSize","marginBottom"],"mappings":"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","sourcesContent":["import { useLazyQuery } from '@apollo/client';\nimport { Avatar, Typography } from '@material-ui/core';\nimport { ButtonOutlined, InputField, Modal } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport config from '../../../config';\nimport { GET_EXPERIMENT_DATA } from '../../../graphql';\nimport { ChooseWorkflowRadio } from '../../../models/localforage/radioButton';\nimport { WorkflowDetailsProps } from '../../../models/localforage/workflow';\nimport { ExperimentDetail } from '../../../models/redux/myhub';\nimport useActions from '../../../redux/actions';\nimport * as AlertActions from '../../../redux/actions/alert';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { RootState } from '../../../redux/reducers';\nimport capitalize from '../../../utils/capitalize';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport { validateWorkflowName } from '../../../utils/validate';\nimport useStyles from './styles';\n\nconst WorkflowSettings = forwardRef((_, ref) => {\n  const classes = useStyles();\n  const [avatarModal, setAvatarModal] = useState<boolean>(false);\n  const projectID = getProjectID();\n  // Workflow States\n  const [name, setName] = useState<string>('');\n  const [descriptionHeader, setDescriptionHeader] = useState<JSX.Element>(\n    <></>\n  );\n  const [description, setDescription] = useState<string>('');\n  const [icon, setIcon] = useState<string>('');\n  const [CRDLink, setCRDLink] = useState<string>('');\n  // Actions\n  const workflowAction = useActions(WorkflowActions);\n  const workflowData = useSelector((state: RootState) => state.workflowData);\n  const { manifest } = useSelector(\n    (state: RootState) => state.workflowManifest\n  );\n  const [hubName, setHubName] = useState('');\n  // Query to get charts of selected MyHub\n  const [getWorkflowDetails] = useLazyQuery<ExperimentDetail>(\n    GET_EXPERIMENT_DATA,\n    {\n      fetchPolicy: 'cache-and-network',\n      onCompleted: (data) => {\n        if (data.getHubExperiment !== undefined) {\n          setName(data.getHubExperiment.Metadata.Name.toLowerCase());\n          setDescription(data.getHubExperiment.Spec.CategoryDescription);\n          setIcon(\n            `${config.grahqlEndpoint}/icon/${projectID}/${hubName}/predefined/${data.getHubExperiment.Metadata.Name}.png`\n          );\n          setCRDLink(data.getHubExperiment.Metadata.Name);\n        }\n      },\n    }\n  );\n\n  const { t } = useTranslation();\n  const alert = useActions(AlertActions);\n\n  const checkForStoredData = () => {\n    localforage.getItem('workflow').then((workflow) => {\n      // If data is present set all the data to local state for the UI to display\n      if (workflow && (workflow as WorkflowDetailsProps).name !== '') {\n        setName((workflow as WorkflowDetailsProps).name);\n      }\n      if (workflow && (workflow as WorkflowDetailsProps).description !== '') {\n        setDescription((workflow as WorkflowDetailsProps).description);\n      }\n      if (workflow && (workflow as WorkflowDetailsProps).icon !== '') {\n        setIcon((workflow as WorkflowDetailsProps).icon);\n      }\n    });\n  };\n\n  const detectHeader = () => {\n    return localforage\n      .getItem('selectedScheduleOption')\n      .then((value) =>\n        value && (value as ChooseWorkflowRadio).selected === 'A'\n          ? setDescriptionHeader(\n              <>{t('createWorkflow.chooseWorkflow.descriptionA')} </>\n            )\n          : value && (value as ChooseWorkflowRadio).selected === 'B'\n          ? setDescriptionHeader(\n              <>{t('createWorkflow.chooseWorkflow.descriptionB')} </>\n            )\n          : value && (value as ChooseWorkflowRadio).selected === 'C'\n          ? setDescriptionHeader(\n              <>{t('createWorkflow.chooseWorkflow.descriptionC')} </>\n            )\n          : setDescriptionHeader(\n              <>{t('createWorkflow.chooseWorkflow.descriptionD')} </>\n            )\n      );\n  };\n\n  const initializeWithDefault = () => {\n    localforage.getItem('selectedScheduleOption').then((value) => {\n      // Map over the list of predefined workflows and extract the name and detail\n      if ((value as ChooseWorkflowRadio).selected === 'A') {\n        localforage.getItem('selectedHub').then((hub) => {\n          setHubName(hub as string);\n          getWorkflowDetails({\n            variables: {\n              data: {\n                HubName: hub as string,\n                ProjectID: projectID,\n                ChartName: 'predefined',\n                ExperimentName: (value as ChooseWorkflowRadio).id,\n              },\n            },\n          });\n        });\n      }\n      if ((value as ChooseWorkflowRadio).selected === 'B') {\n        workflowAction.setWorkflowManifest({ manifest: '' });\n      }\n      if ((value as ChooseWorkflowRadio).selected === 'C') {\n        setName('custom-chaos-workflow');\n        workflowAction.setWorkflowManifest({ manifest: manifest ?? '' });\n        setDescription('Custom Chaos Workflow');\n        setIcon('./avatars/litmus.svg');\n      }\n      if ((value as ChooseWorkflowRadio).selected === 'D') {\n        setName('chaos-workflow');\n        setDescription('Chaos Workflow');\n        setIcon('./avatars/litmus.svg');\n      }\n\n      /** Store a boolean value in local storage to serve as an indication\n       *  whether user already has edited data or not\n       */\n\n      localforage.setItem('hasSetWorkflowData', false);\n    });\n  };\n\n  // Loading Workflow Related Data for Workflow Settings\n  useEffect(() => {\n    /** Retrieving saved data from index DB,\n     *  if user has already edited the details then it will fetch the stored data\n     *  and call checkForStoredData()\n     *  else it will initializeWithDefault()\n     */\n\n    localforage.getItem('hasSetWorkflowData').then((isDataPresent) => {\n      return isDataPresent ? checkForStoredData() : initializeWithDefault();\n    });\n    alert.changeAlertState(false);\n    detectHeader();\n  }, []);\n\n  // Workflow Name Change Handler\n  const nameChangeHandle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n    localforage.setItem('hasSetWorkflowData', true);\n  };\n\n  // Workflow Description Change Handler\n  const descriptionChangeHandle = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setDescription(event.target.value);\n    localforage.setItem('hasSetWorkflowData', true);\n  };\n\n  const handleClose = () => {\n    setAvatarModal(false);\n  };\n\n  function onNext() {\n    /** Creating an object to be stored in local forage for iterative fetching\n     *  Used in cases where users need to return back to previous page\n     *  and wants the edited data stored/saved\n     */\n    const workflowDetails: WorkflowDetailsProps = {\n      name,\n      description,\n      icon,\n      CRDLink,\n    };\n    localforage.setItem('workflow', workflowDetails);\n    if (!name.length) {\n      alert.changeAlertState(true); // Workflow Name is empty and user clicked on Next\n      return false;\n    }\n    if (name.length > 0 && validateWorkflowName(name)) {\n      alert.changeAlertState(true); // Workflow Name is not valid and user clicked on Next\n      return false;\n    }\n\n    return true;\n  }\n\n  useImperativeHandle(ref, () => ({\n    onNext,\n  }));\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.innerContainer}>\n        <div>\n          <Typography className={classes.header}>\n            {t('createWorkflow.chooseWorkflow.settings')}\n          </Typography>\n          <Typography className={classes.description}>\n            {descriptionHeader}\n            <i>\n              <strong>\n                {name.split('-').map((text) => `${capitalize(text)} `)}\n              </strong>\n            </i>\n            <br />\n            {t('createWorkflow.chooseWorkflow.description2')}\n          </Typography>\n        </div>\n        <div className={classes.avatarDiv}>\n          <div className={classes.avatarImgDiv}>\n            <Avatar\n              variant=\"square\"\n              className={classes.avatar}\n              alt=\"User\"\n              src={icon}\n            />\n          </div>\n          <div className={classes.inputDiv}>\n            <div aria-details=\"spacer\" className={classes.mainDiv}>\n              <InputField\n                data-cy=\"WorkflowName\"\n                title=\"workflowName\"\n                label={t('createWorkflow.chooseWorkflow.label.workflowName')}\n                fullWidth\n                helperText={\n                  validateWorkflowName(name)\n                    ? t('createWorkflow.chooseWorkflow.validate')\n                    : ''\n                }\n                variant={validateWorkflowName(name) ? 'error' : 'primary'}\n                onChange={nameChangeHandle}\n                value={name}\n              />\n              <InputField\n                data-cy=\"WorkflowNamespace\"\n                InputProps={{\n                  readOnly: true,\n                }}\n                disabled\n                className={classes.nsInput}\n                label={t('createWorkflow.chooseWorkflow.label.namespace')}\n                value={workflowData.namespace}\n              />\n            </div>\n            <div aria-details=\"spacer\" className={classes.descDiv} />\n            <InputField\n              data-cy=\"WorkflowDescription\"\n              id=\"filled-workflowdescription-input\"\n              label={t('createWorkflow.chooseWorkflow.label.desc')}\n              fullWidth\n              InputProps={{\n                disableUnderline: true,\n              }}\n              value={description}\n              onChange={descriptionChangeHandle}\n              multiline\n              rows={8}\n            />\n            <br />\n          </div>\n        </div>\n      </div>\n      {avatarModal ? (\n        <Modal\n          open={avatarModal}\n          width=\"60%\"\n          onClose={() => setAvatarModal(false)}\n          modalActions={\n            <ButtonOutlined onClick={handleClose}>&#x2715;</ButtonOutlined>\n          }\n        >\n          <div\n            style={{\n              padding: '2.5rem',\n              fontSize: '2rem',\n              marginBottom: '15rem',\n            }}\n          >\n            Modal\n          </div>\n        </Modal>\n      ) : null}\n    </div>\n  );\n});\n\n// Modal Content\n\n/* <WorkflowAvatarModal\n    setAvatar={setWorkflowDetails}\n    setAvatarModal={setAvatarModal}\n    avatar={workflowDetails.icon}\n  /> */\n\nexport default WorkflowSettings;\n"]},"metadata":{},"sourceType":"module"}