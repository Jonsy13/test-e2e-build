{"ast":null,"code":"export var MyHubType;(function(MyHubType){MyHubType[\"basic\"]=\"basic\";MyHubType[\"token\"]=\"token\";MyHubType[\"ssh\"]=\"ssh\";MyHubType[\"none\"]=\"none\";})(MyHubType||(MyHubType={}));export var Role;(function(Role){Role[\"viewer\"]=\"Viewer\";Role[\"editor\"]=\"Editor\";Role[\"owner\"]=\"Owner\";})(Role||(Role={}));export var UserRole;(function(UserRole){UserRole[\"admin\"]=\"admin\";UserRole[\"user\"]=\"user\";})(UserRole||(UserRole={}));export var InvitationStatus;(function(InvitationStatus){InvitationStatus[\"PENDING\"]=\"Pending\";InvitationStatus[\"ACCEPTED\"]=\"Accepted\";})(InvitationStatus||(InvitationStatus={}));","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/models/graphql/user.ts"],"names":["MyHubType","Role","UserRole","InvitationStatus"],"mappings":"AAoGA,UAAYA,CAAAA,SAAZ,C,UAAYA,S,EAAAA,S,kBAAAA,S,kBAAAA,S,cAAAA,S,mBAAAA,S,GAAAA,S,MAmBZ,UAAYC,CAAAA,IAAZ,C,UAAYA,I,EAAAA,I,oBAAAA,I,oBAAAA,I,qBAAAA,I,GAAAA,I,MAMZ,UAAYC,CAAAA,QAAZ,C,UAAYA,Q,EAAAA,Q,kBAAAA,Q,mBAAAA,Q,GAAAA,Q,MAKZ,UAAYC,CAAAA,gBAAZ,C,UAAYA,gB,EAAAA,gB,sBAAAA,gB,2BAAAA,gB,GAAAA,gB","sourcesContent":["export interface Member {\n  user_id: string;\n  user_name: string;\n  role: string;\n  invitation: string;\n  name: string;\n  email: string;\n  joined_at: string;\n}\n\nexport interface Project {\n  members: Member[];\n  name: string;\n  id: string;\n}\n\nexport interface UserDetails {\n  username: string;\n  projects: Project[];\n  name: string;\n  email: string;\n  id: string;\n  company_name: string;\n  updated_at: string;\n  created_at: string;\n  removed_at: string;\n  is_email_verified: string;\n  state: string;\n  role: string;\n}\n\nexport interface MyHubDetail {\n  id: string;\n  HubName: string;\n  RepoBranch: string;\n  RepoURL: string;\n}\n\nexport interface CurrentUserDetails {\n  getUser: UserDetails;\n}\n\nexport interface CurrentUserDedtailsVars {\n  username: string;\n}\n\nexport interface CreateUserData {\n  username: string;\n  email: string;\n  name: string;\n  userID: string;\n  role: string;\n}\n\nexport interface UpdateUser {\n  user: {\n    id: string;\n    name: string;\n    email: string;\n  };\n}\n\nexport interface SSHKey {\n  privateKey: string;\n  publicKey: string;\n}\n\nexport interface SSHKeys {\n  generaterSSHKey: SSHKey;\n}\n\nexport interface MyHubInput {\n  id?: string;\n  HubName: string;\n  RepoURL: string;\n  RepoBranch: string;\n  IsPrivate: Boolean;\n  AuthType: MyHubType;\n  Token?: string;\n  UserName?: string;\n  Password?: string;\n  SSHPrivateKey?: string;\n  SSHPublicKey?: string;\n}\n\nexport interface MyHubData {\n  id: string;\n  RepoURL: string;\n  RepoBranch: string;\n  ProjectID: string;\n  HubName: string;\n  CreatedAt: string;\n  UpdatedAt: string;\n}\n\nexport interface CreateMyHub {\n  MyHubDetails: MyHubInput;\n  projectID: string;\n}\n\nexport enum MyHubType {\n  basic = 'basic',\n  token = 'token',\n  ssh = 'ssh',\n  none = 'none',\n}\n\nexport interface Projects {\n  listProjects: Project[];\n}\n\nexport interface ProjectDetail {\n  getProject: Project;\n}\n\nexport interface ProjectDetailVars {\n  projectID: string;\n}\n\nexport enum Role {\n  viewer = 'Viewer',\n  editor = 'Editor',\n  owner = 'Owner',\n}\n\nexport enum UserRole {\n  admin = 'admin',\n  user = 'user',\n}\n\nexport enum InvitationStatus {\n  PENDING = 'Pending',\n  ACCEPTED = 'Accepted',\n}\n"]},"metadata":{},"sourceType":"module"}