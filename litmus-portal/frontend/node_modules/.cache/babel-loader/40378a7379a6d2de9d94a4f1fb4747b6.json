{"ast":null,"code":"import _toConsumableArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable no-param-reassign */import{Typography}from'@material-ui/core';import React,{useEffect,useState}from'react';import AceEditor from'react-ace';import'ace-builds/src-min-noconflict/ext-beautify';import'ace-builds/src-min-noconflict/ext-code_lens';import'ace-builds/src-min-noconflict/ext-elastic_tabstops_lite';import'ace-builds/src-min-noconflict/ext-emmet';import'ace-builds/src-min-noconflict/ext-error_marker';import'ace-builds/src-min-noconflict/ext-keybinding_menu';import'ace-builds/src-min-noconflict/ext-language_tools';import'ace-builds/src-min-noconflict/ext-linking';import'ace-builds/src-min-noconflict/ext-modelist';import'ace-builds/src-min-noconflict/ext-options';import'ace-builds/src-min-noconflict/ext-prompt';import'ace-builds/src-min-noconflict/ext-rtl';import'ace-builds/src-min-noconflict/ext-searchbox';import'ace-builds/src-min-noconflict/ext-spellcheck';import'ace-builds/src-min-noconflict/ext-split';import'ace-builds/src-min-noconflict/ext-static_highlight';import'ace-builds/src-min-noconflict/ext-statusbar';import'ace-builds/src-min-noconflict/ext-textarea';import'ace-builds/src-min-noconflict/ext-themelist';import'ace-builds/src-min-noconflict/ext-whitespace';import{useTranslation}from'react-i18next';import'./prometheus';import useStyles from'./styles';import'./theme';var PrometheusQueryEditor=function PrometheusQueryEditor(_ref){var index=_ref.index,content=_ref.content,saveQueryChange=_ref.saveQueryChange,seriesListCompletionOptions=_ref.seriesListCompletionOptions,labelListCompletionOptions=_ref.labelListCompletionOptions,valueListCompletionOptions=_ref.valueListCompletionOptions;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(content),_useState2=_slicedToArray(_useState,2),modifiedPrometheusQuery=_useState2[0],setModifiedPrometheusQuery=_useState2[1];var _useState3=useState([].concat(_toConsumableArray(seriesListCompletionOptions),_toConsumableArray(labelListCompletionOptions),_toConsumableArray(valueListCompletionOptions))),_useState4=_slicedToArray(_useState3,2),autoCompleteOptions=_useState4[0],setAutoCompleteOptions=_useState4[1];var PromAce=React.createRef();useEffect(function(){setModifiedPrometheusQuery(content);},[content]);useEffect(function(){setAutoCompleteOptions([].concat(_toConsumableArray(seriesListCompletionOptions),_toConsumableArray(labelListCompletionOptions),_toConsumableArray(valueListCompletionOptions)));},[seriesListCompletionOptions,labelListCompletionOptions,valueListCompletionOptions]);return/*#__PURE__*/React.createElement(\"div\",{id:\"editor-\".concat(index),\"data-cy\":\"WorkflowEditor\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.editor},/*#__PURE__*/React.createElement(Typography,{className:classes.heading},t('analyticsDashboard.applicationDashboards.tuneTheQueries.query')),/*#__PURE__*/React.createElement(\"pre\",{id:\"prom-query-editor\"},/*#__PURE__*/React.createElement(AceEditor,{mode:\"prometheus\",theme:\"prom-query-editor\",width:\"100%\",height:\"100%\",maxLines:12000,minLines:1,highlightActiveLine:false,readOnly:false,tabSize:2,wrapEnabled:true,ref:PromAce,showGutter:false,onChange:function onChange(value){setModifiedPrometheusQuery(value);saveQueryChange(value);},showPrintMargin:false,enableSnippets:false,value:modifiedPrometheusQuery,editorProps:{$blockScrolling:Infinity,$useWorker:true},onLoad:function onLoad(editor){editor.setReadOnly(false);editor.setOptions({fontFamily:'monospace',highlightGutterLine:false,autoScrollEditorIntoView:true,tooltipFollowsMouse:true,displayIndentGuides:false,enableBasicAutocompletion:[{getCompletions:function getCompletions(_editor,_session,_pos,_prefix,callback){// note, won't fire if caret is at a word that does not have these letters\ncallback(null,autoCompleteOptions);}}],// to make popup appear automatically, without explicit _ctrl+space_\nenableLiveAutocompletion:true});editor.setHighlightSelectedWord(true);editor.session.setFoldStyle('markbeginend');editor.setShowFoldWidgets(false);editor.setAnimatedScroll(true);editor.setShowInvisibles(false);editor.setFontSize('0.98rem');editor.container.style.lineHeight='160%';},onCursorChange:function onCursorChange(){if(PromAce.current){PromAce.current.editor.setOptions({autoScrollEditorIntoView:true,tooltipFollowsMouse:true});}}}))));};export default PrometheusQueryEditor;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/ApplicationDashboards/Steps/TuneTheQueries/EditPanelsWizard/QueryEditingWizard/QueryEditor/PrometheusQueryBox/index.tsx"],"names":["Typography","React","useEffect","useState","AceEditor","useTranslation","useStyles","PrometheusQueryEditor","index","content","saveQueryChange","seriesListCompletionOptions","labelListCompletionOptions","valueListCompletionOptions","classes","t","modifiedPrometheusQuery","setModifiedPrometheusQuery","autoCompleteOptions","setAutoCompleteOptions","PromAce","createRef","editor","heading","value","$blockScrolling","Infinity","$useWorker","setReadOnly","setOptions","fontFamily","highlightGutterLine","autoScrollEditorIntoView","tooltipFollowsMouse","displayIndentGuides","enableBasicAutocompletion","getCompletions","_editor","_session","_pos","_prefix","callback","enableLiveAutocompletion","setHighlightSelectedWord","session","setFoldStyle","setShowFoldWidgets","setAnimatedScroll","setShowInvisibles","setFontSize","container","style","lineHeight","current"],"mappings":"8WAAA,sCACA,OAASA,UAAT,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CACA,MAAO,4CAAP,CACA,MAAO,6CAAP,CACA,MAAO,yDAAP,CACA,MAAO,yCAAP,CACA,MAAO,gDAAP,CACA,MAAO,mDAAP,CACA,MAAO,kDAAP,CACA,MAAO,2CAAP,CACA,MAAO,4CAAP,CACA,MAAO,2CAAP,CACA,MAAO,0CAAP,CACA,MAAO,uCAAP,CACA,MAAO,6CAAP,CACA,MAAO,8CAAP,CACA,MAAO,yCAAP,CACA,MAAO,oDAAP,CACA,MAAO,6CAAP,CACA,MAAO,4CAAP,CACA,MAAO,6CAAP,CACA,MAAO,8CAAP,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAO,cAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,MAAO,SAAP,CAWA,GAAMC,CAAAA,qBAA2D,CAAG,QAA9DA,CAAAA,qBAA8D,MAO9D,IANJC,CAAAA,KAMI,MANJA,KAMI,CALJC,OAKI,MALJA,OAKI,CAJJC,eAII,MAJJA,eAII,CAHJC,2BAGI,MAHJA,2BAGI,CAFJC,0BAEI,MAFJA,0BAEI,CADJC,0BACI,MADJA,0BACI,CACJ,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CACA,oBAAcD,cAAc,EAA5B,CAAQU,CAAR,iBAAQA,CAAR,CACA,cACEZ,QAAQ,CAACM,OAAD,CADV,wCAAOO,uBAAP,eAAgCC,0BAAhC,eAEA,eAAsDd,QAAQ,8BACzDQ,2BADyD,qBAEzDC,0BAFyD,qBAGzDC,0BAHyD,GAA9D,yCAAOK,mBAAP,eAA4BC,sBAA5B,eAKA,GAAMC,CAAAA,OAAO,CAAGnB,KAAK,CAACoB,SAAN,EAAhB,CAEAnB,SAAS,CAAC,UAAM,CACde,0BAA0B,CAACR,OAAD,CAA1B,CACD,CAFQ,CAEN,CAACA,OAAD,CAFM,CAAT,CAIAP,SAAS,CAAC,UAAM,CACdiB,sBAAsB,8BACjBR,2BADiB,qBAEjBC,0BAFiB,qBAGjBC,0BAHiB,GAAtB,CAKD,CANQ,CAMN,CACDF,2BADC,CAEDC,0BAFC,CAGDC,0BAHC,CANM,CAAT,CAYA,mBACE,2BAAK,EAAE,kBAAYL,KAAZ,CAAP,CAA4B,UAAQ,gBAApC,eACE,2BAAK,SAAS,CAAEM,OAAO,CAACQ,MAAxB,eACE,oBAAC,UAAD,EAAY,SAAS,CAAER,OAAO,CAACS,OAA/B,EACGR,CAAC,CAAC,+DAAD,CADJ,CADF,cAIE,2BAAK,EAAE,CAAC,mBAAR,eACE,oBAAC,SAAD,EACE,IAAI,CAAC,YADP,CAEE,KAAK,CAAC,mBAFR,CAGE,KAAK,CAAC,MAHR,CAIE,MAAM,CAAC,MAJT,CAKE,QAAQ,CAAE,KALZ,CAME,QAAQ,CAAE,CANZ,CAOE,mBAAmB,CAAE,KAPvB,CAQE,QAAQ,CAAE,KARZ,CASE,OAAO,CAAE,CATX,CAUE,WAAW,KAVb,CAWE,GAAG,CAAEK,OAXP,CAYE,UAAU,CAAE,KAZd,CAaE,QAAQ,CAAE,kBAACI,KAAD,CAAmB,CAC3BP,0BAA0B,CAACO,KAAD,CAA1B,CACAd,eAAe,CAACc,KAAD,CAAf,CACD,CAhBH,CAiBE,eAAe,CAAE,KAjBnB,CAkBE,cAAc,CAAE,KAlBlB,CAmBE,KAAK,CAAER,uBAnBT,CAoBE,WAAW,CAAE,CACXS,eAAe,CAAEC,QADN,CAEXC,UAAU,CAAE,IAFD,CApBf,CAwBE,MAAM,CAAE,gBAACL,MAAD,CAAY,CAClBA,MAAM,CAACM,WAAP,CAAmB,KAAnB,EACAN,MAAM,CAACO,UAAP,CAAkB,CAChBC,UAAU,CAAE,WADI,CAEhBC,mBAAmB,CAAE,KAFL,CAGhBC,wBAAwB,CAAE,IAHV,CAIhBC,mBAAmB,CAAE,IAJL,CAKhBC,mBAAmB,CAAE,KALL,CAMhBC,yBAAyB,CAAE,CACzB,CACEC,cAAc,CAAE,wBACdC,OADc,CAEdC,QAFc,CAGdC,IAHc,CAIdC,OAJc,CAKdC,QALc,CAMX,CACH;AACAA,QAAQ,CAAC,IAAD,CAAOvB,mBAAP,CAAR,CACD,CAVH,CADyB,CANX,CAoBhB;AACAwB,wBAAwB,CAAE,IArBV,CAAlB,EAuBApB,MAAM,CAACqB,wBAAP,CAAgC,IAAhC,EACArB,MAAM,CAACsB,OAAP,CAAeC,YAAf,CAA4B,cAA5B,EACAvB,MAAM,CAACwB,kBAAP,CAA0B,KAA1B,EACAxB,MAAM,CAACyB,iBAAP,CAAyB,IAAzB,EACAzB,MAAM,CAAC0B,iBAAP,CAAyB,KAAzB,EACA1B,MAAM,CAAC2B,WAAP,CAAmB,SAAnB,EACA3B,MAAM,CAAC4B,SAAP,CAAiBC,KAAjB,CAAuBC,UAAvB,CAAoC,MAApC,CACD,CAxDH,CAyDE,cAAc,CAAE,yBAAM,CACpB,GAAIhC,OAAO,CAACiC,OAAZ,CAAqB,CAClBjC,OAAO,CAACiC,OAAR,CAAiB/B,MAAlB,CAAiCO,UAAjC,CAA4C,CAC1CG,wBAAwB,CAAE,IADgB,CAE1CC,mBAAmB,CAAE,IAFqB,CAA5C,EAID,CACF,CAhEH,EADF,CAJF,CADF,CADF,CA6ED,CAhHD,CAkHA,cAAe1B,CAAAA,qBAAf","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-min-noconflict/ext-beautify';\nimport 'ace-builds/src-min-noconflict/ext-code_lens';\nimport 'ace-builds/src-min-noconflict/ext-elastic_tabstops_lite';\nimport 'ace-builds/src-min-noconflict/ext-emmet';\nimport 'ace-builds/src-min-noconflict/ext-error_marker';\nimport 'ace-builds/src-min-noconflict/ext-keybinding_menu';\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\nimport 'ace-builds/src-min-noconflict/ext-linking';\nimport 'ace-builds/src-min-noconflict/ext-modelist';\nimport 'ace-builds/src-min-noconflict/ext-options';\nimport 'ace-builds/src-min-noconflict/ext-prompt';\nimport 'ace-builds/src-min-noconflict/ext-rtl';\nimport 'ace-builds/src-min-noconflict/ext-searchbox';\nimport 'ace-builds/src-min-noconflict/ext-spellcheck';\nimport 'ace-builds/src-min-noconflict/ext-split';\nimport 'ace-builds/src-min-noconflict/ext-static_highlight';\nimport 'ace-builds/src-min-noconflict/ext-statusbar';\nimport 'ace-builds/src-min-noconflict/ext-textarea';\nimport 'ace-builds/src-min-noconflict/ext-themelist';\nimport 'ace-builds/src-min-noconflict/ext-whitespace';\nimport { useTranslation } from 'react-i18next';\nimport './prometheus';\nimport useStyles from './styles';\nimport './theme';\n\ninterface PrometheusQueryEditorProps {\n  index: number;\n  content: string;\n  saveQueryChange: (updatedQuery: string) => void;\n  seriesListCompletionOptions: any;\n  labelListCompletionOptions: any;\n  valueListCompletionOptions: any;\n}\n\nconst PrometheusQueryEditor: React.FC<PrometheusQueryEditorProps> = ({\n  index,\n  content,\n  saveQueryChange,\n  seriesListCompletionOptions,\n  labelListCompletionOptions,\n  valueListCompletionOptions,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [modifiedPrometheusQuery, setModifiedPrometheusQuery] =\n    useState(content);\n  const [autoCompleteOptions, setAutoCompleteOptions] = useState([\n    ...seriesListCompletionOptions,\n    ...labelListCompletionOptions,\n    ...valueListCompletionOptions,\n  ]);\n  const PromAce = React.createRef() as React.RefObject<AceEditor>;\n\n  useEffect(() => {\n    setModifiedPrometheusQuery(content);\n  }, [content]);\n\n  useEffect(() => {\n    setAutoCompleteOptions([\n      ...seriesListCompletionOptions,\n      ...labelListCompletionOptions,\n      ...valueListCompletionOptions,\n    ]);\n  }, [\n    seriesListCompletionOptions,\n    labelListCompletionOptions,\n    valueListCompletionOptions,\n  ]);\n\n  return (\n    <div id={`editor-${index}`} data-cy=\"WorkflowEditor\">\n      <div className={classes.editor}>\n        <Typography className={classes.heading}>\n          {t('analyticsDashboard.applicationDashboards.tuneTheQueries.query')}\n        </Typography>\n        <pre id=\"prom-query-editor\">\n          <AceEditor\n            mode=\"prometheus\"\n            theme=\"prom-query-editor\"\n            width=\"100%\"\n            height=\"100%\"\n            maxLines={12000}\n            minLines={1}\n            highlightActiveLine={false}\n            readOnly={false}\n            tabSize={2}\n            wrapEnabled\n            ref={PromAce}\n            showGutter={false}\n            onChange={(value: string) => {\n              setModifiedPrometheusQuery(value);\n              saveQueryChange(value);\n            }}\n            showPrintMargin={false}\n            enableSnippets={false}\n            value={modifiedPrometheusQuery}\n            editorProps={{\n              $blockScrolling: Infinity,\n              $useWorker: true,\n            }}\n            onLoad={(editor) => {\n              editor.setReadOnly(false);\n              editor.setOptions({\n                fontFamily: 'monospace',\n                highlightGutterLine: false,\n                autoScrollEditorIntoView: true,\n                tooltipFollowsMouse: true,\n                displayIndentGuides: false,\n                enableBasicAutocompletion: [\n                  {\n                    getCompletions: (\n                      _editor: any,\n                      _session: any,\n                      _pos: any,\n                      _prefix: any,\n                      callback: any\n                    ) => {\n                      // note, won't fire if caret is at a word that does not have these letters\n                      callback(null, autoCompleteOptions);\n                    },\n                  },\n                ],\n                // to make popup appear automatically, without explicit _ctrl+space_\n                enableLiveAutocompletion: true,\n              });\n              editor.setHighlightSelectedWord(true);\n              editor.session.setFoldStyle('markbeginend');\n              editor.setShowFoldWidgets(false);\n              editor.setAnimatedScroll(true);\n              editor.setShowInvisibles(false);\n              editor.setFontSize('0.98rem');\n              editor.container.style.lineHeight = '160%';\n            }}\n            onCursorChange={() => {\n              if (PromAce.current) {\n                (PromAce.current!.editor as any).setOptions({\n                  autoScrollEditorIntoView: true,\n                  tooltipFollowsMouse: true,\n                });\n              }\n            }}\n          />\n        </pre>\n      </div>\n    </div>\n  );\n};\n\nexport default PrometheusQueryEditor;\n"]},"metadata":{},"sourceType":"module"}