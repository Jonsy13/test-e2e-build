{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useQuery}from'@apollo/client';import{AppBar,Backdrop,Typography}from'@material-ui/core';import Tabs from'@material-ui/core/Tabs';import moment from'moment';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import{useParams}from'react-router-dom';import useTheme from'@material-ui/core/styles/useTheme';import{StyledTab,TabPanel}from'../../../components/Tabs';import Loader from'../../../components/Loader';import Center from'../../../containers/layouts/Center';import Scaffold from'../../../containers/layouts/Scaffold';import{GET_CHARTS_DATA,GET_HUB_STATUS,GET_PREDEFINED_WORKFLOW_LIST}from'../../../graphql';import{getProjectID,getProjectRole}from'../../../utils/getSearchParams';import ChartCard from'./chartCard';import HeaderSection from'./headerSection';import useStyles from'./styles';import BackButton from'../../../components/Button/BackButton';var MyHub=function MyHub(){// Get Parameters from URL\nvar paramData=useParams();var projectID=getProjectID();// Get all MyHubs with status\nvar _useQuery=useQuery(GET_HUB_STATUS,{variables:{data:projectID},fetchPolicy:'cache-and-network'}),hubDetails=_useQuery.data;var theme=useTheme();var _useState=useState(1),_useState2=_slicedToArray(_useState,2),tabValue=_useState2[0],setTabValue=_useState2[1];// Filter the selected MyHub\nvar UserHub=hubDetails===null||hubDetails===void 0?void 0:hubDetails.getHubStatus.filter(function(myHub){return paramData.hubname===myHub.HubName;})[0];var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;// Query to get charts of selected MyHub\nvar _useQuery2=useQuery(GET_CHARTS_DATA,{variables:{HubName:paramData.hubname,projectID:projectID},fetchPolicy:'network-only'}),data=_useQuery2.data,loading=_useQuery2.loading;var _useQuery3=useQuery(GET_PREDEFINED_WORKFLOW_LIST,{variables:{hubname:paramData.hubname,projectid:projectID},fetchPolicy:'network-only'}),predefinedData=_useQuery3.data,predefinedLoading=_useQuery3.loading;// State for searching charts\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),searchPredefined=_useState6[0],setSearchPredefined=_useState6[1];var changeSearch=function changeSearch(event){setSearch(event.target.value);};var handlePreDefinedSearch=function handlePreDefinedSearch(event){setSearchPredefined(event.target.value);};var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),totalExp=_useState8[0],setTotalExperiment=_useState8[1];var exp=[];// Function to convert UNIX time in format of DD MMM YYY\nvar formatDate=function formatDate(date){var updated=new Date(parseInt(date,10)*1000).toString();var resDate=moment(updated).format('DD MMM YYYY hh:mm:ss A');if(date)return resDate;return'Date not available';};var handleTabChange=function handleTabChange(event,newValue){setTabValue(newValue);};useEffect(function(){if(data!==undefined){var chartList=data.getCharts;chartList.forEach(function(expData){expData.Spec.Experiments.forEach(function(expName){exp.push({ChaosName:expData.Metadata.Name,ExperimentName:expName});});});setTotalExperiment(exp);}},[data]);var filteredWorkflow=(predefinedData===null||predefinedData===void 0?void 0:predefinedData.GetPredefinedWorkflowList)&&(predefinedData===null||predefinedData===void 0?void 0:predefinedData.GetPredefinedWorkflowList.filter(function(data){return data.toLowerCase().includes(searchPredefined.trim());}));var filteredExperiment=totalExp&&totalExp.filter(function(data){return data.ChaosName.toLowerCase().includes(search.trim())||data.ExperimentName.toLowerCase().includes(search.trim());});return loading||predefinedLoading?/*#__PURE__*/React.createElement(Backdrop,{open:true,className:classes.backdrop},/*#__PURE__*/React.createElement(Loader,null),/*#__PURE__*/React.createElement(Center,null,/*#__PURE__*/React.createElement(Typography,{variant:\"h4\",align:\"center\"},t('myhub.myhubChart.syncingRepo')))):/*#__PURE__*/React.createElement(Scaffold,null,/*#__PURE__*/React.createElement(BackButton,null),/*#__PURE__*/React.createElement(\"div\",{className:classes.header},/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",gutterBottom:true},UserHub===null||UserHub===void 0?void 0:UserHub.HubName),/*#__PURE__*/React.createElement(Typography,{variant:\"h5\",gutterBottom:true},t('myhub.myhubChart.repoLink'),/*#__PURE__*/React.createElement(\"strong\",null,UserHub===null||UserHub===void 0?void 0:UserHub.RepoURL)),/*#__PURE__*/React.createElement(Typography,{variant:\"h5\"},t('myhub.myhubChart.repoBranch'),/*#__PURE__*/React.createElement(\"strong\",null,UserHub===null||UserHub===void 0?void 0:UserHub.RepoBranch)),/*#__PURE__*/React.createElement(Typography,{className:classes.lastSyncText},t('myhub.myhubChart.lastSynced'),' ',formatDate(UserHub?UserHub.LastSyncedAt:''))),/*#__PURE__*/React.createElement(AppBar,{position:\"static\",color:\"default\",className:classes.appBar},/*#__PURE__*/React.createElement(Tabs,{value:tabValue,onChange:handleTabChange,TabIndicatorProps:{style:{backgroundColor:theme.palette.highlight}},variant:\"fullWidth\"},/*#__PURE__*/React.createElement(StyledTab,{label:\"\".concat(t('myhub.myhubChart.preDefined')),\"data-cy\":\"browseWorkflow\"}),/*#__PURE__*/React.createElement(StyledTab,{label:\"\".concat(t('myhub.myhubChart.chaosCharts')),\"data-cy\":\"browseSchedule\"}))),/*#__PURE__*/React.createElement(TabPanel,{value:tabValue,index:0},/*#__PURE__*/React.createElement(\"div\",{className:classes.mainDiv},/*#__PURE__*/React.createElement(HeaderSection,{searchValue:searchPredefined,changeSearch:handlePreDefinedSearch}),/*#__PURE__*/React.createElement(\"div\",{className:classes.chartsGroup},(filteredWorkflow===null||filteredWorkflow===void 0?void 0:filteredWorkflow.length)>0?filteredWorkflow.map(function(expName){return/*#__PURE__*/React.createElement(ChartCard,{key:expName,expName:{ChaosName:'predefined',ExperimentName:expName},UserHub:UserHub,setSearch:setSearchPredefined,projectID:projectID,userRole:getProjectRole(),isPredefined:true});}):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/no-experiment-found.svg\",alt:\"no experiment\",className:classes.noExpImage}),/*#__PURE__*/React.createElement(Typography,{variant:\"h5\",className:classes.noExp},t('myhub.myhubChart.noPredefinedExp')))))),/*#__PURE__*/React.createElement(TabPanel,{value:tabValue,index:1},/*#__PURE__*/React.createElement(\"div\",{className:classes.mainDiv},/*#__PURE__*/React.createElement(HeaderSection,{searchValue:search,changeSearch:changeSearch}),/*#__PURE__*/React.createElement(\"div\",{className:classes.chartsGroup},(filteredExperiment===null||filteredExperiment===void 0?void 0:filteredExperiment.length)>0?filteredExperiment.map(function(expName){return/*#__PURE__*/React.createElement(ChartCard,{key:\"\".concat(expName.ChaosName,\"-\").concat(expName.ExperimentName),expName:expName,UserHub:UserHub,setSearch:setSearch,projectID:projectID,userRole:getProjectRole(),isPredefined:false});}):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/no-experiment-found.svg\",alt:\"no experiment\",className:classes.noExpImage}),/*#__PURE__*/React.createElement(Typography,{variant:\"h5\",className:classes.noExp},t('myhub.myhubChart.noExp')))))));};export default MyHub;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/MyHub/MyHubCharts/index.tsx"],"names":["useQuery","AppBar","Backdrop","Typography","Tabs","moment","React","useEffect","useState","useTranslation","useParams","useTheme","StyledTab","TabPanel","Loader","Center","Scaffold","GET_CHARTS_DATA","GET_HUB_STATUS","GET_PREDEFINED_WORKFLOW_LIST","getProjectID","getProjectRole","ChartCard","HeaderSection","useStyles","BackButton","MyHub","paramData","projectID","variables","data","fetchPolicy","hubDetails","theme","tabValue","setTabValue","UserHub","getHubStatus","filter","myHub","hubname","HubName","classes","t","loading","projectid","predefinedData","predefinedLoading","search","setSearch","searchPredefined","setSearchPredefined","changeSearch","event","target","value","handlePreDefinedSearch","totalExp","setTotalExperiment","exp","formatDate","date","updated","Date","parseInt","toString","resDate","format","handleTabChange","newValue","undefined","chartList","getCharts","forEach","expData","Spec","Experiments","expName","push","ChaosName","Metadata","Name","ExperimentName","filteredWorkflow","GetPredefinedWorkflowList","toLowerCase","includes","trim","filteredExperiment","backdrop","header","RepoURL","RepoBranch","lastSyncText","LastSyncedAt","appBar","style","backgroundColor","palette","highlight","mainDiv","chartsGroup","length","map","noExpImage","noExp"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { AppBar, Backdrop, Typography } from '@material-ui/core';\nimport Tabs from '@material-ui/core/Tabs';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\n\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport { StyledTab, TabPanel } from '../../../components/Tabs';\nimport Loader from '../../../components/Loader';\nimport Center from '../../../containers/layouts/Center';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport {\n  GET_CHARTS_DATA,\n  GET_HUB_STATUS,\n  GET_PREDEFINED_WORKFLOW_LIST,\n} from '../../../graphql';\nimport { Chart, Charts, HubStatus } from '../../../models/redux/myhub';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport ChartCard from './chartCard';\nimport HeaderSection from './headerSection';\nimport useStyles from './styles';\nimport BackButton from '../../../components/Button/BackButton';\n\ninterface ChartName {\n  ChaosName: string;\n  ExperimentName: string;\n}\n\ninterface URLParams {\n  hubname: string;\n}\n\nconst MyHub: React.FC = () => {\n  // Get Parameters from URL\n  const paramData: URLParams = useParams();\n  const projectID = getProjectID();\n  // Get all MyHubs with status\n  const { data: hubDetails } = useQuery<HubStatus>(GET_HUB_STATUS, {\n    variables: { data: projectID },\n    fetchPolicy: 'cache-and-network',\n  });\n  const theme = useTheme();\n  const [tabValue, setTabValue] = useState(1);\n\n  // Filter the selected MyHub\n  const UserHub = hubDetails?.getHubStatus.filter((myHub) => {\n    return paramData.hubname === myHub.HubName;\n  })[0];\n\n  const classes = useStyles();\n\n  const { t } = useTranslation();\n\n  // Query to get charts of selected MyHub\n  const { data, loading } = useQuery<Charts>(GET_CHARTS_DATA, {\n    variables: {\n      HubName: paramData.hubname,\n      projectID,\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  const { data: predefinedData, loading: predefinedLoading } = useQuery(\n    GET_PREDEFINED_WORKFLOW_LIST,\n    {\n      variables: {\n        hubname: paramData.hubname,\n        projectid: projectID,\n      },\n      fetchPolicy: 'network-only',\n    }\n  );\n\n  // State for searching charts\n  const [search, setSearch] = useState('');\n  const [searchPredefined, setSearchPredefined] = useState('');\n\n  const changeSearch = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setSearch(event.target.value as string);\n  };\n  const handlePreDefinedSearch = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setSearchPredefined(event.target.value as string);\n  };\n  const [totalExp, setTotalExperiment] = useState<ChartName[]>([]);\n  const exp: ChartName[] = [];\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM YYYY hh:mm:ss A');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  useEffect(() => {\n    if (data !== undefined) {\n      const chartList = data.getCharts;\n      chartList.forEach((expData: Chart) => {\n        expData.Spec.Experiments.forEach((expName) => {\n          exp.push({\n            ChaosName: expData.Metadata.Name,\n            ExperimentName: expName,\n          });\n        });\n      });\n      setTotalExperiment(exp);\n    }\n  }, [data]);\n\n  const filteredWorkflow =\n    predefinedData?.GetPredefinedWorkflowList &&\n    predefinedData?.GetPredefinedWorkflowList.filter((data: string) =>\n      data.toLowerCase().includes(searchPredefined.trim())\n    );\n\n  const filteredExperiment =\n    totalExp &&\n    totalExp.filter(\n      (data) =>\n        data.ChaosName.toLowerCase().includes(search.trim()) ||\n        data.ExperimentName.toLowerCase().includes(search.trim())\n    );\n\n  return loading || predefinedLoading ? (\n    <Backdrop open className={classes.backdrop}>\n      <Loader />\n      <Center>\n        <Typography variant=\"h4\" align=\"center\">\n          {t('myhub.myhubChart.syncingRepo')}\n        </Typography>\n      </Center>\n    </Backdrop>\n  ) : (\n    <Scaffold>\n      <BackButton />\n      <div className={classes.header}>\n        <Typography variant=\"h3\" gutterBottom>\n          {UserHub?.HubName}\n        </Typography>\n        <Typography variant=\"h5\" gutterBottom>\n          {t('myhub.myhubChart.repoLink')}\n          <strong>{UserHub?.RepoURL}</strong>\n        </Typography>\n        <Typography variant=\"h5\">\n          {t('myhub.myhubChart.repoBranch')}\n          <strong>{UserHub?.RepoBranch}</strong>\n        </Typography>\n        <Typography className={classes.lastSyncText}>\n          {t('myhub.myhubChart.lastSynced')}{' '}\n          {formatDate(UserHub ? UserHub.LastSyncedAt : '')}\n        </Typography>\n        {/* </div> */}\n      </div>\n      <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\n        <Tabs\n          value={tabValue}\n          onChange={handleTabChange}\n          TabIndicatorProps={{\n            style: {\n              backgroundColor: theme.palette.highlight,\n            },\n          }}\n          variant=\"fullWidth\"\n        >\n          <StyledTab\n            label={`${t('myhub.myhubChart.preDefined')}`}\n            data-cy=\"browseWorkflow\"\n          />\n          <StyledTab\n            label={`${t('myhub.myhubChart.chaosCharts')}`}\n            data-cy=\"browseSchedule\"\n          />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={tabValue} index={0}>\n        <div className={classes.mainDiv}>\n          <HeaderSection\n            searchValue={searchPredefined}\n            changeSearch={handlePreDefinedSearch}\n          />\n          <div className={classes.chartsGroup}>\n            {filteredWorkflow?.length > 0 ? (\n              filteredWorkflow.map((expName: string) => {\n                return (\n                  <ChartCard\n                    key={expName}\n                    expName={{\n                      ChaosName: 'predefined',\n                      ExperimentName: expName,\n                    }}\n                    UserHub={UserHub}\n                    setSearch={setSearchPredefined}\n                    projectID={projectID}\n                    userRole={getProjectRole()}\n                    isPredefined\n                  />\n                );\n              })\n            ) : (\n              <>\n                <img\n                  src=\"/icons/no-experiment-found.svg\"\n                  alt=\"no experiment\"\n                  className={classes.noExpImage}\n                />\n                <Typography variant=\"h5\" className={classes.noExp}>\n                  {t('myhub.myhubChart.noPredefinedExp')}\n                </Typography>\n              </>\n            )}\n          </div>\n        </div>\n      </TabPanel>\n      <TabPanel value={tabValue} index={1}>\n        <div className={classes.mainDiv}>\n          <HeaderSection searchValue={search} changeSearch={changeSearch} />\n          <div className={classes.chartsGroup}>\n            {filteredExperiment?.length > 0 ? (\n              filteredExperiment.map((expName: ChartName) => {\n                return (\n                  <ChartCard\n                    key={`${expName.ChaosName}-${expName.ExperimentName}`}\n                    expName={expName}\n                    UserHub={UserHub}\n                    setSearch={setSearch}\n                    projectID={projectID}\n                    userRole={getProjectRole()}\n                    isPredefined={false}\n                  />\n                );\n              })\n            ) : (\n              <>\n                <img\n                  src=\"/icons/no-experiment-found.svg\"\n                  alt=\"no experiment\"\n                  className={classes.noExpImage}\n                />\n                <Typography variant=\"h5\" className={classes.noExp}>\n                  {t('myhub.myhubChart.noExp')}\n                </Typography>\n              </>\n            )}\n          </div>\n        </div>\n      </TabPanel>\n    </Scaffold>\n  );\n};\n\nexport default MyHub;\n"]},"metadata":{},"sourceType":"module"}