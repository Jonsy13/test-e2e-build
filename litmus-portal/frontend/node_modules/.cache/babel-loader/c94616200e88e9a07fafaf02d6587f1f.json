{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowGraphs/ScheduleAndRunStats/index.tsx\";\n\nimport { useQuery } from '@apollo/client';\nimport { Paper, Tabs, useTheme } from '@material-ui/core';\nimport { LineAreaGraph } from 'litmus-ui';\nimport React from 'react';\nimport { StyledTab } from '../../../../../components/Tabs';\nimport { WORKFLOW_STATS } from '../../../../../graphql';\nimport { Filter } from '../../../../../models/graphql/workflowStats';\nimport { getProjectID } from '../../../../../utils/getSearchParams';\nimport useStyles from './style'; // tabProps returns 'id' and 'aria-control' props of Tab\n\nfunction tabProps(index) {\n  return {\n    id: \"simple-tab-\".concat(index),\n    'aria-controls': \"simple-tabpanel-\".concat(index)\n  };\n}\n\nvar ScheduleAndRunStats = function ScheduleAndRunStats(_ref) {\n  var _data$getWorkflowStat;\n\n  var filter = _ref.filter;\n  var classes = useStyles();\n  var projectID = getProjectID();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeTab = _React$useState2[0],\n      setActiveTab = _React$useState2[1];\n\n  var handleChange = function handleChange(event, actTab) {\n    setActiveTab(actTab);\n  };\n\n  var _useQuery = useQuery(WORKFLOW_STATS, {\n    variables: {\n      filter: filter,\n      project_id: projectID,\n      show_workflow_runs: activeTab === 0\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery.data;\n\n  var closedSeriesData = [{\n    metricName: activeTab === 0 ? 'Runs' : 'Schedules',\n    data: (_data$getWorkflowStat = data === null || data === void 0 ? void 0 : data.getWorkflowStats) !== null && _data$getWorkflowStat !== void 0 ? _data$getWorkflowStat : [],\n    baseColor: activeTab === 0 ? '#F6793E' : '#5B44BA'\n  }];\n\n  function xAxisTimeFormat(filter) {\n    switch (filter) {\n      case Filter.Monthly:\n        return 'MMM-YY';\n\n      case Filter.Daily:\n        return 'DD-MMM-YY';\n\n      case Filter.Hourly:\n        return 'HH[hrs]-DD';\n\n      default:\n        return 'MMM';\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    className: classes.workflowGraphs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: activeTab,\n    onChange: handleChange,\n    TabIndicatorProps: {\n      style: {\n        backgroundColor: theme.palette.primary.main\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledTab, Object.assign({\n    \"data-cy\": \"receivedTab\",\n    label: \" Run stats\"\n  }, tabProps(1), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(StyledTab, Object.assign({\n    \"data-cy\": \"activeTab\",\n    label: \"Schedule stats\"\n  }, tabProps(0), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.graphContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LineAreaGraph, {\n    closedSeries: closedSeriesData,\n    showLegendTable: false,\n    showPoints: true,\n    showTips: true,\n    showMultiToolTip: true,\n    yLabelOffset: 35,\n    xAxistimeFormat: xAxisTimeFormat(filter),\n    margin: {\n      top: 20,\n      left: 35,\n      bottom: 30,\n      right: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ScheduleAndRunStats;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowGraphs/ScheduleAndRunStats/index.tsx"],"names":["useQuery","Paper","Tabs","useTheme","LineAreaGraph","React","StyledTab","WORKFLOW_STATS","Filter","getProjectID","useStyles","tabProps","index","id","ScheduleAndRunStats","filter","classes","projectID","theme","useState","activeTab","setActiveTab","handleChange","event","actTab","variables","project_id","show_workflow_runs","fetchPolicy","data","closedSeriesData","metricName","getWorkflowStats","baseColor","xAxisTimeFormat","Monthly","Daily","Hourly","workflowGraphs","style","backgroundColor","palette","primary","main","graphContainer","top","left","bottom","right"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Paper, Tabs, useTheme } from '@material-ui/core';\nimport { GraphMetric, LineAreaGraph } from 'litmus-ui';\nimport React from 'react';\nimport { StyledTab } from '../../../../../components/Tabs';\nimport { WORKFLOW_STATS } from '../../../../../graphql';\nimport {\n  Filter,\n  WorkflowStatsResponse,\n  WorkflowStatsVars,\n} from '../../../../../models/graphql/workflowStats';\nimport { getProjectID } from '../../../../../utils/getSearchParams';\nimport useStyles from './style';\n\n// tabProps returns 'id' and 'aria-control' props of Tab\nfunction tabProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\ninterface ScheduleAndRunStatsProps {\n  filter: Filter;\n}\n\nconst ScheduleAndRunStats: React.FC<ScheduleAndRunStatsProps> = ({\n  filter,\n}) => {\n  const classes = useStyles();\n  const projectID = getProjectID();\n  const theme = useTheme();\n  const [activeTab, setActiveTab] = React.useState(0);\n  const handleChange = (event: React.ChangeEvent<{}>, actTab: number) => {\n    setActiveTab(actTab);\n  };\n\n  const { data } = useQuery<WorkflowStatsResponse, WorkflowStatsVars>(\n    WORKFLOW_STATS,\n    {\n      variables: {\n        filter,\n        project_id: projectID,\n        show_workflow_runs: activeTab === 0,\n      },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  const closedSeriesData: Array<GraphMetric> = [\n    {\n      metricName: activeTab === 0 ? 'Runs' : 'Schedules',\n      data: data?.getWorkflowStats ?? [],\n      baseColor: activeTab === 0 ? '#F6793E' : '#5B44BA',\n    },\n  ];\n\n  function xAxisTimeFormat(filter: Filter) {\n    switch (filter) {\n      case Filter.Monthly:\n        return 'MMM-YY';\n      case Filter.Daily:\n        return 'DD-MMM-YY';\n      case Filter.Hourly:\n        return 'HH[hrs]-DD';\n      default:\n        return 'MMM';\n    }\n  }\n\n  return (\n    <Paper elevation={0} className={classes.workflowGraphs}>\n      <Tabs\n        value={activeTab}\n        onChange={handleChange}\n        TabIndicatorProps={{\n          style: {\n            backgroundColor: theme.palette.primary.main,\n          },\n        }}\n      >\n        <StyledTab data-cy=\"receivedTab\" label=\" Run stats\" {...tabProps(1)} />\n        <StyledTab\n          data-cy=\"activeTab\"\n          label=\"Schedule stats\"\n          {...tabProps(0)}\n        />\n      </Tabs>\n      <div className={classes.graphContainer}>\n        <LineAreaGraph\n          closedSeries={closedSeriesData}\n          showLegendTable={false}\n          showPoints\n          showTips\n          showMultiToolTip\n          yLabelOffset={35}\n          xAxistimeFormat={xAxisTimeFormat(filter)}\n          margin={{\n            top: 20,\n            left: 35,\n            bottom: 30,\n            right: 20,\n          }}\n        />\n      </div>\n    </Paper>\n  );\n};\nexport default ScheduleAndRunStats;\n"]},"metadata":{},"sourceType":"module"}