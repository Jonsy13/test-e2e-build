{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useMutation,useQuery}from'@apollo/client';import{FormControl,FormControlLabel,Radio,RadioGroup,Typography}from'@material-ui/core';import{ButtonFilled,ButtonOutlined,InputField,Modal}from'litmus-ui';import React,{useEffect,useState}from'react';import{useTranslation}from'react-i18next';import GithubInputFields from'../../../components/GitHubComponents/GithubInputFields/GithubInputFields';import Loader from'../../../components/Loader';import{DISABLE_GITOPS,ENABLE_GITOPS,GENERATE_SSH,UPDATE_GITOPS}from'../../../graphql/mutations';import{GET_GITOPS_DATA}from'../../../graphql/queries';import{MyHubType}from'../../../models/graphql/user';import{getProjectID}from'../../../utils/getSearchParams';import{validateStartEmptySpacing}from'../../../utils/validate';import GitOpsInfo from'./gitOpsInfo';import SSHField from'./sshField';import useStyles from'./styles';var GitOpsTab=function GitOpsTab(){var classes=useStyles();var _React$useState=React.useState('disabled'),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];var projectID=getProjectID();var _useTranslation=useTranslation(),t=_useTranslation.t;// Local State Variables for Github Data and GitOps result data\nvar _useState=useState({GitURL:'',GitBranch:''}),_useState2=_slicedToArray(_useState,2),gitHub=_useState2[0],setGitHub=_useState2[1];var _useState3=useState({type:'',message:''}),_useState4=_slicedToArray(_useState3,2),gitopsResult=_useState4[0],setGitOpsResult=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isOpen=_useState6[0],setIsOpen=_useState6[1];var _useState7=useState({privateKey:'',publicKey:''}),_useState8=_slicedToArray(_useState7,2),sshKey=_useState8[0],setSshKey=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),accessToken=_useState10[0],setAccessToken=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),confirmModal=_useState12[0],setConfirmModal=_useState12[1];// State Variable for AuthType Radio Buttons\nvar _useState13=useState('token'),_useState14=_slicedToArray(_useState13,2),privateHub=_useState14[0],setPrivateHub=_useState14[1];var handleChange=function handleChange(event){setValue(event.target.value);};// Functions to handle the events\nvar handleGitURL=function handleGitURL(event){setGitHub({GitURL:event.target.value,GitBranch:gitHub.GitBranch});};var handleGitBranch=function handleGitBranch(event){setGitHub({GitURL:gitHub.GitURL,GitBranch:event.target.value});};// Query to fetch GitOps Data\nvar _useQuery=useQuery(GET_GITOPS_DATA,{variables:{data:projectID},fetchPolicy:'cache-and-network'}),data=_useQuery.data,refetch=_useQuery.refetch,loading=_useQuery.loading;// Mutation to generate SSH key\nvar _useMutation=useMutation(GENERATE_SSH,{onCompleted:function onCompleted(data){setSshKey({privateKey:data.generaterSSHKey.privateKey,publicKey:data.generaterSSHKey.publicKey});}}),_useMutation2=_slicedToArray(_useMutation,2),generateSSHKey=_useMutation2[0],sshLoading=_useMutation2[1].loading;var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),copying=_useState16[0],setCopying=_useState16[1];// State variable to check if gitops is enable or not (required for edit gitops)\nvar _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),isGitOpsEnabled=_useState18[0],setIsGitOpsEnabled=_useState18[1];// Function to copy the SSH key\nvar copyTextToClipboard=function copyTextToClipboard(text){if(!navigator.clipboard){console.error('Oops Could not copy text: ');return;}setCopying(true);navigator.clipboard.writeText(text).catch(function(err){return console.error('Async: Could not copy text: ',err);});setTimeout(function(){return setCopying(false);},3000);};// Mutation to enable GitOps\nvar _useMutation3=useMutation(ENABLE_GITOPS,{onError:function onError(data){setIsOpen(true);setGitOpsResult({type:'fail',message:data.message});},onCompleted:function onCompleted(){setIsOpen(true);setGitOpsResult({type:'success',message:'Successfully enabled GitOps!'});setIsGitOpsEnabled(true);}}),_useMutation4=_slicedToArray(_useMutation3,2),enableGitOps=_useMutation4[0],gitOpsLoader=_useMutation4[1].loading;// Mutation to enable GitOps\nvar _useMutation5=useMutation(UPDATE_GITOPS,{onError:function onError(data){setIsOpen(true);setGitOpsResult({type:'fail',message:data.message});},onCompleted:function onCompleted(){setIsOpen(true);setGitOpsResult({type:'success',message:'Successfully updated GitOps!'});setIsGitOpsEnabled(true);}}),_useMutation6=_slicedToArray(_useMutation5,2),updateGitOps=_useMutation6[0],updateGitOpsLoader=_useMutation6[1].loading;// Mutation to disable GitOps\nvar _useMutation7=useMutation(DISABLE_GITOPS,{onError:function onError(data){setIsOpen(true);setGitOpsResult({type:'fail',message:data.message});},onCompleted:function onCompleted(){setIsOpen(true);setGitHub({GitBranch:'',GitURL:''});setSshKey({publicKey:'',privateKey:''});setGitOpsResult({type:'success',message:'Successfully disabled GitOps!'});}}),_useMutation8=_slicedToArray(_useMutation7,2),disableGitOps=_useMutation8[0],disableGitOpsLoader=_useMutation8[1].loading;var handleClose=function handleClose(){setIsOpen(false);refetch();};var onEditClicked=function onEditClicked(){setConfirmModal(true);};var onConfirmEdit=function onConfirmEdit(){setIsGitOpsEnabled(false);setGitHub({GitURL:(data===null||data===void 0?void 0:data.getGitOpsDetails.RepoURL)||'',GitBranch:(data===null||data===void 0?void 0:data.getGitOpsDetails.Branch)||''});setPrivateHub('');setAccessToken('');setSshKey({publicKey:'',privateKey:''});setConfirmModal(false);};var onCancelEdit=function onCancelEdit(){setConfirmModal(false);};// UseEffect to set the initial state of radio-buttons\nuseEffect(function(){if(data!==undefined){if(data.getGitOpsDetails.Enabled){setValue('enabled');setIsGitOpsEnabled(true);}else{setValue('disabled');setIsGitOpsEnabled(false);}}},[data]);// Handle submit button to call the enableGitOps mutation\nvar handleSubmit=function handleSubmit(event){event.preventDefault();if(value==='enabled'){if((data===null||data===void 0?void 0:data.getGitOpsDetails.Enabled)===false){enableGitOps({variables:{gitConfig:{ProjectID:projectID,RepoURL:gitHub.GitURL,Branch:gitHub.GitBranch,AuthType:privateHub==='token'?MyHubType.token:privateHub==='ssh'?MyHubType.ssh:MyHubType.none,Token:accessToken,UserName:'user',Password:'user',SSHPrivateKey:sshKey.privateKey}}});}if((data===null||data===void 0?void 0:data.getGitOpsDetails.Enabled)===true){updateGitOps({variables:{gitConfig:{ProjectID:projectID,RepoURL:gitHub.GitURL,Branch:gitHub.GitBranch,AuthType:privateHub===''?data===null||data===void 0?void 0:data.getGitOpsDetails.AuthType:privateHub==='token'?MyHubType.token:privateHub==='ssh'?MyHubType.ssh:MyHubType.none,Token:privateHub===''?data===null||data===void 0?void 0:data.getGitOpsDetails.Token:accessToken,UserName:'user',Password:'user',SSHPrivateKey:privateHub===''?data===null||data===void 0?void 0:data.getGitOpsDetails.SSHPrivateKey:sshKey.privateKey}}});}}};return/*#__PURE__*/React.createElement(\"div\",{className:classes.container},loading?/*#__PURE__*/React.createElement(Loader,null):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Typography,{className:classes.headerText},/*#__PURE__*/React.createElement(\"strong\",null,t('settings.gitopsTab.choose'),\" \")),/*#__PURE__*/React.createElement(\"form\",{id:\"login-form\",autoComplete:\"on\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\",style:{width:'70%'}},/*#__PURE__*/React.createElement(RadioGroup,{name:\"gitops\",value:value,onChange:handleChange},/*#__PURE__*/React.createElement(\"div\",{className:classes.mainRadioDiv},/*#__PURE__*/React.createElement(FormControlLabel,{value:\"disabled\",control:/*#__PURE__*/React.createElement(Radio,{classes:{root:classes.radio,checked:classes.checked}}),\"data-cy\":\"localRadioButton\",label:/*#__PURE__*/React.createElement(Typography,{className:classes.locallyText},t('settings.gitopsTab.locally'))}),value==='disabled'&&(data===null||data===void 0?void 0:data.getGitOpsDetails.Enabled)===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:classes.disconnectText},t('settings.gitopsTab.disconnect')),/*#__PURE__*/React.createElement(ButtonFilled,{\"data-cy\":\"disableGitopsButton\",disabled:disableGitOpsLoader,onClick:function onClick(){return disableGitOps({variables:{data:projectID}});}},t('settings.gitopsTab.save'))):null),/*#__PURE__*/React.createElement(\"div\",{className:classes.enabledText},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(FormControlLabel,{value:\"enabled\",control:/*#__PURE__*/React.createElement(Radio,{classes:{root:classes.radio,checked:classes.checked}}),\"data-cy\":\"gitopsRadioButton\",label:/*#__PURE__*/React.createElement(Typography,{style:{fontSize:'20px'}},t('settings.gitopsTab.repo'))}),isGitOpsEnabled===false?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:classes.infoText},t('settings.gitopsTab.desc')),value==='enabled'?/*#__PURE__*/React.createElement(\"div\",{className:classes.mainPrivateRepo},/*#__PURE__*/React.createElement(\"div\",{className:classes.privateToggleDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.privateRepoDetails},/*#__PURE__*/React.createElement(GithubInputFields,{gitURL:gitHub.GitURL,gitBranch:gitHub.GitBranch,setGitURL:handleGitURL,setGitBranch:handleGitBranch})),/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\",className:classes.formControl},/*#__PURE__*/React.createElement(RadioGroup,{\"aria-label\":\"privateHub\",name:\"privateHub\",value:privateHub,onChange:function onChange(e){if(e.target.value==='ssh'){generateSSHKey();}if(e.target.value==='token'){setSshKey({privateKey:'',publicKey:''});}setPrivateHub(e.target.value);}},/*#__PURE__*/React.createElement(FormControlLabel,{value:\"token\",control:/*#__PURE__*/React.createElement(Radio,{classes:{root:classes.radio,checked:classes.checked}}),\"data-cy\":\"accessTokenRadioButton\",label:/*#__PURE__*/React.createElement(Typography,null,t('myhub.connectHubPage.accessToken'))}),privateHub==='token'?/*#__PURE__*/React.createElement(InputField,{\"data-cy\":\"accessTokenInput\",label:\"Access Token\",value:accessToken,helperText:validateStartEmptySpacing(accessToken)?t('myhub.validationEmptySpace'):'',variant:validateStartEmptySpacing(accessToken)?'error':'primary',onChange:function onChange(e){return setAccessToken(e.target.value);}}):null,/*#__PURE__*/React.createElement(FormControlLabel,{className:classes.sshRadioBtn,\"data-cy\":\"sshKeyRadioButton\",value:\"ssh\",control:/*#__PURE__*/React.createElement(Radio,{classes:{root:classes.radio,checked:classes.checked}}),label:/*#__PURE__*/React.createElement(Typography,null,t('myhub.connectHubPage.ssh'))}),privateHub==='ssh'?/*#__PURE__*/React.createElement(SSHField,{sshLoading:sshLoading,copying:copying,publicKey:sshKey.publicKey,copyPublicKey:copyTextToClipboard}):null,/*#__PURE__*/React.createElement(\"div\",{className:classes.submitBtnDiv,\"data-cy\":\"connectButton\"},/*#__PURE__*/React.createElement(ButtonFilled,{type:\"submit\",disabled:gitOpsLoader||updateGitOpsLoader},updateGitOpsLoader||gitOpsLoader?/*#__PURE__*/React.createElement(Loader,{size:20}):/*#__PURE__*/React.createElement(Typography,null,(data===null||data===void 0?void 0:data.getGitOpsDetails.Enabled)?'Update':t('settings.gitopsTab.connect')))))))):null):isGitOpsEnabled===true?/*#__PURE__*/React.createElement(GitOpsInfo,{data:data,onEditClicked:onEditClicked,modalState:confirmModal,onModalClick:onConfirmEdit,onModalCancel:onCancelEdit}):null),/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/gitops-image.svg\",alt:\"Gitops\",style:{marginLeft:'auto',paddingLeft:20}}))))),/*#__PURE__*/React.createElement(Modal,{\"data-cy\":\"gitopsModal\",open:isOpen,onClose:handleClose,modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:handleClose},\"\\u2715\")},/*#__PURE__*/React.createElement(\"div\",{className:classes.modalDiv},/*#__PURE__*/React.createElement(\"div\",null,gitopsResult.type==='fail'?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/red-cross.svg\",alt:\"checkmark\",className:classes.checkImg}),/*#__PURE__*/React.createElement(Typography,{gutterBottom:true,className:classes.modalHeading},/*#__PURE__*/React.createElement(\"strong\",null,\"Error: \",gitopsResult.message)),/*#__PURE__*/React.createElement(ButtonFilled,{onClick:handleClose,\"data-cy\":\"closeButton\"},t('settings.gitopsTab.setting'))):null,/*#__PURE__*/React.createElement(\"div\",null,gitopsResult.type==='success'?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/checkmark.svg\",alt:\"checkmark\",className:classes.checkImg}),/*#__PURE__*/React.createElement(Typography,{gutterBottom:true,className:classes.modalHeading},gitopsResult.message),/*#__PURE__*/React.createElement(ButtonFilled,{onClick:handleClose,\"data-cy\":\"closeButton\"},t('settings.gitopsTab.setting'))):null))))));};export default GitOpsTab;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Settings/GitOpsTab/index.tsx"],"names":["useMutation","useQuery","FormControl","FormControlLabel","Radio","RadioGroup","Typography","ButtonFilled","ButtonOutlined","InputField","Modal","React","useEffect","useState","useTranslation","GithubInputFields","Loader","DISABLE_GITOPS","ENABLE_GITOPS","GENERATE_SSH","UPDATE_GITOPS","GET_GITOPS_DATA","MyHubType","getProjectID","validateStartEmptySpacing","GitOpsInfo","SSHField","useStyles","GitOpsTab","classes","value","setValue","projectID","t","GitURL","GitBranch","gitHub","setGitHub","type","message","gitopsResult","setGitOpsResult","isOpen","setIsOpen","privateKey","publicKey","sshKey","setSshKey","accessToken","setAccessToken","confirmModal","setConfirmModal","privateHub","setPrivateHub","handleChange","event","target","handleGitURL","handleGitBranch","variables","data","fetchPolicy","refetch","loading","onCompleted","generaterSSHKey","generateSSHKey","sshLoading","copying","setCopying","isGitOpsEnabled","setIsGitOpsEnabled","copyTextToClipboard","text","navigator","clipboard","console","error","writeText","catch","err","setTimeout","onError","enableGitOps","gitOpsLoader","updateGitOps","updateGitOpsLoader","disableGitOps","disableGitOpsLoader","handleClose","onEditClicked","onConfirmEdit","getGitOpsDetails","RepoURL","Branch","onCancelEdit","undefined","Enabled","handleSubmit","preventDefault","gitConfig","ProjectID","AuthType","token","ssh","none","Token","UserName","Password","SSHPrivateKey","container","headerText","width","mainRadioDiv","root","radio","checked","locallyText","disconnectText","enabledText","fontSize","infoText","mainPrivateRepo","privateToggleDiv","privateRepoDetails","formControl","e","sshRadioBtn","submitBtnDiv","marginLeft","paddingLeft","modalDiv","checkImg","modalHeading"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport {\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@material-ui/core';\nimport { ButtonFilled, ButtonOutlined, InputField, Modal } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport GithubInputFields from '../../../components/GitHubComponents/GithubInputFields/GithubInputFields';\nimport Loader from '../../../components/Loader';\nimport {\n  DISABLE_GITOPS,\n  ENABLE_GITOPS,\n  GENERATE_SSH,\n  UPDATE_GITOPS,\n} from '../../../graphql/mutations';\nimport { GET_GITOPS_DATA } from '../../../graphql/queries';\nimport { GitOpsDetail } from '../../../models/graphql/gitOps';\nimport { MyHubType, SSHKey, SSHKeys } from '../../../models/graphql/user';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport { validateStartEmptySpacing } from '../../../utils/validate';\nimport GitOpsInfo from './gitOpsInfo';\nimport SSHField from './sshField';\nimport useStyles from './styles';\n\ninterface GitHub {\n  GitURL: string;\n  GitBranch: string;\n}\n\ninterface GitOpsResult {\n  type: string;\n  message: string;\n}\n\nconst GitOpsTab = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('disabled');\n  const projectID = getProjectID();\n  const { t } = useTranslation();\n  // Local State Variables for Github Data and GitOps result data\n  const [gitHub, setGitHub] = useState<GitHub>({\n    GitURL: '',\n    GitBranch: '',\n  });\n  const [gitopsResult, setGitOpsResult] = useState<GitOpsResult>({\n    type: '',\n    message: '',\n  });\n  const [isOpen, setIsOpen] = useState(false);\n  const [sshKey, setSshKey] = useState<SSHKey>({\n    privateKey: '',\n    publicKey: '',\n  });\n  const [accessToken, setAccessToken] = useState('');\n  const [confirmModal, setConfirmModal] = useState(false);\n\n  // State Variable for AuthType Radio Buttons\n  const [privateHub, setPrivateHub] = useState('token');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue((event.target as HTMLInputElement).value);\n  };\n\n  // Functions to handle the events\n  const handleGitURL = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setGitHub({\n      GitURL: event.target.value,\n      GitBranch: gitHub.GitBranch,\n    });\n  };\n\n  const handleGitBranch = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setGitHub({\n      GitURL: gitHub.GitURL,\n      GitBranch: event.target.value,\n    });\n  };\n\n  // Query to fetch GitOps Data\n  const { data, refetch, loading } = useQuery<GitOpsDetail>(GET_GITOPS_DATA, {\n    variables: { data: projectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Mutation to generate SSH key\n  const [generateSSHKey, { loading: sshLoading }] = useMutation<SSHKeys>(\n    GENERATE_SSH,\n    {\n      onCompleted: (data) => {\n        setSshKey({\n          privateKey: data.generaterSSHKey.privateKey,\n          publicKey: data.generaterSSHKey.publicKey,\n        });\n      },\n    }\n  );\n\n  const [copying, setCopying] = useState(false);\n\n  // State variable to check if gitops is enable or not (required for edit gitops)\n  const [isGitOpsEnabled, setIsGitOpsEnabled] = useState(false);\n\n  // Function to copy the SSH key\n  const copyTextToClipboard = (text: string) => {\n    if (!navigator.clipboard) {\n      console.error('Oops Could not copy text: ');\n      return;\n    }\n    setCopying(true);\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n    setTimeout(() => setCopying(false), 3000);\n  };\n\n  // Mutation to enable GitOps\n  const [enableGitOps, { loading: gitOpsLoader }] = useMutation(ENABLE_GITOPS, {\n    onError: (data) => {\n      setIsOpen(true);\n      setGitOpsResult({\n        type: 'fail',\n        message: data.message,\n      });\n    },\n    onCompleted: () => {\n      setIsOpen(true);\n      setGitOpsResult({\n        type: 'success',\n        message: 'Successfully enabled GitOps!',\n      });\n      setIsGitOpsEnabled(true);\n    },\n  });\n\n  // Mutation to enable GitOps\n  const [updateGitOps, { loading: updateGitOpsLoader }] = useMutation(\n    UPDATE_GITOPS,\n    {\n      onError: (data) => {\n        setIsOpen(true);\n        setGitOpsResult({\n          type: 'fail',\n          message: data.message,\n        });\n      },\n      onCompleted: () => {\n        setIsOpen(true);\n        setGitOpsResult({\n          type: 'success',\n          message: 'Successfully updated GitOps!',\n        });\n        setIsGitOpsEnabled(true);\n      },\n    }\n  );\n\n  // Mutation to disable GitOps\n  const [disableGitOps, { loading: disableGitOpsLoader }] = useMutation(\n    DISABLE_GITOPS,\n    {\n      onError: (data) => {\n        setIsOpen(true);\n        setGitOpsResult({\n          type: 'fail',\n          message: data.message,\n        });\n      },\n      onCompleted: () => {\n        setIsOpen(true);\n        setGitHub({\n          GitBranch: '',\n          GitURL: '',\n        });\n        setSshKey({\n          publicKey: '',\n          privateKey: '',\n        });\n        setGitOpsResult({\n          type: 'success',\n          message: 'Successfully disabled GitOps!',\n        });\n      },\n    }\n  );\n\n  const handleClose = () => {\n    setIsOpen(false);\n    refetch();\n  };\n  const onEditClicked = () => {\n    setConfirmModal(true);\n  };\n\n  const onConfirmEdit = () => {\n    setIsGitOpsEnabled(false);\n    setGitHub({\n      GitURL: data?.getGitOpsDetails.RepoURL || '',\n      GitBranch: data?.getGitOpsDetails.Branch || '',\n    });\n    setPrivateHub('');\n    setAccessToken('');\n    setSshKey({\n      publicKey: '',\n      privateKey: '',\n    });\n    setConfirmModal(false);\n  };\n\n  const onCancelEdit = () => {\n    setConfirmModal(false);\n  };\n\n  // UseEffect to set the initial state of radio-buttons\n  useEffect(() => {\n    if (data !== undefined) {\n      if (data.getGitOpsDetails.Enabled) {\n        setValue('enabled');\n        setIsGitOpsEnabled(true);\n      } else {\n        setValue('disabled');\n        setIsGitOpsEnabled(false);\n      }\n    }\n  }, [data]);\n\n  // Handle submit button to call the enableGitOps mutation\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (value === 'enabled') {\n      if (data?.getGitOpsDetails.Enabled === false) {\n        enableGitOps({\n          variables: {\n            gitConfig: {\n              ProjectID: projectID,\n              RepoURL: gitHub.GitURL,\n              Branch: gitHub.GitBranch,\n              AuthType:\n                privateHub === 'token'\n                  ? MyHubType.token\n                  : privateHub === 'ssh'\n                  ? MyHubType.ssh\n                  : MyHubType.none,\n              Token: accessToken,\n              UserName: 'user',\n              Password: 'user',\n              SSHPrivateKey: sshKey.privateKey,\n            },\n          },\n        });\n      }\n      if (data?.getGitOpsDetails.Enabled === true) {\n        updateGitOps({\n          variables: {\n            gitConfig: {\n              ProjectID: projectID,\n              RepoURL: gitHub.GitURL,\n              Branch: gitHub.GitBranch,\n              AuthType:\n                privateHub === ''\n                  ? data?.getGitOpsDetails.AuthType\n                  : privateHub === 'token'\n                  ? MyHubType.token\n                  : privateHub === 'ssh'\n                  ? MyHubType.ssh\n                  : MyHubType.none,\n              Token:\n                privateHub === '' ? data?.getGitOpsDetails.Token : accessToken,\n              UserName: 'user',\n              Password: 'user',\n              SSHPrivateKey:\n                privateHub === ''\n                  ? data?.getGitOpsDetails.SSHPrivateKey\n                  : sshKey.privateKey,\n            },\n          },\n        });\n      }\n    }\n  };\n\n  return (\n    <div className={classes.container}>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Typography className={classes.headerText}>\n            <strong>{t('settings.gitopsTab.choose')} </strong>\n          </Typography>\n          <form id=\"login-form\" autoComplete=\"on\" onSubmit={handleSubmit}>\n            <FormControl component=\"fieldset\" style={{ width: '70%' }}>\n              <RadioGroup name=\"gitops\" value={value} onChange={handleChange}>\n                <div className={classes.mainRadioDiv}>\n                  <FormControlLabel\n                    value=\"disabled\"\n                    control={\n                      <Radio\n                        classes={{\n                          root: classes.radio,\n                          checked: classes.checked,\n                        }}\n                      />\n                    }\n                    data-cy=\"localRadioButton\"\n                    label={\n                      <Typography className={classes.locallyText}>\n                        {t('settings.gitopsTab.locally')}\n                      </Typography>\n                    }\n                  />\n                  {value === 'disabled' &&\n                  data?.getGitOpsDetails.Enabled === true ? (\n                    <div>\n                      <Typography className={classes.disconnectText}>\n                        {t('settings.gitopsTab.disconnect')}\n                      </Typography>\n                      <ButtonFilled\n                        data-cy=\"disableGitopsButton\"\n                        disabled={disableGitOpsLoader}\n                        onClick={() =>\n                          disableGitOps({\n                            variables: {\n                              data: projectID,\n                            },\n                          })\n                        }\n                      >\n                        {t('settings.gitopsTab.save')}\n                      </ButtonFilled>\n                    </div>\n                  ) : null}\n                </div>\n                <div className={classes.enabledText}>\n                  <div>\n                    <FormControlLabel\n                      value=\"enabled\"\n                      control={\n                        <Radio\n                          classes={{\n                            root: classes.radio,\n                            checked: classes.checked,\n                          }}\n                        />\n                      }\n                      data-cy=\"gitopsRadioButton\"\n                      label={\n                        <Typography style={{ fontSize: '20px' }}>\n                          {t('settings.gitopsTab.repo')}\n                        </Typography>\n                      }\n                    />\n\n                    {isGitOpsEnabled === false ? (\n                      <div>\n                        <Typography className={classes.infoText}>\n                          {t('settings.gitopsTab.desc')}\n                        </Typography>\n                        {value === 'enabled' ? (\n                          <div className={classes.mainPrivateRepo}>\n                            <div className={classes.privateToggleDiv}>\n                              <div className={classes.privateRepoDetails}>\n                                <GithubInputFields\n                                  gitURL={gitHub.GitURL}\n                                  gitBranch={gitHub.GitBranch}\n                                  setGitURL={handleGitURL}\n                                  setGitBranch={handleGitBranch}\n                                />\n                              </div>\n                              <FormControl\n                                component=\"fieldset\"\n                                className={classes.formControl}\n                              >\n                                <RadioGroup\n                                  aria-label=\"privateHub\"\n                                  name=\"privateHub\"\n                                  value={privateHub}\n                                  onChange={(e) => {\n                                    if (e.target.value === 'ssh') {\n                                      generateSSHKey();\n                                    }\n                                    if (e.target.value === 'token') {\n                                      setSshKey({\n                                        privateKey: '',\n                                        publicKey: '',\n                                      });\n                                    }\n                                    setPrivateHub(e.target.value);\n                                  }}\n                                >\n                                  <FormControlLabel\n                                    value=\"token\"\n                                    control={\n                                      <Radio\n                                        classes={{\n                                          root: classes.radio,\n                                          checked: classes.checked,\n                                        }}\n                                      />\n                                    }\n                                    data-cy=\"accessTokenRadioButton\"\n                                    label={\n                                      <Typography>\n                                        {t('myhub.connectHubPage.accessToken')}\n                                      </Typography>\n                                    }\n                                  />\n                                  {privateHub === 'token' ? (\n                                    <InputField\n                                      data-cy=\"accessTokenInput\"\n                                      label=\"Access Token\"\n                                      value={accessToken}\n                                      helperText={\n                                        validateStartEmptySpacing(accessToken)\n                                          ? t('myhub.validationEmptySpace')\n                                          : ''\n                                      }\n                                      variant={\n                                        validateStartEmptySpacing(accessToken)\n                                          ? 'error'\n                                          : 'primary'\n                                      }\n                                      onChange={(e) =>\n                                        setAccessToken(e.target.value)\n                                      }\n                                    />\n                                  ) : null}\n                                  <FormControlLabel\n                                    className={classes.sshRadioBtn}\n                                    data-cy=\"sshKeyRadioButton\"\n                                    value=\"ssh\"\n                                    control={\n                                      <Radio\n                                        classes={{\n                                          root: classes.radio,\n                                          checked: classes.checked,\n                                        }}\n                                      />\n                                    }\n                                    label={\n                                      <Typography>\n                                        {t('myhub.connectHubPage.ssh')}\n                                      </Typography>\n                                    }\n                                  />\n                                  {privateHub === 'ssh' ? (\n                                    <SSHField\n                                      sshLoading={sshLoading}\n                                      copying={copying}\n                                      publicKey={sshKey.publicKey}\n                                      copyPublicKey={copyTextToClipboard}\n                                    />\n                                  ) : null}\n                                  <div\n                                    className={classes.submitBtnDiv}\n                                    data-cy=\"connectButton\"\n                                  >\n                                    <ButtonFilled\n                                      type=\"submit\"\n                                      disabled={\n                                        gitOpsLoader || updateGitOpsLoader\n                                      }\n                                    >\n                                      {updateGitOpsLoader || gitOpsLoader ? (\n                                        <Loader size={20} />\n                                      ) : (\n                                        <Typography>\n                                          {data?.getGitOpsDetails.Enabled\n                                            ? 'Update'\n                                            : t('settings.gitopsTab.connect')}\n                                        </Typography>\n                                      )}\n                                    </ButtonFilled>\n                                  </div>\n                                </RadioGroup>\n                              </FormControl>\n                            </div>\n                          </div>\n                        ) : null}\n                      </div>\n                    ) : isGitOpsEnabled === true ? (\n                      <GitOpsInfo\n                        data={data}\n                        onEditClicked={onEditClicked}\n                        modalState={confirmModal}\n                        onModalClick={onConfirmEdit}\n                        onModalCancel={onCancelEdit}\n                      />\n                    ) : null}\n                  </div>\n                  <img\n                    src=\"/icons/gitops-image.svg\"\n                    alt=\"Gitops\"\n                    style={{ marginLeft: 'auto', paddingLeft: 20 }}\n                  />\n                </div>\n              </RadioGroup>\n            </FormControl>\n          </form>\n          <Modal\n            data-cy=\"gitopsModal\"\n            open={isOpen}\n            onClose={handleClose}\n            modalActions={\n              <ButtonOutlined onClick={handleClose}>&#x2715;</ButtonOutlined>\n            }\n          >\n            <div className={classes.modalDiv}>\n              <div>\n                {gitopsResult.type === 'fail' ? (\n                  <div>\n                    <img\n                      src=\"/icons/red-cross.svg\"\n                      alt=\"checkmark\"\n                      className={classes.checkImg}\n                    />\n                    <Typography gutterBottom className={classes.modalHeading}>\n                      <strong>Error: {gitopsResult.message}</strong>\n                    </Typography>\n                    <ButtonFilled onClick={handleClose} data-cy=\"closeButton\">\n                      {t('settings.gitopsTab.setting')}\n                    </ButtonFilled>\n                  </div>\n                ) : null}\n                <div>\n                  {gitopsResult.type === 'success' ? (\n                    <>\n                      <img\n                        src=\"/icons/checkmark.svg\"\n                        alt=\"checkmark\"\n                        className={classes.checkImg}\n                      />\n                      <Typography gutterBottom className={classes.modalHeading}>\n                        {gitopsResult.message}\n                      </Typography>\n\n                      <ButtonFilled onClick={handleClose} data-cy=\"closeButton\">\n                        {t('settings.gitopsTab.setting')}\n                      </ButtonFilled>\n                    </>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </Modal>\n        </>\n      )}\n    </div>\n  );\n};\nexport default GitOpsTab;\n"]},"metadata":{},"sourceType":"module"}