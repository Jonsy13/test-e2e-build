{"ast":null,"code":"import{ApolloProvider}from'@apollo/client';import*as React from'react';import{Provider}from'react-redux';import{PersistGate}from'redux-persist/integration/react';import config from'./config';import App from'./containers/app/App';import configureStore from'./redux/configureStore';import createApolloClient from'./utils/createApolloClient';var _configureStore=configureStore(),persistor=_configureStore.persistor,store=_configureStore.store;var client=createApolloClient(\"\".concat(config.grahqlEndpoint,\"/query\"),\"\".concat(config.grahqlEndpointSubscription,\"/query\"));var ReduxRoot=function ReduxRoot(){return/*#__PURE__*/React.createElement(ApolloProvider,{client:client},/*#__PURE__*/React.createElement(Provider,{store:store},/*#__PURE__*/React.createElement(PersistGate,{persistor:persistor},/*#__PURE__*/React.createElement(App,null))));};export default ReduxRoot;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/ReduxRoot.tsx"],"names":["ApolloProvider","React","Provider","PersistGate","config","App","configureStore","createApolloClient","persistor","store","client","grahqlEndpoint","grahqlEndpointSubscription","ReduxRoot"],"mappings":"AAAA,OAASA,cAAT,KAA+B,gBAA/B,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,WAAT,KAA4B,iCAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,GAAP,KAAgB,sBAAhB,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,4BAA/B,CAEA,oBAA6BD,cAAc,EAA3C,CAAQE,SAAR,iBAAQA,SAAR,CAAmBC,KAAnB,iBAAmBA,KAAnB,CAEA,GAAMC,CAAAA,MAAM,CAAGH,kBAAkB,WAC5BH,MAAM,CAACO,cADqB,qBAE5BP,MAAM,CAACQ,0BAFqB,WAAjC,CAKA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,mBACE,oBAAC,cAAD,EAAgB,MAAM,CAAEH,MAAxB,eACE,oBAAC,QAAD,EAAU,KAAK,CAAED,KAAjB,eACE,oBAAC,WAAD,EAAa,SAAS,CAAED,SAAxB,eACE,oBAAC,GAAD,MADF,CADF,CADF,CADF,CASD,CAVD,CAYA,cAAeK,CAAAA,SAAf","sourcesContent":["import { ApolloProvider } from '@apollo/client';\nimport * as React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport config from './config';\nimport App from './containers/app/App';\nimport configureStore from './redux/configureStore';\nimport createApolloClient from './utils/createApolloClient';\n\nconst { persistor, store } = configureStore();\n\nconst client = createApolloClient(\n  `${config.grahqlEndpoint}/query`,\n  `${config.grahqlEndpointSubscription}/query`\n);\n\nconst ReduxRoot = () => {\n  return (\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </ApolloProvider>\n  );\n};\n\nexport default ReduxRoot;\n"]},"metadata":{},"sourceType":"module"}