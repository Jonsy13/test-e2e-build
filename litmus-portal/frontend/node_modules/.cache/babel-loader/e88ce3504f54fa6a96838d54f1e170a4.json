{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/WorkflowSequence/index.tsx\";\n\nimport { Typography } from '@material-ui/core';\nimport { ButtonFilled } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport useActions from '../../../../redux/actions';\nimport * as WorkflowActions from '../../../../redux/actions/workflow';\nimport { reorderSteps } from './reorder';\nimport useStyles from './styles';\n\nvar WorkflowSequence = function WorkflowSequence(_ref) {\n  var handleSequenceModal = _ref.handleSequenceModal,\n      getSteps = _ref.getSteps;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var manifest = useSelector(function (state) {\n    return state.workflowManifest.manifest;\n  });\n  var workflow = useActions(WorkflowActions);\n  var manifestSteps = YAML.parse(manifest).spec.templates[0].steps;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      steps = _useState2[0],\n      setSteps = _useState2[1];\n  /**\n   * handleStepsChange updates the steps in the main manifest\n   */\n\n\n  var handleStepsChange = function handleStepsChange() {\n    var updatedSteps = [];\n    Object.entries(steps).forEach(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          value = _ref3[1];\n\n      if (value.length !== 0) {\n        updatedSteps.push(value);\n      }\n    });\n    var updatedManifest = YAML.parse(manifest);\n    delete updatedManifest.spec.templates[0].steps;\n    updatedManifest.spec.templates[0].steps = updatedSteps;\n    workflow.setWorkflowManifest({\n      manifest: YAML.stringify(updatedManifest)\n    });\n    handleSequenceModal(false);\n  };\n  /**\n   * useEffect to save the state in StepType format\n   * on the first render\n   */\n\n\n  useEffect(function () {\n    var modifiedSteps = {};\n    manifestSteps.forEach(function (step, index) {\n      modifiedSteps[\"stepname\".concat(index)] = step;\n    });\n    setSteps(modifiedSteps);\n  }, []);\n  getSteps(steps);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: function onDragEnd(_ref4) {\n      var destination = _ref4.destination,\n          source = _ref4.source;\n\n      /**\n       * If the item is dropped outside the list\n       */\n      if (!destination) {\n        return;\n      }\n\n      var newSteps = reorderSteps(steps, source, destination);\n      setSteps(newSteps);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dragdropDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, Object.entries(steps).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        key = _ref6[0],\n        value = _ref6[1];\n\n    return /*#__PURE__*/React.createElement(Droppable, {\n      key: key,\n      droppableId: key,\n      type: \"CARD\",\n      direction: \"horizontal\",\n      isCombineEnabled: false,\n      isDropDisabled: key === 'stepname0',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, function (dropProvided) {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, dropProvided.droppableProps, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.droppableDiv,\n        ref: dropProvided.innerRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, value.map(function (step, index) {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: step.name,\n          draggableId: step.name,\n          index: index,\n          isDragDisabled: key === 'stepname0',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }\n        }, function (dragProvided) {\n          return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n            ref: dragProvided.innerRef\n          }, dragProvided.draggableProps, dragProvided.dragHandleProps, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.draggableDiv,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 39\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: classes.expImg,\n            src: \"./icons/sequencing-exp.svg\",\n            alt: step.name,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 41\n            }\n          }), /*#__PURE__*/React.createElement(Typography, {\n            className: classes.expName,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 41\n            }\n          }, step.name)));\n        });\n      }), dropProvided.placeholder))));\n    });\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.sequencingHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, t('customWorkflow.createWorkflow.selectAnExp')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.sequencingDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, t('customWorkflow.sequence.dragexp')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    variant: \"error\",\n    onClick: function onClick() {\n      return handleSequenceModal(false);\n    },\n    className: classes.discard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, t('customWorkflow.sequence.discard')), /*#__PURE__*/React.createElement(ButtonFilled, {\n    onClick: handleStepsChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, t('customWorkflow.sequence.saveChanges'))));\n};\n\nexport default WorkflowSequence;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/WorkflowSequence/index.tsx"],"names":["Typography","ButtonFilled","React","useEffect","useState","DragDropContext","Draggable","Droppable","useTranslation","useSelector","YAML","useActions","WorkflowActions","reorderSteps","useStyles","WorkflowSequence","handleSequenceModal","getSteps","classes","t","manifest","state","workflowManifest","workflow","manifestSteps","parse","spec","templates","steps","setSteps","handleStepsChange","updatedSteps","Object","entries","forEach","value","length","push","updatedManifest","setWorkflowManifest","stringify","modifiedSteps","step","index","destination","source","newSteps","dragdropDiv","map","key","dropProvided","droppableProps","droppableDiv","innerRef","name","dragProvided","draggableProps","dragHandleProps","draggableDiv","expImg","expName","placeholder","sequencingHeader","sequencingDesc","buttonDiv","discard"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport { ButtonFilled } from 'litmus-ui';\nimport React, { useEffect, useState } from 'react';\nimport {\n  DragDropContext,\n  Draggable,\n  DraggableProvided,\n  Droppable,\n} from 'react-beautiful-dnd';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport useActions from '../../../../redux/actions';\nimport * as WorkflowActions from '../../../../redux/actions/workflow';\nimport { RootState } from '../../../../redux/reducers';\nimport { reorderSteps } from './reorder';\nimport useStyles from './styles';\n\ninterface ManifestSteps {\n  name: string;\n  template: string;\n}\n\ninterface StepType {\n  [key: string]: ManifestSteps[];\n}\n\ninterface ExperimentSequenceProps {\n  handleSequenceModal: (sequenceState: boolean) => void;\n  getSteps: (steps: StepType) => void;\n}\n\nconst WorkflowSequence: React.FC<ExperimentSequenceProps> = ({\n  handleSequenceModal,\n  getSteps,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const manifest = useSelector(\n    (state: RootState) => state.workflowManifest.manifest\n  );\n  const workflow = useActions(WorkflowActions);\n  const manifestSteps = YAML.parse(manifest).spec.templates[0].steps;\n\n  const [steps, setSteps] = useState<StepType>({});\n\n  /**\n   * handleStepsChange updates the steps in the main manifest\n   */\n  const handleStepsChange = () => {\n    const updatedSteps: Array<ManifestSteps[]> = [];\n    Object.entries(steps).forEach(([, value]) => {\n      if ((value as ManifestSteps[]).length !== 0) {\n        updatedSteps.push(value as ManifestSteps[]);\n      }\n    });\n\n    const updatedManifest = YAML.parse(manifest);\n    delete updatedManifest.spec.templates[0].steps;\n    updatedManifest.spec.templates[0].steps = updatedSteps;\n\n    workflow.setWorkflowManifest({\n      manifest: YAML.stringify(updatedManifest),\n    });\n    handleSequenceModal(false);\n  };\n\n  /**\n   * useEffect to save the state in StepType format\n   * on the first render\n   */\n  useEffect(() => {\n    const modifiedSteps: StepType = {};\n    manifestSteps.forEach((step: any, index: number) => {\n      modifiedSteps[`stepname${index}`] = step;\n    });\n    setSteps(modifiedSteps);\n  }, []);\n\n  getSteps(steps);\n  return (\n    <div>\n      <DragDropContext\n        onDragEnd={({ destination, source }) => {\n          /**\n           * If the item is dropped outside the list\n           */\n          if (!destination) {\n            return;\n          }\n          const newSteps = reorderSteps(steps, source, destination);\n          setSteps(newSteps);\n        }}\n      >\n        <div className={classes.dragdropDiv}>\n          {Object.entries(steps).map(([key, value]) => {\n            return (\n              <Droppable\n                key={key}\n                droppableId={key}\n                type=\"CARD\"\n                direction=\"horizontal\"\n                isCombineEnabled={false}\n                isDropDisabled={key === 'stepname0'}\n              >\n                {(dropProvided) => (\n                  <div {...dropProvided.droppableProps}>\n                    <div>\n                      <div>\n                        <div\n                          className={classes.droppableDiv}\n                          ref={dropProvided.innerRef}\n                        >\n                          {(value as ManifestSteps[]).map(\n                            (step: ManifestSteps, index: number) => {\n                              return (\n                                <Draggable\n                                  key={step.name}\n                                  draggableId={step.name}\n                                  index={index}\n                                  isDragDisabled={key === 'stepname0'}\n                                >\n                                  {(dragProvided: DraggableProvided) => (\n                                    <div\n                                      ref={dragProvided.innerRef}\n                                      {...dragProvided.draggableProps}\n                                      {...dragProvided.dragHandleProps}\n                                    >\n                                      <div className={classes.draggableDiv}>\n                                        <img\n                                          className={classes.expImg}\n                                          src=\"./icons/sequencing-exp.svg\"\n                                          alt={step.name}\n                                        />\n                                        <Typography className={classes.expName}>\n                                          {step.name}\n                                        </Typography>\n                                      </div>\n                                    </div>\n                                  )}\n                                </Draggable>\n                              );\n                            }\n                          )}\n                          {dropProvided.placeholder}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </Droppable>\n            );\n          })}\n        </div>\n      </DragDropContext>\n      <Typography className={classes.sequencingHeader}>\n        {t('customWorkflow.createWorkflow.selectAnExp')}\n      </Typography>\n      <Typography className={classes.sequencingDesc}>\n        {t('customWorkflow.sequence.dragexp')}\n      </Typography>\n      <div className={classes.buttonDiv}>\n        <ButtonFilled\n          variant=\"error\"\n          onClick={() => handleSequenceModal(false)}\n          className={classes.discard}\n        >\n          {t('customWorkflow.sequence.discard')}\n        </ButtonFilled>\n        <ButtonFilled onClick={handleStepsChange}>\n          {t('customWorkflow.sequence.saveChanges')}\n        </ButtonFilled>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkflowSequence;\n"]},"metadata":{},"sourceType":"module"}