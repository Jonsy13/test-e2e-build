{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/Runs/HeaderSection.tsx\";\n\nimport { Button, FormControl, IconButton, InputAdornment, InputBase, InputLabel, MenuItem, Popover, Select, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main css file\n\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nimport useStyles from './styles';\n\nvar HeaderSection = function HeaderSection(_ref) {\n  var _clusterList$getClust;\n\n  var searchValue = _ref.searchValue,\n      statusValue = _ref.statusValue,\n      clusterValue = _ref.clusterValue,\n      isOpen = _ref.isOpen,\n      popAnchorEl = _ref.popAnchorEl,\n      displayDate = _ref.displayDate,\n      clusterList = _ref.clusterList,\n      changeSearch = _ref.changeSearch,\n      changeStatus = _ref.changeStatus,\n      changeCluster = _ref.changeCluster,\n      popOverClick = _ref.popOverClick,\n      popOverClose = _ref.popOverClose,\n      selectDate = _ref.selectDate;\n  var classes = useStyles();\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var _useState = useState([{\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headerSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    id: \"input-with-icon-adornment\",\n    placeholder: \"Search\",\n    className: classes.search,\n    value: searchValue,\n    onChange: changeSearch,\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Workflow Status\"), /*#__PURE__*/React.createElement(Select, {\n    value: statusValue,\n    onChange: changeStatus,\n    label: \"Workflow Status\",\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"All\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Failed\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Failed\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Running\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Running\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Succeeded\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Completed\"))), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Target Cluster\"), /*#__PURE__*/React.createElement(Select, {\n    value: clusterValue,\n    onChange: changeCluster,\n    label: \"Target Cluster\",\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"All\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"All\"), clusterList === null || clusterList === void 0 ? void 0 : (_clusterList$getClust = clusterList.getCluster) === null || _clusterList$getClust === void 0 ? void 0 : _clusterList$getClust.map(function (cluster) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: cluster.cluster_name,\n      value: cluster.cluster_name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, cluster.cluster_name);\n  }))), /*#__PURE__*/React.createElement(Button, {\n    className: classes.selectDate,\n    onClick: popOverClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.displayDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, displayDate, /*#__PURE__*/React.createElement(IconButton, {\n    style: {\n      width: 10,\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, isOpen ? /*#__PURE__*/React.createElement(KeyboardArrowDownIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(Popover, {\n    open: isOpen,\n    anchorEl: popAnchorEl,\n    onClose: popOverClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DateRangePicker, {\n    onChange: function onChange(item) {\n      setState([item.selection]);\n      selectDate(\"\".concat(item.selection.startDate), \"\".concat(item.selection.endDate));\n    },\n    showSelectionPreview: true,\n    moveRangeOnFirstSelection: false,\n    months: 1,\n    ranges: state,\n    direction: \"vertical\",\n    editableDateInputs: true,\n    rangeColors: [palette.primary.dark],\n    showMonthAndYearPickers: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default HeaderSection;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/Runs/HeaderSection.tsx"],"names":["Button","FormControl","IconButton","InputAdornment","InputBase","InputLabel","MenuItem","Popover","Select","Typography","useTheme","ChevronRightIcon","KeyboardArrowDownIcon","SearchIcon","React","useState","DateRangePicker","useStyles","HeaderSection","searchValue","statusValue","clusterValue","isOpen","popAnchorEl","displayDate","clusterList","changeSearch","changeStatus","changeCluster","popOverClick","popOverClose","selectDate","classes","palette","startDate","Date","endDate","key","state","setState","headerSection","search","formControl","selectText","getCluster","map","cluster","cluster_name","width","height","vertical","horizontal","marginTop","item","selection","primary","dark"],"mappings":"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","sourcesContent":["import {\n  Button,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Popover,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { Clusters } from '../../../models/graphql/clusterData';\nimport { WorkflowStatus } from '../../../models/graphql/workflowData';\nimport useStyles from './styles';\n\ninterface HeaderSectionProps {\n  searchValue?: string;\n  statusValue?: WorkflowStatus;\n  clusterValue?: string;\n  isOpen: boolean;\n  clusterList?: Partial<Clusters>;\n  isDateOpen: boolean;\n  popAnchorEl: HTMLElement | null;\n  displayDate: string;\n  changeSearch: (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n  changeStatus: (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>,\n    child: React.ReactNode\n  ) => void;\n  changeCluster: (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>,\n    child: React.ReactNode\n  ) => void;\n  popOverClick: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  popOverClose: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  selectDate: (selectFromDate: string, selectToDate: string) => void;\n}\n\nconst HeaderSection: React.FC<HeaderSectionProps> = ({\n  searchValue,\n  statusValue,\n  clusterValue,\n  isOpen,\n  popAnchorEl,\n  displayDate,\n  clusterList,\n  changeSearch,\n  changeStatus,\n  changeCluster,\n  popOverClick,\n  popOverClose,\n  selectDate,\n}) => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n  const [state, setState] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection',\n    },\n  ]);\n\n  return (\n    <div>\n      <div className={classes.headerSection}>\n        {/* Search Field */}\n        <InputBase\n          id=\"input-with-icon-adornment\"\n          placeholder=\"Search\"\n          className={classes.search}\n          value={searchValue}\n          onChange={changeSearch}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          }\n        />\n\n        {/* Select Workflow */}\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel className={classes.selectText}>\n            Workflow Status\n          </InputLabel>\n          <Select\n            value={statusValue}\n            onChange={changeStatus}\n            label=\"Workflow Status\"\n            className={classes.selectText}\n          >\n            <MenuItem value=\"All\">All</MenuItem>\n            <MenuItem value=\"Failed\">Failed</MenuItem>\n            <MenuItem value=\"Running\">Running</MenuItem>\n            <MenuItem value=\"Succeeded\">Completed</MenuItem>\n          </Select>\n        </FormControl>\n\n        {/* Select Cluster */}\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel className={classes.selectText}>Target Cluster</InputLabel>\n          <Select\n            value={clusterValue}\n            onChange={changeCluster}\n            label=\"Target Cluster\"\n            className={classes.selectText}\n          >\n            <MenuItem value=\"All\">All</MenuItem>\n            {clusterList?.getCluster?.map((cluster) => (\n              <MenuItem key={cluster.cluster_name} value={cluster.cluster_name}>\n                {cluster.cluster_name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <Button className={classes.selectDate} onClick={popOverClick}>\n          <Typography className={classes.displayDate}>\n            {displayDate}\n            <IconButton style={{ width: 10, height: 10 }}>\n              {isOpen ? <KeyboardArrowDownIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </Typography>\n        </Button>\n        <Popover\n          open={isOpen}\n          anchorEl={popAnchorEl}\n          onClose={popOverClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          style={{\n            marginTop: 10,\n          }}\n        >\n          <DateRangePicker\n            onChange={(item) => {\n              setState([(item as any).selection]);\n              selectDate(\n                `${(item as any).selection.startDate}`,\n                `${(item as any).selection.endDate}`\n              );\n            }}\n            showSelectionPreview\n            moveRangeOnFirstSelection={false}\n            months={1}\n            ranges={state}\n            direction=\"vertical\"\n            editableDateInputs\n            rangeColors={[palette.primary.dark]}\n            showMonthAndYearPickers\n          />\n        </Popover>\n      </div>\n    </div>\n  );\n};\nexport default HeaderSection;\n"]},"metadata":{},"sourceType":"module"}