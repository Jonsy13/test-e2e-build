{"ast":null,"code":"import{IconButton,Typography}from'@material-ui/core';import React from'react';import{history}from'../../../../redux/configureStore';import{ReactComponent as AnalyticsIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../../svg/analytics.svg\";import timeDifferenceForDate from'../../../../utils/datesModifier';import{getProjectID,getProjectRole}from'../../../../utils/getSearchParams';import useStyles from'./styles';var WorkflowDashboardCard=function WorkflowDashboardCard(_ref){var data=_ref.data;var classes=useStyles();var projectID=getProjectID();var projectRole=getProjectRole();function getStatusVariant(phase){switch(phase){case'Running':return'status-running.svg';case'Succeeded':return'status-success.svg';case'Failed':return'status-failed.svg';case'Pending':return'status-pending.svg';case'NotAvailabe':return'status-NotAvailable.svg';default:return'';}}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.animatedContainer},/*#__PURE__*/React.createElement(\"div\",{className:classes.workflowDataContainer},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.statusDiv},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/\".concat(getStatusVariant(data.phase)),alt:\"k8s\",title:data.phase}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:\"\".concat(classes.testName,\" \").concat(classes.noWrapProvider)},data.workflow_name),/*#__PURE__*/React.createElement(Typography,{className:classes.hint},\"Agent: \",data.cluster_name)))),/*#__PURE__*/React.createElement(Typography,{className:\"\".concat(classes.noWrapProvider,\" \").concat(classes.hint)},timeDifferenceForDate(data.last_updated)),/*#__PURE__*/React.createElement(\"section\",{className:classes.cardActionsSection},/*#__PURE__*/React.createElement(\"div\",{className:classes.cardActions},/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){history.push({pathname:\"/workflows/analytics/\".concat(data.workflow_id),search:\"?projectID=\".concat(projectID,\"&projectRole=\").concat(projectRole)});}},/*#__PURE__*/React.createElement(AnalyticsIcon,null)),/*#__PURE__*/React.createElement(Typography,null,\"See Analytics\"))))));};export{WorkflowDashboardCard};","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/Overview/WorkflowDashboardCard/index.tsx"],"names":["IconButton","Typography","React","history","timeDifferenceForDate","getProjectID","getProjectRole","useStyles","WorkflowDashboardCard","data","classes","projectID","projectRole","getStatusVariant","phase","animatedContainer","workflowDataContainer","statusDiv","testName","noWrapProvider","workflow_name","hint","cluster_name","last_updated","cardActionsSection","cardActions","push","pathname","workflow_id","search"],"mappings":"AAAA,OAASA,UAAT,CAAqBC,UAArB,KAAuC,mBAAvC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,OAAT,KAAwB,kCAAxB,C,+GAEA,MAAOC,CAAAA,qBAAP,KAAkC,iCAAlC,CACA,OACEC,YADF,CAEEC,cAFF,KAGO,mCAHP,CAIA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAMA,GAAMC,CAAAA,qBAA2D,CAAG,QAA9DA,CAAAA,qBAA8D,MAE9D,IADJC,CAAAA,IACI,MADJA,IACI,CACJ,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CAEA,GAAMI,CAAAA,SAAS,CAAGN,YAAY,EAA9B,CACA,GAAMO,CAAAA,WAAW,CAAGN,cAAc,EAAlC,CAEA,QAASO,CAAAA,gBAAT,CAA0BC,KAA1B,CAAyC,CACvC,OAAQA,KAAR,EACE,IAAK,SAAL,CACE,MAAO,oBAAP,CACF,IAAK,WAAL,CACE,MAAO,oBAAP,CACF,IAAK,QAAL,CACE,MAAO,mBAAP,CACF,IAAK,SAAL,CACE,MAAO,oBAAP,CACF,IAAK,aAAL,CACE,MAAO,yBAAP,CACF,QACE,MAAO,EAAP,CAZJ,CAcD,CAED,mBACE,qDACE,2BAAK,SAAS,CAAEJ,OAAO,CAACK,iBAAxB,eACE,2BAAK,SAAS,CAAEL,OAAO,CAACM,qBAAxB,eACE,4CACE,2BAAK,SAAS,CAAEN,OAAO,CAACO,SAAxB,eACE,2BACE,GAAG,mBAAaJ,gBAAgB,CAACJ,IAAI,CAACK,KAAN,CAA7B,CADL,CAEE,GAAG,CAAC,KAFN,CAGE,KAAK,CAAEL,IAAI,CAACK,KAHd,EADF,cAME,4CACE,oBAAC,UAAD,EACE,SAAS,WAAKJ,OAAO,CAACQ,QAAb,aAAyBR,OAAO,CAACS,cAAjC,CADX,EAGGV,IAAI,CAACW,aAHR,CADF,cAME,oBAAC,UAAD,EAAY,SAAS,CAAEV,OAAO,CAACW,IAA/B,YACUZ,IAAI,CAACa,YADf,CANF,CANF,CADF,CADF,cAoBE,oBAAC,UAAD,EAAY,SAAS,WAAKZ,OAAO,CAACS,cAAb,aAA+BT,OAAO,CAACW,IAAvC,CAArB,EACGjB,qBAAqB,CAACK,IAAI,CAACc,YAAN,CADxB,CApBF,cAuBE,+BAAS,SAAS,CAAEb,OAAO,CAACc,kBAA5B,eACE,2BAAK,SAAS,CAAEd,OAAO,CAACe,WAAxB,eACE,oBAAC,UAAD,EACE,OAAO,CAAE,kBAAM,CACbtB,OAAO,CAACuB,IAAR,CAAa,CACXC,QAAQ,gCAA0BlB,IAAI,CAACmB,WAA/B,CADG,CAEXC,MAAM,sBAAgBlB,SAAhB,yBAAyCC,WAAzC,CAFK,CAAb,EAID,CANH,eAQE,oBAAC,aAAD,MARF,CADF,cAWE,oBAAC,UAAD,sBAXF,CADF,CAvBF,CADF,CADF,CADF,CA6CD,CAtED,CAwEA,OAASJ,qBAAT","sourcesContent":["import { IconButton, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { WorkflowRun } from '../../../../models/graphql/workflowData';\nimport { history } from '../../../../redux/configureStore';\nimport { ReactComponent as AnalyticsIcon } from '../../../../svg/analytics.svg';\nimport timeDifferenceForDate from '../../../../utils/datesModifier';\nimport {\n  getProjectID,\n  getProjectRole,\n} from '../../../../utils/getSearchParams';\nimport useStyles from './styles';\n\ninterface WorkflowDashboardCardProps {\n  data: WorkflowRun;\n}\n\nconst WorkflowDashboardCard: React.FC<WorkflowDashboardCardProps> = ({\n  data,\n}) => {\n  const classes = useStyles();\n\n  const projectID = getProjectID();\n  const projectRole = getProjectRole();\n\n  function getStatusVariant(phase: string) {\n    switch (phase) {\n      case 'Running':\n        return 'status-running.svg';\n      case 'Succeeded':\n        return 'status-success.svg';\n      case 'Failed':\n        return 'status-failed.svg';\n      case 'Pending':\n        return 'status-pending.svg';\n      case 'NotAvailabe':\n        return 'status-NotAvailable.svg';\n      default:\n        return '';\n    }\n  }\n\n  return (\n    <>\n      <div className={classes.animatedContainer}>\n        <div className={classes.workflowDataContainer}>\n          <div>\n            <div className={classes.statusDiv}>\n              <img\n                src={`./icons/${getStatusVariant(data.phase)}`}\n                alt=\"k8s\"\n                title={data.phase}\n              />\n              <div>\n                <Typography\n                  className={`${classes.testName} ${classes.noWrapProvider}`}\n                >\n                  {data.workflow_name}\n                </Typography>\n                <Typography className={classes.hint}>\n                  Agent: {data.cluster_name}\n                </Typography>\n              </div>\n            </div>\n          </div>\n          <Typography className={`${classes.noWrapProvider} ${classes.hint}`}>\n            {timeDifferenceForDate(data.last_updated)}\n          </Typography>\n          <section className={classes.cardActionsSection}>\n            <div className={classes.cardActions}>\n              <IconButton\n                onClick={() => {\n                  history.push({\n                    pathname: `/workflows/analytics/${data.workflow_id}`,\n                    search: `?projectID=${projectID}&projectRole=${projectRole}`,\n                  });\n                }}\n              >\n                <AnalyticsIcon />\n              </IconButton>\n              <Typography>See Analytics</Typography>\n            </div>\n          </section>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport { WorkflowDashboardCard };\n"]},"metadata":{},"sourceType":"module"}