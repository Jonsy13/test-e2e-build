{"ast":null,"code":"import _slicedToArray from \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowRunsBarChart/index.tsx\";\n\n/* eslint-disable max-len */\n\n/* eslint-disable no-console */\nimport { Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport Plotly from 'plotly.js';\nimport React, { useEffect } from 'react';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport Loader from '../../../../components/Loader';\nimport useStyles from './styles';\nvar Plot = createPlotlyComponent(Plotly);\n\nvar WorkflowRunsBarChart = function WorkflowRunsBarChart(_ref) {\n  var numberOfWorkflowRuns = _ref.numberOfWorkflowRuns,\n      workflowRunData = _ref.workflowRunData,\n      callBackToShowPopOver = _ref.callBackToShowPopOver,\n      callBackToSelectWorkflowRun = _ref.callBackToSelectWorkflowRun;\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      plotData = _React$useState2[0],\n      setPlotData = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      plotLayout = _React$useState4[0],\n      setPlotLayout = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      visible = _React$useState6[0],\n      setVisible = _React$useState6[1];\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      visibleIndex = _React$useState8[0],\n      setVisibleIndex = _React$useState8[1];\n\n  var _React$useState9 = React.useState({\n    x: 0,\n    y: 0\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      visibleLocation = _React$useState10[0],\n      setVisibleLocation = _React$useState10[1];\n\n  var _React$useState11 = React.useState(Array(workflowRunData.length).fill(palette.success.main)),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      colorsPassed = _React$useState12[0],\n      setColorsPassed = _React$useState12[1];\n\n  var _React$useState13 = React.useState(Array(workflowRunData.length).fill(palette.error.main)),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      colorsFailed = _React$useState14[0],\n      setColorsFailed = _React$useState14[1]; // Function to convert UNIX time in format of DD MMM YYY\n\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var resDate = moment(updated).format('YYYY-MM-DD HH:mm:ss');\n    return resDate;\n  };\n\n  var processData = function processData() {\n    var passed = {\n      x: [''],\n      y: [0],\n      name: 'Passed tests',\n      type: 'bar',\n      width: [0],\n      customdata: [0],\n      marker: {\n        color: colorsPassed\n      },\n      hoverinfo: 'skip',\n      hovertemplate: '<extra></extra>'\n    };\n    var failed = {\n      x: [''],\n      y: [0],\n      name: 'Failed tests',\n      type: 'bar',\n      width: [0],\n      marker: {\n        color: colorsFailed\n      },\n      customdata: [0],\n      hoverinfo: 'skip',\n      hovertemplate: '<extra></extra>'\n    };\n    var width = 20000; // Initial Width\n\n    for (var i = 0; i < workflowRunData.length; i += 1) {\n      passed.x.push(formatDate(workflowRunData[i].testDate));\n      passed.y.push(workflowRunData[i].testsPassed / (workflowRunData[i].testsPassed + workflowRunData[i].testsFailed) * 100);\n      if (numberOfWorkflowRuns >= 2) width = 100;\n      if (numberOfWorkflowRuns > 10) width = 50;\n      var finalPushedWidth = width * 3000 * 0.7;\n      passed.width.push(finalPushedWidth);\n      failed.x.push(formatDate(workflowRunData[i].testDate));\n      failed.y.push(workflowRunData[i].testsFailed / (workflowRunData[i].testsPassed + workflowRunData[i].testsFailed) * 100);\n      failed.width.push(finalPushedWidth);\n      passed.customdata.push(i);\n      failed.customdata.push(i);\n    }\n\n    passed.x.shift();\n    passed.y.shift();\n    passed.width.shift();\n    failed.x.shift();\n    failed.y.shift();\n    failed.width.shift();\n    passed.customdata.shift();\n    failed.customdata.shift();\n    setPlotData([passed, failed]);\n  };\n\n  var selectorOptions = {\n    buttons: [{\n      step: 'month',\n      stepmode: 'backward',\n      count: 1,\n      label: '1 Month'\n    }, {\n      step: 'month',\n      stepmode: 'backward',\n      count: 3,\n      label: '3 Months'\n    }, {\n      step: 'month',\n      stepmode: 'backward',\n      count: 6,\n      label: '6 Months'\n    }, {\n      step: 'year',\n      stepmode: 'backward',\n      count: 1,\n      label: '1 Year'\n    }, {\n      step: 'all',\n      label: 'default'\n    }]\n  };\n\n  var processLayout = function processLayout() {\n    var layout = {\n      xaxis: {\n        showgrid: false,\n        showline: true,\n        showticklabels: true,\n        linecolor: palette.border.main,\n        linewidth: 0.5,\n        ticks: 'outside',\n        tickcolor: palette.border.main,\n        tickwidth: 0,\n        ticklen: 0,\n        tickfont: {\n          family: 'Ubuntu, monospace',\n          color: palette.text.hint\n        },\n        rangeselector: selectorOptions,\n        rangeslider: {\n          visible: true\n        }\n      },\n      yaxis: {\n        showgrid: false,\n        zeroline: false,\n        showline: false,\n        showticklabels: false,\n        linecolor: palette.border.main,\n        linewidth: 0.5,\n        ticks: 'outside',\n        tickcolor: palette.border.main,\n        tickwidth: 0,\n        ticklen: 0,\n        tickfont: {\n          family: 'Ubuntu, monospace',\n          color: palette.text.hint\n        }\n      },\n      cliponaxis: true,\n      layer: 'below_traces',\n      autosize: true,\n      margin: {\n        autoexpand: false,\n        l: 50,\n        r: 200,\n        t: 50,\n        b: 120,\n        p: 10\n      },\n      font: {\n        family: 'Ubuntu, monospace',\n        color: palette.text.hint\n      },\n      barmode: 'stack',\n      showlegend: true,\n      legend: {\n        orientation: 'h',\n        y: 1,\n        x: 0.97\n      },\n      hovermode: 'closest',\n      hoverlabel: {\n        bgcolor: palette.secondary.contrastText,\n        bordercolor: palette.secondary.contrastText\n      },\n      modebar: {\n        bgcolor: palette.background.paper\n      }\n    };\n    setPlotLayout(layout);\n  };\n\n  useEffect(function () {\n    processData();\n    processLayout();\n\n    try {\n      var nodeStyle = document.getElementsByClassName('modebar')[0].style;\n      nodeStyle.left = '29%';\n      nodeStyle.transform = 'translateY(110%)';\n    } catch (err) {\n      console.error(err);\n    }\n  }, [workflowRunData]);\n  useEffect(function () {\n    processData();\n    processLayout();\n\n    try {\n      var nodeStyle = document.getElementsByClassName('modebar')[0].style;\n      nodeStyle.left = '29%';\n      nodeStyle.transform = 'translateY(110%)';\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n  useEffect(function () {\n    processData();\n\n    try {\n      var nodeStyle = document.getElementsByClassName('modebar')[0].style;\n      nodeStyle.left = '29%';\n      nodeStyle.transform = 'translateY(110%)';\n    } catch (err) {\n      console.error(err);\n    }\n  }, [colorsPassed, colorsFailed]);\n  useEffect(function () {\n    var selectedWorkflowRunData = {\n      testsPassed: workflowRunData[visibleIndex].testsPassed,\n      testsFailed: workflowRunData[visibleIndex].testsFailed,\n      resilienceScore: workflowRunData[visibleIndex].resilienceScore,\n      testDate: workflowRunData[visibleIndex].testDate,\n      xLoc: visibleLocation.x,\n      yLoc: visibleLocation.y,\n      workflowRunID: workflowRunData[visibleIndex].workflowRunID\n    };\n    callBackToShowPopOver(selectedWorkflowRunData, visible);\n  }, [visible]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, workflowRunData[1].testsPassed !== 0 || workflowRunData[1].testsFailed !== 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myPlot\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Plot, {\n    data: plotData,\n    layout: plotLayout,\n    useResizeHandler: true,\n    className: classes.plot,\n    config: {\n      displaylogo: false,\n      autosizable: true,\n      responsive: true,\n      frameMargins: 0.2,\n      showAxisDragHandles: true,\n      showAxisRangeEntryBoxes: true,\n      showTips: true,\n      displayModeBar: true,\n      toImageButtonOptions: {\n        format: 'png',\n        filename: \"Workflow-Run-\".concat(workflowRunData[0].workflowRunID),\n        width: 1920,\n        height: 1080,\n        scale: 2\n      }\n    },\n    onHover: function onHover(data) {\n      var ind = 0;\n      var recolour = false;\n      var newPassedColours = [];\n      var newFailedColours = [];\n      var loc = {\n        x: 0,\n        y: 0\n      };\n\n      for (var i = 0; i < colorsPassed.length; i++) {\n        if (colorsPassed[i] === palette.success.light) {\n          recolour = true;\n        }\n      }\n\n      if (!recolour) {\n        for (var _i = 0; _i < data.points.length; _i++) {\n          ind = data.points[_i].customdata;\n          loc = {\n            x: data.event.pageX,\n            y: data.event.pageY - data.event.offsetY\n          };\n        }\n\n        for (var _i2 = 0; _i2 < colorsPassed.length; _i2++) {\n          if (_i2 !== ind) {\n            newPassedColours.push(palette.success.light);\n            newFailedColours.push(palette.error.light);\n          } else {\n            newPassedColours.push(palette.success.main);\n            newFailedColours.push(palette.error.main);\n          }\n        }\n      } else {\n        for (var _i3 = 0; _i3 < colorsPassed.length; _i3++) {\n          newPassedColours.push(palette.success.main);\n          newFailedColours.push(palette.error.main);\n        }\n      }\n\n      setVisibleIndex(ind);\n      setVisibleLocation(loc);\n      setColorsPassed(newPassedColours);\n      setColorsFailed(newFailedColours);\n      setVisible(true);\n    },\n    onClick: function onClick(data) {\n      var newPassedColours = [];\n      var newFailedColours = [];\n      var ind = 0;\n\n      for (var i = 0; i < data.points.length; i++) {\n        ind = data.points[i].customdata;\n      }\n\n      for (var _i4 = 0; _i4 < colorsPassed.length; _i4++) {\n        if (_i4 !== ind) {\n          newPassedColours.push(palette.success.light);\n          newFailedColours.push(palette.error.light);\n        } else {\n          newPassedColours.push(palette.success.main);\n          newFailedColours.push(palette.error.main);\n        }\n      }\n\n      setColorsPassed(newPassedColours);\n      setColorsFailed(newFailedColours);\n      callBackToSelectWorkflowRun(workflowRunData[ind].workflowRunID);\n      setVisibleIndex(ind);\n      setVisible(false);\n    },\n    onUnhover: function onUnhover() {\n      var newPassedColours = [];\n      var newFailedColours = [];\n\n      for (var i = 0; i < colorsPassed.length; i++) {\n        newPassedColours.push(palette.success.main);\n        newFailedColours.push(palette.error.main);\n      }\n\n      setColorsPassed(newPassedColours);\n      setColorsFailed(newFailedColours);\n      setVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.waitingText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 11\n    }\n  }, \"Waiting for tests to complete !\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default WorkflowRunsBarChart;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/Analytics/WorkflowDashboard/WorkflowRunsBarChart/index.tsx"],"names":["Typography","useTheme","moment","Plotly","React","useEffect","createPlotlyComponent","Loader","useStyles","Plot","WorkflowRunsBarChart","numberOfWorkflowRuns","workflowRunData","callBackToShowPopOver","callBackToSelectWorkflowRun","palette","classes","useState","plotData","setPlotData","plotLayout","setPlotLayout","visible","setVisible","visibleIndex","setVisibleIndex","x","y","visibleLocation","setVisibleLocation","Array","length","fill","success","main","colorsPassed","setColorsPassed","error","colorsFailed","setColorsFailed","formatDate","date","updated","Date","parseInt","toString","resDate","format","processData","passed","name","type","width","customdata","marker","color","hoverinfo","hovertemplate","failed","i","push","testDate","testsPassed","testsFailed","finalPushedWidth","shift","selectorOptions","buttons","step","stepmode","count","label","processLayout","layout","xaxis","showgrid","showline","showticklabels","linecolor","border","linewidth","ticks","tickcolor","tickwidth","ticklen","tickfont","family","text","hint","rangeselector","rangeslider","yaxis","zeroline","cliponaxis","layer","autosize","margin","autoexpand","l","r","t","b","p","font","barmode","showlegend","legend","orientation","hovermode","hoverlabel","bgcolor","secondary","contrastText","bordercolor","modebar","background","paper","nodeStyle","document","getElementsByClassName","style","left","transform","err","console","selectedWorkflowRunData","resilienceScore","xLoc","yLoc","workflowRunID","plot","displaylogo","autosizable","responsive","frameMargins","showAxisDragHandles","showAxisRangeEntryBoxes","showTips","displayModeBar","toImageButtonOptions","filename","height","scale","data","ind","recolour","newPassedColours","newFailedColours","loc","light","points","event","pageX","pageY","offsetY","waitingText","loader"],"mappings":"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","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable no-console */\nimport { Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport Plotly from 'plotly.js';\nimport React, { useEffect } from 'react';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport Loader from '../../../../components/Loader';\nimport useStyles from './styles';\n\nconst Plot = createPlotlyComponent(Plotly);\n\ninterface SelectedWorkflowRunData {\n  testsPassed: number;\n  testsFailed: number;\n  resilienceScore: number;\n  testDate: string;\n  xLoc: number;\n  yLoc: number;\n  workflowRunID: string;\n}\n\nexport interface PopOverCallBackType {\n  (selectedWorkflowRunData: SelectedWorkflowRunData, visible: boolean): void;\n}\n\nexport interface SelectWorkflowRunCallBackType {\n  (selectedWorkflowRunID: string): void;\n}\n\ninterface WorkflowRunData {\n  testsPassed: number;\n  testsFailed: number;\n  resilienceScore: number;\n  testDate: string;\n  workflowRunID: string;\n  workflowID: string;\n}\n\ninterface WorkflowRunsBarChartProps {\n  numberOfWorkflowRuns: number;\n  workflowRunData: WorkflowRunData[];\n  callBackToShowPopOver: PopOverCallBackType;\n  callBackToSelectWorkflowRun: SelectWorkflowRunCallBackType;\n}\n\nconst WorkflowRunsBarChart: React.FC<WorkflowRunsBarChartProps> = ({\n  numberOfWorkflowRuns,\n  workflowRunData,\n  callBackToShowPopOver,\n  callBackToSelectWorkflowRun,\n}) => {\n  const { palette } = useTheme();\n  const classes = useStyles();\n  const [plotData, setPlotData] = React.useState<any[]>([]);\n  const [plotLayout, setPlotLayout] = React.useState<any>({});\n  const [visible, setVisible] = React.useState<boolean>(false);\n  const [visibleIndex, setVisibleIndex] = React.useState<number>(0);\n  const [visibleLocation, setVisibleLocation] = React.useState<{\n    x: number;\n    y: number;\n  }>({ x: 0, y: 0 });\n  const [colorsPassed, setColorsPassed] = React.useState<string[]>(\n    Array(workflowRunData.length).fill(palette.success.main)\n  );\n  const [colorsFailed, setColorsFailed] = React.useState<string[]>(\n    Array(workflowRunData.length).fill(palette.error.main)\n  );\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('YYYY-MM-DD HH:mm:ss');\n    return resDate;\n  };\n\n  const processData = () => {\n    const passed = {\n      x: [''],\n      y: [0],\n      name: 'Passed tests',\n      type: 'bar',\n      width: [0],\n      customdata: [0],\n      marker: {\n        color: colorsPassed,\n      },\n      hoverinfo: 'skip',\n      hovertemplate: '<extra></extra>',\n    };\n\n    const failed = {\n      x: [''],\n      y: [0],\n      name: 'Failed tests',\n      type: 'bar',\n      width: [0],\n      marker: {\n        color: colorsFailed,\n      },\n      customdata: [0],\n      hoverinfo: 'skip',\n      hovertemplate: '<extra></extra>',\n    };\n\n    let width = 20000; // Initial Width\n\n    for (let i = 0; i < workflowRunData.length; i += 1) {\n      passed.x.push(formatDate(workflowRunData[i].testDate));\n      passed.y.push(\n        (workflowRunData[i].testsPassed /\n          (workflowRunData[i].testsPassed + workflowRunData[i].testsFailed)) *\n          100\n      );\n      if (numberOfWorkflowRuns >= 2) width = 100;\n      if (numberOfWorkflowRuns > 10) width = 50;\n      const finalPushedWidth = width * 3000 * 0.7;\n      passed.width.push(finalPushedWidth);\n      failed.x.push(formatDate(workflowRunData[i].testDate));\n      failed.y.push(\n        (workflowRunData[i].testsFailed /\n          (workflowRunData[i].testsPassed + workflowRunData[i].testsFailed)) *\n          100\n      );\n      failed.width.push(finalPushedWidth);\n      passed.customdata.push(i);\n      failed.customdata.push(i);\n    }\n    passed.x.shift();\n    passed.y.shift();\n    passed.width.shift();\n    failed.x.shift();\n    failed.y.shift();\n    failed.width.shift();\n    passed.customdata.shift();\n    failed.customdata.shift();\n    setPlotData([passed, failed]);\n  };\n\n  const selectorOptions = {\n    buttons: [\n      {\n        step: 'month',\n        stepmode: 'backward',\n        count: 1,\n        label: '1 Month',\n      },\n      {\n        step: 'month',\n        stepmode: 'backward',\n        count: 3,\n        label: '3 Months',\n      },\n      {\n        step: 'month',\n        stepmode: 'backward',\n        count: 6,\n        label: '6 Months',\n      },\n      {\n        step: 'year',\n        stepmode: 'backward',\n        count: 1,\n        label: '1 Year',\n      },\n      {\n        step: 'all',\n        label: 'default',\n      },\n    ],\n  };\n\n  const processLayout = () => {\n    const layout = {\n      xaxis: {\n        showgrid: false,\n        showline: true,\n        showticklabels: true,\n        linecolor: palette.border.main,\n        linewidth: 0.5,\n        ticks: 'outside',\n        tickcolor: palette.border.main,\n        tickwidth: 0,\n        ticklen: 0,\n        tickfont: {\n          family: 'Ubuntu, monospace',\n          color: palette.text.hint,\n        },\n        rangeselector: selectorOptions,\n        rangeslider: { visible: true },\n      },\n      yaxis: {\n        showgrid: false,\n        zeroline: false,\n        showline: false,\n        showticklabels: false,\n        linecolor: palette.border.main,\n        linewidth: 0.5,\n        ticks: 'outside',\n        tickcolor: palette.border.main,\n        tickwidth: 0,\n        ticklen: 0,\n        tickfont: {\n          family: 'Ubuntu, monospace',\n          color: palette.text.hint,\n        },\n      },\n      cliponaxis: true,\n      layer: 'below_traces',\n      autosize: true,\n      margin: {\n        autoexpand: false,\n        l: 50,\n        r: 200,\n        t: 50,\n        b: 120,\n        p: 10,\n      },\n      font: {\n        family: 'Ubuntu, monospace',\n        color: palette.text.hint,\n      },\n      barmode: 'stack',\n      showlegend: true,\n      legend: { orientation: 'h', y: 1, x: 0.97 },\n      hovermode: 'closest',\n      hoverlabel: {\n        bgcolor: palette.secondary.contrastText,\n        bordercolor: palette.secondary.contrastText,\n      },\n      modebar: {\n        bgcolor: palette.background.paper,\n      },\n    };\n    setPlotLayout(layout);\n  };\n\n  useEffect(() => {\n    processData();\n    processLayout();\n    try {\n      const nodeStyle = (\n        document.getElementsByClassName('modebar')[0] as HTMLElement\n      ).style;\n      nodeStyle.left = '29%';\n      nodeStyle.transform = 'translateY(110%)';\n    } catch (err) {\n      console.error(err);\n    }\n  }, [workflowRunData]);\n\n  useEffect(() => {\n    processData();\n    processLayout();\n    try {\n      const nodeStyle = (\n        document.getElementsByClassName('modebar')[0] as HTMLElement\n      ).style;\n      nodeStyle.left = '29%';\n      nodeStyle.transform = 'translateY(110%)';\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    processData();\n    try {\n      const nodeStyle = (\n        document.getElementsByClassName('modebar')[0] as HTMLElement\n      ).style;\n      nodeStyle.left = '29%';\n      nodeStyle.transform = 'translateY(110%)';\n    } catch (err) {\n      console.error(err);\n    }\n  }, [colorsPassed, colorsFailed]);\n\n  useEffect(() => {\n    const selectedWorkflowRunData: SelectedWorkflowRunData = {\n      testsPassed: workflowRunData[visibleIndex].testsPassed,\n      testsFailed: workflowRunData[visibleIndex].testsFailed,\n      resilienceScore: workflowRunData[visibleIndex].resilienceScore,\n      testDate: workflowRunData[visibleIndex].testDate,\n      xLoc: visibleLocation.x,\n      yLoc: visibleLocation.y,\n      workflowRunID: workflowRunData[visibleIndex].workflowRunID,\n    };\n    callBackToShowPopOver(selectedWorkflowRunData, visible);\n  }, [visible]);\n\n  return (\n    <div>\n      {workflowRunData[1].testsPassed !== 0 ||\n      workflowRunData[1].testsFailed !== 0 ? (\n        <div id=\"myPlot\">\n          <Plot\n            data={plotData}\n            layout={plotLayout}\n            useResizeHandler\n            className={classes.plot}\n            config={{\n              displaylogo: false,\n              autosizable: true,\n              responsive: true,\n              frameMargins: 0.2,\n              showAxisDragHandles: true,\n              showAxisRangeEntryBoxes: true,\n              showTips: true,\n              displayModeBar: true,\n              toImageButtonOptions: {\n                format: 'png',\n                filename: `Workflow-Run-${workflowRunData[0].workflowRunID}`,\n                width: 1920,\n                height: 1080,\n                scale: 2,\n              },\n            }}\n            onHover={(data) => {\n              let ind = 0;\n              let recolour = false;\n              const newPassedColours = [];\n              const newFailedColours = [];\n              let loc = { x: 0, y: 0 };\n              for (let i = 0; i < colorsPassed.length; i++) {\n                if (colorsPassed[i] === palette.success.light) {\n                  recolour = true;\n                }\n              }\n              if (!recolour) {\n                for (let i = 0; i < data.points.length; i++) {\n                  ind = data.points[i].customdata as unknown as number;\n                  loc = {\n                    x: data.event.pageX,\n                    y: data.event.pageY - data.event.offsetY,\n                  };\n                }\n                for (let i = 0; i < colorsPassed.length; i++) {\n                  if (i !== ind) {\n                    newPassedColours.push(palette.success.light);\n                    newFailedColours.push(palette.error.light);\n                  } else {\n                    newPassedColours.push(palette.success.main);\n                    newFailedColours.push(palette.error.main);\n                  }\n                }\n              } else {\n                for (let i = 0; i < colorsPassed.length; i++) {\n                  newPassedColours.push(palette.success.main);\n                  newFailedColours.push(palette.error.main);\n                }\n              }\n              setVisibleIndex(ind);\n              setVisibleLocation(loc);\n              setColorsPassed(newPassedColours);\n              setColorsFailed(newFailedColours);\n              setVisible(true);\n            }}\n            onClick={(data) => {\n              const newPassedColours = [];\n              const newFailedColours = [];\n              let ind = 0;\n              for (let i = 0; i < data.points.length; i++) {\n                ind = data.points[i].customdata as unknown as number;\n              }\n              for (let i = 0; i < colorsPassed.length; i++) {\n                if (i !== ind) {\n                  newPassedColours.push(palette.success.light);\n                  newFailedColours.push(palette.error.light);\n                } else {\n                  newPassedColours.push(palette.success.main);\n                  newFailedColours.push(palette.error.main);\n                }\n              }\n              setColorsPassed(newPassedColours);\n              setColorsFailed(newFailedColours);\n              callBackToSelectWorkflowRun(workflowRunData[ind].workflowRunID);\n              setVisibleIndex(ind);\n              setVisible(false);\n            }}\n            onUnhover={() => {\n              const newPassedColours = [];\n              const newFailedColours = [];\n              for (let i = 0; i < colorsPassed.length; i++) {\n                newPassedColours.push(palette.success.main);\n                newFailedColours.push(palette.error.main);\n              }\n              setColorsPassed(newPassedColours);\n              setColorsFailed(newFailedColours);\n              setVisible(false);\n            }}\n          />\n        </div>\n      ) : (\n        <div>\n          <Typography className={classes.waitingText}>\n            Waiting for tests to complete !\n          </Typography>\n          <div className={classes.loader}>\n            <Loader />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WorkflowRunsBarChart;\n"]},"metadata":{},"sourceType":"module"}