{"ast":null,"code":"import { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    // Workflow Graph\n    dagreGraph: {\n      cursor: 'grab',\n      height: function height(props) {\n        return props.isSequence ? '30rem' : '23rem';\n      },\n      width: '100%',\n      // Styles for nodes\n      '& g g.nodes': {\n        '& g.node': {\n          cursor: 'pointer',\n          fill: 'none',\n          '& circle': {\n            fill: theme.palette.status.experiment.completed\n          },\n          '& g.label g': {\n            transform: function transform(props) {\n              return props.horizontal ? 'translate(0, 0)' : 'translate(0, -5px)';\n            },\n            '& path': {\n              fill: theme.palette.text.secondary\n            }\n          },\n          '& text': {\n            fill: theme.palette.text.primary\n          }\n        },\n        '& path.succeededIcon': {\n          transform: function transform(props) {\n            return \"scale(1.8) translate(-5px, \".concat(props.horizontal ? -3.6 : -1, \"px)\");\n          }\n        },\n        '& g.StepGroup.Succeeded': {\n          fill: theme.palette.status.experiment.completed\n        }\n      },\n      // Styles for edges\n      '& g g.edgePaths': {\n        '& g.succeeded': {\n          fill: theme.palette.status.experiment.completed,\n          stroke: theme.palette.status.experiment.completed\n        }\n      }\n    },\n    load: {\n      textAlign: 'center',\n      marginTop: '50%',\n      height: '10rem'\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/WorkflowPreview/styles.ts"],"names":["makeStyles","useStyles","theme","dagreGraph","cursor","height","props","isSequence","width","fill","palette","status","experiment","completed","transform","horizontal","text","secondary","primary","stroke","load","textAlign","marginTop"],"mappings":"AAAA,SAASA,UAAT,QAAkC,0BAAlC;AAOA,IAAMC,SAAS,GAAGD,UAAU,CAAC,UAACE,KAAD;AAAA,SAAmB;AAC9C;AACAC,IAAAA,UAAU,EAAE;AACVC,MAAAA,MAAM,EAAE,MADE;AAEVC,MAAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,eAAwBA,KAAK,CAACC,UAAN,GAAmB,OAAnB,GAA6B,OAArD;AAAA,OAFE;AAGVC,MAAAA,KAAK,EAAE,MAHG;AAKV;AACA,qBAAe;AACb,oBAAY;AACVJ,UAAAA,MAAM,EAAE,SADE;AAEVK,UAAAA,IAAI,EAAE,MAFI;AAGV,sBAAY;AACVA,YAAAA,IAAI,EAAEP,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAqBC,UAArB,CAAgCC;AAD5B,WAHF;AAMV,yBAAe;AACbC,YAAAA,SAAS,EAAE,mBAACR,KAAD;AAAA,qBACTA,KAAK,CAACS,UAAN,GAAmB,iBAAnB,GAAuC,oBAD9B;AAAA,aADE;AAGb,sBAAU;AACRN,cAAAA,IAAI,EAAEP,KAAK,CAACQ,OAAN,CAAcM,IAAd,CAAmBC;AADjB;AAHG,WANL;AAaV,oBAAU;AACRR,YAAAA,IAAI,EAAEP,KAAK,CAACQ,OAAN,CAAcM,IAAd,CAAmBE;AADjB;AAbA,SADC;AAkBb,gCAAwB;AACtBJ,UAAAA,SAAS,EAAE,mBAACR,KAAD;AAAA,wDACqBA,KAAK,CAACS,UAAN,GAAmB,CAAC,GAApB,GAA0B,CAAC,CADhD;AAAA;AADW,SAlBX;AAsBb,mCAA2B;AACzBN,UAAAA,IAAI,EAAEP,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAqBC,UAArB,CAAgCC;AADb;AAtBd,OANL;AAiCV;AACA,yBAAmB;AACjB,yBAAiB;AACfJ,UAAAA,IAAI,EAAEP,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAqBC,UAArB,CAAgCC,SADvB;AAEfM,UAAAA,MAAM,EAAEjB,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAqBC,UAArB,CAAgCC;AAFzB;AADA;AAlCT,KAFkC;AA2C9CO,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,QADP;AAEJC,MAAAA,SAAS,EAAE,KAFP;AAGJjB,MAAAA,MAAM,EAAE;AAHJ;AA3CwC,GAAnB;AAAA,CAAD,CAA5B;AAkDA,eAAeJ,SAAf","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core/styles';\n\ninterface StyleProps {\n  horizontal: boolean;\n  isSequence: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  // Workflow Graph\n  dagreGraph: {\n    cursor: 'grab',\n    height: (props: StyleProps) => (props.isSequence ? '30rem' : '23rem'),\n    width: '100%',\n\n    // Styles for nodes\n    '& g g.nodes': {\n      '& g.node': {\n        cursor: 'pointer',\n        fill: 'none',\n        '& circle': {\n          fill: theme.palette.status.experiment.completed,\n        },\n        '& g.label g': {\n          transform: (props: StyleProps) =>\n            props.horizontal ? 'translate(0, 0)' : 'translate(0, -5px)',\n          '& path': {\n            fill: theme.palette.text.secondary,\n          },\n        },\n        '& text': {\n          fill: theme.palette.text.primary,\n        },\n      },\n      '& path.succeededIcon': {\n        transform: (props: StyleProps) =>\n          `scale(1.8) translate(-5px, ${props.horizontal ? -3.6 : -1}px)`,\n      },\n      '& g.StepGroup.Succeeded': {\n        fill: theme.palette.status.experiment.completed,\n      },\n    },\n\n    // Styles for edges\n    '& g g.edgePaths': {\n      '& g.succeeded': {\n        fill: theme.palette.status.experiment.completed,\n        stroke: theme.palette.status.experiment.completed,\n      },\n    },\n  },\n  load: {\n    textAlign: 'center',\n    marginTop: '50%',\n    height: '10rem',\n  },\n}));\n\nexport default useStyles;\n"]},"metadata":{},"sourceType":"module"}