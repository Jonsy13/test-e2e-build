{"ast":null,"code":"import _objectSpread from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useMutation}from'@apollo/client';import{Divider,Tooltip,Typography}from'@material-ui/core';import EditIcon from'@material-ui/icons/Edit';import InfoIcon from'@material-ui/icons/Info';import cronstrue from'cronstrue';import{ButtonFilled,ButtonOutlined,EditableText,Modal}from'litmus-ui';import localforage from'localforage';import React,{forwardRef,useEffect,useImperativeHandle,useRef,useState}from'react';import{useTranslation}from'react-i18next';import{useSelector}from'react-redux';import YAML from'yaml';import AdjustedWeights from'../../../components/AdjustedWeights';import YamlEditor from'../../../components/YamlEditor/Editor';import{parseYamlValidations}from'../../../components/YamlEditor/Validations';import{CREATE_WORKFLOW}from'../../../graphql';import useActions from'../../../redux/actions';import*as AlertActions from'../../../redux/actions/alert';import*as TabActions from'../../../redux/actions/tabs';import*as WorkflowActions from'../../../redux/actions/workflow';import{history}from'../../../redux/configureStore';import{getProjectID,getProjectRole}from'../../../utils/getSearchParams';import{validateStartEmptySpacing,validateSubject,validateTextEmpty,validateWorkflowName}from'../../../utils/validate';import{fetchWorkflowNameFromManifest,updateWorkflowNameLabel}from'../../../utils/yamlUtils';import useStyles from'./styles';var VerifyCommit=forwardRef(function(_ref,ref){var handleGoToStep=_ref.handleGoToStep,isLoading=_ref.isLoading;var classes=useStyles();var _useTranslation=useTranslation(),t=_useTranslation.t;var isNameError=useRef(false);var isSubjectError=useRef(false);var _useState=useState({name:'',description:'',crd:''}),_useState2=_slicedToArray(_useState,2),workflow=_useState2[0],setWorkflow=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),subject=_useState4[0],setSubject=_useState4[1];var _useState5=useState([{experimentName:'',weight:0}]),_useState6=_slicedToArray(_useState5,2),weights=_useState6[0],setWeights=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),open=_useState8[0],setOpen=_useState8[1];// Modal States\nvar _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),finishModalOpen=_useState10[0],setFinishModalOpen=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),errorModal=_useState12[0],setErrorModal=_useState12[1];var tabs=useActions(TabActions);var workflowAction=useActions(WorkflowActions);var alert=useActions(AlertActions);var workflowData=useSelector(function(state){return state.workflowData;});var clusterid=workflowData.clusterid,cronSyntax=workflowData.cronSyntax,clustername=workflowData.clustername;var _useSelector=useSelector(function(state){return state.workflowManifest;}),manifest=_useSelector.manifest,isCustomWorkflow=_useSelector.isCustomWorkflow;useEffect(function(){localforage.getItem('workflow').then(function(workflow){if(workflow!==null){setWorkflow({name:workflow.name,description:workflow.description,crd:workflow.CRDLink});setSubject(\"\".concat(workflow.name,\"-\").concat(workflowData.namespace));var parsedManifest=YAML.parse(manifest);delete parsedManifest.metadata.generateName;parsedManifest.metadata['labels']={subject:\"\".concat(workflow.name,\"-\").concat(workflowData.namespace)};workflowAction.setWorkflowManifest({manifest:YAML.stringify(parsedManifest)});}});localforage.getItem('weights').then(function(weight){return weight!==null&&setWeights(weight);});},[]);var _React$useState=React.useState(\"\".concat(t('createWorkflow.verifyCommit.codeIsFine'))),_React$useState2=_slicedToArray(_React$useState,2),yamlStatus=_React$useState2[0],setYamlStatus=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),modified=_React$useState4[0],setModified=_React$useState4[1];var handleOpen=function handleOpen(){setModified(false);setOpen(true);};var handleNameChange=function handleNameChange(_ref2){var changedName=_ref2.changedName;setWorkflow(_objectSpread(_objectSpread({},workflow),{},{name:changedName}));var parsedManifest=YAML.parse(manifest);delete parsedManifest.metadata.generateName;parsedManifest.metadata.name=changedName;workflowAction.setWorkflowManifest({manifest:YAML.stringify(parsedManifest)});localforage.getItem('selectedScheduleOption').then(function(option){if(option!==null&&option.selected==='A'){localforage.getItem('workflow').then(function(w){var data={name:changedName,description:w.description,icon:w.icon,CRDLink:w.CRDLink};localforage.setItem('workflow',data);});}else{localforage.getItem('workflow').then(function(w){var data={name:changedName,description:w.description,icon:w.icon,CRDLink:''};localforage.setItem('workflow',data);});}});};var handleDescChange=function handleDescChange(_ref3){var changedDesc=_ref3.changedDesc;localforage.getItem('workflow').then(function(w){var data={name:w.name,description:changedDesc,icon:w.icon,CRDLink:w.CRDLink};localforage.setItem('workflow',data);});setWorkflow(_objectSpread(_objectSpread({},workflow),{},{description:changedDesc}));};var handleSubjectChange=function handleSubjectChange(_ref4){var changedSubject=_ref4.changedSubject;setSubject(changedSubject);var parsedManifest=YAML.parse(manifest);parsedManifest.metadata['labels']={subject:changedSubject};workflowAction.setWorkflowManifest({manifest:YAML.stringify(parsedManifest)});};var WorkflowTestData=weights;useEffect(function(){var editorValidations=parseYamlValidations(manifest,classes);var stateObject={markers:editorValidations.markers,annotations:editorValidations.annotations};if(stateObject.annotations.length>0){setYamlStatus(\"\".concat(t('createWorkflow.verifyCommit.errYaml')));}else{setYamlStatus(\"\".concat(t('createWorkflow.verifyCommit.codeIsFine')));}},[modified]);// Create Workflow Mutation\nvar _useMutation=useMutation(CREATE_WORKFLOW,{onError:function onError(){setErrorModal(true);},onCompleted:function onCompleted(){setFinishModalOpen(true);}}),_useMutation2=_slicedToArray(_useMutation,2),createChaosWorkFlow=_useMutation2[0],_useMutation2$=_useMutation2[1],loading=_useMutation2$.loading,workflowError=_useMutation2$.error;isLoading(loading);var handleMutation=function handleMutation(){if(workflow.name.length!==0&&workflow.description.length!==0&&weights.length!==0){var weightData=[];weights.forEach(function(data){weightData.push({experiment_name:data.experimentName,weightage:data.weight});});/* JSON.stringify takes 3 parameters [object to be converted,\n        a function to alter the conversion, spaces to be shown in final result for indentation ] */var yml=YAML.parse(manifest);var updatedYaml=updateWorkflowNameLabel(yml,fetchWorkflowNameFromManifest(manifest));var yamlJson=JSON.stringify(updatedYaml,null,2);// Converted to Stringified JSON\nvar chaosWorkFlowInputs={workflow_manifest:yamlJson,cronSyntax:cronSyntax,workflow_name:fetchWorkflowNameFromManifest(manifest),workflow_description:workflow.description,isCustomWorkflow:isCustomWorkflow,weightages:weightData,project_id:getProjectID(),cluster_id:clusterid};createChaosWorkFlow({variables:{ChaosWorkFlowInput:chaosWorkFlowInputs}});}};var handleErrorModalClose=function handleErrorModalClose(){setErrorModal(false);};var handleFinishModal=function handleFinishModal(){workflowAction.setWorkflowManifest({manifest:'',engineYAML:''});localforage.removeItem('workflow');localforage.removeItem('selectedScheduleOption');localforage.removeItem('hasSetWorkflowData');localforage.removeItem('weights');localforage.removeItem('selectedHub');localforage.removeItem('editSchedule');setFinishModalOpen(false);tabs.changeWorkflowsTabs(0);history.push({pathname:'/workflows',search:\"?projectID=\".concat(getProjectID(),\"&projectRole=\").concat(getProjectRole())});};function onNext(){if(!isNameError.current&&!isSubjectError.current){handleMutation();}else{alert.changeAlertState(true);}}useImperativeHandle(ref,function(){return{onNext:onNext};});var checkNameValidation=function checkNameValidation(){return validateTextEmpty(fetchWorkflowNameFromManifest(manifest))||validateStartEmptySpacing(fetchWorkflowNameFromManifest(manifest))||validateWorkflowName(fetchWorkflowNameFromManifest(manifest));};var checkSubjectValidation=function checkSubjectValidation(){return validateStartEmptySpacing(subject)||validateSubject(subject);};useEffect(function(){if(checkNameValidation()){isNameError.current=true;}else{isNameError.current=false;}if(checkSubjectValidation()){isSubjectError.current=true;}else{isSubjectError.current=false;}},[manifest,subject]);return/*#__PURE__*/React.createElement(React.Fragment,null,open?/*#__PURE__*/React.createElement(\"div\",{className:classes.editorWrapper},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.flex,\" \").concat(classes.additional)},/*#__PURE__*/React.createElement(\"div\",{className:classes.flex},/*#__PURE__*/React.createElement(\"img\",{style:{width:'2rem'},src:\"./icons/terminal.svg\",alt:\"Terminal Icon\"}),/*#__PURE__*/React.createElement(Typography,{className:classes.name},fetchWorkflowNameFromManifest(manifest),\".yaml\")),/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){return setOpen(false);},className:classes.editorCloseBtn},\"x\")),/*#__PURE__*/React.createElement(YamlEditor,{content:manifest,filename:workflow.name,readOnly:true})):/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.innerContainer},/*#__PURE__*/React.createElement(\"div\",{className:classes.suHeader},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:classes.headerText},t('createWorkflow.verifyCommit.header')),/*#__PURE__*/React.createElement(Typography,{className:classes.description},t('createWorkflow.verifyCommit.info'))),/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/b-finance.svg\",alt:\"bfinance\",className:classes.bfinIcon})),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Typography,{className:classes.sumText},t('createWorkflow.verifyCommit.summary.header')),/*#__PURE__*/React.createElement(\"div\",{className:classes.summaryWrapper},/*#__PURE__*/React.createElement(\"div\",{className:classes.itemWrapper},/*#__PURE__*/React.createElement(Typography,{className:classes.left},t('createWorkflow.verifyCommit.summary.workflowName'),\":\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.right,\"data-cy\":\"WorkflowName\"},/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%'}},/*#__PURE__*/React.createElement(EditableText,{defaultValue:fetchWorkflowNameFromManifest(manifest),id:\"name\",fullWidth:true,multiline:true,error:checkNameValidation(),onSave:function onSave(value){return handleNameChange({changedName:value});},helperText:checkNameValidation()?\"\".concat(t(\"createWorkflow.verifyCommit.workflowNameValidationMessage\")):undefined})))),/*#__PURE__*/React.createElement(\"div\",{className:classes.itemWrapper},/*#__PURE__*/React.createElement(Typography,{className:classes.left,\"data-cy\":\"AgentName\"},t('createWorkflow.verifyCommit.summary.clustername'),\":\"),/*#__PURE__*/React.createElement(Typography,{className:classes.right},clustername)),/*#__PURE__*/React.createElement(\"div\",{className:classes.itemWrapper},/*#__PURE__*/React.createElement(Typography,{className:classes.left},t('createWorkflow.verifyCommit.summary.desc'),\":\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.right},workflow.description!==''?/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%'},\"data-cy\":\"WorkflowDescription\"},/*#__PURE__*/React.createElement(EditableText,{defaultValue:workflow.description,id:\"desc\",fullWidth:true,multiline:true,onSave:function onSave(value){return handleDescChange({changedDesc:value});}})):null)),/*#__PURE__*/React.createElement(\"div\",{className:classes.itemWrapper},/*#__PURE__*/React.createElement(\"div\",{className:classes.leftFlex},/*#__PURE__*/React.createElement(Typography,{className:classes.verticalAlign},t('createWorkflow.verifyCommit.summary.subject'),\":\"),/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{className:classes.subjectDesc},t('createWorkflow.verifyCommit.summary.subjectDesc'))},/*#__PURE__*/React.createElement(InfoIcon,{className:classes.info}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.right},subject!==''?/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%'}},/*#__PURE__*/React.createElement(EditableText,{defaultValue:subject,id:\"subject\",fullWidth:true,multiline:true,error:checkSubjectValidation(),onSave:function onSave(value){return handleSubjectChange({changedSubject:value});},helperText:checkSubjectValidation()?\"\".concat(t('createWorkflow.verifyCommit.subjectValidationMessage')):undefined})):null)),/*#__PURE__*/React.createElement(\"div\",{className:classes.itemWrapper},/*#__PURE__*/React.createElement(Typography,{className:classes.left},t('createWorkflow.verifyCommit.summary.schedule'),\":\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.right},/*#__PURE__*/React.createElement(\"div\",{className:classes.spaceBetween},/*#__PURE__*/React.createElement(Typography,{\"data-cy\":\"schedule\"},cronSyntax===''?t('createWorkflow.verifyCommit.summary.schedulingNow'):cronstrue.toString(cronSyntax)),/*#__PURE__*/React.createElement(EditIcon,{onClick:function onClick(){return handleGoToStep(5);},className:classes.editIcon,\"data-cy\":\"edit\"})))),/*#__PURE__*/React.createElement(\"div\",{className:classes.itemWrapper},/*#__PURE__*/React.createElement(Typography,{className:classes.left},t('createWorkflow.verifyCommit.summary.adjustedWeights'),\":\"),weights.length===0?/*#__PURE__*/React.createElement(Typography,{className:\"\".concat(classes.errorText,\" \").concat(classes.right)},t('createWorkflow.verifyCommit.error')):/*#__PURE__*/React.createElement(\"div\",{className:classes.right},/*#__PURE__*/React.createElement(\"div\",{className:classes.progress},WorkflowTestData.map(function(Test){return/*#__PURE__*/React.createElement(AdjustedWeights,{key:Test.weight,testName:\"\".concat(Test.experimentName,\" \").concat(t('createWorkflow.verifyCommit.test')),testValue:Test.weight,spacing:false,icon:false});})),/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){return handleGoToStep(4);},\"data-cy\":\"testRunButton\"},t('createWorkflow.verifyCommit.button.edit')))),/*#__PURE__*/React.createElement(\"div\",{className:classes.itemWrapper},/*#__PURE__*/React.createElement(Typography,{className:classes.left},t('createWorkflow.verifyCommit.YAML')),/*#__PURE__*/React.createElement(\"div\",{className:classes.rightColumn},weights.length===0?/*#__PURE__*/React.createElement(Typography,{className:classes.errorText},t('createWorkflow.verifyCommit.errYaml')):/*#__PURE__*/React.createElement(Typography,null,/*#__PURE__*/React.createElement(\"b\",null,yamlStatus),/*#__PURE__*/React.createElement(\"span\",{className:classes.spacingHorizontal},t('createWorkflow.verifyCommit.youCanMoveOn'))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(ButtonFilled,{className:classes.verifyYAMLButton,onClick:handleOpen},t('createWorkflow.verifyCommit.button.viewYaml'))))))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{\"data-cy\":\"FinishModal\",open:finishModalOpen,onClose:handleFinishModal,width:\"60%\",\"aria-labelledby\":\"simple-modal-title\",\"aria-describedby\":\"simple-modal-description\",modalActions:/*#__PURE__*/React.createElement(\"div\",{\"data-cy\":\"GoToWorkflowButton\"},/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:handleFinishModal},\"\\u2715\"))},/*#__PURE__*/React.createElement(\"div\",{className:classes.modal},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/finish.svg\",alt:\"mark\"}),/*#__PURE__*/React.createElement(\"div\",{className:classes.heading},t('workflowStepper.aNewChaosWorkflow'),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:classes.successful},workflow.name),\",\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:classes.bold},t('workflowStepper.successful'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.headWorkflow},t('workflowStepper.congratulationsSub1'),\" \",/*#__PURE__*/React.createElement(\"br\",null),' ',t('workflowStepper.congratulationsSub2')),/*#__PURE__*/React.createElement(\"div\",{className:classes.button},/*#__PURE__*/React.createElement(ButtonFilled,{\"data-cy\":\"selectFinish\",onClick:function onClick(){handleFinishModal();}},/*#__PURE__*/React.createElement(\"div\",null,t('workflowStepper.workflowBtn')))))),/*#__PURE__*/React.createElement(Modal,{open:errorModal,onClose:handleErrorModalClose,width:\"60%\",modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:handleErrorModalClose},\"\\u2715\")},/*#__PURE__*/React.createElement(\"div\",{className:classes.modal},/*#__PURE__*/React.createElement(\"img\",{src:\"/icons/red-cross.svg\",alt:\"mark\"}),/*#__PURE__*/React.createElement(\"div\",{className:classes.heading},/*#__PURE__*/React.createElement(\"strong\",null,t('workflowStepper.workflowFailed'))),/*#__PURE__*/React.createElement(\"div\",{className:classes.headWorkflow},/*#__PURE__*/React.createElement(Typography,null,t('workflowStepper.error'),\" : \",workflowError===null||workflowError===void 0?void 0:workflowError.message)),/*#__PURE__*/React.createElement(\"div\",{className:classes.button},/*#__PURE__*/React.createElement(ButtonFilled,{\"data-cy\":\"selectFinish\",onClick:function onClick(){setErrorModal(false);}},/*#__PURE__*/React.createElement(\"div\",null,t('workflowStepper.back'))))))));});export default VerifyCommit;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/VerifyCommit/index.tsx"],"names":["useMutation","Divider","Tooltip","Typography","EditIcon","InfoIcon","cronstrue","ButtonFilled","ButtonOutlined","EditableText","Modal","localforage","React","forwardRef","useEffect","useImperativeHandle","useRef","useState","useTranslation","useSelector","YAML","AdjustedWeights","YamlEditor","parseYamlValidations","CREATE_WORKFLOW","useActions","AlertActions","TabActions","WorkflowActions","history","getProjectID","getProjectRole","validateStartEmptySpacing","validateSubject","validateTextEmpty","validateWorkflowName","fetchWorkflowNameFromManifest","updateWorkflowNameLabel","useStyles","VerifyCommit","ref","handleGoToStep","isLoading","classes","t","isNameError","isSubjectError","name","description","crd","workflow","setWorkflow","subject","setSubject","experimentName","weight","weights","setWeights","open","setOpen","finishModalOpen","setFinishModalOpen","errorModal","setErrorModal","tabs","workflowAction","alert","workflowData","state","clusterid","cronSyntax","clustername","workflowManifest","manifest","isCustomWorkflow","getItem","then","CRDLink","namespace","parsedManifest","parse","metadata","generateName","setWorkflowManifest","stringify","yamlStatus","setYamlStatus","modified","setModified","handleOpen","handleNameChange","changedName","option","selected","w","data","icon","setItem","handleDescChange","changedDesc","handleSubjectChange","changedSubject","WorkflowTestData","editorValidations","stateObject","markers","annotations","length","onError","onCompleted","createChaosWorkFlow","loading","workflowError","error","handleMutation","weightData","forEach","push","experiment_name","weightage","yml","updatedYaml","yamlJson","JSON","chaosWorkFlowInputs","workflow_manifest","workflow_name","workflow_description","weightages","project_id","cluster_id","variables","ChaosWorkFlowInput","handleErrorModalClose","handleFinishModal","engineYAML","removeItem","changeWorkflowsTabs","pathname","search","onNext","current","changeAlertState","checkNameValidation","checkSubjectValidation","editorWrapper","flex","additional","width","editorCloseBtn","root","innerContainer","suHeader","headerText","bfinIcon","sumText","summaryWrapper","itemWrapper","left","right","value","undefined","leftFlex","verticalAlign","subjectDesc","info","spaceBetween","toString","editIcon","errorText","progress","map","Test","rightColumn","spacingHorizontal","verifyYAMLButton","modal","heading","successful","bold","headWorkflow","button","message"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\nimport { Divider, Tooltip, Typography } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InfoIcon from '@material-ui/icons/Info';\nimport cronstrue from 'cronstrue';\nimport { ButtonFilled, ButtonOutlined, EditableText, Modal } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport YAML from 'yaml';\nimport AdjustedWeights from '../../../components/AdjustedWeights';\nimport YamlEditor from '../../../components/YamlEditor/Editor';\nimport { parseYamlValidations } from '../../../components/YamlEditor/Validations';\nimport { CREATE_WORKFLOW } from '../../../graphql';\nimport {\n  CreateWorkFlowInput,\n  CreateWorkflowResponse,\n  WeightMap,\n} from '../../../models/graphql/createWorkflowData';\nimport { ChooseWorkflowRadio } from '../../../models/localforage/radioButton';\nimport { WorkflowDetailsProps } from '../../../models/localforage/workflow';\nimport { experimentMap, WorkflowData } from '../../../models/redux/workflow';\nimport useActions from '../../../redux/actions';\nimport * as AlertActions from '../../../redux/actions/alert';\nimport * as TabActions from '../../../redux/actions/tabs';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { history } from '../../../redux/configureStore';\nimport { RootState } from '../../../redux/reducers';\nimport { getProjectID, getProjectRole } from '../../../utils/getSearchParams';\nimport {\n  validateStartEmptySpacing,\n  validateSubject,\n  validateTextEmpty,\n  validateWorkflowName,\n} from '../../../utils/validate';\nimport {\n  fetchWorkflowNameFromManifest,\n  updateWorkflowNameLabel,\n} from '../../../utils/yamlUtils';\nimport useStyles from './styles';\n\ninterface WorkflowProps {\n  name: string;\n  description: string;\n  crd: string;\n}\n\ninterface VerifyCommitProps {\n  handleGoToStep: (page: number) => void;\n  isLoading: (loading: boolean) => void;\n}\n\nconst VerifyCommit = forwardRef(\n  ({ handleGoToStep, isLoading }: VerifyCommitProps, ref) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const isNameError = useRef<boolean>(false);\n    const isSubjectError = useRef<boolean>(false);\n    const [workflow, setWorkflow] = useState<WorkflowProps>({\n      name: '',\n      description: '',\n      crd: '',\n    });\n    const [subject, setSubject] = useState<string>('');\n    const [weights, setWeights] = useState<experimentMap[]>([\n      {\n        experimentName: '',\n        weight: 0,\n      },\n    ]);\n\n    const [open, setOpen] = useState(false);\n\n    // Modal States\n    const [finishModalOpen, setFinishModalOpen] = useState(false);\n    const [errorModal, setErrorModal] = useState(false);\n\n    const tabs = useActions(TabActions);\n    const workflowAction = useActions(WorkflowActions);\n    const alert = useActions(AlertActions);\n\n    const workflowData: WorkflowData = useSelector(\n      (state: RootState) => state.workflowData\n    );\n\n    const { clusterid, cronSyntax, clustername } = workflowData;\n\n    const { manifest, isCustomWorkflow } = useSelector(\n      (state: RootState) => state.workflowManifest\n    );\n\n    useEffect(() => {\n      localforage.getItem('workflow').then((workflow) => {\n        if (workflow !== null) {\n          setWorkflow({\n            name: (workflow as WorkflowDetailsProps).name,\n            description: (workflow as WorkflowDetailsProps).description,\n            crd: (workflow as WorkflowDetailsProps).CRDLink,\n          });\n          setSubject(\n            `${(workflow as WorkflowDetailsProps).name}-${\n              workflowData.namespace\n            }`\n          );\n          const parsedManifest = YAML.parse(manifest);\n          delete parsedManifest.metadata.generateName;\n          parsedManifest.metadata['labels'] = {\n            subject: `${(workflow as WorkflowDetailsProps).name}-${\n              workflowData.namespace\n            }`,\n          };\n          workflowAction.setWorkflowManifest({\n            manifest: YAML.stringify(parsedManifest),\n          });\n        }\n      });\n      localforage\n        .getItem('weights')\n        .then(\n          (weight) => weight !== null && setWeights(weight as experimentMap[])\n        );\n    }, []);\n\n    const [yamlStatus, setYamlStatus] = React.useState(\n      `${t('createWorkflow.verifyCommit.codeIsFine')}`\n    );\n\n    const [modified, setModified] = React.useState(false);\n\n    const handleOpen = () => {\n      setModified(false);\n      setOpen(true);\n    };\n\n    const handleNameChange = ({ changedName }: { changedName: string }) => {\n      setWorkflow({\n        ...workflow,\n        name: changedName,\n      });\n      const parsedManifest = YAML.parse(manifest);\n      delete parsedManifest.metadata.generateName;\n      parsedManifest.metadata.name = changedName;\n      workflowAction.setWorkflowManifest({\n        manifest: YAML.stringify(parsedManifest),\n      });\n      localforage.getItem('selectedScheduleOption').then((option) => {\n        if (\n          option !== null &&\n          (option as ChooseWorkflowRadio).selected === 'A'\n        ) {\n          localforage.getItem('workflow').then((w) => {\n            const data: WorkflowDetailsProps = {\n              name: changedName,\n              description: (w as WorkflowDetailsProps).description,\n              icon: (w as WorkflowDetailsProps).icon,\n              CRDLink: (w as WorkflowDetailsProps).CRDLink,\n            };\n            localforage.setItem('workflow', data);\n          });\n        } else {\n          localforage.getItem('workflow').then((w) => {\n            const data: WorkflowDetailsProps = {\n              name: changedName,\n              description: (w as WorkflowDetailsProps).description,\n              icon: (w as WorkflowDetailsProps).icon,\n              CRDLink: '',\n            };\n            localforage.setItem('workflow', data);\n          });\n        }\n      });\n    };\n\n    const handleDescChange = ({ changedDesc }: { changedDesc: string }) => {\n      localforage.getItem('workflow').then((w) => {\n        const data: WorkflowDetailsProps = {\n          name: (w as WorkflowDetailsProps).name,\n          description: changedDesc,\n          icon: (w as WorkflowDetailsProps).icon,\n          CRDLink: (w as WorkflowDetailsProps).CRDLink,\n        };\n        localforage.setItem('workflow', data);\n      });\n      setWorkflow({\n        ...workflow,\n        description: changedDesc,\n      });\n    };\n\n    const handleSubjectChange = ({\n      changedSubject,\n    }: {\n      changedSubject: string;\n    }) => {\n      setSubject(changedSubject);\n      const parsedManifest = YAML.parse(manifest);\n      parsedManifest.metadata['labels'] = {\n        subject: changedSubject,\n      };\n      workflowAction.setWorkflowManifest({\n        manifest: YAML.stringify(parsedManifest),\n      });\n    };\n\n    const WorkflowTestData: experimentMap[] = weights as any;\n\n    useEffect(() => {\n      const editorValidations = parseYamlValidations(manifest, classes);\n      const stateObject = {\n        markers: editorValidations.markers,\n        annotations: editorValidations.annotations,\n      };\n      if (stateObject.annotations.length > 0) {\n        setYamlStatus(`${t('createWorkflow.verifyCommit.errYaml')}`);\n      } else {\n        setYamlStatus(`${t('createWorkflow.verifyCommit.codeIsFine')}`);\n      }\n    }, [modified]);\n\n    // Create Workflow Mutation\n    const [createChaosWorkFlow, { loading, error: workflowError }] =\n      useMutation<CreateWorkflowResponse, CreateWorkFlowInput>(\n        CREATE_WORKFLOW,\n        {\n          onError: () => {\n            setErrorModal(true);\n          },\n          onCompleted: () => {\n            setFinishModalOpen(true);\n          },\n        }\n      );\n\n    isLoading(loading);\n\n    const handleMutation = () => {\n      if (\n        workflow.name.length !== 0 &&\n        workflow.description.length !== 0 &&\n        weights.length !== 0\n      ) {\n        const weightData: WeightMap[] = [];\n\n        weights.forEach((data) => {\n          weightData.push({\n            experiment_name: data.experimentName,\n            weightage: data.weight,\n          });\n        });\n\n        /* JSON.stringify takes 3 parameters [object to be converted,\n        a function to alter the conversion, spaces to be shown in final result for indentation ] */\n        const yml = YAML.parse(manifest);\n        const updatedYaml = updateWorkflowNameLabel(\n          yml,\n          fetchWorkflowNameFromManifest(manifest)\n        );\n        const yamlJson = JSON.stringify(updatedYaml, null, 2); // Converted to Stringified JSON\n\n        const chaosWorkFlowInputs = {\n          workflow_manifest: yamlJson,\n          cronSyntax,\n          workflow_name: fetchWorkflowNameFromManifest(manifest),\n          workflow_description: workflow.description,\n          isCustomWorkflow,\n          weightages: weightData,\n          project_id: getProjectID(),\n          cluster_id: clusterid,\n        };\n        createChaosWorkFlow({\n          variables: { ChaosWorkFlowInput: chaosWorkFlowInputs },\n        });\n      }\n    };\n\n    const handleErrorModalClose = () => {\n      setErrorModal(false);\n    };\n\n    const handleFinishModal = () => {\n      workflowAction.setWorkflowManifest({ manifest: '', engineYAML: '' });\n      localforage.removeItem('workflow');\n      localforage.removeItem('selectedScheduleOption');\n      localforage.removeItem('hasSetWorkflowData');\n      localforage.removeItem('weights');\n      localforage.removeItem('selectedHub');\n      localforage.removeItem('editSchedule');\n      setFinishModalOpen(false);\n\n      tabs.changeWorkflowsTabs(0);\n      history.push({\n        pathname: '/workflows',\n        search: `?projectID=${getProjectID()}&projectRole=${getProjectRole()}`,\n      });\n    };\n\n    function onNext() {\n      if (!isNameError.current && !isSubjectError.current) {\n        handleMutation();\n      } else {\n        alert.changeAlertState(true);\n      }\n    }\n\n    useImperativeHandle(ref, () => ({\n      onNext,\n    }));\n\n    const checkNameValidation = (): boolean =>\n      validateTextEmpty(fetchWorkflowNameFromManifest(manifest)) ||\n      validateStartEmptySpacing(fetchWorkflowNameFromManifest(manifest)) ||\n      validateWorkflowName(fetchWorkflowNameFromManifest(manifest));\n\n    const checkSubjectValidation = (): boolean =>\n      validateStartEmptySpacing(subject) || validateSubject(subject);\n\n    useEffect(() => {\n      if (checkNameValidation()) {\n        isNameError.current = true;\n      } else {\n        isNameError.current = false;\n      }\n      if (checkSubjectValidation()) {\n        isSubjectError.current = true;\n      } else {\n        isSubjectError.current = false;\n      }\n    }, [manifest, subject]);\n\n    return (\n      <>\n        {open ? (\n          <div className={classes.editorWrapper}>\n            <div className={`${classes.flex} ${classes.additional}`}>\n              <div className={classes.flex}>\n                <img\n                  style={{ width: '2rem' }}\n                  src=\"./icons/terminal.svg\"\n                  alt=\"Terminal Icon\"\n                />\n                <Typography className={classes.name}>\n                  {fetchWorkflowNameFromManifest(manifest)}.yaml\n                </Typography>\n              </div>\n\n              <ButtonOutlined\n                onClick={() => setOpen(false)}\n                className={classes.editorCloseBtn}\n              >\n                x\n              </ButtonOutlined>\n            </div>\n            <YamlEditor content={manifest} filename={workflow.name} readOnly />\n          </div>\n        ) : (\n          <div className={classes.root}>\n            <div className={classes.innerContainer}>\n              <div className={classes.suHeader}>\n                <div>\n                  <Typography className={classes.headerText}>\n                    {t('createWorkflow.verifyCommit.header')}\n                  </Typography>\n                  <Typography className={classes.description}>\n                    {t('createWorkflow.verifyCommit.info')}\n                  </Typography>\n                </div>\n                <img\n                  src=\"/icons/b-finance.svg\"\n                  alt=\"bfinance\"\n                  className={classes.bfinIcon}\n                />\n              </div>\n              <Divider />\n\n              <Typography className={classes.sumText}>\n                {t('createWorkflow.verifyCommit.summary.header')}\n              </Typography>\n\n              <div className={classes.summaryWrapper}>\n                <div className={classes.itemWrapper}>\n                  <Typography className={classes.left}>\n                    {t('createWorkflow.verifyCommit.summary.workflowName')}:\n                  </Typography>\n\n                  <div className={classes.right} data-cy=\"WorkflowName\">\n                    <div style={{ width: '100%' }}>\n                      <EditableText\n                        defaultValue={fetchWorkflowNameFromManifest(manifest)}\n                        id=\"name\"\n                        fullWidth\n                        multiline\n                        error={checkNameValidation()}\n                        onSave={(value: any) =>\n                          handleNameChange({ changedName: value })\n                        }\n                        helperText={\n                          checkNameValidation()\n                            ? `${t(\n                                `createWorkflow.verifyCommit.workflowNameValidationMessage`\n                              )}`\n                            : undefined\n                        }\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className={classes.itemWrapper}>\n                  <Typography className={classes.left} data-cy=\"AgentName\">\n                    {t('createWorkflow.verifyCommit.summary.clustername')}:\n                  </Typography>\n\n                  <Typography className={classes.right}>\n                    {clustername}\n                  </Typography>\n                </div>\n                <div className={classes.itemWrapper}>\n                  <Typography className={classes.left}>\n                    {t('createWorkflow.verifyCommit.summary.desc')}:\n                  </Typography>\n\n                  <div className={classes.right}>\n                    {workflow.description !== '' ? (\n                      <div\n                        style={{ width: '100%' }}\n                        data-cy=\"WorkflowDescription\"\n                      >\n                        <EditableText\n                          defaultValue={workflow.description}\n                          id=\"desc\"\n                          fullWidth\n                          multiline\n                          onSave={(value: any) =>\n                            handleDescChange({ changedDesc: value })\n                          }\n                        />\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n                <div className={classes.itemWrapper}>\n                  <div className={classes.leftFlex}>\n                    <Typography className={classes.verticalAlign}>\n                      {t('createWorkflow.verifyCommit.summary.subject')}:\n                    </Typography>\n                    <Tooltip\n                      title={\n                        <Typography className={classes.subjectDesc}>\n                          {t('createWorkflow.verifyCommit.summary.subjectDesc')}\n                        </Typography>\n                      }\n                    >\n                      <InfoIcon className={classes.info} />\n                    </Tooltip>\n                  </div>\n\n                  <div className={classes.right}>\n                    {subject !== '' ? (\n                      <div style={{ width: '100%' }}>\n                        <EditableText\n                          defaultValue={subject}\n                          id=\"subject\"\n                          fullWidth\n                          multiline\n                          error={checkSubjectValidation()}\n                          onSave={(value: any) =>\n                            handleSubjectChange({ changedSubject: value })\n                          }\n                          helperText={\n                            checkSubjectValidation()\n                              ? `${t(\n                                  'createWorkflow.verifyCommit.subjectValidationMessage'\n                                )}`\n                              : undefined\n                          }\n                        />\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n                <div className={classes.itemWrapper}>\n                  <Typography className={classes.left}>\n                    {t('createWorkflow.verifyCommit.summary.schedule')}:\n                  </Typography>\n\n                  <div className={classes.right}>\n                    <div className={classes.spaceBetween}>\n                      <Typography data-cy=\"schedule\">\n                        {cronSyntax === ''\n                          ? t(\n                              'createWorkflow.verifyCommit.summary.schedulingNow'\n                            )\n                          : cronstrue.toString(cronSyntax)}\n                      </Typography>\n                      <EditIcon\n                        onClick={() => handleGoToStep(5)}\n                        className={classes.editIcon}\n                        data-cy=\"edit\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className={classes.itemWrapper}>\n                  <Typography className={classes.left}>\n                    {t('createWorkflow.verifyCommit.summary.adjustedWeights')}:\n                  </Typography>\n                  {weights.length === 0 ? (\n                    <Typography\n                      className={`${classes.errorText} ${classes.right}`}\n                    >\n                      {t('createWorkflow.verifyCommit.error')}\n                    </Typography>\n                  ) : (\n                    <div className={classes.right}>\n                      <div className={classes.progress}>\n                        {WorkflowTestData.map((Test) => (\n                          <AdjustedWeights\n                            key={Test.weight}\n                            testName={`${Test.experimentName} ${t(\n                              'createWorkflow.verifyCommit.test'\n                            )}`}\n                            testValue={Test.weight}\n                            spacing={false}\n                            icon={false}\n                          />\n                        ))}\n                      </div>\n                      <ButtonOutlined\n                        onClick={() => handleGoToStep(4)}\n                        data-cy=\"testRunButton\"\n                      >\n                        {t('createWorkflow.verifyCommit.button.edit')}\n                      </ButtonOutlined>\n                    </div>\n                  )}\n                </div>\n                <div className={classes.itemWrapper}>\n                  <Typography className={classes.left}>\n                    {t('createWorkflow.verifyCommit.YAML')}\n                  </Typography>\n                  <div className={classes.rightColumn}>\n                    {weights.length === 0 ? (\n                      <Typography className={classes.errorText}>\n                        {t('createWorkflow.verifyCommit.errYaml')}\n                      </Typography>\n                    ) : (\n                      <Typography>\n                        <b>{yamlStatus}</b>\n                        <span className={classes.spacingHorizontal}>\n                          {t('createWorkflow.verifyCommit.youCanMoveOn')}\n                        </span>\n                      </Typography>\n                    )}\n                    <br />\n                    <ButtonFilled\n                      className={classes.verifyYAMLButton}\n                      onClick={handleOpen}\n                    >\n                      {t('createWorkflow.verifyCommit.button.viewYaml')}\n                    </ButtonFilled>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Finish Modal */}\n        <div>\n          <Modal\n            data-cy=\"FinishModal\"\n            open={finishModalOpen}\n            onClose={handleFinishModal}\n            width=\"60%\"\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            modalActions={\n              <div data-cy=\"GoToWorkflowButton\">\n                <ButtonOutlined onClick={handleFinishModal}>\n                  &#x2715;\n                </ButtonOutlined>\n              </div>\n            }\n          >\n            <div className={classes.modal}>\n              <img src=\"/icons/finish.svg\" alt=\"mark\" />\n              <div className={classes.heading}>\n                {t('workflowStepper.aNewChaosWorkflow')}\n                <br />\n                <span className={classes.successful}>{workflow.name}</span>,\n                <br />\n                <span className={classes.bold}>\n                  {t('workflowStepper.successful')}\n                </span>\n              </div>\n              <div className={classes.headWorkflow}>\n                {t('workflowStepper.congratulationsSub1')} <br />{' '}\n                {t('workflowStepper.congratulationsSub2')}\n              </div>\n              <div className={classes.button}>\n                <ButtonFilled\n                  data-cy=\"selectFinish\"\n                  onClick={() => {\n                    handleFinishModal();\n                  }}\n                >\n                  <div>{t('workflowStepper.workflowBtn')}</div>\n                </ButtonFilled>\n              </div>\n            </div>\n          </Modal>\n          <Modal\n            open={errorModal}\n            onClose={handleErrorModalClose}\n            width=\"60%\"\n            modalActions={\n              <ButtonOutlined onClick={handleErrorModalClose}>\n                &#x2715;\n              </ButtonOutlined>\n            }\n          >\n            <div className={classes.modal}>\n              <img src=\"/icons/red-cross.svg\" alt=\"mark\" />\n              <div className={classes.heading}>\n                <strong>{t('workflowStepper.workflowFailed')}</strong>\n              </div>\n              <div className={classes.headWorkflow}>\n                <Typography>\n                  {t('workflowStepper.error')} : {workflowError?.message}\n                </Typography>\n              </div>\n              <div className={classes.button}>\n                <ButtonFilled\n                  data-cy=\"selectFinish\"\n                  onClick={() => {\n                    setErrorModal(false);\n                  }}\n                >\n                  <div>{t('workflowStepper.back')}</div>\n                </ButtonFilled>\n              </div>\n            </div>\n          </Modal>\n        </div>\n      </>\n    );\n  }\n);\n\nexport default VerifyCommit;\n"]},"metadata":{},"sourceType":"module"}