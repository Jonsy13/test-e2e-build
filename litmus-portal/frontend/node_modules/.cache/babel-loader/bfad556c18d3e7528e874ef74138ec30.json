{"ast":null,"code":"import _slicedToArray from\"/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useLazyQuery}from'@apollo/client';import{Snackbar,Typography}from'@material-ui/core';import{Alert}from'@material-ui/lab';import{ButtonFilled,ButtonOutlined,Modal}from'litmus-ui';import localforage from'localforage';import React,{forwardRef,useEffect,useImperativeHandle,useLayoutEffect,useRef,useState}from'react';import{useTranslation}from'react-i18next';import{useSelector}from'react-redux';import{v4 as uuidv4}from'uuid';import YAML from'yaml';import YamlEditor from'../../../components/YamlEditor/Editor';import{constants}from'../../../constants';import Row from'../../../containers/layouts/Row';import Width from'../../../containers/layouts/Width';import{GET_CHARTS_DATA,GET_ENGINE_YAML,GET_EXPERIMENT_YAML,GET_PREDEFINED_EXPERIMENT_YAML,GET_TEMPLATE_BY_ID}from'../../../graphql/queries';import useActions from'../../../redux/actions';import*as AlertActions from'../../../redux/actions/alert';import*as WorkflowActions from'../../../redux/actions/workflow';import capitalize from'../../../utils/capitalize';import{getProjectID}from'../../../utils/getSearchParams';import{fetchWorkflowNameFromManifest,updateEngineName,updateManifestImage,updateNamespace}from'../../../utils/yamlUtils';import AddExperimentModal from'./AddExperimentModal';import useStyles from'./styles';import WorkflowPreview from'./WorkflowPreview';import WorkflowSequence from'./WorkflowSequence';import WorkflowTable from'./WorkflowTable';var TuneWorkflow=forwardRef(function(_,ref){var classes=useStyles();var childRef=useRef();/**\n   * State Variables for Tune Workflow\n   */var _useState=useState(''),_useState2=_slicedToArray(_useState,2),hubName=_useState2[0],setHubName=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),experiment=_useState4[0],setExperiment=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),allExperiments=_useState6[0],setAllExperiments=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),selectedRadio=_useState8[0],setSelectedRadio=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),selectedExp=_useState10[0],setSelectedExp=_useState10[1];var selectedProjectID=getProjectID();var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),addExpModal=_useState12[0],setAddExpModal=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),editManifest=_useState14[0],setEditManifest=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),confirmEdit=_useState16[0],setConfirmEdit=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),isAlertOpen=_useState18[0],setIsAlertOpen=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),isEditorSaveAlertOpen=_useState20[0],setIsEditorSaveAlertOpen=_useState20[1];var _useState21=useState(true),_useState22=_slicedToArray(_useState21,2),yamlValid=_useState22[0],setYamlValid=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),editSequence=_useState24[0],setEditSequence=_useState24[1];var _useState25=useState({}),_useState26=_slicedToArray(_useState25,2),steps=_useState26[0],setSteps=_useState26[1];var _useState27=useState({name:'',crd:'',description:''}),_useState28=_slicedToArray(_useState27,2),workflow=_useState28[0],setWorkflow=_useState28[1];var _useSelector=useSelector(function(state){return state.workflowManifest;}),manifest=_useSelector.manifest,isCustomWorkflow=_useSelector.isCustomWorkflow;var imageRegistryData=useSelector(function(state){return state.selectedImageRegistry;});var _useSelector2=useSelector(function(state){return state.workflowData;}),namespace=_useSelector2.namespace;var _useState29=useState(false),_useState30=_slicedToArray(_useState29,2),YAMLModal=_useState30[0],setYAMLModal=_useState30[1];/**\n   * Actions\n   */var workflowAction=useActions(WorkflowActions);var alert=useActions(AlertActions);var _useTranslation=useTranslation(),t=_useTranslation.t;/**\n   * Graphql query to get charts\n   */var _useLazyQuery=useLazyQuery(GET_CHARTS_DATA,{onCompleted:function onCompleted(data){var allExp=[];data.getCharts.forEach(function(data){var _data$Spec$Experiment;return(_data$Spec$Experiment=data.Spec.Experiments)===null||_data$Spec$Experiment===void 0?void 0:_data$Spec$Experiment.forEach(function(experiment){allExp.push({ChaosName:data.Metadata.Name,ExperimentName:experiment});});});setAllExperiments([].concat(allExp));},fetchPolicy:'cache-and-network'}),_useLazyQuery2=_slicedToArray(_useLazyQuery,1),getCharts=_useLazyQuery2[0];/**\n   * This query fetches the manifest for pre-defined workflows\n   */var _useLazyQuery3=useLazyQuery(GET_PREDEFINED_EXPERIMENT_YAML,{onCompleted:function onCompleted(data){var wfmanifest=updateEngineName(YAML.parse(data.GetPredefinedExperimentYAML));var updatedManifestImage=updateManifestImage(YAML.parse(wfmanifest),imageRegistryData);var updatedManifest=updateNamespace(updatedManifestImage,namespace);workflowAction.setWorkflowManifest({manifest:YAML.stringify(updatedManifest)});}}),_useLazyQuery4=_slicedToArray(_useLazyQuery3,1),getPredefinedExperimentYaml=_useLazyQuery4[0];/**\n   * Graphql query to get the templates list\n   */var _useLazyQuery5=useLazyQuery(GET_TEMPLATE_BY_ID,{onCompleted:function onCompleted(data){var parsedYAML=YAML.parse(data.GetTemplateManifestByID.manifest);var updatedManifestImage=updateManifestImage(parsedYAML,imageRegistryData);var updatedManifest=updateNamespace(YAML.parse(updatedManifestImage),namespace);workflowAction.setWorkflowManifest({manifest:YAML.stringify(updatedManifest)});}}),_useLazyQuery6=_slicedToArray(_useLazyQuery5,1),getTemplate=_useLazyQuery6[0];var _useState31=useState(''),_useState32=_slicedToArray(_useState31,2),installAllExp=_useState32[0],setInstallAllExp=_useState32[1];useLayoutEffect(function(){localforage.getItem('selectedScheduleOption').then(function(value){return value!==null&&setSelectedRadio(value.selected);});},[]);/**\n   * Default Manifest Template\n   */var yamlTemplate={apiVersion:'argoproj.io/v1alpha1',kind:'Workflow',metadata:{name:\"\".concat(workflow.name,\"-\").concat(Math.round(new Date().getTime()/1000)),namespace:namespace},spec:{arguments:{parameters:[{name:'adminModeNamespace',value:namespace}]},entrypoint:'custom-chaos',securityContext:{runAsNonRoot:true,runAsUser:1000},serviceAccountName:'argo-chaos',templates:[{name:'custom-chaos',steps:[[{name:'install-chaos-experiments',template:'install-chaos-experiments'}]]},{name:'install-chaos-experiments',inputs:{artifacts:[]},container:{args:[\"\".concat(installAllExp)],command:['sh','-c'],image:'litmuschaos/k8s:latest'}}]}};/**\n   * Generated YAML for custom workflows\n   */var _useState33=useState(manifest===''?yamlTemplate:YAML.parse(manifest)),_useState34=_slicedToArray(_useState33,2),generatedYAML=_useState34[0],setGeneratedYAML=_useState34[1];/**\n   * Index DB Fetching for extracting selected Button and Workflow Details\n   */var getSelectedWorkflowDetails=function getSelectedWorkflowDetails(){localforage.getItem('workflow').then(function(workflow){return setWorkflow({name:workflow.name,crd:workflow.CRDLink,description:workflow.description});});localforage.getItem('selectedScheduleOption').then(function(value){/**\n       * Setting default data when MyHub is selected\n       */if(value!==null&&value.selected==='A'){localforage.getItem('workflow').then(function(value){if(value!==null&&value.CRDLink!==''&&manifest==='')getPredefinedExperimentYaml({variables:{experimentInput:{ProjectID:selectedProjectID,ChartName:'',ExperimentName:value.CRDLink,HubName:constants.chaosHub,FileType:''}}});});}if(value!==null&&value.selected==='B'){localforage.getItem('selectedScheduleOption').then(function(value){if(value!==null&&value.id!==''&&manifest===''){getTemplate({variables:{data:value.id}});}});}if(value!==null&&value.selected==='C'){localforage.getItem('selectedHub').then(function(hub){setHubName(hub);getCharts({variables:{projectID:selectedProjectID,HubName:hub}});});}});};useEffect(function(){getSelectedWorkflowDetails();},[]);/**\n   * Graphql Query for fetching Engine YAML\n   */var _useLazyQuery7=useLazyQuery(GET_ENGINE_YAML,{fetchPolicy:'network-only'}),_useLazyQuery8=_slicedToArray(_useLazyQuery7,2),getEngineYaml=_useLazyQuery8[0],_useLazyQuery8$=_useLazyQuery8[1],engineData=_useLazyQuery8$.data,engineDataLoading=_useLazyQuery8$.loading;/**\n   * Graphql Query for fetching Experiment YAML\n   */var _useLazyQuery9=useLazyQuery(GET_EXPERIMENT_YAML,{fetchPolicy:'network-only'}),_useLazyQuery10=_slicedToArray(_useLazyQuery9,2),getExperimentYaml=_useLazyQuery10[0],_useLazyQuery10$=_useLazyQuery10[1],experimentData=_useLazyQuery10$.data,experimentDataLoading=_useLazyQuery10$.loading;/**\n   * On Clicking the Done button present at Add Experiment Modal this function will get triggered\n   * Click => Done\n   * Function => handleDone()\n   * */var handleDone=function handleDone(){getExperimentYaml({variables:{experimentInput:{ProjectID:selectedProjectID,HubName:hubName,ChartName:selectedExp.split('/')[0],ExperimentName:selectedExp.split('/')[1],FileType:'experiment'}}});getEngineYaml({variables:{experimentInput:{ProjectID:selectedProjectID,HubName:hubName,ChartName:selectedExp.split('/')[0],ExperimentName:selectedExp.split('/')[1],FileType:'engine'}}});setAddExpModal(false);};var AlertBox=function AlertBox(_ref){var message=_ref.message,isOpen=_ref.isOpen,setOpen=_ref.setOpen;return/*#__PURE__*/React.createElement(Snackbar,{open:isOpen,autoHideDuration:6000,onClose:function onClose(){return setOpen(false);}},/*#__PURE__*/React.createElement(Alert,{onClose:function onClose(){return setOpen(false);},severity:\"error\"},message));};/**\n   * UpdateCRD is used to updated the manifest while adding experiments from MyHub\n   */var updateCRD=function updateCRD(crd,experiment){var generatedYAML=crd;var installAll='';var modifyYAML=function modifyYAML(link){var _generatedYAML$spec$t,_generatedYAML$spec$w,_generatedYAML$spec$t2,_generatedYAML$spec$w2;var steps=generatedYAML.kind==='Workflow'?(_generatedYAML$spec$t=generatedYAML.spec.templates[0])===null||_generatedYAML$spec$t===void 0?void 0:_generatedYAML$spec$t.steps:(_generatedYAML$spec$w=generatedYAML.spec.workflowSpec.templates[0])===null||_generatedYAML$spec$w===void 0?void 0:_generatedYAML$spec$w.steps;if(steps!==undefined)steps.push([{name:YAML.parse(link).metadata.name,template:YAML.parse(link).metadata.name}]);installAll=\"\".concat(installAllExp,\"kubectl apply -f /tmp/\").concat(YAML.parse(link).metadata.name,\".yaml -n {{workflow.parameters.adminModeNamespace}} | \");var arg=generatedYAML.kind==='Workflow'?(_generatedYAML$spec$t2=generatedYAML.spec.templates[1])===null||_generatedYAML$spec$t2===void 0?void 0:_generatedYAML$spec$t2.container:(_generatedYAML$spec$w2=generatedYAML.spec.workflowSpec.templates[1])===null||_generatedYAML$spec$w2===void 0?void 0:_generatedYAML$spec$w2.container;if(arg!==undefined)arg.args=[\"\".concat(installAll,\" sleep 30\")];setInstallAllExp(installAll);};experiment.forEach(function(exp){modifyYAML(Object.values(exp.Experiment)[0]);});/**\n     * Step to add experiment and engine YAMLs of all experiments\n     */experiment.forEach(function(data){var _generatedYAML$spec$t3,_generatedYAML$spec$w3;/**\n       * Adding experiment YAML\n       */var ExperimentYAML=YAML.parse(Object.values(data.Experiment)[0]);var artifacts=generatedYAML.kind==='Workflow'?(_generatedYAML$spec$t3=generatedYAML.spec.templates[1].inputs)===null||_generatedYAML$spec$t3===void 0?void 0:_generatedYAML$spec$t3.artifacts:(_generatedYAML$spec$w3=generatedYAML.spec.workflowSpec.templates[1].inputs)===null||_generatedYAML$spec$w3===void 0?void 0:_generatedYAML$spec$w3.artifacts;if(artifacts!==undefined){artifacts.push({name:ExperimentYAML.metadata.name,path:\"/tmp/\".concat(ExperimentYAML.metadata.name,\".yaml\"),raw:{data:YAML.stringify(ExperimentYAML)}});}/**\n       * Adding engine YAML\n       */var ChaosEngine=YAML.parse(Object.values(data.ChaosEngine)[0]);var ExpName=YAML.parse(Object.values(data.Experiment)[0]).metadata.name;ChaosEngine.metadata.generateName=\"\".concat(YAML.parse(Object.values(data.Experiment)[0]).metadata.name);delete ChaosEngine.metadata.name;ChaosEngine.metadata.namespace='{{workflow.parameters.adminModeNamespace}}';ChaosEngine.metadata['labels']={instance_id:uuidv4()};if(ChaosEngine.spec.jobCleanUpPolicy){ChaosEngine.spec.jobCleanUpPolicy='retain';}ChaosEngine.spec.chaosServiceAccount='litmus-admin';var templateToBePushed={name:ExpName,inputs:{artifacts:[{name:ExpName,path:\"/tmp/chaosengine-\".concat(ExpName,\".yaml\"),raw:{data:YAML.stringify(ChaosEngine)}}]},container:{args:[\"-file=/tmp/chaosengine-\".concat(ExpName,\".yaml\"),\"-saveName=/tmp/engine-name\"],image:'litmuschaos/litmus-checker:latest'}};if(generatedYAML.kind==='Workflow')generatedYAML.spec.templates.push(templateToBePushed);else generatedYAML.spec.workflowSpec.templates.push(templateToBePushed);});return generatedYAML;};/**\n   * UseEffect to make changes in the generated YAML\n   * when a new experiment is added from MyHub\n   */useEffect(function(){if(isCustomWorkflow){var savedManifest=manifest!==''?YAML.parse(manifest):generatedYAML;var updatedManifest=updateCRD(savedManifest,experiment);var updatedManifestImage=updateManifestImage(updatedManifest,imageRegistryData);setGeneratedYAML(YAML.parse(updatedManifestImage));workflowAction.setWorkflowManifest({manifest:updatedManifestImage});}},[experiment]);var saveManifestChanges=function saveManifestChanges(){if(yamlValid){workflowAction.setWorkflowManifest({manifest:editManifest});setYAMLModal(false);}else{setIsAlertOpen(true);}};useEffect(function(){var parsedManifest=manifest!==''?YAML.parse(manifest):generatedYAML;parsedManifest.metadata.name=\"\".concat(workflow.name,\"-\").concat(Math.round(new Date().getTime()/1000));if(manifest.length&&selectedRadio==='C'&&parsedManifest.kind==='Workflow'&&parsedManifest.spec.templates[0].steps[parsedManifest.spec.templates[0].steps.length-1][0].name==='revert-chaos'&&parsedManifest.spec.podGC){delete parsedManifest.spec.podGC;parsedManifest.spec.templates[0].steps.pop();// Remove the last step -> Revert Chaos\nparsedManifest.spec.templates.pop();// Remove the last template -> Revert Chaos Template\n}if(manifest.length&&selectedRadio==='C'&&parsedManifest.kind==='CronWorkflow'&&parsedManifest.spec.workflowSpec.templates[0].steps[parsedManifest.spec.workflowSpec.templates[0].steps.length-1][0].name==='revert-chaos'&&parsedManifest.spec.workflowSpec.podGC){delete parsedManifest.workflowSpec.spec.podGC;parsedManifest.spec.workflowSpec.templates[0].steps.pop();// Remove the last step -> Revert Chaos\nparsedManifest.spec.workflowSpec.templates.pop();// Remove the last template -> Revert Chaos Template\n}workflowAction.setWorkflowManifest({manifest:YAML.stringify(parsedManifest)});},[manifest,workflow.name]);var onModalClose=function onModalClose(){setAddExpModal(false);};var onSelectChange=function onSelectChange(e){setSelectedExp(e.target.value);};useEffect(function(){if(engineData!==undefined&&experimentData!==undefined){setExperiment([{ChaosEngine:engineData,Experiment:experimentData}]);}},[engineDataLoading,experimentDataLoading]);function onNext(){if(YAMLModal){setIsEditorSaveAlertOpen(true);return false;}if(childRef.current){if(childRef.current.onNext()===false){alert.changeAlertState(true);// Custom Workflow has no experiments\nreturn false;}}return true;}var handleSteps=function handleSteps(steps){setSteps(steps);};useImperativeHandle(ref,function(){return{onNext:onNext};});var LeftButtonWrapper=function LeftButtonWrapper(){return/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){setYAMLModal(true);setConfirmEdit(false);},className:classes.editBtn},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/viewYAMLicon.svg\",alt:\"view YAML\"}),/*#__PURE__*/React.createElement(Width,{width:\"1rem\"}),\" \",t('createWorkflow.tuneWorkflow.edit'));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AlertBox,{isOpen:isEditorSaveAlertOpen,setOpen:setIsEditorSaveAlertOpen,message:\"Please Save the changes in the editor to proceed forward\"}),/*#__PURE__*/React.createElement(AlertBox,{isOpen:isAlertOpen,setOpen:setIsAlertOpen,message:\"The YAML contains errors, resolve them first to proceed\"}),YAMLModal?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{open:confirmEdit,onClose:function onClose(){},width:\"30rem\",height:\"25rem\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.confirmDiv},/*#__PURE__*/React.createElement(Typography,{className:classes.confirmText},t('createWorkflow.tuneWorkflow.confirmText')),/*#__PURE__*/React.createElement(ButtonOutlined,{className:classes.backBtn,disabled:!yamlValid,onClick:function onClick(){setConfirmEdit(false);}},t('createWorkflow.tuneWorkflow.back')),/*#__PURE__*/React.createElement(ButtonFilled,{className:classes.continueBtn,disabled:!yamlValid,onClick:function onClick(){setYAMLModal(false);setEditManifest('');}},t('createWorkflow.tuneWorkflow.continue')))),/*#__PURE__*/React.createElement(\"div\",{className:classes.editorWrapper},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.flex,\" \").concat(classes.additional)},/*#__PURE__*/React.createElement(\"div\",{className:classes.flex},/*#__PURE__*/React.createElement(\"img\",{style:{width:'2rem'},src:\"./icons/terminal.svg\",alt:\"Terminal Icon\"}),/*#__PURE__*/React.createElement(Typography,{className:classes.name},fetchWorkflowNameFromManifest(manifest),\".yaml\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.flex},/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){saveManifestChanges();},className:classes.editorTopBtn},\"Save Changes\"),/*#__PURE__*/React.createElement(\"hr\",{style:{margin:'0 1rem',height:'2.5rem'}}),/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){return yamlValid?setConfirmEdit(true):setIsAlertOpen(true);},className:classes.editorCloseBtn},\"x\"))),/*#__PURE__*/React.createElement(YamlEditor,{content:manifest,filename:workflow.name,readOnly:false,setButtonState:function setButtonState(btnState){setYamlValid(btnState);},saveWorkflowChange:function saveWorkflowChange(updatedManifest){setEditManifest(updatedManifest);}}))):/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.headerWrapper},/*#__PURE__*/React.createElement(Typography,{className:classes.heading},t('createWorkflow.tuneWorkflow.header')),/*#__PURE__*/React.createElement(Row,{className:classes.descriptionWrapper},/*#__PURE__*/React.createElement(Typography,{className:classes.description},selectedRadio==='A'?t('createWorkflow.tuneWorkflow.selectedPreDefinedWorkflowInfo'):selectedRadio==='B'?t('createWorkflow.tuneWorkflow.selectedTemplateInfo'):selectedRadio==='C'?t('createWorkflow.tuneWorkflow.selectedCustomWorkflowInfo'):t('createWorkflow.tuneWorkflow.selectedUploadYAML'),' ',/*#__PURE__*/React.createElement(\"i\",null,/*#__PURE__*/React.createElement(\"strong\",null,workflow.name.split('-').map(function(text){return\"\".concat(capitalize(text),\" \");}))),/*#__PURE__*/React.createElement(\"br\",null),t('createWorkflow.tuneWorkflow.description')),selectedRadio==='C'?/*#__PURE__*/React.createElement(\"div\",{className:classes.headerBtn},LeftButtonWrapper(),/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){setSelectedExp('');setAddExpModal(true);},\"data-cy\":\"addExperimentButton\"},t('createWorkflow.tuneWorkflow.addANewExperiment'))):/*#__PURE__*/React.createElement(React.Fragment,null,LeftButtonWrapper()))),/*#__PURE__*/React.createElement(AddExperimentModal,{addExpModal:addExpModal,onModalClose:onModalClose,hubName:hubName,selectedExp:selectedExp,onSelectChange:onSelectChange,allExperiments:allExperiments,handleDone:handleDone}),/*#__PURE__*/React.createElement(\"div\",{className:classes.experimentWrapper},manifest!==''&&/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){return setEditSequence(true);}},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/editsequence.svg\",alt:\"Edit Sequence\"}),' ',/*#__PURE__*/React.createElement(Width,{width:\"0.5rem\"}),t('createWorkflow.tuneWorkflow.editSequence')),/*#__PURE__*/React.createElement(Modal,{open:editSequence,onClose:function onClose(){setEditSequence(false);},width:\"60%\",modalActions:/*#__PURE__*/React.createElement(ButtonOutlined,{onClick:function onClick(){setEditSequence(false);},className:classes.closeBtn},/*#__PURE__*/React.createElement(\"img\",{src:\"./icons/cross-disabled.svg\",alt:\"cross\"}))},/*#__PURE__*/React.createElement(\"div\",{className:classes.sequenceMainDiv},/*#__PURE__*/React.createElement(\"div\",{className:classes.sequenceDiv},/*#__PURE__*/React.createElement(Typography,{variant:\"h4\"},t('createWorkflow.tuneWorkflow.editSequence')),/*#__PURE__*/React.createElement(Typography,{className:classes.dropText},t('createWorkflow.tuneWorkflow.dragndrop'))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Width,{width:\"40%\"},/*#__PURE__*/React.createElement(WorkflowPreview,{SequenceSteps:steps,isCustomWorkflow:isCustomWorkflow})),/*#__PURE__*/React.createElement(Width,{width:\"60%\"},/*#__PURE__*/React.createElement(WorkflowSequence,{getSteps:handleSteps,handleSequenceModal:function handleSequenceModal(sequenceState){setEditSequence(sequenceState);}}))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Width,{width:\"30%\"},/*#__PURE__*/React.createElement(WorkflowPreview,{isCustomWorkflow:isCustomWorkflow})),/*#__PURE__*/React.createElement(Width,{width:\"70%\"},/*#__PURE__*/React.createElement(WorkflowTable,{ref:childRef,isCustom:isCustomWorkflow,namespace:namespace}))))));});export default TuneWorkflow;","map":{"version":3,"sources":["/home/vedant/go/src/github.com/litmus/litmus-portal/frontend/src/views/CreateWorkflow/TuneWorkflow/index.tsx"],"names":["useLazyQuery","Snackbar","Typography","Alert","ButtonFilled","ButtonOutlined","Modal","localforage","React","forwardRef","useEffect","useImperativeHandle","useLayoutEffect","useRef","useState","useTranslation","useSelector","v4","uuidv4","YAML","YamlEditor","constants","Row","Width","GET_CHARTS_DATA","GET_ENGINE_YAML","GET_EXPERIMENT_YAML","GET_PREDEFINED_EXPERIMENT_YAML","GET_TEMPLATE_BY_ID","useActions","AlertActions","WorkflowActions","capitalize","getProjectID","fetchWorkflowNameFromManifest","updateEngineName","updateManifestImage","updateNamespace","AddExperimentModal","useStyles","WorkflowPreview","WorkflowSequence","WorkflowTable","TuneWorkflow","_","ref","classes","childRef","hubName","setHubName","experiment","setExperiment","allExperiments","setAllExperiments","selectedRadio","setSelectedRadio","selectedExp","setSelectedExp","selectedProjectID","addExpModal","setAddExpModal","editManifest","setEditManifest","confirmEdit","setConfirmEdit","isAlertOpen","setIsAlertOpen","isEditorSaveAlertOpen","setIsEditorSaveAlertOpen","yamlValid","setYamlValid","editSequence","setEditSequence","steps","setSteps","name","crd","description","workflow","setWorkflow","state","workflowManifest","manifest","isCustomWorkflow","imageRegistryData","selectedImageRegistry","workflowData","namespace","YAMLModal","setYAMLModal","workflowAction","alert","t","onCompleted","data","allExp","getCharts","forEach","Spec","Experiments","push","ChaosName","Metadata","Name","ExperimentName","fetchPolicy","wfmanifest","parse","GetPredefinedExperimentYAML","updatedManifestImage","updatedManifest","setWorkflowManifest","stringify","getPredefinedExperimentYaml","parsedYAML","GetTemplateManifestByID","getTemplate","installAllExp","setInstallAllExp","getItem","then","value","selected","yamlTemplate","apiVersion","kind","metadata","Math","round","Date","getTime","spec","arguments","parameters","entrypoint","securityContext","runAsNonRoot","runAsUser","serviceAccountName","templates","template","inputs","artifacts","container","args","command","image","generatedYAML","setGeneratedYAML","getSelectedWorkflowDetails","CRDLink","variables","experimentInput","ProjectID","ChartName","HubName","chaosHub","FileType","id","hub","projectID","getEngineYaml","engineData","engineDataLoading","loading","getExperimentYaml","experimentData","experimentDataLoading","handleDone","split","AlertBox","message","isOpen","setOpen","updateCRD","installAll","modifyYAML","link","workflowSpec","undefined","arg","exp","Object","values","Experiment","ExperimentYAML","path","raw","ChaosEngine","ExpName","generateName","instance_id","jobCleanUpPolicy","chaosServiceAccount","templateToBePushed","savedManifest","saveManifestChanges","parsedManifest","length","podGC","pop","onModalClose","onSelectChange","e","target","onNext","current","changeAlertState","handleSteps","LeftButtonWrapper","editBtn","confirmDiv","confirmText","backBtn","continueBtn","editorWrapper","flex","additional","width","editorTopBtn","margin","height","editorCloseBtn","btnState","root","headerWrapper","heading","descriptionWrapper","map","text","headerBtn","experimentWrapper","closeBtn","sequenceMainDiv","sequenceDiv","dropText","sequenceState"],"mappings":"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","sourcesContent":["import { useLazyQuery } from '@apollo/client';\nimport { Snackbar, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { ButtonFilled, ButtonOutlined, Modal } from 'litmus-ui';\nimport localforage from 'localforage';\nimport React, {\n  Dispatch,\n  forwardRef,\n  SetStateAction,\n  useEffect,\n  useImperativeHandle,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport YAML from 'yaml';\nimport YamlEditor from '../../../components/YamlEditor/Editor';\nimport { constants } from '../../../constants';\nimport Row from '../../../containers/layouts/Row';\nimport Width from '../../../containers/layouts/Width';\nimport {\n  GET_CHARTS_DATA,\n  GET_ENGINE_YAML,\n  GET_EXPERIMENT_YAML,\n  GET_PREDEFINED_EXPERIMENT_YAML,\n  GET_TEMPLATE_BY_ID,\n} from '../../../graphql/queries';\nimport { ChooseWorkflowRadio } from '../../../models/localforage/radioButton';\nimport { WorkflowDetailsProps } from '../../../models/localforage/workflow';\nimport { CustomYAML } from '../../../models/redux/customyaml';\nimport { Charts } from '../../../models/redux/myhub';\nimport useActions from '../../../redux/actions';\nimport * as AlertActions from '../../../redux/actions/alert';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { RootState } from '../../../redux/reducers';\nimport capitalize from '../../../utils/capitalize';\nimport { getProjectID } from '../../../utils/getSearchParams';\nimport {\n  fetchWorkflowNameFromManifest,\n  updateEngineName,\n  updateManifestImage,\n  updateNamespace,\n} from '../../../utils/yamlUtils';\nimport AddExperimentModal from './AddExperimentModal';\nimport useStyles from './styles';\nimport WorkflowPreview from './WorkflowPreview';\nimport WorkflowSequence from './WorkflowSequence';\nimport WorkflowTable from './WorkflowTable';\n\ninterface WorkflowProps {\n  name: string;\n  crd: string;\n  description: string;\n}\n\ninterface WorkflowExperiment {\n  ChaosEngine: string;\n  Experiment: string;\n}\n\ninterface ManifestSteps {\n  name: string;\n  template: string;\n}\n\ninterface StepType {\n  [key: string]: ManifestSteps[];\n}\n\ninterface ChartName {\n  ChaosName: string;\n  ExperimentName: string;\n}\n\ninterface ChildRef {\n  onNext: () => void;\n}\n\ninterface WorkflowExperiment {\n  ChaosEngine: string;\n  Experiment: string;\n}\n\ninterface AlertBoxProps {\n  message: string;\n  isOpen: boolean;\n  setOpen: Dispatch<SetStateAction<boolean>>;\n}\n\nconst TuneWorkflow = forwardRef((_, ref) => {\n  const classes = useStyles();\n  const childRef = useRef<ChildRef>();\n  /**\n   * State Variables for Tune Workflow\n   */\n  const [hubName, setHubName] = useState<string>('');\n  const [experiment, setExperiment] = useState<WorkflowExperiment[]>([]);\n  const [allExperiments, setAllExperiments] = useState<ChartName[]>([]);\n  const [selectedRadio, setSelectedRadio] = useState<string>('');\n  const [selectedExp, setSelectedExp] = useState('');\n  const selectedProjectID = getProjectID();\n  const [addExpModal, setAddExpModal] = useState(false);\n  const [editManifest, setEditManifest] = useState('');\n  const [confirmEdit, setConfirmEdit] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [isEditorSaveAlertOpen, setIsEditorSaveAlertOpen] = useState(false);\n  const [yamlValid, setYamlValid] = useState(true);\n  const [editSequence, setEditSequence] = useState(false);\n  const [steps, setSteps] = useState<StepType>({});\n  const [workflow, setWorkflow] = useState<WorkflowProps>({\n    name: '',\n    crd: '',\n    description: '',\n  });\n  const { manifest, isCustomWorkflow } = useSelector(\n    (state: RootState) => state.workflowManifest\n  );\n  const imageRegistryData = useSelector(\n    (state: RootState) => state.selectedImageRegistry\n  );\n  const { namespace } = useSelector((state: RootState) => state.workflowData);\n\n  const [YAMLModal, setYAMLModal] = useState<boolean>(false);\n  /**\n   * Actions\n   */\n  const workflowAction = useActions(WorkflowActions);\n  const alert = useActions(AlertActions);\n\n  const { t } = useTranslation();\n\n  /**\n   * Graphql query to get charts\n   */\n  const [getCharts] = useLazyQuery<Charts>(GET_CHARTS_DATA, {\n    onCompleted: (data) => {\n      const allExp: ChartName[] = [];\n      data.getCharts.forEach((data) => {\n        return data.Spec.Experiments?.forEach((experiment) => {\n          allExp.push({\n            ChaosName: data.Metadata.Name,\n            ExperimentName: experiment,\n          });\n        });\n      });\n      setAllExperiments([...allExp]);\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  /**\n   * This query fetches the manifest for pre-defined workflows\n   */\n  const [getPredefinedExperimentYaml] = useLazyQuery(\n    GET_PREDEFINED_EXPERIMENT_YAML,\n    {\n      onCompleted: (data) => {\n        const wfmanifest = updateEngineName(\n          YAML.parse(data.GetPredefinedExperimentYAML)\n        );\n        const updatedManifestImage = updateManifestImage(\n          YAML.parse(wfmanifest),\n          imageRegistryData\n        );\n        const updatedManifest = updateNamespace(\n          updatedManifestImage,\n          namespace\n        );\n        workflowAction.setWorkflowManifest({\n          manifest: YAML.stringify(updatedManifest),\n        });\n      },\n    }\n  );\n\n  /**\n   * Graphql query to get the templates list\n   */\n  const [getTemplate] = useLazyQuery(GET_TEMPLATE_BY_ID, {\n    onCompleted: (data) => {\n      const parsedYAML = YAML.parse(data.GetTemplateManifestByID.manifest);\n      const updatedManifestImage = updateManifestImage(\n        parsedYAML,\n        imageRegistryData\n      );\n      const updatedManifest = updateNamespace(\n        YAML.parse(updatedManifestImage),\n        namespace\n      );\n\n      workflowAction.setWorkflowManifest({\n        manifest: YAML.stringify(updatedManifest),\n      });\n    },\n  });\n\n  const [installAllExp, setInstallAllExp] = useState<string>('');\n\n  useLayoutEffect(() => {\n    localforage\n      .getItem('selectedScheduleOption')\n      .then(\n        (value) =>\n          value !== null &&\n          setSelectedRadio((value as ChooseWorkflowRadio).selected)\n      );\n  }, []);\n\n  /**\n   * Default Manifest Template\n   */\n  const yamlTemplate: CustomYAML = {\n    apiVersion: 'argoproj.io/v1alpha1',\n    kind: 'Workflow',\n    metadata: {\n      name: `${workflow.name}-${Math.round(new Date().getTime() / 1000)}`,\n      namespace,\n    },\n    spec: {\n      arguments: {\n        parameters: [\n          {\n            name: 'adminModeNamespace',\n            value: namespace,\n          },\n        ],\n      },\n      entrypoint: 'custom-chaos',\n      securityContext: {\n        runAsNonRoot: true,\n        runAsUser: 1000,\n      },\n      serviceAccountName: 'argo-chaos',\n      templates: [\n        {\n          name: 'custom-chaos',\n          steps: [\n            [\n              {\n                name: 'install-chaos-experiments',\n                template: 'install-chaos-experiments',\n              },\n            ],\n          ],\n        },\n        {\n          name: 'install-chaos-experiments',\n          inputs: {\n            artifacts: [],\n          },\n          container: {\n            args: [`${installAllExp}`],\n            command: ['sh', '-c'],\n            image: 'litmuschaos/k8s:latest',\n          },\n        },\n      ],\n    },\n  };\n\n  /**\n   * Generated YAML for custom workflows\n   */\n  const [generatedYAML, setGeneratedYAML] = useState<CustomYAML>(\n    manifest === '' ? yamlTemplate : YAML.parse(manifest)\n  );\n\n  /**\n   * Index DB Fetching for extracting selected Button and Workflow Details\n   */\n  const getSelectedWorkflowDetails = () => {\n    localforage.getItem('workflow').then((workflow) =>\n      setWorkflow({\n        name: (workflow as WorkflowDetailsProps).name,\n        crd: (workflow as WorkflowDetailsProps).CRDLink,\n        description: (workflow as WorkflowDetailsProps).description,\n      })\n    );\n    localforage.getItem('selectedScheduleOption').then((value) => {\n      /**\n       * Setting default data when MyHub is selected\n       */\n      if (value !== null && (value as ChooseWorkflowRadio).selected === 'A') {\n        localforage.getItem('workflow').then((value) => {\n          if (\n            value !== null &&\n            (value as WorkflowDetailsProps).CRDLink !== '' &&\n            manifest === ''\n          )\n            getPredefinedExperimentYaml({\n              variables: {\n                experimentInput: {\n                  ProjectID: selectedProjectID,\n                  ChartName: '',\n                  ExperimentName: (value as WorkflowDetailsProps).CRDLink,\n                  HubName: constants.chaosHub,\n                  FileType: '',\n                },\n              },\n            });\n        });\n      }\n      if (value !== null && (value as ChooseWorkflowRadio).selected === 'B') {\n        localforage.getItem('selectedScheduleOption').then((value) => {\n          if (\n            value !== null &&\n            (value as ChooseWorkflowRadio).id !== '' &&\n            manifest === ''\n          ) {\n            getTemplate({\n              variables: {\n                data: (value as ChooseWorkflowRadio).id,\n              },\n            });\n          }\n        });\n      }\n      if (value !== null && (value as ChooseWorkflowRadio).selected === 'C') {\n        localforage.getItem('selectedHub').then((hub) => {\n          setHubName(hub as string);\n          getCharts({\n            variables: { projectID: selectedProjectID, HubName: hub as string },\n          });\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getSelectedWorkflowDetails();\n  }, []);\n\n  /**\n   * Graphql Query for fetching Engine YAML\n   */\n  const [getEngineYaml, { data: engineData, loading: engineDataLoading }] =\n    useLazyQuery(GET_ENGINE_YAML, {\n      fetchPolicy: 'network-only',\n    });\n\n  /**\n   * Graphql Query for fetching Experiment YAML\n   */\n  const [\n    getExperimentYaml,\n    { data: experimentData, loading: experimentDataLoading },\n  ] = useLazyQuery(GET_EXPERIMENT_YAML, {\n    fetchPolicy: 'network-only',\n  });\n\n  /**\n   * On Clicking the Done button present at Add Experiment Modal this function will get triggered\n   * Click => Done\n   * Function => handleDone()\n   * */\n  const handleDone = () => {\n    getExperimentYaml({\n      variables: {\n        experimentInput: {\n          ProjectID: selectedProjectID,\n          HubName: hubName,\n          ChartName: selectedExp.split('/')[0],\n          ExperimentName: selectedExp.split('/')[1],\n          FileType: 'experiment',\n        },\n      },\n    });\n    getEngineYaml({\n      variables: {\n        experimentInput: {\n          ProjectID: selectedProjectID,\n          HubName: hubName,\n          ChartName: selectedExp.split('/')[0],\n          ExperimentName: selectedExp.split('/')[1],\n          FileType: 'engine',\n        },\n      },\n    });\n\n    setAddExpModal(false);\n  };\n\n  const AlertBox: React.FC<AlertBoxProps> = ({ message, isOpen, setOpen }) => (\n    <Snackbar\n      open={isOpen}\n      autoHideDuration={6000}\n      onClose={() => setOpen(false)}\n    >\n      <Alert onClose={() => setOpen(false)} severity=\"error\">\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n\n  /**\n   * UpdateCRD is used to updated the manifest while adding experiments from MyHub\n   */\n  const updateCRD = (crd: CustomYAML, experiment: WorkflowExperiment[]) => {\n    const generatedYAML: CustomYAML = crd;\n    let installAll = '';\n    const modifyYAML = (link: string) => {\n      const steps =\n        generatedYAML.kind === 'Workflow'\n          ? generatedYAML.spec.templates[0]?.steps\n          : generatedYAML.spec.workflowSpec.templates[0]?.steps;\n      if (steps !== undefined)\n        steps.push([\n          {\n            name: YAML.parse(link as string).metadata.name,\n            template: YAML.parse(link as string).metadata.name,\n          },\n        ]);\n      installAll = `${installAllExp}kubectl apply -f /tmp/${\n        YAML.parse(link as string).metadata.name\n      }.yaml -n {{workflow.parameters.adminModeNamespace}} | `;\n      const arg =\n        generatedYAML.kind === 'Workflow'\n          ? generatedYAML.spec.templates[1]?.container\n          : generatedYAML.spec.workflowSpec.templates[1]?.container;\n      if (arg !== undefined) arg.args = [`${installAll} sleep 30`];\n      setInstallAllExp(installAll);\n    };\n\n    experiment.forEach((exp) => {\n      modifyYAML(Object.values(exp.Experiment)[0]);\n    });\n\n    /**\n     * Step to add experiment and engine YAMLs of all experiments\n     */\n    experiment.forEach((data) => {\n      /**\n       * Adding experiment YAML\n       */\n      const ExperimentYAML = YAML.parse(Object.values(data.Experiment)[0]);\n      const artifacts =\n        generatedYAML.kind === 'Workflow'\n          ? generatedYAML.spec.templates[1].inputs?.artifacts\n          : generatedYAML.spec.workflowSpec.templates[1].inputs?.artifacts;\n      if (artifacts !== undefined) {\n        artifacts.push({\n          name: ExperimentYAML.metadata.name,\n          path: `/tmp/${ExperimentYAML.metadata.name}.yaml`,\n          raw: {\n            data: YAML.stringify(ExperimentYAML),\n          },\n        });\n      }\n\n      /**\n       * Adding engine YAML\n       */\n      const ChaosEngine = YAML.parse(Object.values(data.ChaosEngine)[0]);\n      const ExpName = YAML.parse(Object.values(data.Experiment)[0]).metadata\n        .name;\n      ChaosEngine.metadata.generateName = `${\n        YAML.parse(Object.values(data.Experiment)[0]).metadata.name\n      }`;\n      delete ChaosEngine.metadata.name;\n      ChaosEngine.metadata.namespace =\n        '{{workflow.parameters.adminModeNamespace}}';\n      ChaosEngine.metadata['labels'] = {\n        instance_id: uuidv4(),\n      };\n      if (ChaosEngine.spec.jobCleanUpPolicy) {\n        ChaosEngine.spec.jobCleanUpPolicy = 'retain';\n      }\n      ChaosEngine.spec.chaosServiceAccount = 'litmus-admin';\n      const templateToBePushed = {\n        name: ExpName,\n        inputs: {\n          artifacts: [\n            {\n              name: ExpName,\n              path: `/tmp/chaosengine-${ExpName}.yaml`,\n              raw: {\n                data: YAML.stringify(ChaosEngine),\n              },\n            },\n          ],\n        },\n        container: {\n          args: [\n            `-file=/tmp/chaosengine-${ExpName}.yaml`,\n            `-saveName=/tmp/engine-name`,\n          ],\n          image: 'litmuschaos/litmus-checker:latest',\n        },\n      };\n      if (generatedYAML.kind === 'Workflow')\n        generatedYAML.spec.templates.push(templateToBePushed);\n      else generatedYAML.spec.workflowSpec.templates.push(templateToBePushed);\n    });\n    return generatedYAML;\n  };\n\n  /**\n   * UseEffect to make changes in the generated YAML\n   * when a new experiment is added from MyHub\n   */\n  useEffect(() => {\n    if (isCustomWorkflow) {\n      const savedManifest =\n        manifest !== '' ? YAML.parse(manifest) : generatedYAML;\n      const updatedManifest = updateCRD(savedManifest, experiment);\n      const updatedManifestImage = updateManifestImage(\n        updatedManifest,\n        imageRegistryData\n      );\n      setGeneratedYAML(YAML.parse(updatedManifestImage));\n      workflowAction.setWorkflowManifest({\n        manifest: updatedManifestImage,\n      });\n    }\n  }, [experiment]);\n\n  const saveManifestChanges = () => {\n    if (yamlValid) {\n      workflowAction.setWorkflowManifest({\n        manifest: editManifest,\n      });\n      setYAMLModal(false);\n    } else {\n      setIsAlertOpen(true);\n    }\n  };\n\n  useEffect(() => {\n    const parsedManifest =\n      manifest !== '' ? YAML.parse(manifest) : generatedYAML;\n    parsedManifest.metadata.name = `${workflow.name}-${Math.round(\n      new Date().getTime() / 1000\n    )}`;\n\n    if (\n      manifest.length &&\n      selectedRadio === 'C' &&\n      parsedManifest.kind === 'Workflow' &&\n      parsedManifest.spec.templates[0].steps[\n        parsedManifest.spec.templates[0].steps.length - 1\n      ][0].name === 'revert-chaos' &&\n      parsedManifest.spec.podGC\n    ) {\n      delete parsedManifest.spec.podGC;\n\n      parsedManifest.spec.templates[0].steps.pop(); // Remove the last step -> Revert Chaos\n\n      parsedManifest.spec.templates.pop(); // Remove the last template -> Revert Chaos Template\n    }\n\n    if (\n      manifest.length &&\n      selectedRadio === 'C' &&\n      parsedManifest.kind === 'CronWorkflow' &&\n      parsedManifest.spec.workflowSpec.templates[0].steps[\n        parsedManifest.spec.workflowSpec.templates[0].steps.length - 1\n      ][0].name === 'revert-chaos' &&\n      parsedManifest.spec.workflowSpec.podGC\n    ) {\n      delete parsedManifest.workflowSpec.spec.podGC;\n      parsedManifest.spec.workflowSpec.templates[0].steps.pop(); // Remove the last step -> Revert Chaos\n\n      parsedManifest.spec.workflowSpec.templates.pop(); // Remove the last template -> Revert Chaos Template\n    }\n\n    workflowAction.setWorkflowManifest({\n      manifest: YAML.stringify(parsedManifest),\n    });\n  }, [manifest, workflow.name]);\n\n  const onModalClose = () => {\n    setAddExpModal(false);\n  };\n\n  const onSelectChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setSelectedExp(e.target.value as string);\n  };\n\n  useEffect(() => {\n    if (engineData !== undefined && experimentData !== undefined) {\n      setExperiment([\n        {\n          ChaosEngine: engineData,\n          Experiment: experimentData,\n        },\n      ]);\n    }\n  }, [engineDataLoading, experimentDataLoading]);\n\n  function onNext() {\n    if (YAMLModal) {\n      setIsEditorSaveAlertOpen(true);\n      return false;\n    }\n    if (childRef.current) {\n      if ((childRef.current.onNext() as unknown) === false) {\n        alert.changeAlertState(true); // Custom Workflow has no experiments\n        return false;\n      }\n    }\n    return true;\n  }\n\n  const handleSteps = (steps: any) => {\n    setSteps(steps);\n  };\n\n  useImperativeHandle(ref, () => ({\n    onNext,\n  }));\n\n  const LeftButtonWrapper = () => (\n    <ButtonOutlined\n      onClick={() => {\n        setYAMLModal(true);\n        setConfirmEdit(false);\n      }}\n      className={classes.editBtn}\n    >\n      <img src=\"./icons/viewYAMLicon.svg\" alt=\"view YAML\" />\n      <Width width=\"1rem\" /> {t('createWorkflow.tuneWorkflow.edit')}\n    </ButtonOutlined>\n  );\n\n  return (\n    <>\n      <AlertBox\n        isOpen={isEditorSaveAlertOpen}\n        setOpen={setIsEditorSaveAlertOpen}\n        message=\"Please Save the changes in the editor to proceed forward\"\n      />\n      <AlertBox\n        isOpen={isAlertOpen}\n        setOpen={setIsAlertOpen}\n        message=\"The YAML contains errors, resolve them first to proceed\"\n      />\n      {YAMLModal ? (\n        <>\n          <Modal\n            open={confirmEdit}\n            onClose={() => {}}\n            width=\"30rem\"\n            height=\"25rem\"\n          >\n            <div className={classes.confirmDiv}>\n              <Typography className={classes.confirmText}>\n                {t('createWorkflow.tuneWorkflow.confirmText')}\n              </Typography>\n              <ButtonOutlined\n                className={classes.backBtn}\n                disabled={!yamlValid}\n                onClick={() => {\n                  setConfirmEdit(false);\n                }}\n              >\n                {t('createWorkflow.tuneWorkflow.back')}\n              </ButtonOutlined>\n              <ButtonFilled\n                className={classes.continueBtn}\n                disabled={!yamlValid}\n                onClick={() => {\n                  setYAMLModal(false);\n                  setEditManifest('');\n                }}\n              >\n                {t('createWorkflow.tuneWorkflow.continue')}\n              </ButtonFilled>\n            </div>\n          </Modal>\n          <div className={classes.editorWrapper}>\n            <div className={`${classes.flex} ${classes.additional}`}>\n              <div className={classes.flex}>\n                <img\n                  style={{ width: '2rem' }}\n                  src=\"./icons/terminal.svg\"\n                  alt=\"Terminal Icon\"\n                />\n                <Typography className={classes.name}>\n                  {fetchWorkflowNameFromManifest(manifest)}.yaml\n                </Typography>\n              </div>\n              <div className={classes.flex}>\n                <ButtonOutlined\n                  onClick={() => {\n                    saveManifestChanges();\n                  }}\n                  className={classes.editorTopBtn}\n                >\n                  Save Changes\n                </ButtonOutlined>\n                <hr style={{ margin: '0 1rem', height: '2.5rem' }} />\n                <ButtonOutlined\n                  onClick={() =>\n                    yamlValid ? setConfirmEdit(true) : setIsAlertOpen(true)\n                  }\n                  className={classes.editorCloseBtn}\n                >\n                  x\n                </ButtonOutlined>\n              </div>\n            </div>\n            <YamlEditor\n              content={manifest}\n              filename={workflow.name}\n              readOnly={false}\n              setButtonState={(btnState: boolean) => {\n                setYamlValid(btnState);\n              }}\n              saveWorkflowChange={(updatedManifest: string) => {\n                setEditManifest(updatedManifest);\n              }}\n            />\n          </div>\n        </>\n      ) : (\n        <div className={classes.root}>\n          {/* Header */}\n          <div className={classes.headerWrapper}>\n            <Typography className={classes.heading}>\n              {t('createWorkflow.tuneWorkflow.header')}\n            </Typography>\n            <Row className={classes.descriptionWrapper}>\n              <Typography className={classes.description}>\n                {selectedRadio === 'A'\n                  ? t(\n                      'createWorkflow.tuneWorkflow.selectedPreDefinedWorkflowInfo'\n                    )\n                  : selectedRadio === 'B'\n                  ? t('createWorkflow.tuneWorkflow.selectedTemplateInfo')\n                  : selectedRadio === 'C'\n                  ? t('createWorkflow.tuneWorkflow.selectedCustomWorkflowInfo')\n                  : t('createWorkflow.tuneWorkflow.selectedUploadYAML')}{' '}\n                <i>\n                  <strong>\n                    {workflow.name\n                      .split('-')\n                      .map((text) => `${capitalize(text)} `)}\n                  </strong>\n                </i>\n                <br />\n                {t('createWorkflow.tuneWorkflow.description')}\n              </Typography>\n              {selectedRadio === 'C' ? (\n                <div className={classes.headerBtn}>\n                  {LeftButtonWrapper()}\n                  <ButtonOutlined\n                    onClick={() => {\n                      setSelectedExp('');\n                      setAddExpModal(true);\n                    }}\n                    data-cy=\"addExperimentButton\"\n                  >\n                    {t('createWorkflow.tuneWorkflow.addANewExperiment')}\n                  </ButtonOutlined>\n                </div>\n              ) : (\n                <>{LeftButtonWrapper()}</>\n              )}\n            </Row>\n          </div>\n\n          {/* Add Experiment Modal */}\n          <AddExperimentModal\n            addExpModal={addExpModal}\n            onModalClose={onModalClose}\n            hubName={hubName}\n            selectedExp={selectedExp}\n            onSelectChange={onSelectChange}\n            allExperiments={allExperiments}\n            handleDone={handleDone}\n          />\n\n          {/* Experiment Details */}\n          <div className={classes.experimentWrapper}>\n            {/* Edit Button */}\n            {manifest !== '' && (\n              <ButtonOutlined onClick={() => setEditSequence(true)}>\n                <img src=\"./icons/editsequence.svg\" alt=\"Edit Sequence\" />{' '}\n                <Width width=\"0.5rem\" />\n                {t('createWorkflow.tuneWorkflow.editSequence')}\n              </ButtonOutlined>\n            )}\n            <Modal\n              open={editSequence}\n              onClose={() => {\n                setEditSequence(false);\n              }}\n              width=\"60%\"\n              modalActions={\n                <ButtonOutlined\n                  onClick={() => {\n                    setEditSequence(false);\n                  }}\n                  className={classes.closeBtn}\n                >\n                  <img src=\"./icons/cross-disabled.svg\" alt=\"cross\" />\n                </ButtonOutlined>\n              }\n            >\n              <div className={classes.sequenceMainDiv}>\n                <div className={classes.sequenceDiv}>\n                  <Typography variant=\"h4\">\n                    {t('createWorkflow.tuneWorkflow.editSequence')}\n                  </Typography>\n                  <Typography className={classes.dropText}>\n                    {t('createWorkflow.tuneWorkflow.dragndrop')}\n                  </Typography>\n                </div>\n                <Row>\n                  <Width width=\"40%\">\n                    <WorkflowPreview\n                      SequenceSteps={steps}\n                      isCustomWorkflow={isCustomWorkflow}\n                    />\n                  </Width>\n                  <Width width=\"60%\">\n                    <WorkflowSequence\n                      getSteps={handleSteps}\n                      handleSequenceModal={(sequenceState: boolean) => {\n                        setEditSequence(sequenceState);\n                      }}\n                    />\n                  </Width>\n                </Row>\n              </div>\n            </Modal>\n            {/* Details Section -> Graph on the Left and Table on the Right */}\n\n            {/* Details Section -> Graph on the Left and Table on the Right */}\n            <Row>\n              {/* Argo Workflow Graph */}\n              <Width width=\"30%\">\n                <WorkflowPreview isCustomWorkflow={isCustomWorkflow} />\n              </Width>\n              {/* Workflow Table */}\n              <Width width=\"70%\">\n                <WorkflowTable\n                  ref={childRef}\n                  isCustom={isCustomWorkflow}\n                  namespace={namespace}\n                />\n              </Width>\n            </Row>\n          </div>\n        </div>\n      )}\n    </>\n  );\n});\n\nexport default TuneWorkflow;\n"]},"metadata":{},"sourceType":"module"}