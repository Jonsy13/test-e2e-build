name: push-pipeline
on:
  push:
    branches:
      - master
      - ^v[0-9]*.[0-9]*.x$

defaults:
  run:
    working-directory: litmus-portal
    shell: bash

env:
  GRAPHQL_SERVER_IMAGE: "litmusportal-server"
  AUTHENTICATION_SERVER_IMAGE: "litmusportal-auth-server"
  FRONTEND_IMAGE: "litmusportal-frontend"
  SUBSCRIBER_IMAGE: "litmusportal-subscriber"
  EVENT_TRACKER: "litmusportal-event-tracker"
  UPGRADE_AGENT_CP: "upgrade-agent-cp"

jobs:
  get-envs:
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.envs.outputs.TAG }}
      SHA_TAG: ${{ steps.envs.outputs.SHA_TAG }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - id: envs
        run: |
          TAG="${GITHUB_REF#refs/*/}"
          branch=${GITHUB_REF##*/}
          sha=${GITHUB_SHA::8}
          ts=$(date +%s)
          echo "::set-output name=SHA_TAG::${branch}-${sha}-${ts}"  
          echo "::set-output name=TAG::$TAG"

  docker-build-and-push-graphql-server:
    runs-on: ubuntu-latest
    needs:
      - get-envs
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Context & file paths are given from root, working-directory can't work with actions.
      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          TAG: ${{ needs.get-envs.outputs.TAG }}
          SHA_TAG: ${{ needs.get-envs.outputs.SHA_TAG }}
        with:
          push: true
          file: ./litmus-portal/graphql-server/Dockerfile
          context: ./litmus-portal/graphql-server
          platforms: ${{ secrets.PLATFORMS }}
          tags: |
            ${{ secrets.REPONAME }}/${{ env.GRAPHQL_SERVER_IMAGE }}:${{ env.TAG }},
            ${{ secrets.REPONAME }}/${{ env.GRAPHQL_SERVER_IMAGE }}:${{ env.SHA_TAG }}

  docker-build-and-push-authentication-server:
    runs-on: ubuntu-latest
    needs:
      - get-envs
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Context & file paths are given from root, working-directory can't work with actions.
      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          TAG: ${{ needs.get-envs.outputs.TAG }}
          SHA_TAG: ${{ needs.get-envs.outputs.SHA_TAG }}
        with:
          push: true
          file: ./litmus-portal/authentication/Dockerfile
          context: ./litmus-portal/authentication
          platforms: ${{ secrets.PLATFORMS }}
          tags: |
            ${{ secrets.REPONAME }}/${{ env.AUTHENTICATION_SERVER_IMAGE }}:${{ env.TAG }},
            ${{ secrets.REPONAME }}/${{ env.AUTHENTICATION_SERVER_IMAGE }}:${{ env.SHA_TAG }}

  docker-build-and-push-subscriber:
    runs-on: ubuntu-latest
    needs:
      - get-envs
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Context & file paths are given from root, working-directory can't work with actions.
      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          TAG: ${{ needs.get-envs.outputs.TAG }}
          SHA_TAG: ${{ needs.get-envs.outputs.SHA_TAG }}
        with:
          push: true
          file: ./litmus-portal/cluster-agents/subscriber/Dockerfile
          context: ./litmus-portal/cluster-agents/subscriber
          platforms: ${{ secrets.PLATFORMS }}
          tags: |
            ${{ secrets.REPONAME }}/${{ env.SUBSCRIBER_IMAGE }}:${{ env.TAG }},
            ${{ secrets.REPONAME }}/${{ env.SUBSCRIBER_IMAGE }}:${{ env.SHA_TAG }}

  docker-build-and-push-event-tracker:
    runs-on: ubuntu-latest
    needs:
      - get-envs
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Context & file paths are given from root, working-directory can't work with actions.
      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          TAG: ${{ needs.get-envs.outputs.TAG }}
          SHA_TAG: ${{ needs.get-envs.outputs.SHA_TAG }}
        with:
          push: true
          file: ./litmus-portal/cluster-agents/event-tracker/Dockerfile
          context: ./litmus-portal/cluster-agents/event-tracker
          platforms: ${{ secrets.PLATFORMS }}
          tags: |
            ${{ secrets.REPONAME }}/${{ env.EVENT_TRACKER }}:${{ env.TAG }},
            ${{ secrets.REPONAME }}/${{ env.EVENT_TRACKER }}:${{ env.SHA_TAG }}

  docker-build-and-push-upgrade-agent-cp:
    runs-on: ubuntu-latest
    needs:
      - get-envs
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Context & file paths are given from root, working-directory can't work with actions.
      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          TAG: ${{ needs.get-envs.outputs.TAG }}
          SHA_TAG: ${{ needs.get-envs.outputs.SHA_TAG }}
        with:
          push: true
          file: ./litmus-portal/upgrade-agents/control-plane/Dockerfile
          context: ./litmus-portal/upgrade-agents/control-plane
          platforms: ${{ secrets.PLATFORMS }}
          tags: |
            ${{ secrets.REPONAME }}/${{ env.UPGRADE_AGENT_CP }}:${{ env.TAG }},
            ${{ secrets.REPONAME }}/${{ env.UPGRADE_AGENT_CP }}:${{ env.SHA_TAG }}

#   ## TODO: the build time for multiarch frontend image is higher so it is used in the release
#   ## builds only need to optimize the build duration and also add it with ci tag
#   ## Build and push / base path
#   docker-build-and-push-frontend:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         frontend:
#           [
#             { "image_name": "litmusportal-frontend", "path": "" },
#             {
#               "image_name": "litmusportal-frontend-path-litmuschaos",
#               "path": "/litmuschaos",
#             },
#           ]
#     needs:
#       - get-envs
#       - frontend-checks
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Downloading image artficate
#         uses: actions/download-artifact@v2
#         with:
#           name: env_artifact
#           path: litmus-portal

#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1
#         with:
#           version: latest

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Push frontend docker image ( ${{ matrix.frontend.image_name }} )
#         env:
#           IMG_TAG: ${IMG_TAG}
#           PLATFORMS: ${{ secrets.PLATFORMS }}
#           REPONAME: ${{ secrets.REPONAME }}
#           timestamp: ${timestamp}
#           PUBLIC_URL: ${{ matrix.frontend.path }}
#         run: |
#           source env-vars
#           FRONTEND_IMAGE=${{ matrix.frontend.image_name }}
#           timestamp=`date "+%s"`
#           make push-frontend
