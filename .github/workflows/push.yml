name: push-pipeline
on:
  push:
    branches:
      - master
      - ^v[0-9]*.[0-9]*.x$
defaults:
  run:
    working-directory: litmus-portal
    shell: bash

env:
  GRAPHQL_SERVER_IMAGE: "litmusportal-server"
  AUTHENTICATION_SERVER_IMAGE: "litmusportal-auth-server"
  FRONTEND_IMAGE: "litmusportal-frontend"
  SUBSCRIBER_IMAGE: "litmusportal-subscriber"
  EVENT_TRACKER: "litmusportal-event-tracker"
  UPGRADE_AGENT_CP: "upgrade-agent-cp"

jobs:
  get-envs:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_TAG: ${{ steps.envs.outputs.RELEASE_TAG }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - id: envs
        run: |
          TAG="${GITHUB_REF#refs/*/}"
          echo "::set-output name=RELEASE_TAG::$TAG"

  docker-build-and-push-graphql-server:
    runs-on: ubuntu-latest
    needs:
      - get-envs
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          RELEASE_TAG: ${{ needs.get-envs.outputs.RELEASE_TAG }}
        with:
          push: true
          file: ./graphql-server/Dockerfile
          context: ./graphql-server
          platforms: ${{ secrets.PLATFORMS }}
          tags: ${{ secrets.REPONAME }}/${{ env.GRAPHQL_SERVER_IMAGE }}:${{ env.RELEASE_TAG }}
#   docker-build-and-push-authentication-server:
#     runs-on: ubuntu-latest
#     needs:
#       - get-envs
#       - backend-checks
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Downloading image artficate
#         uses: actions/download-artifact@v2
#         with:
#           name: env_artifact
#           path: litmus-portal

#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1
#         with:
#           version: latest

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Push auth server docker image
#         env:
#           IMAGE_NAME: ${AUTHENTICATION_SERVER_IMAGE}
#           IMG_TAG: ${IMG_TAG}
#           PLATFORMS: ${{ secrets.PLATFORMS }}
#           REPONAME: ${{ secrets.REPONAME }}
#           DIRECTORY: "authentication"
#         run: |
#           source env-vars
#           make push-portal-component

#   docker-build-and-push-subscriber:
#     runs-on: ubuntu-latest
#     needs:
#       - get-envs
#       - backend-checks
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Downloading image artficate
#         uses: actions/download-artifact@v2
#         with:
#           name: env_artifact
#           path: litmus-portal

#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1
#         with:
#           version: latest

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Push subscriber docker image
#         env:
#           IMAGE_NAME: ${SUBSCRIBER_IMAGE}
#           IMG_TAG: ${IMG_TAG}
#           PLATFORMS: ${{ secrets.PLATFORMS }}
#           REPONAME: ${{ secrets.REPONAME }}
#           DIRECTORY: "cluster-agents/subscriber/"
#         run: |
#           source env-vars
#           make push-portal-component

#   docker-build-and-push-event-tracker:
#     runs-on: ubuntu-latest
#     needs:
#       - get-envs
#       - backend-checks
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Downloading image artficate
#         uses: actions/download-artifact@v2
#         with:
#           name: env_artifact
#           path: litmus-portal

#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1
#         with:
#           version: latest

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Push event tracker docker image
#         env:
#           IMAGE_NAME: ${EVENT_TRACKER}
#           IMG_TAG: ${IMG_TAG}
#           PLATFORMS: ${{ secrets.PLATFORMS }}
#           REPONAME: ${{ secrets.REPONAME }}
#           DIRECTORY: "cluster-agents/event-tracker/"
#         run: |
#           source env-vars
#           make push-portal-component

#   docker-build-and-push-upgrade-agent-cp:
#     runs-on: ubuntu-latest
#     needs:
#       - get-envs
#       - backend-checks
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Downloading image artficate
#         uses: actions/download-artifact@v2
#         with:
#           name: env_artifact
#           path: litmus-portal

#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1
#         with:
#           version: latest

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Push control plane upgrade agent docker image
#         env:
#           IMAGE_NAME: ${UPGRADE_AGENT_CP}
#           IMG_TAG: ${IMG_TAG}
#           PLATFORMS: ${{ secrets.PLATFORMS }}
#           REPONAME: ${{ secrets.REPONAME }}
#           DIRECTORY: "upgrade-agents/control-plane/"
#         run: |
#           source env-vars
#           make push-portal-component

#   ## TODO: the build time for multiarch frontend image is higher so it is used in the release
#   ## builds only need to optimize the build duration and also add it with ci tag
#   ## Build and push / base path
#   docker-build-and-push-frontend:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         frontend:
#           [
#             { "image_name": "litmusportal-frontend", "path": "" },
#             {
#               "image_name": "litmusportal-frontend-path-litmuschaos",
#               "path": "/litmuschaos",
#             },
#           ]
#     needs:
#       - get-envs
#       - frontend-checks
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Downloading image artficate
#         uses: actions/download-artifact@v2
#         with:
#           name: env_artifact
#           path: litmus-portal

#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1
#         with:
#           version: latest

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Push frontend docker image ( ${{ matrix.frontend.image_name }} )
#         env:
#           IMG_TAG: ${IMG_TAG}
#           PLATFORMS: ${{ secrets.PLATFORMS }}
#           REPONAME: ${{ secrets.REPONAME }}
#           timestamp: ${timestamp}
#           PUBLIC_URL: ${{ matrix.frontend.path }}
#         run: |
#           source env-vars
#           FRONTEND_IMAGE=${{ matrix.frontend.image_name }}
#           timestamp=`date "+%s"`
#           make push-frontend
