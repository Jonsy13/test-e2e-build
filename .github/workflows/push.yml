name: push-pipeline
on:
  push:
    branches:
      - master
      - staging
    tags-ignore:
      - "**"

defaults:
  run:
    working-directory: litmus-portal
    shell: bash

# All Image names are provided here as envs. (Will be available in all jobs)
env:
  GRAPHQL_SERVER_IMAGE: "litmusportal-server"
  AUTHENTICATION_SERVER_IMAGE: "litmusportal-auth-server"
  FRONTEND_IMAGE: "litmusportal-frontend" #Not getting used
  SUBSCRIBER_IMAGE: "litmusportal-subscriber"
  EVENT_TRACKER: "litmusportal-event-tracker"
  UPGRADE_AGENT_CP: "litmusportal-upgrade-agent-cp"

jobs:
  backend-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.16" # By default, the go version is v1.15 in runner.
      - run: |
          make backend-services-checks

  frontend-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: |
          make frontend-services-checks

  get-envs:
    runs-on: ubuntu-latest
    # Images with 2 tags will be created -
    # 1. TAG: <branch-ci> e.g. master-ci, will be used for testing
    # 2. SHA_TAG: <branch>-<github-sha>-<timestamp>, for gitops automation
    outputs:
      TAG: ${{ steps.envs.outputs.TAG }}
      SHA_TAG: ${{ steps.envs.outputs.SHA_TAG }}
      TIME_STAMP: ${{ steps.envs.outputs.TIME_STAMP }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - id: envs
        run: |
          branch=${GITHUB_REF##*/}
          sha=${GITHUB_SHA::8}
          ts=$(date +%s)
          echo "::set-output name=SHA_TAG::${branch}-${sha}-${ts}"  
          echo "::set-output name=TAG::${branch}-ci"
          echo "::set-output name=TIME_STAMP::${ts}"

  docker-build-and-push-graphql-server:
    runs-on: ubuntu-latest
    needs:
      - get-envs
      - backend-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Context & file paths are provided from root, default working-directory can't work with actions.
      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          TAG: ${{ needs.get-envs.outputs.TAG }}
          SHA_TAG: ${{ needs.get-envs.outputs.SHA_TAG }}
        with:
          push: true
          file: ./litmus-portal/graphql-server/Dockerfile
          context: ./litmus-portal/graphql-server
          platforms: ${{ secrets.PLATFORMS }}
          tags: |
            ${{ secrets.REPONAME }}/${{ env.GRAPHQL_SERVER_IMAGE }}:${{ env.TAG }},
            ${{ secrets.REPONAME }}/${{ env.GRAPHQL_SERVER_IMAGE }}:${{ env.SHA_TAG }}

  docker-build-and-push-authentication-server:
    runs-on: ubuntu-latest
    needs:
      - get-envs
      - backend-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Context & file paths are provided from root, default working-directory can't work with actions.
      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          TAG: ${{ needs.get-envs.outputs.TAG }}
          SHA_TAG: ${{ needs.get-envs.outputs.SHA_TAG }}
        with:
          push: true
          file: ./litmus-portal/authentication/Dockerfile
          context: ./litmus-portal/authentication
          platforms: ${{ secrets.PLATFORMS }}
          tags: |
            ${{ secrets.REPONAME }}/${{ env.AUTHENTICATION_SERVER_IMAGE }}:${{ env.TAG }},
            ${{ secrets.REPONAME }}/${{ env.AUTHENTICATION_SERVER_IMAGE }}:${{ env.SHA_TAG }}

  docker-build-and-push-subscriber:
    runs-on: ubuntu-latest
    needs:
      - get-envs
      - backend-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Context & file paths are provided from root, default working-directory can't work with actions.
      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          TAG: ${{ needs.get-envs.outputs.TAG }}
          SHA_TAG: ${{ needs.get-envs.outputs.SHA_TAG }}
        with:
          push: true
          file: ./litmus-portal/cluster-agents/subscriber/Dockerfile
          context: ./litmus-portal/cluster-agents/subscriber
          platforms: ${{ secrets.PLATFORMS }}
          tags: |
            ${{ secrets.REPONAME }}/${{ env.SUBSCRIBER_IMAGE }}:${{ env.TAG }},
            ${{ secrets.REPONAME }}/${{ env.SUBSCRIBER_IMAGE }}:${{ env.SHA_TAG }}

  docker-build-and-push-event-tracker:
    runs-on: ubuntu-latest
    needs:
      - get-envs
      - backend-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Context & file paths are provided from root, default working-directory can't work with actions.
      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          TAG: ${{ needs.get-envs.outputs.TAG }}
          SHA_TAG: ${{ needs.get-envs.outputs.SHA_TAG }}
        with:
          push: true
          file: ./litmus-portal/cluster-agents/event-tracker/Dockerfile
          context: ./litmus-portal/cluster-agents/event-tracker
          platforms: ${{ secrets.PLATFORMS }}
          tags: |
            ${{ secrets.REPONAME }}/${{ env.EVENT_TRACKER }}:${{ env.TAG }},
            ${{ secrets.REPONAME }}/${{ env.EVENT_TRACKER }}:${{ env.SHA_TAG }}

  docker-build-and-push-upgrade-agent-cp:
    runs-on: ubuntu-latest
    needs:
      - get-envs
      - backend-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Context & file paths are provided from root, default working-directory can't work with actions.
      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          TAG: ${{ needs.get-envs.outputs.TAG }}
          SHA_TAG: ${{ needs.get-envs.outputs.SHA_TAG }}
        with:
          push: true
          file: ./litmus-portal/upgrade-agents/control-plane/Dockerfile
          context: ./litmus-portal/upgrade-agents/control-plane
          platforms: ${{ secrets.PLATFORMS }}
          tags: |
            ${{ secrets.REPONAME }}/${{ env.UPGRADE_AGENT_CP }}:${{ env.TAG }},
            ${{ secrets.REPONAME }}/${{ env.UPGRADE_AGENT_CP }}:${{ env.SHA_TAG }}

  ## TODO: the build time for multiarch frontend image is higher so it is used in the release
  ## builds only need to optimize the build duration and also add it with ci tag
  ## Build and push / base path
  docker-build-and-push-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        frontend:
          [
            { "image_name": "litmusportal-frontend", "path": "" },
            {
              "image_name": "litmusportal-path-litmuschaos",
              "path": "/litmuschaos",
            },
          ]
    needs:
      - get-envs
      - frontend-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          TAG: ${{ needs.get-envs.outputs.TAG }}
          SHA_TAG: ${{ needs.get-envs.outputs.SHA_TAG }}
          TIME_STAMP: ${{ needs.get-envs.outputs.TIME_STAMP }}
        with:
          push: true
          file: ./litmus-portal/frontend/Dockerfile
          context: ./litmus-portal/frontend
          platforms: linux/amd64
          build-args: |
            REACT_APP_KB_CHAOS_VERSION=${{ env.TAG }}
            REACT_APP_BUILD_TIME=${{ env.TIME_STAMP }}
            PUBLIC_URL=${{ matrix.frontend.path }}
          tags: |
            ${{ secrets.REPONAME }}/${{ matrix.frontend.image_name }}:${{ env.TAG }},
            ${{ secrets.REPONAME }}/${{ matrix.frontend.image_name }}:${{ env.SHA_TAG }}
